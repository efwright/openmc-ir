; ModuleID = 'mesh.cpp-amdgcn-amd-amdhsa-gfx942.o.1.promote.bc'
source_filename = "/g/g0/wright117/workspace/openmc/openmc-omp/openmc/src/mesh.cpp"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

%"struct.std::array" = type { [6 x i32] }
%"struct.std::array.0" = type { [3 x i32] }
%"struct.openmc::Position" = type { double, double, double }

@__omp_rtl_debug_kind = available_externally hidden local_unnamed_addr addrspace(1) constant i32 0
@__omp_rtl_assume_no_thread_state = available_externally hidden local_unnamed_addr addrspace(1) constant i32 0
@__omp_rtl_assume_no_nested_parallelism = available_externally hidden local_unnamed_addr addrspace(1) constant i32 0
@_ZN6openmcL12DEPLETION_RXE = internal addrspace(1) constant %"struct.std::array" { [6 x i32] [i32 102, i32 103, i32 107, i32 16, i32 17, i32 37] }, align 4
@"__ZN6openmcL12DEPLETION_RXE$ref" = internal constant ptr addrspace(1) @_ZN6openmcL12DEPLETION_RXE, align 8
@_ZN6openmc5model6meshesE = protected local_unnamed_addr addrspace(1) global ptr null, align 8
@_ZN6openmc5model11meshes_sizeE = protected local_unnamed_addr addrspace(1) global i32 0, align 4
@.str.llvm.2019228830457604128 = hidden unnamed_addr addrspace(4) constant [44 x i8] c"Index in Position must be between 0 and 2.\0A\00", align 1
@llvm.compiler.used = appending addrspace(1) global [1 x ptr] [ptr @"__ZN6openmcL12DEPLETION_RXE$ref"], section "llvm.metadata"

; Function Attrs: cold mustprogress noinline nounwind optsize
declare hidden { double, double } @__muldc3(double noundef, double noundef, double noundef, double noundef) local_unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p5(i64 immarg, ptr addrspace(5) captures(none)) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p5(i64 immarg, ptr addrspace(5) captures(none)) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fmuladd.f32(float, float, float) #2

; Function Attrs: cold mustprogress noinline nounwind optsize
declare hidden { double, double } @__divdc3(double noundef, double noundef, double noundef, double noundef) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind
define hidden noundef range(i32 -2147483648, 2147483647) i32 @_ZNK6openmc4Mesh7get_binENS_8PositionE(ptr noundef nonnull readonly align 8 captures(none) dereferenceable(112) %this, double %r.coerce0, double %r.coerce1, double %r.coerce2) local_unnamed_addr #3 align 2 {
entry:
  %ijk = alloca %"struct.std::array.0", align 4, addrspace(5)
  call void @llvm.lifetime.start.p5(i64 12, ptr addrspace(5) %ijk) #7
  %n_dimension_.i = getelementptr inbounds nuw i8, ptr %this, i64 4
  %0 = load i32, ptr %n_dimension_.i, align 4, !tbaa !17
  %cmp2.i = icmp sgt i32 %0, 0
  br i1 %cmp2.i, label %for.body.lr.ph.i, label %if.end

for.body.lr.ph.i:                                 ; preds = %entry
  %1 = getelementptr inbounds nuw i8, ptr %this, i64 8
  %2 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %shape_.i = getelementptr inbounds nuw i8, ptr %this, i64 56
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %in_mesh.0.off0 = phi i1 [ true, %for.body.lr.ph.i ], [ %in_mesh.1.off0, %for.inc.i ]
  %i.03.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  switch i32 %i.03.i, label %sw.default.i.i [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit.i
    i32 1, label %sw.bb2.i.i
    i32 2, label %sw.bb3.i.i
  ]

sw.bb2.i.i:                                       ; preds = %for.body.i
  br label %_ZN6openmc8PositionixEi.internalized.exit.i

sw.bb3.i.i:                                       ; preds = %for.body.i
  br label %_ZN6openmc8PositionixEi.internalized.exit.i

sw.default.i.i:                                   ; preds = %for.body.i
  %call.i.i = tail call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit.i

_ZN6openmc8PositionixEi.internalized.exit.i:      ; preds = %sw.default.i.i, %sw.bb3.i.i, %sw.bb2.i.i, %for.body.i
  %retval.0.i.sroa.speculated.i = phi double [ %r.coerce0, %sw.default.i.i ], [ %r.coerce2, %sw.bb3.i.i ], [ %r.coerce1, %sw.bb2.i.i ], [ %r.coerce0, %for.body.i ]
  %this.val.i = load ptr, ptr %1, align 8, !tbaa !29
  %this.val1.i = load ptr, ptr %2, align 8, !tbaa !29
  %conv.i.i = zext nneg i32 %i.03.i to i64
  %arrayidx.i.i.i = getelementptr inbounds nuw double, ptr %this.val.i, i64 %conv.i.i
  %3 = load double, ptr %arrayidx.i.i.i, align 8, !tbaa !30
  %sub.i.i = fsub double %retval.0.i.sroa.speculated.i, %3
  %arrayidx.i1.i.i = getelementptr inbounds nuw double, ptr %this.val1.i, i64 %conv.i.i
  %4 = load double, ptr %arrayidx.i1.i.i, align 8, !tbaa !30
  %div.i.i = fdiv double %sub.i.i, %4
  %5 = tail call noundef double @llvm.ceil.f64(double %div.i.i) #9
  %conv5.i.i = fptosi double %5 to i32
  %arrayidx.i = getelementptr inbounds nuw i32, ptr addrspace(5) %ijk, i32 %i.03.i
  store i32 %conv5.i.i, ptr addrspace(5) %arrayidx.i, align 4, !tbaa !31
  %cmp6.i = icmp slt i32 %conv5.i.i, 1
  br i1 %cmp6.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %_ZN6openmc8PositionixEi.internalized.exit.i
  %shape_.val.i = load ptr, ptr %shape_.i, align 8, !tbaa !32
  %arrayidx.i.i = getelementptr inbounds nuw i32, ptr %shape_.val.i, i64 %conv.i.i
  %6 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !31
  %cmp10.i = icmp slt i32 %6, %conv5.i.i
  br i1 %cmp10.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %lor.lhs.false.i, %_ZN6openmc8PositionixEi.internalized.exit.i
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %lor.lhs.false.i
  %in_mesh.1.off0 = phi i1 [ false, %if.then.i ], [ %in_mesh.0.off0, %lor.lhs.false.i ]
  %inc.i = add nuw nsw i32 %i.03.i, 1
  %7 = load i32, ptr %n_dimension_.i, align 4, !tbaa !17
  %cmp.i = icmp slt i32 %inc.i, %7
  br i1 %cmp.i, label %for.body.i, label %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit, !llvm.loop !33

_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit: ; preds = %for.inc.i
  br i1 %in_mesh.1.off0, label %if.end, label %cleanup

if.end:                                           ; preds = %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit, %entry
  %this.val = phi i32 [ %0, %entry ], [ %7, %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit ]
  %8 = getelementptr inbounds nuw i8, ptr %this, i64 56
  %this.val1 = load ptr, ptr %8, align 8
  switch i32 %this.val, label %sw.epilog.i [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb2.i
    i32 3, label %sw.bb7.i
  ]

sw.bb.i:                                          ; preds = %if.end
  %9 = load i32, ptr addrspace(5) %ijk, align 4, !tbaa !31
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit

sw.bb2.i:                                         ; preds = %if.end
  %arrayidx3.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk, i32 4
  %10 = load i32, ptr addrspace(5) %arrayidx3.i, align 4, !tbaa !31
  %sub4.i = add nsw i32 %10, -1
  %11 = load i32, ptr %this.val1, align 4, !tbaa !31
  %mul.i = mul nsw i32 %sub4.i, %11
  %12 = load i32, ptr addrspace(5) %ijk, align 4, !tbaa !31
  %add.i = add nsw i32 %mul.i, %12
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit

sw.bb7.i:                                         ; preds = %if.end
  %arrayidx8.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk, i32 8
  %13 = load i32, ptr addrspace(5) %arrayidx8.i, align 4, !tbaa !31
  %sub9.i = add nsw i32 %13, -1
  %arrayidx.i.i2 = getelementptr inbounds nuw i8, ptr %this.val1, i64 4
  %14 = load i32, ptr %arrayidx.i.i2, align 4, !tbaa !31
  %mul12.i = mul nsw i32 %sub9.i, %14
  %arrayidx13.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk, i32 4
  %15 = load i32, ptr addrspace(5) %arrayidx13.i, align 4, !tbaa !31
  %sub14.i = add nsw i32 %15, -1
  %add15.i = add nsw i32 %sub14.i, %mul12.i
  %16 = load i32, ptr %this.val1, align 4, !tbaa !31
  %mul18.i = mul nsw i32 %add15.i, %16
  %17 = load i32, ptr addrspace(5) %ijk, align 4, !tbaa !31
  %add20.i = add nsw i32 %mul18.i, %17
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit

sw.epilog.i:                                      ; preds = %if.end
  unreachable

_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit: ; preds = %sw.bb7.i, %sw.bb2.i, %sw.bb.i
  %retval.0.in.i = phi i32 [ %add20.i, %sw.bb7.i ], [ %add.i, %sw.bb2.i ], [ %9, %sw.bb.i ]
  %retval.0.i = add nsw i32 %retval.0.in.i, -1
  br label %cleanup

cleanup:                                          ; preds = %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit, %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit
  %retval.0 = phi i32 [ %retval.0.i, %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit ], [ -1, %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit ]
  call void @llvm.lifetime.end.p5(i64 12, ptr addrspace(5) %ijk) #7
  ret i32 %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.ceil.f64(double) #2

; Function Attrs: convergent
declare i32 @printf(ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: convergent mustprogress nounwind
define hidden void @_ZNK6openmc4Mesh12bins_crossedERKNS_8ParticleERNS_11FilterMatchE(ptr noundef nonnull readonly align 8 captures(none) dereferenceable(112) %this, ptr noundef nonnull readonly align 8 captures(none) dereferenceable(2728) %p, ptr noundef nonnull align 8 captures(none) dereferenceable(1513) %match) local_unnamed_addr #3 align 2 {
entry:
  %b.i178 = alloca %"struct.openmc::Position", align 8, addrspace(5)
  %a.i121 = alloca %"struct.openmc::Position", align 8, addrspace(5)
  %a.i75 = alloca %"struct.openmc::Position", align 8, addrspace(5)
  %b.i64 = alloca %"struct.openmc::Position", align 8, addrspace(5)
  %a.i53 = alloca %"struct.openmc::Position", align 8, addrspace(5)
  %b.i = alloca %"struct.openmc::Position", align 8, addrspace(5)
  %a.i = alloca %"struct.openmc::Position", align 8, addrspace(5)
  %r0 = alloca %"struct.openmc::Position", align 8, addrspace(5)
  %ijk0 = alloca [3 x i32], align 4, addrspace(5)
  %ijk1 = alloca [3 x i32], align 4, addrspace(5)
  %d = alloca [3 x double], align 16, addrspace(5)
  %r0.ascast = addrspacecast ptr addrspace(5) %r0 to ptr
  %ijk0.ascast = addrspacecast ptr addrspace(5) %ijk0 to ptr
  %ijk1.ascast = addrspacecast ptr addrspace(5) %ijk1 to ptr
  %d.ascast = addrspacecast ptr addrspace(5) %d to ptr
  %r_last_ = getelementptr inbounds nuw i8, ptr %p, i64 1464
  %last_r.sroa.0.0.copyload = load double, ptr %r_last_, align 8, !tbaa !30
  %last_r.sroa.6.0.r_last_.sroa_idx = getelementptr inbounds nuw i8, ptr %p, i64 1472
  %last_r.sroa.6.0.copyload = load double, ptr %last_r.sroa.6.0.r_last_.sroa_idx, align 8, !tbaa !30
  %last_r.sroa.8.0.r_last_.sroa_idx = getelementptr inbounds nuw i8, ptr %p, i64 1480
  %last_r.sroa.8.0.copyload = load double, ptr %last_r.sroa.8.0.r_last_.sroa_idx, align 8, !tbaa !30
  %coord_.i = getelementptr inbounds nuw i8, ptr %p, i64 888
  %r.sroa.0.0.copyload = load double, ptr %coord_.i, align 8, !tbaa !30
  %r.sroa.6.0.call.sroa_idx = getelementptr inbounds nuw i8, ptr %p, i64 896
  %r.sroa.6.0.copyload = load double, ptr %r.sroa.6.0.call.sroa_idx, align 8, !tbaa !30
  %r.sroa.9.0.call.sroa_idx = getelementptr inbounds nuw i8, ptr %p, i64 904
  %r.sroa.9.0.copyload = load double, ptr %r.sroa.9.0.call.sroa_idx, align 8, !tbaa !30
  %u.i = getelementptr inbounds nuw i8, ptr %p, i64 912
  %u.sroa.0.0.copyload = load double, ptr %u.i, align 8, !tbaa !30
  %u.sroa.16.0.u.i.sroa_idx = getelementptr inbounds nuw i8, ptr %p, i64 920
  %u.sroa.16.0.copyload = load double, ptr %u.sroa.16.0.u.i.sroa_idx, align 8, !tbaa !30
  %u.sroa.24.0.u.i.sroa_idx = getelementptr inbounds nuw i8, ptr %p, i64 928
  %u.sroa.24.0.copyload = load double, ptr %u.sroa.24.0.u.i.sroa_idx, align 8, !tbaa !30
  call void @llvm.lifetime.start.p5(i64 24, ptr addrspace(5) %a.i)
  %a1.i = addrspacecast ptr addrspace(5) %a.i to ptr
  store double %r.sroa.0.0.copyload, ptr addrspace(5) %a.i, align 8
  %0 = getelementptr inbounds nuw i8, ptr addrspace(5) %a.i, i32 8
  store double %r.sroa.6.0.copyload, ptr addrspace(5) %0, align 8
  %1 = getelementptr inbounds nuw i8, ptr addrspace(5) %a.i, i32 16
  store double %r.sroa.9.0.copyload, ptr addrspace(5) %1, align 8
  %call.i = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionmIES0_(ptr noundef nonnull align 8 dereferenceable(24) %a1.i, double %last_r.sroa.0.0.copyload, double %last_r.sroa.6.0.copyload, double %last_r.sroa.8.0.copyload) #8
  %retval.sroa.0.0.copyload.i = load double, ptr %call.i, align 8, !tbaa !30
  %retval.sroa.2.0.call.sroa_idx.i = getelementptr inbounds nuw i8, ptr %call.i, i64 8
  %retval.sroa.2.0.copyload.i = load double, ptr %retval.sroa.2.0.call.sroa_idx.i, align 8, !tbaa !30
  %retval.sroa.3.0.call.sroa_idx.i = getelementptr inbounds nuw i8, ptr %call.i, i64 16
  %retval.sroa.3.0.copyload.i = load double, ptr %retval.sroa.3.0.call.sroa_idx.i, align 8, !tbaa !30
  call void @llvm.lifetime.end.p5(i64 24, ptr addrspace(5) %a.i)
  %mul4.i = fmul double %retval.sroa.2.0.copyload.i, %retval.sroa.2.0.copyload.i
  %2 = call double @llvm.fmuladd.f64(double %retval.sroa.0.0.copyload.i, double %retval.sroa.0.0.copyload.i, double %mul4.i) #9
  %3 = call double @llvm.fmuladd.f64(double %retval.sroa.3.0.copyload.i, double %retval.sroa.3.0.copyload.i, double %2) #9
  %4 = call noundef double @llvm.sqrt.f64(double %3) #9
  call void @llvm.lifetime.start.p5(i64 24, ptr addrspace(5) %r0) #7
  call void @llvm.lifetime.start.p5(i64 24, ptr addrspace(5) %b.i)
  %b1.i = addrspacecast ptr addrspace(5) %b.i to ptr
  store double %u.sroa.0.0.copyload, ptr addrspace(5) %b.i, align 8
  %5 = getelementptr inbounds nuw i8, ptr addrspace(5) %b.i, i32 8
  store double %u.sroa.16.0.copyload, ptr addrspace(5) %5, align 8
  %6 = getelementptr inbounds nuw i8, ptr addrspace(5) %b.i, i32 16
  store double %u.sroa.24.0.copyload, ptr addrspace(5) %6, align 8
  %call.i44 = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionmLEd(ptr noundef nonnull align 8 dereferenceable(24) %b1.i, double noundef 1.000000e-08) #8
  %retval.sroa.0.0.copyload.i45 = load double, ptr %call.i44, align 8, !tbaa !30
  %retval.sroa.2.0.call.sroa_idx.i46 = getelementptr inbounds nuw i8, ptr %call.i44, i64 8
  %retval.sroa.2.0.copyload.i47 = load double, ptr %retval.sroa.2.0.call.sroa_idx.i46, align 8, !tbaa !30
  %retval.sroa.3.0.call.sroa_idx.i48 = getelementptr inbounds nuw i8, ptr %call.i44, i64 16
  %retval.sroa.3.0.copyload.i49 = load double, ptr %retval.sroa.3.0.call.sroa_idx.i48, align 8, !tbaa !30
  call void @llvm.lifetime.end.p5(i64 24, ptr addrspace(5) %b.i)
  call void @llvm.lifetime.start.p5(i64 24, ptr addrspace(5) %a.i53)
  %a1.i54 = addrspacecast ptr addrspace(5) %a.i53 to ptr
  store double %last_r.sroa.0.0.copyload, ptr addrspace(5) %a.i53, align 8
  %7 = getelementptr inbounds nuw i8, ptr addrspace(5) %a.i53, i32 8
  store double %last_r.sroa.6.0.copyload, ptr addrspace(5) %7, align 8
  %8 = getelementptr inbounds nuw i8, ptr addrspace(5) %a.i53, i32 16
  store double %last_r.sroa.8.0.copyload, ptr addrspace(5) %8, align 8
  %call.i55 = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionpLES0_(ptr noundef nonnull align 8 dereferenceable(24) %a1.i54, double %retval.sroa.0.0.copyload.i45, double %retval.sroa.2.0.copyload.i47, double %retval.sroa.3.0.copyload.i49) #8
  %retval.sroa.0.0.copyload.i56 = load double, ptr %call.i55, align 8, !tbaa !30
  %retval.sroa.2.0.call.sroa_idx.i57 = getelementptr inbounds nuw i8, ptr %call.i55, i64 8
  %retval.sroa.2.0.copyload.i58 = load double, ptr %retval.sroa.2.0.call.sroa_idx.i57, align 8, !tbaa !30
  %retval.sroa.3.0.call.sroa_idx.i59 = getelementptr inbounds nuw i8, ptr %call.i55, i64 16
  %retval.sroa.3.0.copyload.i60 = load double, ptr %retval.sroa.3.0.call.sroa_idx.i59, align 8, !tbaa !30
  call void @llvm.lifetime.end.p5(i64 24, ptr addrspace(5) %a.i53)
  store double %retval.sroa.0.0.copyload.i56, ptr addrspace(5) %r0, align 8
  %9 = getelementptr inbounds nuw i8, ptr addrspace(5) %r0, i32 8
  store double %retval.sroa.2.0.copyload.i58, ptr addrspace(5) %9, align 8
  %10 = getelementptr inbounds nuw i8, ptr addrspace(5) %r0, i32 16
  store double %retval.sroa.3.0.copyload.i60, ptr addrspace(5) %10, align 8
  call void @llvm.lifetime.start.p5(i64 24, ptr addrspace(5) %b.i64)
  %b1.i65 = addrspacecast ptr addrspace(5) %b.i64 to ptr
  store double %u.sroa.0.0.copyload, ptr addrspace(5) %b.i64, align 8
  %11 = getelementptr inbounds nuw i8, ptr addrspace(5) %b.i64, i32 8
  store double %u.sroa.16.0.copyload, ptr addrspace(5) %11, align 8
  %12 = getelementptr inbounds nuw i8, ptr addrspace(5) %b.i64, i32 16
  store double %u.sroa.24.0.copyload, ptr addrspace(5) %12, align 8
  %call.i66 = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionmLEd(ptr noundef nonnull align 8 dereferenceable(24) %b1.i65, double noundef 1.000000e-08) #8
  %retval.sroa.0.0.copyload.i67 = load double, ptr %call.i66, align 8, !tbaa !30
  %retval.sroa.2.0.call.sroa_idx.i68 = getelementptr inbounds nuw i8, ptr %call.i66, i64 8
  %retval.sroa.2.0.copyload.i69 = load double, ptr %retval.sroa.2.0.call.sroa_idx.i68, align 8, !tbaa !30
  %retval.sroa.3.0.call.sroa_idx.i70 = getelementptr inbounds nuw i8, ptr %call.i66, i64 16
  %retval.sroa.3.0.copyload.i71 = load double, ptr %retval.sroa.3.0.call.sroa_idx.i70, align 8, !tbaa !30
  call void @llvm.lifetime.end.p5(i64 24, ptr addrspace(5) %b.i64)
  call void @llvm.lifetime.start.p5(i64 24, ptr addrspace(5) %a.i75)
  %a1.i76 = addrspacecast ptr addrspace(5) %a.i75 to ptr
  store double %r.sroa.0.0.copyload, ptr addrspace(5) %a.i75, align 8
  %13 = getelementptr inbounds nuw i8, ptr addrspace(5) %a.i75, i32 8
  store double %r.sroa.6.0.copyload, ptr addrspace(5) %13, align 8
  %14 = getelementptr inbounds nuw i8, ptr addrspace(5) %a.i75, i32 16
  store double %r.sroa.9.0.copyload, ptr addrspace(5) %14, align 8
  %call.i77 = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionmIES0_(ptr noundef nonnull align 8 dereferenceable(24) %a1.i76, double %retval.sroa.0.0.copyload.i67, double %retval.sroa.2.0.copyload.i69, double %retval.sroa.3.0.copyload.i71) #8
  %retval.sroa.0.0.copyload.i78 = load double, ptr %call.i77, align 8, !tbaa !30
  %retval.sroa.2.0.call.sroa_idx.i79 = getelementptr inbounds nuw i8, ptr %call.i77, i64 8
  %retval.sroa.2.0.copyload.i80 = load double, ptr %retval.sroa.2.0.call.sroa_idx.i79, align 8, !tbaa !30
  %retval.sroa.3.0.call.sroa_idx.i81 = getelementptr inbounds nuw i8, ptr %call.i77, i64 16
  %retval.sroa.3.0.copyload.i82 = load double, ptr %retval.sroa.3.0.call.sroa_idx.i81, align 8, !tbaa !30
  call void @llvm.lifetime.end.p5(i64 24, ptr addrspace(5) %a.i75)
  %n_dimension_ = getelementptr inbounds nuw i8, ptr %this, i64 4
  %15 = load i32, ptr %n_dimension_, align 4, !tbaa !17
  call void @llvm.lifetime.start.p5(i64 12, ptr addrspace(5) %ijk0) #7
  call void @llvm.lifetime.start.p5(i64 12, ptr addrspace(5) %ijk1) #7
  %cmp2.i = icmp sgt i32 %15, 0
  br i1 %cmp2.i, label %for.body.lr.ph.i, label %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %16 = getelementptr inbounds nuw i8, ptr %this, i64 8
  %17 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %shape_.i = getelementptr inbounds nuw i8, ptr %this, i64 56
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %start_in_mesh.0.off0 = phi i1 [ true, %for.body.lr.ph.i ], [ %start_in_mesh.1.off0, %for.inc.i ]
  %i.03.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  switch i32 %i.03.i, label %sw.default.i.i [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit.i
    i32 1, label %sw.bb2.i.i
    i32 2, label %sw.bb3.i.i
  ]

sw.bb2.i.i:                                       ; preds = %for.body.i
  br label %_ZN6openmc8PositionixEi.internalized.exit.i

sw.bb3.i.i:                                       ; preds = %for.body.i
  br label %_ZN6openmc8PositionixEi.internalized.exit.i

sw.default.i.i:                                   ; preds = %for.body.i
  %call.i.i = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit.i

_ZN6openmc8PositionixEi.internalized.exit.i:      ; preds = %sw.default.i.i, %sw.bb3.i.i, %sw.bb2.i.i, %for.body.i
  %retval.0.i.sroa.speculated.i = phi double [ %retval.sroa.0.0.copyload.i56, %sw.default.i.i ], [ %retval.sroa.3.0.copyload.i60, %sw.bb3.i.i ], [ %retval.sroa.2.0.copyload.i58, %sw.bb2.i.i ], [ %retval.sroa.0.0.copyload.i56, %for.body.i ]
  %this.val.i = load ptr, ptr %16, align 8, !tbaa !29
  %this.val1.i = load ptr, ptr %17, align 8, !tbaa !29
  %conv.i.i = zext nneg i32 %i.03.i to i64
  %arrayidx.i.i.i = getelementptr inbounds nuw double, ptr %this.val.i, i64 %conv.i.i
  %18 = load double, ptr %arrayidx.i.i.i, align 8, !tbaa !30
  %sub.i.i = fsub double %retval.0.i.sroa.speculated.i, %18
  %arrayidx.i1.i.i = getelementptr inbounds nuw double, ptr %this.val1.i, i64 %conv.i.i
  %19 = load double, ptr %arrayidx.i1.i.i, align 8, !tbaa !30
  %div.i.i = fdiv double %sub.i.i, %19
  %20 = call noundef double @llvm.ceil.f64(double %div.i.i) #9
  %conv5.i.i = fptosi double %20 to i32
  %arrayidx.i = getelementptr inbounds nuw i32, ptr addrspace(5) %ijk0, i32 %i.03.i
  store i32 %conv5.i.i, ptr addrspace(5) %arrayidx.i, align 4, !tbaa !31
  %cmp6.i = icmp slt i32 %conv5.i.i, 1
  br i1 %cmp6.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %_ZN6openmc8PositionixEi.internalized.exit.i
  %shape_.val.i = load ptr, ptr %shape_.i, align 8, !tbaa !32
  %arrayidx.i.i = getelementptr inbounds nuw i32, ptr %shape_.val.i, i64 %conv.i.i
  %21 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !31
  %cmp10.i = icmp slt i32 %21, %conv5.i.i
  br i1 %cmp10.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %lor.lhs.false.i, %_ZN6openmc8PositionixEi.internalized.exit.i
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %lor.lhs.false.i
  %start_in_mesh.1.off0 = phi i1 [ false, %if.then.i ], [ %start_in_mesh.0.off0, %lor.lhs.false.i ]
  %inc.i = add nuw nsw i32 %i.03.i, 1
  %22 = load i32, ptr %n_dimension_, align 4, !tbaa !17
  %cmp.i = icmp slt i32 %inc.i, %22
  br i1 %cmp.i, label %for.body.i, label %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit, !llvm.loop !33

_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit: ; preds = %for.inc.i, %entry
  %23 = phi i32 [ %15, %entry ], [ %22, %for.inc.i ]
  %start_in_mesh.2.off0 = phi i1 [ true, %entry ], [ %start_in_mesh.1.off0, %for.inc.i ]
  %cmp2.i87 = icmp sgt i32 %23, 0
  br i1 %cmp2.i87, label %for.body.lr.ph.i88, label %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit116

for.body.lr.ph.i88:                               ; preds = %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit
  %24 = getelementptr inbounds nuw i8, ptr %this, i64 8
  %25 = getelementptr inbounds nuw i8, ptr %this, i64 88
  br label %for.body.i90

for.body.i90:                                     ; preds = %_ZN6openmc8PositionixEi.internalized.exit.i93, %for.body.lr.ph.i88
  %26 = phi i32 [ %23, %for.body.lr.ph.i88 ], [ %27, %_ZN6openmc8PositionixEi.internalized.exit.i93 ]
  %i.03.i91 = phi i32 [ 0, %for.body.lr.ph.i88 ], [ %inc.i110, %_ZN6openmc8PositionixEi.internalized.exit.i93 ]
  switch i32 %i.03.i91, label %sw.default.i.i114 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit.i93
    i32 1, label %sw.bb2.i.i113
    i32 2, label %sw.bb3.i.i92
  ]

sw.bb2.i.i113:                                    ; preds = %for.body.i90
  br label %_ZN6openmc8PositionixEi.internalized.exit.i93

sw.bb3.i.i92:                                     ; preds = %for.body.i90
  br label %_ZN6openmc8PositionixEi.internalized.exit.i93

sw.default.i.i114:                                ; preds = %for.body.i90
  %call.i.i115 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  %.pre = load i32, ptr %n_dimension_, align 4, !tbaa !17
  br label %_ZN6openmc8PositionixEi.internalized.exit.i93

_ZN6openmc8PositionixEi.internalized.exit.i93:    ; preds = %sw.default.i.i114, %sw.bb3.i.i92, %sw.bb2.i.i113, %for.body.i90
  %27 = phi i32 [ %.pre, %sw.default.i.i114 ], [ %26, %sw.bb3.i.i92 ], [ %26, %sw.bb2.i.i113 ], [ %26, %for.body.i90 ]
  %retval.0.i.sroa.speculated.i94 = phi double [ %retval.sroa.0.0.copyload.i78, %sw.default.i.i114 ], [ %retval.sroa.3.0.copyload.i82, %sw.bb3.i.i92 ], [ %retval.sroa.2.0.copyload.i80, %sw.bb2.i.i113 ], [ %retval.sroa.0.0.copyload.i78, %for.body.i90 ]
  %this.val.i95 = load ptr, ptr %24, align 8, !tbaa !29
  %this.val1.i96 = load ptr, ptr %25, align 8, !tbaa !29
  %conv.i.i97 = zext nneg i32 %i.03.i91 to i64
  %arrayidx.i.i.i98 = getelementptr inbounds nuw double, ptr %this.val.i95, i64 %conv.i.i97
  %28 = load double, ptr %arrayidx.i.i.i98, align 8, !tbaa !30
  %sub.i.i99 = fsub double %retval.0.i.sroa.speculated.i94, %28
  %arrayidx.i1.i.i100 = getelementptr inbounds nuw double, ptr %this.val1.i96, i64 %conv.i.i97
  %29 = load double, ptr %arrayidx.i1.i.i100, align 8, !tbaa !30
  %div.i.i101 = fdiv double %sub.i.i99, %29
  %30 = call noundef double @llvm.ceil.f64(double %div.i.i101) #9
  %conv5.i.i102 = fptosi double %30 to i32
  %arrayidx.i103 = getelementptr inbounds nuw i32, ptr addrspace(5) %ijk1, i32 %i.03.i91
  store i32 %conv5.i.i102, ptr addrspace(5) %arrayidx.i103, align 4, !tbaa !31
  %inc.i110 = add nuw nsw i32 %i.03.i91, 1
  %cmp.i111 = icmp slt i32 %inc.i110, %27
  br i1 %cmp.i111, label %for.body.i90, label %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit116, !llvm.loop !33

_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit116: ; preds = %_ZN6openmc8PositionixEi.internalized.exit.i93, %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit
  %31 = phi i32 [ %23, %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit ], [ %27, %_ZN6openmc8PositionixEi.internalized.exit.i93 ]
  br i1 %start_in_mesh.2.off0, label %if.then, label %if.else

if.then:                                          ; preds = %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit116
  store double %last_r.sroa.0.0.copyload, ptr addrspace(5) %r0, align 8, !tbaa !30
  store double %last_r.sroa.6.0.copyload, ptr addrspace(5) %9, align 8, !tbaa !30
  store double %last_r.sroa.8.0.copyload, ptr addrspace(5) %10, align 8, !tbaa !30
  br label %if.end23

if.else:                                          ; preds = %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit116
  %32 = load double, ptr addrspace(5) %r0, align 8, !tbaa !35
  %33 = load double, ptr addrspace(5) %9, align 8, !tbaa !37
  %34 = load double, ptr addrspace(5) %10, align 8, !tbaa !38
  %lower_left_.i.i = getelementptr inbounds nuw i8, ptr %this, i64 8
  %lower_left_.val.i.i = load ptr, ptr %lower_left_.i.i, align 8, !tbaa !29
  %35 = load double, ptr %lower_left_.val.i.i, align 8, !tbaa !30
  switch i32 %31, label %sw.epilog.i [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb3.i
    i32 3, label %sw.bb6.i
  ]

sw.bb.i:                                          ; preds = %if.else
  %upper_right_.i.i = getelementptr inbounds nuw i8, ptr %this, i64 32
  %upper_right_.val.i.i = load ptr, ptr %upper_right_.i.i, align 8, !tbaa !29
  %36 = load double, ptr %upper_right_.val.i.i, align 8, !tbaa !30
  %cmp.i.i = fcmp olt double %32, %35
  %cmp7.i.i = fcmp ogt double %retval.sroa.0.0.copyload.i78, %35
  %or.cond.i.i = select i1 %cmp.i.i, i1 %cmp7.i.i, i1 false
  br i1 %or.cond.i.i, label %if.then.i.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %sw.bb.i
  %cmp8.i.i = fcmp ogt double %32, %35
  %cmp10.i.i = fcmp olt double %retval.sroa.0.0.copyload.i78, %35
  %or.cond3.i.i = select i1 %cmp8.i.i, i1 %cmp10.i.i, i1 false
  br i1 %or.cond3.i.i, label %if.then.i.i, label %if.end21.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i, %sw.bb.i
  %sub.i.i119 = fsub double %35, %32
  %sub11.i.i = fsub double %retval.sroa.2.0.copyload.i80, %33
  %mul.i.i = fmul double %sub11.i.i, %sub.i.i119
  %sub12.i.i = fsub double %retval.sroa.0.0.copyload.i78, %32
  %div.i.i120 = fdiv double %mul.i.i, %sub12.i.i
  %add.i.i = fadd double %33, %div.i.i120
  %sub14.i.i = fsub double %retval.sroa.3.0.copyload.i82, %34
  %mul15.i.i = fmul double %sub14.i.i, %sub.i.i119
  %div17.i.i = fdiv double %mul15.i.i, %sub12.i.i
  %add18.i.i = fadd double %34, %div17.i.i
  %37 = fcmp oeq double %sub.i.i119, 1.000000e+00
  %38 = select i1 %37, double 1.000000e+00, double 2.000000e+00
  %39 = call double @llvm.fabs.f64(double %sub.i.i119) #9
  %40 = call double @llvm.amdgcn.frexp.mant.f64(double %39)
  %41 = fcmp olt double %40, 0x3FE5555555555555
  %.neg.i.i.i.i.i.i = sext i1 %41 to i32
  %42 = select i1 %41, double 2.000000e+00, double 1.000000e+00
  %43 = fmul double %40, %42
  %44 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %39)
  %45 = add i32 %44, %.neg.i.i.i.i.i.i
  %46 = fadd double %43, -1.000000e+00
  %47 = fadd double %43, 1.000000e+00
  %48 = fadd double %47, -1.000000e+00
  %49 = fsub double %43, %48
  %50 = call double @llvm.amdgcn.rcp.f64(double %47)
  %51 = fneg double %47
  %52 = call double @llvm.fma.f64(double %51, double %50, double 1.000000e+00)
  %53 = call double @llvm.fma.f64(double %52, double %50, double %50)
  %54 = call double @llvm.fma.f64(double %51, double %53, double 1.000000e+00)
  %55 = call double @llvm.fma.f64(double %54, double %53, double %53)
  %56 = fmul double %46, %55
  %57 = fmul double %47, %56
  %58 = fneg double %57
  %59 = call double @llvm.fma.f64(double %56, double %47, double %58)
  %60 = call double @llvm.fma.f64(double %56, double %49, double %59)
  %61 = fadd double %57, %60
  %62 = fsub double %61, %57
  %63 = fsub double %46, %61
  %64 = fsub double %46, %63
  %65 = fsub double %64, %61
  %66 = fsub double %62, %60
  %67 = fadd double %66, %65
  %68 = fadd double %63, %67
  %69 = fmul double %55, %68
  %70 = fadd double %56, %69
  %71 = fsub double %70, %56
  %72 = fsub double %69, %71
  %73 = fmul double %70, %70
  %74 = fneg double %73
  %75 = call double @llvm.fma.f64(double %70, double %70, double %74)
  %76 = fmul double %72, 2.000000e+00
  %77 = call double @llvm.fma.f64(double %70, double %76, double %75)
  %78 = fadd double %73, %77
  %79 = fsub double %78, %73
  %80 = fsub double %77, %79
  %81 = call double @llvm.fma.f64(double %78, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %82 = call double @llvm.fma.f64(double %78, double %81, double 0x3FBE25E43ABE935A)
  %83 = call double @llvm.fma.f64(double %78, double %82, double 0x3FC110EF47E6C9C2)
  %84 = call double @llvm.fma.f64(double %78, double %83, double 0x3FC3B13BCFA74449)
  %85 = call double @llvm.fma.f64(double %78, double %84, double 0x3FC745D171BF3C30)
  %86 = call double @llvm.fma.f64(double %78, double %85, double 0x3FCC71C71C7792CE)
  %87 = call double @llvm.fma.f64(double %78, double %86, double 0x3FD24924924920DA)
  %88 = call double @llvm.fma.f64(double %78, double %87, double 0x3FD999999999999C)
  %89 = sitofp i32 %45 to double
  %90 = fmul double %89, 0x3FE62E42FEFA39EF
  %91 = fneg double %90
  %92 = call double @llvm.fma.f64(double %89, double 0x3FE62E42FEFA39EF, double %91)
  %93 = call double @llvm.fma.f64(double %89, double 0x3C7ABC9E3B39803F, double %92)
  %94 = fadd double %90, %93
  %95 = fsub double %94, %90
  %96 = fsub double %93, %95
  %97 = call double @llvm.ldexp.f64.i32(double %70, i32 1)
  %98 = call double @llvm.ldexp.f64.i32(double %72, i32 1)
  %99 = fmul double %70, %78
  %100 = fneg double %99
  %101 = call double @llvm.fma.f64(double %78, double %70, double %100)
  %102 = call double @llvm.fma.f64(double %78, double %72, double %101)
  %103 = call double @llvm.fma.f64(double %80, double %70, double %102)
  %104 = fadd double %99, %103
  %105 = fsub double %104, %99
  %106 = fsub double %103, %105
  %107 = fmul double %78, %88
  %108 = fneg double %107
  %109 = call double @llvm.fma.f64(double %78, double %88, double %108)
  %110 = call double @llvm.fma.f64(double %80, double %88, double %109)
  %111 = fadd double %107, %110
  %112 = fsub double %111, %107
  %113 = fsub double %110, %112
  %114 = fadd double %111, 0x3FE5555555555555
  %115 = fadd double %114, 0xBFE5555555555555
  %116 = fsub double %111, %115
  %117 = fadd double %113, 0x3C8543B0D5DF274D
  %118 = fadd double %117, %116
  %119 = fadd double %114, %118
  %120 = fsub double %114, %119
  %121 = fadd double %118, %120
  %122 = fmul double %104, %119
  %123 = fneg double %122
  %124 = call double @llvm.fma.f64(double %104, double %119, double %123)
  %125 = call double @llvm.fma.f64(double %104, double %121, double %124)
  %126 = call double @llvm.fma.f64(double %106, double %119, double %125)
  %127 = fadd double %122, %126
  %128 = fsub double %127, %122
  %129 = fsub double %126, %128
  %130 = fadd double %97, %127
  %131 = fsub double %130, %97
  %132 = fsub double %127, %131
  %133 = fadd double %98, %129
  %134 = fadd double %133, %132
  %135 = fadd double %130, %134
  %136 = fsub double %135, %130
  %137 = fsub double %134, %136
  %138 = fadd double %94, %135
  %139 = fsub double %138, %94
  %140 = fsub double %138, %139
  %141 = fsub double %94, %140
  %142 = fsub double %135, %139
  %143 = fadd double %142, %141
  %144 = fadd double %96, %137
  %145 = fsub double %144, %96
  %146 = fsub double %144, %145
  %147 = fsub double %96, %146
  %148 = fsub double %137, %145
  %149 = fadd double %148, %147
  %150 = fadd double %144, %143
  %151 = fadd double %138, %150
  %152 = fsub double %151, %138
  %153 = fsub double %150, %152
  %154 = fadd double %149, %153
  %155 = fadd double %151, %154
  %156 = fsub double %155, %151
  %157 = fsub double %154, %156
  %158 = fmul double %38, %155
  %159 = fneg double %158
  %160 = call double @llvm.fma.f64(double %38, double %155, double %159) #9
  %161 = call double @llvm.fma.f64(double %38, double %157, double %160) #9
  %162 = fadd double %158, %161
  %163 = fsub double %162, %158
  %164 = fsub double %161, %163
  %165 = call double @llvm.fabs.f64(double %158) #9
  %166 = fcmp oeq double %165, 0x7FF0000000000000
  %167 = select i1 %166, double %158, double %162
  %168 = call double @llvm.fabs.f64(double %167) #9
  %169 = fcmp oeq double %168, 0x7FF0000000000000
  %170 = select i1 %169, double 0.000000e+00, double %164
  %171 = fmul double %167, 0x3FF71547652B82FE
  %172 = call double @llvm.rint.f64(double %171)
  %173 = fneg double %172
  %174 = call double @llvm.fma.f64(double %173, double 0x3FE62E42FEFA39EF, double %167)
  %175 = call double @llvm.fma.f64(double %173, double 0x3C7ABC9E3B39803F, double %174)
  %176 = call double @llvm.fma.f64(double %175, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %177 = call double @llvm.fma.f64(double %175, double %176, double 0x3EC71DEE623FDE64)
  %178 = call double @llvm.fma.f64(double %175, double %177, double 0x3EFA01997C89E6B0)
  %179 = call double @llvm.fma.f64(double %175, double %178, double 0x3F2A01A014761F6E)
  %180 = call double @llvm.fma.f64(double %175, double %179, double 0x3F56C16C1852B7B0)
  %181 = call double @llvm.fma.f64(double %175, double %180, double 0x3F81111111122322)
  %182 = call double @llvm.fma.f64(double %175, double %181, double 0x3FA55555555502A1)
  %183 = call double @llvm.fma.f64(double %175, double %182, double 0x3FC5555555555511)
  %184 = call double @llvm.fma.f64(double %175, double %183, double 0x3FE000000000000B)
  %185 = call double @llvm.fma.f64(double %175, double %184, double 1.000000e+00)
  %186 = call double @llvm.fma.f64(double %175, double %185, double 1.000000e+00)
  %187 = fptosi double %172 to i32
  %188 = call double @llvm.ldexp.f64.i32(double %186, i32 %187)
  %189 = fcmp ogt double %167, 1.024000e+03
  %190 = select i1 %189, double 0x7FF0000000000000, double %188
  %191 = fcmp olt double %167, -1.075000e+03
  %192 = select i1 %191, double 0.000000e+00, double %190
  %193 = call double @llvm.fma.f64(double %192, double %170, double %192) #9
  %194 = call double @llvm.fabs.f64(double %192) #9
  %195 = fcmp oeq double %194, 0x7FF0000000000000
  %196 = select i1 %195, double %192, double %193
  %197 = call double @llvm.trunc.f64(double %38) #9
  %198 = fcmp oeq double %197, %38
  %199 = fmul double %38, 5.000000e-01
  %200 = call double @llvm.trunc.f64(double %199) #9
  %201 = fcmp une double %200, %199
  %202 = and i1 %198, %201
  %203 = select i1 %202, double %sub.i.i119, double 1.000000e+00
  %204 = call double @llvm.copysign.f64(double %196, double %203) #9
  %205 = fcmp olt double %sub.i.i119, 0.000000e+00
  %206 = select i1 %198, double %204, double 0x7FF8000000000000
  %207 = select i1 %205, double %206, double %204
  %208 = fcmp oeq double %39, 0x7FF0000000000000
  %209 = fcmp oeq double %sub.i.i119, 0.000000e+00
  %210 = or i1 %209, %208
  %211 = select i1 %209, double 0.000000e+00, double 0x7FF0000000000000
  %212 = select i1 %202, double %sub.i.i119, double 0.000000e+00
  %213 = call double @llvm.copysign.f64(double %211, double %212) #9
  %214 = select i1 %210, double %213, double %207
  %215 = fcmp uno double %sub.i.i119, 0.000000e+00
  %216 = select i1 %215, double 0x7FF8000000000000, double %214
  %sub1.i.i.i = fsub double %add.i.i, %add.i.i
  %217 = fcmp oeq double %sub1.i.i.i, 1.000000e+00
  %218 = select i1 %217, double 1.000000e+00, double 2.000000e+00
  %219 = call double @llvm.fabs.f64(double %sub1.i.i.i) #9
  %220 = call double @llvm.amdgcn.frexp.mant.f64(double %219)
  %221 = fcmp olt double %220, 0x3FE5555555555555
  %.neg.i.i.i1.i.i.i = sext i1 %221 to i32
  %222 = select i1 %221, double 2.000000e+00, double 1.000000e+00
  %223 = fmul double %220, %222
  %224 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %219)
  %225 = add i32 %224, %.neg.i.i.i1.i.i.i
  %226 = fadd double %223, -1.000000e+00
  %227 = fadd double %223, 1.000000e+00
  %228 = fadd double %227, -1.000000e+00
  %229 = fsub double %223, %228
  %230 = call double @llvm.amdgcn.rcp.f64(double %227)
  %231 = fneg double %227
  %232 = call double @llvm.fma.f64(double %231, double %230, double 1.000000e+00)
  %233 = call double @llvm.fma.f64(double %232, double %230, double %230)
  %234 = call double @llvm.fma.f64(double %231, double %233, double 1.000000e+00)
  %235 = call double @llvm.fma.f64(double %234, double %233, double %233)
  %236 = fmul double %226, %235
  %237 = fmul double %227, %236
  %238 = fneg double %237
  %239 = call double @llvm.fma.f64(double %236, double %227, double %238)
  %240 = call double @llvm.fma.f64(double %236, double %229, double %239)
  %241 = fadd double %237, %240
  %242 = fsub double %241, %237
  %243 = fsub double %226, %241
  %244 = fsub double %226, %243
  %245 = fsub double %244, %241
  %246 = fsub double %242, %240
  %247 = fadd double %246, %245
  %248 = fadd double %243, %247
  %249 = fmul double %235, %248
  %250 = fadd double %236, %249
  %251 = fsub double %250, %236
  %252 = fsub double %249, %251
  %253 = fmul double %250, %250
  %254 = fneg double %253
  %255 = call double @llvm.fma.f64(double %250, double %250, double %254)
  %256 = fmul double %252, 2.000000e+00
  %257 = call double @llvm.fma.f64(double %250, double %256, double %255)
  %258 = fadd double %253, %257
  %259 = fsub double %258, %253
  %260 = fsub double %257, %259
  %261 = call double @llvm.fma.f64(double %258, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %262 = call double @llvm.fma.f64(double %258, double %261, double 0x3FBE25E43ABE935A)
  %263 = call double @llvm.fma.f64(double %258, double %262, double 0x3FC110EF47E6C9C2)
  %264 = call double @llvm.fma.f64(double %258, double %263, double 0x3FC3B13BCFA74449)
  %265 = call double @llvm.fma.f64(double %258, double %264, double 0x3FC745D171BF3C30)
  %266 = call double @llvm.fma.f64(double %258, double %265, double 0x3FCC71C71C7792CE)
  %267 = call double @llvm.fma.f64(double %258, double %266, double 0x3FD24924924920DA)
  %268 = call double @llvm.fma.f64(double %258, double %267, double 0x3FD999999999999C)
  %269 = sitofp i32 %225 to double
  %270 = fmul double %269, 0x3FE62E42FEFA39EF
  %271 = fneg double %270
  %272 = call double @llvm.fma.f64(double %269, double 0x3FE62E42FEFA39EF, double %271)
  %273 = call double @llvm.fma.f64(double %269, double 0x3C7ABC9E3B39803F, double %272)
  %274 = fadd double %270, %273
  %275 = fsub double %274, %270
  %276 = fsub double %273, %275
  %277 = call double @llvm.ldexp.f64.i32(double %250, i32 1)
  %278 = call double @llvm.ldexp.f64.i32(double %252, i32 1)
  %279 = fmul double %250, %258
  %280 = fneg double %279
  %281 = call double @llvm.fma.f64(double %258, double %250, double %280)
  %282 = call double @llvm.fma.f64(double %258, double %252, double %281)
  %283 = call double @llvm.fma.f64(double %260, double %250, double %282)
  %284 = fadd double %279, %283
  %285 = fsub double %284, %279
  %286 = fsub double %283, %285
  %287 = fmul double %258, %268
  %288 = fneg double %287
  %289 = call double @llvm.fma.f64(double %258, double %268, double %288)
  %290 = call double @llvm.fma.f64(double %260, double %268, double %289)
  %291 = fadd double %287, %290
  %292 = fsub double %291, %287
  %293 = fsub double %290, %292
  %294 = fadd double %291, 0x3FE5555555555555
  %295 = fadd double %294, 0xBFE5555555555555
  %296 = fsub double %291, %295
  %297 = fadd double %293, 0x3C8543B0D5DF274D
  %298 = fadd double %297, %296
  %299 = fadd double %294, %298
  %300 = fsub double %294, %299
  %301 = fadd double %298, %300
  %302 = fmul double %284, %299
  %303 = fneg double %302
  %304 = call double @llvm.fma.f64(double %284, double %299, double %303)
  %305 = call double @llvm.fma.f64(double %284, double %301, double %304)
  %306 = call double @llvm.fma.f64(double %286, double %299, double %305)
  %307 = fadd double %302, %306
  %308 = fsub double %307, %302
  %309 = fsub double %306, %308
  %310 = fadd double %277, %307
  %311 = fsub double %310, %277
  %312 = fsub double %307, %311
  %313 = fadd double %278, %309
  %314 = fadd double %313, %312
  %315 = fadd double %310, %314
  %316 = fsub double %315, %310
  %317 = fsub double %314, %316
  %318 = fadd double %274, %315
  %319 = fsub double %318, %274
  %320 = fsub double %318, %319
  %321 = fsub double %274, %320
  %322 = fsub double %315, %319
  %323 = fadd double %322, %321
  %324 = fadd double %276, %317
  %325 = fsub double %324, %276
  %326 = fsub double %324, %325
  %327 = fsub double %276, %326
  %328 = fsub double %317, %325
  %329 = fadd double %328, %327
  %330 = fadd double %324, %323
  %331 = fadd double %318, %330
  %332 = fsub double %331, %318
  %333 = fsub double %330, %332
  %334 = fadd double %329, %333
  %335 = fadd double %331, %334
  %336 = fsub double %335, %331
  %337 = fsub double %334, %336
  %338 = fmul double %218, %335
  %339 = fneg double %338
  %340 = call double @llvm.fma.f64(double %218, double %335, double %339) #9
  %341 = call double @llvm.fma.f64(double %218, double %337, double %340) #9
  %342 = fadd double %338, %341
  %343 = fsub double %342, %338
  %344 = fsub double %341, %343
  %345 = call double @llvm.fabs.f64(double %338) #9
  %346 = fcmp oeq double %345, 0x7FF0000000000000
  %347 = select i1 %346, double %338, double %342
  %348 = call double @llvm.fabs.f64(double %347) #9
  %349 = fcmp oeq double %348, 0x7FF0000000000000
  %350 = select i1 %349, double 0.000000e+00, double %344
  %351 = fmul double %347, 0x3FF71547652B82FE
  %352 = call double @llvm.rint.f64(double %351)
  %353 = fneg double %352
  %354 = call double @llvm.fma.f64(double %353, double 0x3FE62E42FEFA39EF, double %347)
  %355 = call double @llvm.fma.f64(double %353, double 0x3C7ABC9E3B39803F, double %354)
  %356 = call double @llvm.fma.f64(double %355, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %357 = call double @llvm.fma.f64(double %355, double %356, double 0x3EC71DEE623FDE64)
  %358 = call double @llvm.fma.f64(double %355, double %357, double 0x3EFA01997C89E6B0)
  %359 = call double @llvm.fma.f64(double %355, double %358, double 0x3F2A01A014761F6E)
  %360 = call double @llvm.fma.f64(double %355, double %359, double 0x3F56C16C1852B7B0)
  %361 = call double @llvm.fma.f64(double %355, double %360, double 0x3F81111111122322)
  %362 = call double @llvm.fma.f64(double %355, double %361, double 0x3FA55555555502A1)
  %363 = call double @llvm.fma.f64(double %355, double %362, double 0x3FC5555555555511)
  %364 = call double @llvm.fma.f64(double %355, double %363, double 0x3FE000000000000B)
  %365 = call double @llvm.fma.f64(double %355, double %364, double 1.000000e+00)
  %366 = call double @llvm.fma.f64(double %355, double %365, double 1.000000e+00)
  %367 = fptosi double %352 to i32
  %368 = call double @llvm.ldexp.f64.i32(double %366, i32 %367)
  %369 = fcmp ogt double %347, 1.024000e+03
  %370 = select i1 %369, double 0x7FF0000000000000, double %368
  %371 = fcmp olt double %347, -1.075000e+03
  %372 = select i1 %371, double 0.000000e+00, double %370
  %373 = call double @llvm.fma.f64(double %372, double %350, double %372) #9
  %374 = call double @llvm.fabs.f64(double %372) #9
  %375 = fcmp oeq double %374, 0x7FF0000000000000
  %376 = select i1 %375, double %372, double %373
  %377 = call double @llvm.trunc.f64(double %218) #9
  %378 = fcmp oeq double %377, %218
  %379 = fmul double %218, 5.000000e-01
  %380 = call double @llvm.trunc.f64(double %379) #9
  %381 = fcmp une double %380, %379
  %382 = and i1 %378, %381
  %383 = select i1 %382, double %sub1.i.i.i, double 1.000000e+00
  %384 = call double @llvm.copysign.f64(double %376, double %383) #9
  %385 = fcmp olt double %sub1.i.i.i, 0.000000e+00
  %386 = select i1 %378, double %384, double 0x7FF8000000000000
  %387 = select i1 %385, double %386, double %384
  %388 = fcmp oeq double %219, 0x7FF0000000000000
  %389 = fcmp oeq double %sub1.i.i.i, 0.000000e+00
  %390 = or i1 %389, %388
  %391 = select i1 %389, double 0.000000e+00, double 0x7FF0000000000000
  %392 = select i1 %382, double %sub1.i.i.i, double 0.000000e+00
  %393 = call double @llvm.copysign.f64(double %391, double %392) #9
  %394 = select i1 %390, double %393, double %387
  %395 = fcmp uno double %sub1.i.i.i, 0.000000e+00
  %396 = select i1 %395, double 0x7FF8000000000000, double %394
  %add.i.i.i = fadd double %216, %396
  %sub3.i.i.i = fsub double %add18.i.i, %add18.i.i
  %397 = fcmp oeq double %sub3.i.i.i, 1.000000e+00
  %398 = select i1 %397, double 1.000000e+00, double 2.000000e+00
  %399 = call double @llvm.fabs.f64(double %sub3.i.i.i) #9
  %400 = call double @llvm.amdgcn.frexp.mant.f64(double %399)
  %401 = fcmp olt double %400, 0x3FE5555555555555
  %.neg.i.i.i2.i.i.i = sext i1 %401 to i32
  %402 = select i1 %401, double 2.000000e+00, double 1.000000e+00
  %403 = fmul double %400, %402
  %404 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %399)
  %405 = add i32 %404, %.neg.i.i.i2.i.i.i
  %406 = fadd double %403, -1.000000e+00
  %407 = fadd double %403, 1.000000e+00
  %408 = fadd double %407, -1.000000e+00
  %409 = fsub double %403, %408
  %410 = call double @llvm.amdgcn.rcp.f64(double %407)
  %411 = fneg double %407
  %412 = call double @llvm.fma.f64(double %411, double %410, double 1.000000e+00)
  %413 = call double @llvm.fma.f64(double %412, double %410, double %410)
  %414 = call double @llvm.fma.f64(double %411, double %413, double 1.000000e+00)
  %415 = call double @llvm.fma.f64(double %414, double %413, double %413)
  %416 = fmul double %406, %415
  %417 = fmul double %407, %416
  %418 = fneg double %417
  %419 = call double @llvm.fma.f64(double %416, double %407, double %418)
  %420 = call double @llvm.fma.f64(double %416, double %409, double %419)
  %421 = fadd double %417, %420
  %422 = fsub double %421, %417
  %423 = fsub double %406, %421
  %424 = fsub double %406, %423
  %425 = fsub double %424, %421
  %426 = fsub double %422, %420
  %427 = fadd double %426, %425
  %428 = fadd double %423, %427
  %429 = fmul double %415, %428
  %430 = fadd double %416, %429
  %431 = fsub double %430, %416
  %432 = fsub double %429, %431
  %433 = fmul double %430, %430
  %434 = fneg double %433
  %435 = call double @llvm.fma.f64(double %430, double %430, double %434)
  %436 = fmul double %432, 2.000000e+00
  %437 = call double @llvm.fma.f64(double %430, double %436, double %435)
  %438 = fadd double %433, %437
  %439 = fsub double %438, %433
  %440 = fsub double %437, %439
  %441 = call double @llvm.fma.f64(double %438, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %442 = call double @llvm.fma.f64(double %438, double %441, double 0x3FBE25E43ABE935A)
  %443 = call double @llvm.fma.f64(double %438, double %442, double 0x3FC110EF47E6C9C2)
  %444 = call double @llvm.fma.f64(double %438, double %443, double 0x3FC3B13BCFA74449)
  %445 = call double @llvm.fma.f64(double %438, double %444, double 0x3FC745D171BF3C30)
  %446 = call double @llvm.fma.f64(double %438, double %445, double 0x3FCC71C71C7792CE)
  %447 = call double @llvm.fma.f64(double %438, double %446, double 0x3FD24924924920DA)
  %448 = call double @llvm.fma.f64(double %438, double %447, double 0x3FD999999999999C)
  %449 = sitofp i32 %405 to double
  %450 = fmul double %449, 0x3FE62E42FEFA39EF
  %451 = fneg double %450
  %452 = call double @llvm.fma.f64(double %449, double 0x3FE62E42FEFA39EF, double %451)
  %453 = call double @llvm.fma.f64(double %449, double 0x3C7ABC9E3B39803F, double %452)
  %454 = fadd double %450, %453
  %455 = fsub double %454, %450
  %456 = fsub double %453, %455
  %457 = call double @llvm.ldexp.f64.i32(double %430, i32 1)
  %458 = call double @llvm.ldexp.f64.i32(double %432, i32 1)
  %459 = fmul double %430, %438
  %460 = fneg double %459
  %461 = call double @llvm.fma.f64(double %438, double %430, double %460)
  %462 = call double @llvm.fma.f64(double %438, double %432, double %461)
  %463 = call double @llvm.fma.f64(double %440, double %430, double %462)
  %464 = fadd double %459, %463
  %465 = fsub double %464, %459
  %466 = fsub double %463, %465
  %467 = fmul double %438, %448
  %468 = fneg double %467
  %469 = call double @llvm.fma.f64(double %438, double %448, double %468)
  %470 = call double @llvm.fma.f64(double %440, double %448, double %469)
  %471 = fadd double %467, %470
  %472 = fsub double %471, %467
  %473 = fsub double %470, %472
  %474 = fadd double %471, 0x3FE5555555555555
  %475 = fadd double %474, 0xBFE5555555555555
  %476 = fsub double %471, %475
  %477 = fadd double %473, 0x3C8543B0D5DF274D
  %478 = fadd double %477, %476
  %479 = fadd double %474, %478
  %480 = fsub double %474, %479
  %481 = fadd double %478, %480
  %482 = fmul double %464, %479
  %483 = fneg double %482
  %484 = call double @llvm.fma.f64(double %464, double %479, double %483)
  %485 = call double @llvm.fma.f64(double %464, double %481, double %484)
  %486 = call double @llvm.fma.f64(double %466, double %479, double %485)
  %487 = fadd double %482, %486
  %488 = fsub double %487, %482
  %489 = fsub double %486, %488
  %490 = fadd double %457, %487
  %491 = fsub double %490, %457
  %492 = fsub double %487, %491
  %493 = fadd double %458, %489
  %494 = fadd double %493, %492
  %495 = fadd double %490, %494
  %496 = fsub double %495, %490
  %497 = fsub double %494, %496
  %498 = fadd double %454, %495
  %499 = fsub double %498, %454
  %500 = fsub double %498, %499
  %501 = fsub double %454, %500
  %502 = fsub double %495, %499
  %503 = fadd double %502, %501
  %504 = fadd double %456, %497
  %505 = fsub double %504, %456
  %506 = fsub double %504, %505
  %507 = fsub double %456, %506
  %508 = fsub double %497, %505
  %509 = fadd double %508, %507
  %510 = fadd double %504, %503
  %511 = fadd double %498, %510
  %512 = fsub double %511, %498
  %513 = fsub double %510, %512
  %514 = fadd double %509, %513
  %515 = fadd double %511, %514
  %516 = fsub double %515, %511
  %517 = fsub double %514, %516
  %518 = fmul double %398, %515
  %519 = fneg double %518
  %520 = call double @llvm.fma.f64(double %398, double %515, double %519) #9
  %521 = call double @llvm.fma.f64(double %398, double %517, double %520) #9
  %522 = fadd double %518, %521
  %523 = fsub double %522, %518
  %524 = fsub double %521, %523
  %525 = call double @llvm.fabs.f64(double %518) #9
  %526 = fcmp oeq double %525, 0x7FF0000000000000
  %527 = select i1 %526, double %518, double %522
  %528 = call double @llvm.fabs.f64(double %527) #9
  %529 = fcmp oeq double %528, 0x7FF0000000000000
  %530 = select i1 %529, double 0.000000e+00, double %524
  %531 = fmul double %527, 0x3FF71547652B82FE
  %532 = call double @llvm.rint.f64(double %531)
  %533 = fneg double %532
  %534 = call double @llvm.fma.f64(double %533, double 0x3FE62E42FEFA39EF, double %527)
  %535 = call double @llvm.fma.f64(double %533, double 0x3C7ABC9E3B39803F, double %534)
  %536 = call double @llvm.fma.f64(double %535, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %537 = call double @llvm.fma.f64(double %535, double %536, double 0x3EC71DEE623FDE64)
  %538 = call double @llvm.fma.f64(double %535, double %537, double 0x3EFA01997C89E6B0)
  %539 = call double @llvm.fma.f64(double %535, double %538, double 0x3F2A01A014761F6E)
  %540 = call double @llvm.fma.f64(double %535, double %539, double 0x3F56C16C1852B7B0)
  %541 = call double @llvm.fma.f64(double %535, double %540, double 0x3F81111111122322)
  %542 = call double @llvm.fma.f64(double %535, double %541, double 0x3FA55555555502A1)
  %543 = call double @llvm.fma.f64(double %535, double %542, double 0x3FC5555555555511)
  %544 = call double @llvm.fma.f64(double %535, double %543, double 0x3FE000000000000B)
  %545 = call double @llvm.fma.f64(double %535, double %544, double 1.000000e+00)
  %546 = call double @llvm.fma.f64(double %535, double %545, double 1.000000e+00)
  %547 = fptosi double %532 to i32
  %548 = call double @llvm.ldexp.f64.i32(double %546, i32 %547)
  %549 = fcmp ogt double %527, 1.024000e+03
  %550 = select i1 %549, double 0x7FF0000000000000, double %548
  %551 = fcmp olt double %527, -1.075000e+03
  %552 = select i1 %551, double 0.000000e+00, double %550
  %553 = call double @llvm.fma.f64(double %552, double %530, double %552) #9
  %554 = call double @llvm.fabs.f64(double %552) #9
  %555 = fcmp oeq double %554, 0x7FF0000000000000
  %556 = select i1 %555, double %552, double %553
  %557 = call double @llvm.trunc.f64(double %398) #9
  %558 = fcmp oeq double %557, %398
  %559 = fmul double %398, 5.000000e-01
  %560 = call double @llvm.trunc.f64(double %559) #9
  %561 = fcmp une double %560, %559
  %562 = and i1 %558, %561
  %563 = select i1 %562, double %sub3.i.i.i, double 1.000000e+00
  %564 = call double @llvm.copysign.f64(double %556, double %563) #9
  %565 = fcmp olt double %sub3.i.i.i, 0.000000e+00
  %566 = select i1 %558, double %564, double 0x7FF8000000000000
  %567 = select i1 %565, double %566, double %564
  %568 = fcmp oeq double %399, 0x7FF0000000000000
  %569 = fcmp oeq double %sub3.i.i.i, 0.000000e+00
  %570 = or i1 %569, %568
  %571 = select i1 %569, double 0.000000e+00, double 0x7FF0000000000000
  %572 = select i1 %562, double %sub3.i.i.i, double 0.000000e+00
  %573 = call double @llvm.copysign.f64(double %571, double %572) #9
  %574 = select i1 %570, double %573, double %567
  %575 = fcmp uno double %sub3.i.i.i, 0.000000e+00
  %576 = select i1 %575, double 0x7FF8000000000000, double %574
  %add5.i.i.i = fadd double %576, %add.i.i.i
  %cmp.i.i.i = fcmp olt double %add5.i.i.i, 0x7FEFFFFFFFFFFFFF
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  store double %35, ptr addrspace(5) %r0, align 8, !tbaa !35
  store double %add.i.i, ptr addrspace(5) %9, align 8, !tbaa !37
  store double %add18.i.i, ptr addrspace(5) %10, align 8, !tbaa !38
  br label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i.i

_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %min_dist.2.i.i = phi double [ %add5.i.i.i, %if.then.i.i.i ], [ 0x7FEFFFFFFFFFFFFF, %if.then.i.i ]
  br i1 %cmp.i.i.i, label %if.then20.i.i, label %if.end21.i.i

if.then20.i.i:                                    ; preds = %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i.i
  store i32 1, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  br label %if.end21.i.i

if.end21.i.i:                                     ; preds = %if.then20.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i.i, %lor.lhs.false.i.i
  %min_dist.0.i.i = phi double [ %min_dist.2.i.i, %if.then20.i.i ], [ %min_dist.2.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i.i ], [ 0x7FEFFFFFFFFFFFFF, %lor.lhs.false.i.i ]
  %cmp22.i.i = fcmp olt double %32, %36
  %cmp24.i.i = fcmp ogt double %retval.sroa.0.0.copyload.i78, %36
  %or.cond4.i.i = select i1 %cmp22.i.i, i1 %cmp24.i.i, i1 false
  br i1 %or.cond4.i.i, label %if.then29.i.i, label %lor.lhs.false25.i.i

lor.lhs.false25.i.i:                              ; preds = %if.end21.i.i
  %cmp26.i.i = fcmp ogt double %32, %36
  %cmp28.i.i = fcmp olt double %retval.sroa.0.0.copyload.i78, %36
  %or.cond5.i.i = select i1 %cmp26.i.i, i1 %cmp28.i.i, i1 false
  br i1 %or.cond5.i.i, label %if.then29.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then29.i.i:                                    ; preds = %lor.lhs.false25.i.i, %if.end21.i.i
  %sub31.i.i = fsub double %36, %32
  %sub32.i.i = fsub double %retval.sroa.2.0.copyload.i80, %33
  %mul33.i.i = fmul double %sub32.i.i, %sub31.i.i
  %sub34.i.i = fsub double %retval.sroa.0.0.copyload.i78, %32
  %div35.i.i = fdiv double %mul33.i.i, %sub34.i.i
  %add36.i.i = fadd double %33, %div35.i.i
  %sub39.i.i = fsub double %retval.sroa.3.0.copyload.i82, %34
  %mul40.i.i = fmul double %sub39.i.i, %sub31.i.i
  %div42.i.i = fdiv double %mul40.i.i, %sub34.i.i
  %add43.i.i = fadd double %34, %div42.i.i
  %577 = fcmp oeq double %sub31.i.i, 1.000000e+00
  %578 = select i1 %577, double 1.000000e+00, double 2.000000e+00
  %579 = call double @llvm.fabs.f64(double %sub31.i.i) #9
  %580 = call double @llvm.amdgcn.frexp.mant.f64(double %579)
  %581 = fcmp olt double %580, 0x3FE5555555555555
  %.neg.i.i.i.i7.i.i = sext i1 %581 to i32
  %582 = select i1 %581, double 2.000000e+00, double 1.000000e+00
  %583 = fmul double %580, %582
  %584 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %579)
  %585 = add i32 %584, %.neg.i.i.i.i7.i.i
  %586 = fadd double %583, -1.000000e+00
  %587 = fadd double %583, 1.000000e+00
  %588 = fadd double %587, -1.000000e+00
  %589 = fsub double %583, %588
  %590 = call double @llvm.amdgcn.rcp.f64(double %587)
  %591 = fneg double %587
  %592 = call double @llvm.fma.f64(double %591, double %590, double 1.000000e+00)
  %593 = call double @llvm.fma.f64(double %592, double %590, double %590)
  %594 = call double @llvm.fma.f64(double %591, double %593, double 1.000000e+00)
  %595 = call double @llvm.fma.f64(double %594, double %593, double %593)
  %596 = fmul double %586, %595
  %597 = fmul double %587, %596
  %598 = fneg double %597
  %599 = call double @llvm.fma.f64(double %596, double %587, double %598)
  %600 = call double @llvm.fma.f64(double %596, double %589, double %599)
  %601 = fadd double %597, %600
  %602 = fsub double %601, %597
  %603 = fsub double %586, %601
  %604 = fsub double %586, %603
  %605 = fsub double %604, %601
  %606 = fsub double %602, %600
  %607 = fadd double %606, %605
  %608 = fadd double %603, %607
  %609 = fmul double %595, %608
  %610 = fadd double %596, %609
  %611 = fsub double %610, %596
  %612 = fsub double %609, %611
  %613 = fmul double %610, %610
  %614 = fneg double %613
  %615 = call double @llvm.fma.f64(double %610, double %610, double %614)
  %616 = fmul double %612, 2.000000e+00
  %617 = call double @llvm.fma.f64(double %610, double %616, double %615)
  %618 = fadd double %613, %617
  %619 = fsub double %618, %613
  %620 = fsub double %617, %619
  %621 = call double @llvm.fma.f64(double %618, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %622 = call double @llvm.fma.f64(double %618, double %621, double 0x3FBE25E43ABE935A)
  %623 = call double @llvm.fma.f64(double %618, double %622, double 0x3FC110EF47E6C9C2)
  %624 = call double @llvm.fma.f64(double %618, double %623, double 0x3FC3B13BCFA74449)
  %625 = call double @llvm.fma.f64(double %618, double %624, double 0x3FC745D171BF3C30)
  %626 = call double @llvm.fma.f64(double %618, double %625, double 0x3FCC71C71C7792CE)
  %627 = call double @llvm.fma.f64(double %618, double %626, double 0x3FD24924924920DA)
  %628 = call double @llvm.fma.f64(double %618, double %627, double 0x3FD999999999999C)
  %629 = sitofp i32 %585 to double
  %630 = fmul double %629, 0x3FE62E42FEFA39EF
  %631 = fneg double %630
  %632 = call double @llvm.fma.f64(double %629, double 0x3FE62E42FEFA39EF, double %631)
  %633 = call double @llvm.fma.f64(double %629, double 0x3C7ABC9E3B39803F, double %632)
  %634 = fadd double %630, %633
  %635 = fsub double %634, %630
  %636 = fsub double %633, %635
  %637 = call double @llvm.ldexp.f64.i32(double %610, i32 1)
  %638 = call double @llvm.ldexp.f64.i32(double %612, i32 1)
  %639 = fmul double %610, %618
  %640 = fneg double %639
  %641 = call double @llvm.fma.f64(double %618, double %610, double %640)
  %642 = call double @llvm.fma.f64(double %618, double %612, double %641)
  %643 = call double @llvm.fma.f64(double %620, double %610, double %642)
  %644 = fadd double %639, %643
  %645 = fsub double %644, %639
  %646 = fsub double %643, %645
  %647 = fmul double %618, %628
  %648 = fneg double %647
  %649 = call double @llvm.fma.f64(double %618, double %628, double %648)
  %650 = call double @llvm.fma.f64(double %620, double %628, double %649)
  %651 = fadd double %647, %650
  %652 = fsub double %651, %647
  %653 = fsub double %650, %652
  %654 = fadd double %651, 0x3FE5555555555555
  %655 = fadd double %654, 0xBFE5555555555555
  %656 = fsub double %651, %655
  %657 = fadd double %653, 0x3C8543B0D5DF274D
  %658 = fadd double %657, %656
  %659 = fadd double %654, %658
  %660 = fsub double %654, %659
  %661 = fadd double %658, %660
  %662 = fmul double %644, %659
  %663 = fneg double %662
  %664 = call double @llvm.fma.f64(double %644, double %659, double %663)
  %665 = call double @llvm.fma.f64(double %644, double %661, double %664)
  %666 = call double @llvm.fma.f64(double %646, double %659, double %665)
  %667 = fadd double %662, %666
  %668 = fsub double %667, %662
  %669 = fsub double %666, %668
  %670 = fadd double %637, %667
  %671 = fsub double %670, %637
  %672 = fsub double %667, %671
  %673 = fadd double %638, %669
  %674 = fadd double %673, %672
  %675 = fadd double %670, %674
  %676 = fsub double %675, %670
  %677 = fsub double %674, %676
  %678 = fadd double %634, %675
  %679 = fsub double %678, %634
  %680 = fsub double %678, %679
  %681 = fsub double %634, %680
  %682 = fsub double %675, %679
  %683 = fadd double %682, %681
  %684 = fadd double %636, %677
  %685 = fsub double %684, %636
  %686 = fsub double %684, %685
  %687 = fsub double %636, %686
  %688 = fsub double %677, %685
  %689 = fadd double %688, %687
  %690 = fadd double %684, %683
  %691 = fadd double %678, %690
  %692 = fsub double %691, %678
  %693 = fsub double %690, %692
  %694 = fadd double %689, %693
  %695 = fadd double %691, %694
  %696 = fsub double %695, %691
  %697 = fsub double %694, %696
  %698 = fmul double %578, %695
  %699 = fneg double %698
  %700 = call double @llvm.fma.f64(double %578, double %695, double %699) #9
  %701 = call double @llvm.fma.f64(double %578, double %697, double %700) #9
  %702 = fadd double %698, %701
  %703 = fsub double %702, %698
  %704 = fsub double %701, %703
  %705 = call double @llvm.fabs.f64(double %698) #9
  %706 = fcmp oeq double %705, 0x7FF0000000000000
  %707 = select i1 %706, double %698, double %702
  %708 = call double @llvm.fabs.f64(double %707) #9
  %709 = fcmp oeq double %708, 0x7FF0000000000000
  %710 = select i1 %709, double 0.000000e+00, double %704
  %711 = fmul double %707, 0x3FF71547652B82FE
  %712 = call double @llvm.rint.f64(double %711)
  %713 = fneg double %712
  %714 = call double @llvm.fma.f64(double %713, double 0x3FE62E42FEFA39EF, double %707)
  %715 = call double @llvm.fma.f64(double %713, double 0x3C7ABC9E3B39803F, double %714)
  %716 = call double @llvm.fma.f64(double %715, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %717 = call double @llvm.fma.f64(double %715, double %716, double 0x3EC71DEE623FDE64)
  %718 = call double @llvm.fma.f64(double %715, double %717, double 0x3EFA01997C89E6B0)
  %719 = call double @llvm.fma.f64(double %715, double %718, double 0x3F2A01A014761F6E)
  %720 = call double @llvm.fma.f64(double %715, double %719, double 0x3F56C16C1852B7B0)
  %721 = call double @llvm.fma.f64(double %715, double %720, double 0x3F81111111122322)
  %722 = call double @llvm.fma.f64(double %715, double %721, double 0x3FA55555555502A1)
  %723 = call double @llvm.fma.f64(double %715, double %722, double 0x3FC5555555555511)
  %724 = call double @llvm.fma.f64(double %715, double %723, double 0x3FE000000000000B)
  %725 = call double @llvm.fma.f64(double %715, double %724, double 1.000000e+00)
  %726 = call double @llvm.fma.f64(double %715, double %725, double 1.000000e+00)
  %727 = fptosi double %712 to i32
  %728 = call double @llvm.ldexp.f64.i32(double %726, i32 %727)
  %729 = fcmp ogt double %707, 1.024000e+03
  %730 = select i1 %729, double 0x7FF0000000000000, double %728
  %731 = fcmp olt double %707, -1.075000e+03
  %732 = select i1 %731, double 0.000000e+00, double %730
  %733 = call double @llvm.fma.f64(double %732, double %710, double %732) #9
  %734 = call double @llvm.fabs.f64(double %732) #9
  %735 = fcmp oeq double %734, 0x7FF0000000000000
  %736 = select i1 %735, double %732, double %733
  %737 = call double @llvm.trunc.f64(double %578) #9
  %738 = fcmp oeq double %737, %578
  %739 = fmul double %578, 5.000000e-01
  %740 = call double @llvm.trunc.f64(double %739) #9
  %741 = fcmp une double %740, %739
  %742 = and i1 %738, %741
  %743 = select i1 %742, double %sub31.i.i, double 1.000000e+00
  %744 = call double @llvm.copysign.f64(double %736, double %743) #9
  %745 = fcmp olt double %sub31.i.i, 0.000000e+00
  %746 = select i1 %738, double %744, double 0x7FF8000000000000
  %747 = select i1 %745, double %746, double %744
  %748 = fcmp oeq double %579, 0x7FF0000000000000
  %749 = fcmp oeq double %sub31.i.i, 0.000000e+00
  %750 = or i1 %749, %748
  %751 = select i1 %749, double 0.000000e+00, double 0x7FF0000000000000
  %752 = select i1 %742, double %sub31.i.i, double 0.000000e+00
  %753 = call double @llvm.copysign.f64(double %751, double %752) #9
  %754 = select i1 %750, double %753, double %747
  %755 = fcmp uno double %sub31.i.i, 0.000000e+00
  %756 = select i1 %755, double 0x7FF8000000000000, double %754
  %sub1.i8.i.i = fsub double %add36.i.i, %add36.i.i
  %757 = fcmp oeq double %sub1.i8.i.i, 1.000000e+00
  %758 = select i1 %757, double 1.000000e+00, double 2.000000e+00
  %759 = call double @llvm.fabs.f64(double %sub1.i8.i.i) #9
  %760 = call double @llvm.amdgcn.frexp.mant.f64(double %759)
  %761 = fcmp olt double %760, 0x3FE5555555555555
  %.neg.i.i.i1.i9.i.i = sext i1 %761 to i32
  %762 = select i1 %761, double 2.000000e+00, double 1.000000e+00
  %763 = fmul double %760, %762
  %764 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %759)
  %765 = add i32 %764, %.neg.i.i.i1.i9.i.i
  %766 = fadd double %763, -1.000000e+00
  %767 = fadd double %763, 1.000000e+00
  %768 = fadd double %767, -1.000000e+00
  %769 = fsub double %763, %768
  %770 = call double @llvm.amdgcn.rcp.f64(double %767)
  %771 = fneg double %767
  %772 = call double @llvm.fma.f64(double %771, double %770, double 1.000000e+00)
  %773 = call double @llvm.fma.f64(double %772, double %770, double %770)
  %774 = call double @llvm.fma.f64(double %771, double %773, double 1.000000e+00)
  %775 = call double @llvm.fma.f64(double %774, double %773, double %773)
  %776 = fmul double %766, %775
  %777 = fmul double %767, %776
  %778 = fneg double %777
  %779 = call double @llvm.fma.f64(double %776, double %767, double %778)
  %780 = call double @llvm.fma.f64(double %776, double %769, double %779)
  %781 = fadd double %777, %780
  %782 = fsub double %781, %777
  %783 = fsub double %766, %781
  %784 = fsub double %766, %783
  %785 = fsub double %784, %781
  %786 = fsub double %782, %780
  %787 = fadd double %786, %785
  %788 = fadd double %783, %787
  %789 = fmul double %775, %788
  %790 = fadd double %776, %789
  %791 = fsub double %790, %776
  %792 = fsub double %789, %791
  %793 = fmul double %790, %790
  %794 = fneg double %793
  %795 = call double @llvm.fma.f64(double %790, double %790, double %794)
  %796 = fmul double %792, 2.000000e+00
  %797 = call double @llvm.fma.f64(double %790, double %796, double %795)
  %798 = fadd double %793, %797
  %799 = fsub double %798, %793
  %800 = fsub double %797, %799
  %801 = call double @llvm.fma.f64(double %798, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %802 = call double @llvm.fma.f64(double %798, double %801, double 0x3FBE25E43ABE935A)
  %803 = call double @llvm.fma.f64(double %798, double %802, double 0x3FC110EF47E6C9C2)
  %804 = call double @llvm.fma.f64(double %798, double %803, double 0x3FC3B13BCFA74449)
  %805 = call double @llvm.fma.f64(double %798, double %804, double 0x3FC745D171BF3C30)
  %806 = call double @llvm.fma.f64(double %798, double %805, double 0x3FCC71C71C7792CE)
  %807 = call double @llvm.fma.f64(double %798, double %806, double 0x3FD24924924920DA)
  %808 = call double @llvm.fma.f64(double %798, double %807, double 0x3FD999999999999C)
  %809 = sitofp i32 %765 to double
  %810 = fmul double %809, 0x3FE62E42FEFA39EF
  %811 = fneg double %810
  %812 = call double @llvm.fma.f64(double %809, double 0x3FE62E42FEFA39EF, double %811)
  %813 = call double @llvm.fma.f64(double %809, double 0x3C7ABC9E3B39803F, double %812)
  %814 = fadd double %810, %813
  %815 = fsub double %814, %810
  %816 = fsub double %813, %815
  %817 = call double @llvm.ldexp.f64.i32(double %790, i32 1)
  %818 = call double @llvm.ldexp.f64.i32(double %792, i32 1)
  %819 = fmul double %790, %798
  %820 = fneg double %819
  %821 = call double @llvm.fma.f64(double %798, double %790, double %820)
  %822 = call double @llvm.fma.f64(double %798, double %792, double %821)
  %823 = call double @llvm.fma.f64(double %800, double %790, double %822)
  %824 = fadd double %819, %823
  %825 = fsub double %824, %819
  %826 = fsub double %823, %825
  %827 = fmul double %798, %808
  %828 = fneg double %827
  %829 = call double @llvm.fma.f64(double %798, double %808, double %828)
  %830 = call double @llvm.fma.f64(double %800, double %808, double %829)
  %831 = fadd double %827, %830
  %832 = fsub double %831, %827
  %833 = fsub double %830, %832
  %834 = fadd double %831, 0x3FE5555555555555
  %835 = fadd double %834, 0xBFE5555555555555
  %836 = fsub double %831, %835
  %837 = fadd double %833, 0x3C8543B0D5DF274D
  %838 = fadd double %837, %836
  %839 = fadd double %834, %838
  %840 = fsub double %834, %839
  %841 = fadd double %838, %840
  %842 = fmul double %824, %839
  %843 = fneg double %842
  %844 = call double @llvm.fma.f64(double %824, double %839, double %843)
  %845 = call double @llvm.fma.f64(double %824, double %841, double %844)
  %846 = call double @llvm.fma.f64(double %826, double %839, double %845)
  %847 = fadd double %842, %846
  %848 = fsub double %847, %842
  %849 = fsub double %846, %848
  %850 = fadd double %817, %847
  %851 = fsub double %850, %817
  %852 = fsub double %847, %851
  %853 = fadd double %818, %849
  %854 = fadd double %853, %852
  %855 = fadd double %850, %854
  %856 = fsub double %855, %850
  %857 = fsub double %854, %856
  %858 = fadd double %814, %855
  %859 = fsub double %858, %814
  %860 = fsub double %858, %859
  %861 = fsub double %814, %860
  %862 = fsub double %855, %859
  %863 = fadd double %862, %861
  %864 = fadd double %816, %857
  %865 = fsub double %864, %816
  %866 = fsub double %864, %865
  %867 = fsub double %816, %866
  %868 = fsub double %857, %865
  %869 = fadd double %868, %867
  %870 = fadd double %864, %863
  %871 = fadd double %858, %870
  %872 = fsub double %871, %858
  %873 = fsub double %870, %872
  %874 = fadd double %869, %873
  %875 = fadd double %871, %874
  %876 = fsub double %875, %871
  %877 = fsub double %874, %876
  %878 = fmul double %758, %875
  %879 = fneg double %878
  %880 = call double @llvm.fma.f64(double %758, double %875, double %879) #9
  %881 = call double @llvm.fma.f64(double %758, double %877, double %880) #9
  %882 = fadd double %878, %881
  %883 = fsub double %882, %878
  %884 = fsub double %881, %883
  %885 = call double @llvm.fabs.f64(double %878) #9
  %886 = fcmp oeq double %885, 0x7FF0000000000000
  %887 = select i1 %886, double %878, double %882
  %888 = call double @llvm.fabs.f64(double %887) #9
  %889 = fcmp oeq double %888, 0x7FF0000000000000
  %890 = select i1 %889, double 0.000000e+00, double %884
  %891 = fmul double %887, 0x3FF71547652B82FE
  %892 = call double @llvm.rint.f64(double %891)
  %893 = fneg double %892
  %894 = call double @llvm.fma.f64(double %893, double 0x3FE62E42FEFA39EF, double %887)
  %895 = call double @llvm.fma.f64(double %893, double 0x3C7ABC9E3B39803F, double %894)
  %896 = call double @llvm.fma.f64(double %895, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %897 = call double @llvm.fma.f64(double %895, double %896, double 0x3EC71DEE623FDE64)
  %898 = call double @llvm.fma.f64(double %895, double %897, double 0x3EFA01997C89E6B0)
  %899 = call double @llvm.fma.f64(double %895, double %898, double 0x3F2A01A014761F6E)
  %900 = call double @llvm.fma.f64(double %895, double %899, double 0x3F56C16C1852B7B0)
  %901 = call double @llvm.fma.f64(double %895, double %900, double 0x3F81111111122322)
  %902 = call double @llvm.fma.f64(double %895, double %901, double 0x3FA55555555502A1)
  %903 = call double @llvm.fma.f64(double %895, double %902, double 0x3FC5555555555511)
  %904 = call double @llvm.fma.f64(double %895, double %903, double 0x3FE000000000000B)
  %905 = call double @llvm.fma.f64(double %895, double %904, double 1.000000e+00)
  %906 = call double @llvm.fma.f64(double %895, double %905, double 1.000000e+00)
  %907 = fptosi double %892 to i32
  %908 = call double @llvm.ldexp.f64.i32(double %906, i32 %907)
  %909 = fcmp ogt double %887, 1.024000e+03
  %910 = select i1 %909, double 0x7FF0000000000000, double %908
  %911 = fcmp olt double %887, -1.075000e+03
  %912 = select i1 %911, double 0.000000e+00, double %910
  %913 = call double @llvm.fma.f64(double %912, double %890, double %912) #9
  %914 = call double @llvm.fabs.f64(double %912) #9
  %915 = fcmp oeq double %914, 0x7FF0000000000000
  %916 = select i1 %915, double %912, double %913
  %917 = call double @llvm.trunc.f64(double %758) #9
  %918 = fcmp oeq double %917, %758
  %919 = fmul double %758, 5.000000e-01
  %920 = call double @llvm.trunc.f64(double %919) #9
  %921 = fcmp une double %920, %919
  %922 = and i1 %918, %921
  %923 = select i1 %922, double %sub1.i8.i.i, double 1.000000e+00
  %924 = call double @llvm.copysign.f64(double %916, double %923) #9
  %925 = fcmp olt double %sub1.i8.i.i, 0.000000e+00
  %926 = select i1 %918, double %924, double 0x7FF8000000000000
  %927 = select i1 %925, double %926, double %924
  %928 = fcmp oeq double %759, 0x7FF0000000000000
  %929 = fcmp oeq double %sub1.i8.i.i, 0.000000e+00
  %930 = or i1 %929, %928
  %931 = select i1 %929, double 0.000000e+00, double 0x7FF0000000000000
  %932 = select i1 %922, double %sub1.i8.i.i, double 0.000000e+00
  %933 = call double @llvm.copysign.f64(double %931, double %932) #9
  %934 = select i1 %930, double %933, double %927
  %935 = fcmp uno double %sub1.i8.i.i, 0.000000e+00
  %936 = select i1 %935, double 0x7FF8000000000000, double %934
  %add.i10.i.i = fadd double %756, %936
  %sub3.i11.i.i = fsub double %add43.i.i, %add43.i.i
  %937 = fcmp oeq double %sub3.i11.i.i, 1.000000e+00
  %938 = select i1 %937, double 1.000000e+00, double 2.000000e+00
  %939 = call double @llvm.fabs.f64(double %sub3.i11.i.i) #9
  %940 = call double @llvm.amdgcn.frexp.mant.f64(double %939)
  %941 = fcmp olt double %940, 0x3FE5555555555555
  %.neg.i.i.i2.i12.i.i = sext i1 %941 to i32
  %942 = select i1 %941, double 2.000000e+00, double 1.000000e+00
  %943 = fmul double %940, %942
  %944 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %939)
  %945 = add i32 %944, %.neg.i.i.i2.i12.i.i
  %946 = fadd double %943, -1.000000e+00
  %947 = fadd double %943, 1.000000e+00
  %948 = fadd double %947, -1.000000e+00
  %949 = fsub double %943, %948
  %950 = call double @llvm.amdgcn.rcp.f64(double %947)
  %951 = fneg double %947
  %952 = call double @llvm.fma.f64(double %951, double %950, double 1.000000e+00)
  %953 = call double @llvm.fma.f64(double %952, double %950, double %950)
  %954 = call double @llvm.fma.f64(double %951, double %953, double 1.000000e+00)
  %955 = call double @llvm.fma.f64(double %954, double %953, double %953)
  %956 = fmul double %946, %955
  %957 = fmul double %947, %956
  %958 = fneg double %957
  %959 = call double @llvm.fma.f64(double %956, double %947, double %958)
  %960 = call double @llvm.fma.f64(double %956, double %949, double %959)
  %961 = fadd double %957, %960
  %962 = fsub double %961, %957
  %963 = fsub double %946, %961
  %964 = fsub double %946, %963
  %965 = fsub double %964, %961
  %966 = fsub double %962, %960
  %967 = fadd double %966, %965
  %968 = fadd double %963, %967
  %969 = fmul double %955, %968
  %970 = fadd double %956, %969
  %971 = fsub double %970, %956
  %972 = fsub double %969, %971
  %973 = fmul double %970, %970
  %974 = fneg double %973
  %975 = call double @llvm.fma.f64(double %970, double %970, double %974)
  %976 = fmul double %972, 2.000000e+00
  %977 = call double @llvm.fma.f64(double %970, double %976, double %975)
  %978 = fadd double %973, %977
  %979 = fsub double %978, %973
  %980 = fsub double %977, %979
  %981 = call double @llvm.fma.f64(double %978, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %982 = call double @llvm.fma.f64(double %978, double %981, double 0x3FBE25E43ABE935A)
  %983 = call double @llvm.fma.f64(double %978, double %982, double 0x3FC110EF47E6C9C2)
  %984 = call double @llvm.fma.f64(double %978, double %983, double 0x3FC3B13BCFA74449)
  %985 = call double @llvm.fma.f64(double %978, double %984, double 0x3FC745D171BF3C30)
  %986 = call double @llvm.fma.f64(double %978, double %985, double 0x3FCC71C71C7792CE)
  %987 = call double @llvm.fma.f64(double %978, double %986, double 0x3FD24924924920DA)
  %988 = call double @llvm.fma.f64(double %978, double %987, double 0x3FD999999999999C)
  %989 = sitofp i32 %945 to double
  %990 = fmul double %989, 0x3FE62E42FEFA39EF
  %991 = fneg double %990
  %992 = call double @llvm.fma.f64(double %989, double 0x3FE62E42FEFA39EF, double %991)
  %993 = call double @llvm.fma.f64(double %989, double 0x3C7ABC9E3B39803F, double %992)
  %994 = fadd double %990, %993
  %995 = fsub double %994, %990
  %996 = fsub double %993, %995
  %997 = call double @llvm.ldexp.f64.i32(double %970, i32 1)
  %998 = call double @llvm.ldexp.f64.i32(double %972, i32 1)
  %999 = fmul double %970, %978
  %1000 = fneg double %999
  %1001 = call double @llvm.fma.f64(double %978, double %970, double %1000)
  %1002 = call double @llvm.fma.f64(double %978, double %972, double %1001)
  %1003 = call double @llvm.fma.f64(double %980, double %970, double %1002)
  %1004 = fadd double %999, %1003
  %1005 = fsub double %1004, %999
  %1006 = fsub double %1003, %1005
  %1007 = fmul double %978, %988
  %1008 = fneg double %1007
  %1009 = call double @llvm.fma.f64(double %978, double %988, double %1008)
  %1010 = call double @llvm.fma.f64(double %980, double %988, double %1009)
  %1011 = fadd double %1007, %1010
  %1012 = fsub double %1011, %1007
  %1013 = fsub double %1010, %1012
  %1014 = fadd double %1011, 0x3FE5555555555555
  %1015 = fadd double %1014, 0xBFE5555555555555
  %1016 = fsub double %1011, %1015
  %1017 = fadd double %1013, 0x3C8543B0D5DF274D
  %1018 = fadd double %1017, %1016
  %1019 = fadd double %1014, %1018
  %1020 = fsub double %1014, %1019
  %1021 = fadd double %1018, %1020
  %1022 = fmul double %1004, %1019
  %1023 = fneg double %1022
  %1024 = call double @llvm.fma.f64(double %1004, double %1019, double %1023)
  %1025 = call double @llvm.fma.f64(double %1004, double %1021, double %1024)
  %1026 = call double @llvm.fma.f64(double %1006, double %1019, double %1025)
  %1027 = fadd double %1022, %1026
  %1028 = fsub double %1027, %1022
  %1029 = fsub double %1026, %1028
  %1030 = fadd double %997, %1027
  %1031 = fsub double %1030, %997
  %1032 = fsub double %1027, %1031
  %1033 = fadd double %998, %1029
  %1034 = fadd double %1033, %1032
  %1035 = fadd double %1030, %1034
  %1036 = fsub double %1035, %1030
  %1037 = fsub double %1034, %1036
  %1038 = fadd double %994, %1035
  %1039 = fsub double %1038, %994
  %1040 = fsub double %1038, %1039
  %1041 = fsub double %994, %1040
  %1042 = fsub double %1035, %1039
  %1043 = fadd double %1042, %1041
  %1044 = fadd double %996, %1037
  %1045 = fsub double %1044, %996
  %1046 = fsub double %1044, %1045
  %1047 = fsub double %996, %1046
  %1048 = fsub double %1037, %1045
  %1049 = fadd double %1048, %1047
  %1050 = fadd double %1044, %1043
  %1051 = fadd double %1038, %1050
  %1052 = fsub double %1051, %1038
  %1053 = fsub double %1050, %1052
  %1054 = fadd double %1049, %1053
  %1055 = fadd double %1051, %1054
  %1056 = fsub double %1055, %1051
  %1057 = fsub double %1054, %1056
  %1058 = fmul double %938, %1055
  %1059 = fneg double %1058
  %1060 = call double @llvm.fma.f64(double %938, double %1055, double %1059) #9
  %1061 = call double @llvm.fma.f64(double %938, double %1057, double %1060) #9
  %1062 = fadd double %1058, %1061
  %1063 = fsub double %1062, %1058
  %1064 = fsub double %1061, %1063
  %1065 = call double @llvm.fabs.f64(double %1058) #9
  %1066 = fcmp oeq double %1065, 0x7FF0000000000000
  %1067 = select i1 %1066, double %1058, double %1062
  %1068 = call double @llvm.fabs.f64(double %1067) #9
  %1069 = fcmp oeq double %1068, 0x7FF0000000000000
  %1070 = select i1 %1069, double 0.000000e+00, double %1064
  %1071 = fmul double %1067, 0x3FF71547652B82FE
  %1072 = call double @llvm.rint.f64(double %1071)
  %1073 = fneg double %1072
  %1074 = call double @llvm.fma.f64(double %1073, double 0x3FE62E42FEFA39EF, double %1067)
  %1075 = call double @llvm.fma.f64(double %1073, double 0x3C7ABC9E3B39803F, double %1074)
  %1076 = call double @llvm.fma.f64(double %1075, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1077 = call double @llvm.fma.f64(double %1075, double %1076, double 0x3EC71DEE623FDE64)
  %1078 = call double @llvm.fma.f64(double %1075, double %1077, double 0x3EFA01997C89E6B0)
  %1079 = call double @llvm.fma.f64(double %1075, double %1078, double 0x3F2A01A014761F6E)
  %1080 = call double @llvm.fma.f64(double %1075, double %1079, double 0x3F56C16C1852B7B0)
  %1081 = call double @llvm.fma.f64(double %1075, double %1080, double 0x3F81111111122322)
  %1082 = call double @llvm.fma.f64(double %1075, double %1081, double 0x3FA55555555502A1)
  %1083 = call double @llvm.fma.f64(double %1075, double %1082, double 0x3FC5555555555511)
  %1084 = call double @llvm.fma.f64(double %1075, double %1083, double 0x3FE000000000000B)
  %1085 = call double @llvm.fma.f64(double %1075, double %1084, double 1.000000e+00)
  %1086 = call double @llvm.fma.f64(double %1075, double %1085, double 1.000000e+00)
  %1087 = fptosi double %1072 to i32
  %1088 = call double @llvm.ldexp.f64.i32(double %1086, i32 %1087)
  %1089 = fcmp ogt double %1067, 1.024000e+03
  %1090 = select i1 %1089, double 0x7FF0000000000000, double %1088
  %1091 = fcmp olt double %1067, -1.075000e+03
  %1092 = select i1 %1091, double 0.000000e+00, double %1090
  %1093 = call double @llvm.fma.f64(double %1092, double %1070, double %1092) #9
  %1094 = call double @llvm.fabs.f64(double %1092) #9
  %1095 = fcmp oeq double %1094, 0x7FF0000000000000
  %1096 = select i1 %1095, double %1092, double %1093
  %1097 = call double @llvm.trunc.f64(double %938) #9
  %1098 = fcmp oeq double %1097, %938
  %1099 = fmul double %938, 5.000000e-01
  %1100 = call double @llvm.trunc.f64(double %1099) #9
  %1101 = fcmp une double %1100, %1099
  %1102 = and i1 %1098, %1101
  %1103 = select i1 %1102, double %sub3.i11.i.i, double 1.000000e+00
  %1104 = call double @llvm.copysign.f64(double %1096, double %1103) #9
  %1105 = fcmp olt double %sub3.i11.i.i, 0.000000e+00
  %1106 = select i1 %1098, double %1104, double 0x7FF8000000000000
  %1107 = select i1 %1105, double %1106, double %1104
  %1108 = fcmp oeq double %939, 0x7FF0000000000000
  %1109 = fcmp oeq double %sub3.i11.i.i, 0.000000e+00
  %1110 = or i1 %1109, %1108
  %1111 = select i1 %1109, double 0.000000e+00, double 0x7FF0000000000000
  %1112 = select i1 %1102, double %sub3.i11.i.i, double 0.000000e+00
  %1113 = call double @llvm.copysign.f64(double %1111, double %1112) #9
  %1114 = select i1 %1110, double %1113, double %1107
  %1115 = fcmp uno double %sub3.i11.i.i, 0.000000e+00
  %1116 = select i1 %1115, double 0x7FF8000000000000, double %1114
  %add5.i13.i.i = fadd double %1116, %add.i10.i.i
  %cmp.i14.i.i = fcmp olt double %add5.i13.i.i, %min_dist.0.i.i
  br i1 %cmp.i14.i.i, label %if.then.i15.i.i, label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit18.i.i

if.then.i15.i.i:                                  ; preds = %if.then29.i.i
  store double %36, ptr addrspace(5) %r0, align 8, !tbaa !35
  store double %add36.i.i, ptr addrspace(5) %9, align 8, !tbaa !37
  store double %add43.i.i, ptr addrspace(5) %10, align 8, !tbaa !38
  br label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit18.i.i

_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit18.i.i: ; preds = %if.then.i15.i.i, %if.then29.i.i
  %min_dist.3.i.i = phi double [ %add5.i13.i.i, %if.then.i15.i.i ], [ %min_dist.0.i.i, %if.then29.i.i ]
  br i1 %cmp.i14.i.i, label %if.then45.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then45.i.i:                                    ; preds = %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit18.i.i
  %shape_.i.i = getelementptr inbounds nuw i8, ptr %this, i64 56
  %shape_.val.i.i = load ptr, ptr %shape_.i.i, align 8, !tbaa !32
  %1117 = load i32, ptr %shape_.val.i.i, align 4, !tbaa !31
  store i32 %1117, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  br label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

sw.bb3.i:                                         ; preds = %if.else
  %arrayidx.i.i.i118 = getelementptr inbounds nuw i8, ptr %lower_left_.val.i.i, i64 8
  %1118 = load double, ptr %arrayidx.i.i.i118, align 8, !tbaa !30
  %upper_right_.i5.i = getelementptr inbounds nuw i8, ptr %this, i64 32
  %upper_right_.val.i6.i = load ptr, ptr %upper_right_.i5.i, align 8, !tbaa !29
  %1119 = load double, ptr %upper_right_.val.i6.i, align 8, !tbaa !30
  %arrayidx.i28.i.i = getelementptr inbounds nuw i8, ptr %upper_right_.val.i6.i, i64 8
  %1120 = load double, ptr %arrayidx.i28.i.i, align 8, !tbaa !30
  %cmp.i7.i = fcmp olt double %32, %35
  %cmp11.i.i = fcmp ogt double %retval.sroa.0.0.copyload.i78, %35
  %or.cond.i8.i = select i1 %cmp.i7.i, i1 %cmp11.i.i, i1 false
  br i1 %or.cond.i8.i, label %if.then.i16.i, label %lor.lhs.false.i9.i

lor.lhs.false.i9.i:                               ; preds = %sw.bb3.i
  %cmp12.i.i = fcmp ogt double %32, %35
  %cmp14.i.i = fcmp olt double %retval.sroa.0.0.copyload.i78, %35
  %or.cond7.i.i = select i1 %cmp12.i.i, i1 %cmp14.i.i, i1 false
  br i1 %or.cond7.i.i, label %if.then.i16.i, label %if.end32.i.i

if.then.i16.i:                                    ; preds = %lor.lhs.false.i9.i, %sw.bb3.i
  %sub.i17.i = fsub double %35, %32
  %sub15.i.i = fsub double %retval.sroa.2.0.copyload.i80, %33
  %mul.i18.i = fmul double %sub15.i.i, %sub.i17.i
  %sub16.i.i = fsub double %retval.sroa.0.0.copyload.i78, %32
  %div.i19.i = fdiv double %mul.i18.i, %sub16.i.i
  %add.i20.i = fadd double %33, %div.i19.i
  %sub18.i.i = fsub double %retval.sroa.3.0.copyload.i82, %34
  %mul19.i.i = fmul double %sub18.i.i, %sub.i17.i
  %div21.i.i = fdiv double %mul19.i.i, %sub16.i.i
  %add22.i.i = fadd double %34, %div21.i.i
  %cmp23.i.i = fcmp oge double %add.i20.i, %1118
  %cmp25.i.i = fcmp olt double %add.i20.i, %1120
  %or.cond8.i.i = select i1 %cmp23.i.i, i1 %cmp25.i.i, i1 false
  br i1 %or.cond8.i.i, label %if.then26.i.i, label %if.end32.i.i

if.then26.i.i:                                    ; preds = %if.then.i16.i
  %1121 = fcmp oeq double %sub.i17.i, 1.000000e+00
  %1122 = select i1 %1121, double 1.000000e+00, double 2.000000e+00
  %1123 = call double @llvm.fabs.f64(double %sub.i17.i) #9
  %1124 = call double @llvm.amdgcn.frexp.mant.f64(double %1123)
  %1125 = fcmp olt double %1124, 0x3FE5555555555555
  %.neg.i.i.i.i.i21.i = sext i1 %1125 to i32
  %1126 = select i1 %1125, double 2.000000e+00, double 1.000000e+00
  %1127 = fmul double %1124, %1126
  %1128 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %1123)
  %1129 = add i32 %1128, %.neg.i.i.i.i.i21.i
  %1130 = fadd double %1127, -1.000000e+00
  %1131 = fadd double %1127, 1.000000e+00
  %1132 = fadd double %1131, -1.000000e+00
  %1133 = fsub double %1127, %1132
  %1134 = call double @llvm.amdgcn.rcp.f64(double %1131)
  %1135 = fneg double %1131
  %1136 = call double @llvm.fma.f64(double %1135, double %1134, double 1.000000e+00)
  %1137 = call double @llvm.fma.f64(double %1136, double %1134, double %1134)
  %1138 = call double @llvm.fma.f64(double %1135, double %1137, double 1.000000e+00)
  %1139 = call double @llvm.fma.f64(double %1138, double %1137, double %1137)
  %1140 = fmul double %1130, %1139
  %1141 = fmul double %1131, %1140
  %1142 = fneg double %1141
  %1143 = call double @llvm.fma.f64(double %1140, double %1131, double %1142)
  %1144 = call double @llvm.fma.f64(double %1140, double %1133, double %1143)
  %1145 = fadd double %1141, %1144
  %1146 = fsub double %1145, %1141
  %1147 = fsub double %1130, %1145
  %1148 = fsub double %1130, %1147
  %1149 = fsub double %1148, %1145
  %1150 = fsub double %1146, %1144
  %1151 = fadd double %1150, %1149
  %1152 = fadd double %1147, %1151
  %1153 = fmul double %1139, %1152
  %1154 = fadd double %1140, %1153
  %1155 = fsub double %1154, %1140
  %1156 = fsub double %1153, %1155
  %1157 = fmul double %1154, %1154
  %1158 = fneg double %1157
  %1159 = call double @llvm.fma.f64(double %1154, double %1154, double %1158)
  %1160 = fmul double %1156, 2.000000e+00
  %1161 = call double @llvm.fma.f64(double %1154, double %1160, double %1159)
  %1162 = fadd double %1157, %1161
  %1163 = fsub double %1162, %1157
  %1164 = fsub double %1161, %1163
  %1165 = call double @llvm.fma.f64(double %1162, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1166 = call double @llvm.fma.f64(double %1162, double %1165, double 0x3FBE25E43ABE935A)
  %1167 = call double @llvm.fma.f64(double %1162, double %1166, double 0x3FC110EF47E6C9C2)
  %1168 = call double @llvm.fma.f64(double %1162, double %1167, double 0x3FC3B13BCFA74449)
  %1169 = call double @llvm.fma.f64(double %1162, double %1168, double 0x3FC745D171BF3C30)
  %1170 = call double @llvm.fma.f64(double %1162, double %1169, double 0x3FCC71C71C7792CE)
  %1171 = call double @llvm.fma.f64(double %1162, double %1170, double 0x3FD24924924920DA)
  %1172 = call double @llvm.fma.f64(double %1162, double %1171, double 0x3FD999999999999C)
  %1173 = sitofp i32 %1129 to double
  %1174 = fmul double %1173, 0x3FE62E42FEFA39EF
  %1175 = fneg double %1174
  %1176 = call double @llvm.fma.f64(double %1173, double 0x3FE62E42FEFA39EF, double %1175)
  %1177 = call double @llvm.fma.f64(double %1173, double 0x3C7ABC9E3B39803F, double %1176)
  %1178 = fadd double %1174, %1177
  %1179 = fsub double %1178, %1174
  %1180 = fsub double %1177, %1179
  %1181 = call double @llvm.ldexp.f64.i32(double %1154, i32 1)
  %1182 = call double @llvm.ldexp.f64.i32(double %1156, i32 1)
  %1183 = fmul double %1154, %1162
  %1184 = fneg double %1183
  %1185 = call double @llvm.fma.f64(double %1162, double %1154, double %1184)
  %1186 = call double @llvm.fma.f64(double %1162, double %1156, double %1185)
  %1187 = call double @llvm.fma.f64(double %1164, double %1154, double %1186)
  %1188 = fadd double %1183, %1187
  %1189 = fsub double %1188, %1183
  %1190 = fsub double %1187, %1189
  %1191 = fmul double %1162, %1172
  %1192 = fneg double %1191
  %1193 = call double @llvm.fma.f64(double %1162, double %1172, double %1192)
  %1194 = call double @llvm.fma.f64(double %1164, double %1172, double %1193)
  %1195 = fadd double %1191, %1194
  %1196 = fsub double %1195, %1191
  %1197 = fsub double %1194, %1196
  %1198 = fadd double %1195, 0x3FE5555555555555
  %1199 = fadd double %1198, 0xBFE5555555555555
  %1200 = fsub double %1195, %1199
  %1201 = fadd double %1197, 0x3C8543B0D5DF274D
  %1202 = fadd double %1201, %1200
  %1203 = fadd double %1198, %1202
  %1204 = fsub double %1198, %1203
  %1205 = fadd double %1202, %1204
  %1206 = fmul double %1188, %1203
  %1207 = fneg double %1206
  %1208 = call double @llvm.fma.f64(double %1188, double %1203, double %1207)
  %1209 = call double @llvm.fma.f64(double %1188, double %1205, double %1208)
  %1210 = call double @llvm.fma.f64(double %1190, double %1203, double %1209)
  %1211 = fadd double %1206, %1210
  %1212 = fsub double %1211, %1206
  %1213 = fsub double %1210, %1212
  %1214 = fadd double %1181, %1211
  %1215 = fsub double %1214, %1181
  %1216 = fsub double %1211, %1215
  %1217 = fadd double %1182, %1213
  %1218 = fadd double %1217, %1216
  %1219 = fadd double %1214, %1218
  %1220 = fsub double %1219, %1214
  %1221 = fsub double %1218, %1220
  %1222 = fadd double %1178, %1219
  %1223 = fsub double %1222, %1178
  %1224 = fsub double %1222, %1223
  %1225 = fsub double %1178, %1224
  %1226 = fsub double %1219, %1223
  %1227 = fadd double %1226, %1225
  %1228 = fadd double %1180, %1221
  %1229 = fsub double %1228, %1180
  %1230 = fsub double %1228, %1229
  %1231 = fsub double %1180, %1230
  %1232 = fsub double %1221, %1229
  %1233 = fadd double %1232, %1231
  %1234 = fadd double %1228, %1227
  %1235 = fadd double %1222, %1234
  %1236 = fsub double %1235, %1222
  %1237 = fsub double %1234, %1236
  %1238 = fadd double %1233, %1237
  %1239 = fadd double %1235, %1238
  %1240 = fsub double %1239, %1235
  %1241 = fsub double %1238, %1240
  %1242 = fmul double %1122, %1239
  %1243 = fneg double %1242
  %1244 = call double @llvm.fma.f64(double %1122, double %1239, double %1243) #9
  %1245 = call double @llvm.fma.f64(double %1122, double %1241, double %1244) #9
  %1246 = fadd double %1242, %1245
  %1247 = fsub double %1246, %1242
  %1248 = fsub double %1245, %1247
  %1249 = call double @llvm.fabs.f64(double %1242) #9
  %1250 = fcmp oeq double %1249, 0x7FF0000000000000
  %1251 = select i1 %1250, double %1242, double %1246
  %1252 = call double @llvm.fabs.f64(double %1251) #9
  %1253 = fcmp oeq double %1252, 0x7FF0000000000000
  %1254 = select i1 %1253, double 0.000000e+00, double %1248
  %1255 = fmul double %1251, 0x3FF71547652B82FE
  %1256 = call double @llvm.rint.f64(double %1255)
  %1257 = fneg double %1256
  %1258 = call double @llvm.fma.f64(double %1257, double 0x3FE62E42FEFA39EF, double %1251)
  %1259 = call double @llvm.fma.f64(double %1257, double 0x3C7ABC9E3B39803F, double %1258)
  %1260 = call double @llvm.fma.f64(double %1259, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1261 = call double @llvm.fma.f64(double %1259, double %1260, double 0x3EC71DEE623FDE64)
  %1262 = call double @llvm.fma.f64(double %1259, double %1261, double 0x3EFA01997C89E6B0)
  %1263 = call double @llvm.fma.f64(double %1259, double %1262, double 0x3F2A01A014761F6E)
  %1264 = call double @llvm.fma.f64(double %1259, double %1263, double 0x3F56C16C1852B7B0)
  %1265 = call double @llvm.fma.f64(double %1259, double %1264, double 0x3F81111111122322)
  %1266 = call double @llvm.fma.f64(double %1259, double %1265, double 0x3FA55555555502A1)
  %1267 = call double @llvm.fma.f64(double %1259, double %1266, double 0x3FC5555555555511)
  %1268 = call double @llvm.fma.f64(double %1259, double %1267, double 0x3FE000000000000B)
  %1269 = call double @llvm.fma.f64(double %1259, double %1268, double 1.000000e+00)
  %1270 = call double @llvm.fma.f64(double %1259, double %1269, double 1.000000e+00)
  %1271 = fptosi double %1256 to i32
  %1272 = call double @llvm.ldexp.f64.i32(double %1270, i32 %1271)
  %1273 = fcmp ogt double %1251, 1.024000e+03
  %1274 = select i1 %1273, double 0x7FF0000000000000, double %1272
  %1275 = fcmp olt double %1251, -1.075000e+03
  %1276 = select i1 %1275, double 0.000000e+00, double %1274
  %1277 = call double @llvm.fma.f64(double %1276, double %1254, double %1276) #9
  %1278 = call double @llvm.fabs.f64(double %1276) #9
  %1279 = fcmp oeq double %1278, 0x7FF0000000000000
  %1280 = select i1 %1279, double %1276, double %1277
  %1281 = call double @llvm.trunc.f64(double %1122) #9
  %1282 = fcmp oeq double %1281, %1122
  %1283 = fmul double %1122, 5.000000e-01
  %1284 = call double @llvm.trunc.f64(double %1283) #9
  %1285 = fcmp une double %1284, %1283
  %1286 = and i1 %1282, %1285
  %1287 = select i1 %1286, double %sub.i17.i, double 1.000000e+00
  %1288 = call double @llvm.copysign.f64(double %1280, double %1287) #9
  %1289 = fcmp olt double %sub.i17.i, 0.000000e+00
  %1290 = select i1 %1282, double %1288, double 0x7FF8000000000000
  %1291 = select i1 %1289, double %1290, double %1288
  %1292 = fcmp oeq double %1123, 0x7FF0000000000000
  %1293 = fcmp oeq double %sub.i17.i, 0.000000e+00
  %1294 = or i1 %1293, %1292
  %1295 = select i1 %1293, double 0.000000e+00, double 0x7FF0000000000000
  %1296 = select i1 %1286, double %sub.i17.i, double 0.000000e+00
  %1297 = call double @llvm.copysign.f64(double %1295, double %1296) #9
  %1298 = select i1 %1294, double %1297, double %1291
  %1299 = fcmp uno double %sub.i17.i, 0.000000e+00
  %1300 = select i1 %1299, double 0x7FF8000000000000, double %1298
  %sub1.i.i22.i = fsub double %add.i20.i, %33
  %1301 = fcmp oeq double %sub1.i.i22.i, 1.000000e+00
  %1302 = select i1 %1301, double 1.000000e+00, double 2.000000e+00
  %1303 = call double @llvm.fabs.f64(double %sub1.i.i22.i) #9
  %1304 = call double @llvm.amdgcn.frexp.mant.f64(double %1303)
  %1305 = fcmp olt double %1304, 0x3FE5555555555555
  %.neg.i.i.i1.i.i23.i = sext i1 %1305 to i32
  %1306 = select i1 %1305, double 2.000000e+00, double 1.000000e+00
  %1307 = fmul double %1304, %1306
  %1308 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %1303)
  %1309 = add i32 %1308, %.neg.i.i.i1.i.i23.i
  %1310 = fadd double %1307, -1.000000e+00
  %1311 = fadd double %1307, 1.000000e+00
  %1312 = fadd double %1311, -1.000000e+00
  %1313 = fsub double %1307, %1312
  %1314 = call double @llvm.amdgcn.rcp.f64(double %1311)
  %1315 = fneg double %1311
  %1316 = call double @llvm.fma.f64(double %1315, double %1314, double 1.000000e+00)
  %1317 = call double @llvm.fma.f64(double %1316, double %1314, double %1314)
  %1318 = call double @llvm.fma.f64(double %1315, double %1317, double 1.000000e+00)
  %1319 = call double @llvm.fma.f64(double %1318, double %1317, double %1317)
  %1320 = fmul double %1310, %1319
  %1321 = fmul double %1311, %1320
  %1322 = fneg double %1321
  %1323 = call double @llvm.fma.f64(double %1320, double %1311, double %1322)
  %1324 = call double @llvm.fma.f64(double %1320, double %1313, double %1323)
  %1325 = fadd double %1321, %1324
  %1326 = fsub double %1325, %1321
  %1327 = fsub double %1310, %1325
  %1328 = fsub double %1310, %1327
  %1329 = fsub double %1328, %1325
  %1330 = fsub double %1326, %1324
  %1331 = fadd double %1330, %1329
  %1332 = fadd double %1327, %1331
  %1333 = fmul double %1319, %1332
  %1334 = fadd double %1320, %1333
  %1335 = fsub double %1334, %1320
  %1336 = fsub double %1333, %1335
  %1337 = fmul double %1334, %1334
  %1338 = fneg double %1337
  %1339 = call double @llvm.fma.f64(double %1334, double %1334, double %1338)
  %1340 = fmul double %1336, 2.000000e+00
  %1341 = call double @llvm.fma.f64(double %1334, double %1340, double %1339)
  %1342 = fadd double %1337, %1341
  %1343 = fsub double %1342, %1337
  %1344 = fsub double %1341, %1343
  %1345 = call double @llvm.fma.f64(double %1342, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1346 = call double @llvm.fma.f64(double %1342, double %1345, double 0x3FBE25E43ABE935A)
  %1347 = call double @llvm.fma.f64(double %1342, double %1346, double 0x3FC110EF47E6C9C2)
  %1348 = call double @llvm.fma.f64(double %1342, double %1347, double 0x3FC3B13BCFA74449)
  %1349 = call double @llvm.fma.f64(double %1342, double %1348, double 0x3FC745D171BF3C30)
  %1350 = call double @llvm.fma.f64(double %1342, double %1349, double 0x3FCC71C71C7792CE)
  %1351 = call double @llvm.fma.f64(double %1342, double %1350, double 0x3FD24924924920DA)
  %1352 = call double @llvm.fma.f64(double %1342, double %1351, double 0x3FD999999999999C)
  %1353 = sitofp i32 %1309 to double
  %1354 = fmul double %1353, 0x3FE62E42FEFA39EF
  %1355 = fneg double %1354
  %1356 = call double @llvm.fma.f64(double %1353, double 0x3FE62E42FEFA39EF, double %1355)
  %1357 = call double @llvm.fma.f64(double %1353, double 0x3C7ABC9E3B39803F, double %1356)
  %1358 = fadd double %1354, %1357
  %1359 = fsub double %1358, %1354
  %1360 = fsub double %1357, %1359
  %1361 = call double @llvm.ldexp.f64.i32(double %1334, i32 1)
  %1362 = call double @llvm.ldexp.f64.i32(double %1336, i32 1)
  %1363 = fmul double %1334, %1342
  %1364 = fneg double %1363
  %1365 = call double @llvm.fma.f64(double %1342, double %1334, double %1364)
  %1366 = call double @llvm.fma.f64(double %1342, double %1336, double %1365)
  %1367 = call double @llvm.fma.f64(double %1344, double %1334, double %1366)
  %1368 = fadd double %1363, %1367
  %1369 = fsub double %1368, %1363
  %1370 = fsub double %1367, %1369
  %1371 = fmul double %1342, %1352
  %1372 = fneg double %1371
  %1373 = call double @llvm.fma.f64(double %1342, double %1352, double %1372)
  %1374 = call double @llvm.fma.f64(double %1344, double %1352, double %1373)
  %1375 = fadd double %1371, %1374
  %1376 = fsub double %1375, %1371
  %1377 = fsub double %1374, %1376
  %1378 = fadd double %1375, 0x3FE5555555555555
  %1379 = fadd double %1378, 0xBFE5555555555555
  %1380 = fsub double %1375, %1379
  %1381 = fadd double %1377, 0x3C8543B0D5DF274D
  %1382 = fadd double %1381, %1380
  %1383 = fadd double %1378, %1382
  %1384 = fsub double %1378, %1383
  %1385 = fadd double %1382, %1384
  %1386 = fmul double %1368, %1383
  %1387 = fneg double %1386
  %1388 = call double @llvm.fma.f64(double %1368, double %1383, double %1387)
  %1389 = call double @llvm.fma.f64(double %1368, double %1385, double %1388)
  %1390 = call double @llvm.fma.f64(double %1370, double %1383, double %1389)
  %1391 = fadd double %1386, %1390
  %1392 = fsub double %1391, %1386
  %1393 = fsub double %1390, %1392
  %1394 = fadd double %1361, %1391
  %1395 = fsub double %1394, %1361
  %1396 = fsub double %1391, %1395
  %1397 = fadd double %1362, %1393
  %1398 = fadd double %1397, %1396
  %1399 = fadd double %1394, %1398
  %1400 = fsub double %1399, %1394
  %1401 = fsub double %1398, %1400
  %1402 = fadd double %1358, %1399
  %1403 = fsub double %1402, %1358
  %1404 = fsub double %1402, %1403
  %1405 = fsub double %1358, %1404
  %1406 = fsub double %1399, %1403
  %1407 = fadd double %1406, %1405
  %1408 = fadd double %1360, %1401
  %1409 = fsub double %1408, %1360
  %1410 = fsub double %1408, %1409
  %1411 = fsub double %1360, %1410
  %1412 = fsub double %1401, %1409
  %1413 = fadd double %1412, %1411
  %1414 = fadd double %1408, %1407
  %1415 = fadd double %1402, %1414
  %1416 = fsub double %1415, %1402
  %1417 = fsub double %1414, %1416
  %1418 = fadd double %1413, %1417
  %1419 = fadd double %1415, %1418
  %1420 = fsub double %1419, %1415
  %1421 = fsub double %1418, %1420
  %1422 = fmul double %1302, %1419
  %1423 = fneg double %1422
  %1424 = call double @llvm.fma.f64(double %1302, double %1419, double %1423) #9
  %1425 = call double @llvm.fma.f64(double %1302, double %1421, double %1424) #9
  %1426 = fadd double %1422, %1425
  %1427 = fsub double %1426, %1422
  %1428 = fsub double %1425, %1427
  %1429 = call double @llvm.fabs.f64(double %1422) #9
  %1430 = fcmp oeq double %1429, 0x7FF0000000000000
  %1431 = select i1 %1430, double %1422, double %1426
  %1432 = call double @llvm.fabs.f64(double %1431) #9
  %1433 = fcmp oeq double %1432, 0x7FF0000000000000
  %1434 = select i1 %1433, double 0.000000e+00, double %1428
  %1435 = fmul double %1431, 0x3FF71547652B82FE
  %1436 = call double @llvm.rint.f64(double %1435)
  %1437 = fneg double %1436
  %1438 = call double @llvm.fma.f64(double %1437, double 0x3FE62E42FEFA39EF, double %1431)
  %1439 = call double @llvm.fma.f64(double %1437, double 0x3C7ABC9E3B39803F, double %1438)
  %1440 = call double @llvm.fma.f64(double %1439, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1441 = call double @llvm.fma.f64(double %1439, double %1440, double 0x3EC71DEE623FDE64)
  %1442 = call double @llvm.fma.f64(double %1439, double %1441, double 0x3EFA01997C89E6B0)
  %1443 = call double @llvm.fma.f64(double %1439, double %1442, double 0x3F2A01A014761F6E)
  %1444 = call double @llvm.fma.f64(double %1439, double %1443, double 0x3F56C16C1852B7B0)
  %1445 = call double @llvm.fma.f64(double %1439, double %1444, double 0x3F81111111122322)
  %1446 = call double @llvm.fma.f64(double %1439, double %1445, double 0x3FA55555555502A1)
  %1447 = call double @llvm.fma.f64(double %1439, double %1446, double 0x3FC5555555555511)
  %1448 = call double @llvm.fma.f64(double %1439, double %1447, double 0x3FE000000000000B)
  %1449 = call double @llvm.fma.f64(double %1439, double %1448, double 1.000000e+00)
  %1450 = call double @llvm.fma.f64(double %1439, double %1449, double 1.000000e+00)
  %1451 = fptosi double %1436 to i32
  %1452 = call double @llvm.ldexp.f64.i32(double %1450, i32 %1451)
  %1453 = fcmp ogt double %1431, 1.024000e+03
  %1454 = select i1 %1453, double 0x7FF0000000000000, double %1452
  %1455 = fcmp olt double %1431, -1.075000e+03
  %1456 = select i1 %1455, double 0.000000e+00, double %1454
  %1457 = call double @llvm.fma.f64(double %1456, double %1434, double %1456) #9
  %1458 = call double @llvm.fabs.f64(double %1456) #9
  %1459 = fcmp oeq double %1458, 0x7FF0000000000000
  %1460 = select i1 %1459, double %1456, double %1457
  %1461 = call double @llvm.trunc.f64(double %1302) #9
  %1462 = fcmp oeq double %1461, %1302
  %1463 = fmul double %1302, 5.000000e-01
  %1464 = call double @llvm.trunc.f64(double %1463) #9
  %1465 = fcmp une double %1464, %1463
  %1466 = and i1 %1462, %1465
  %1467 = select i1 %1466, double %sub1.i.i22.i, double 1.000000e+00
  %1468 = call double @llvm.copysign.f64(double %1460, double %1467) #9
  %1469 = fcmp olt double %sub1.i.i22.i, 0.000000e+00
  %1470 = select i1 %1462, double %1468, double 0x7FF8000000000000
  %1471 = select i1 %1469, double %1470, double %1468
  %1472 = fcmp oeq double %1303, 0x7FF0000000000000
  %1473 = fcmp oeq double %sub1.i.i22.i, 0.000000e+00
  %1474 = or i1 %1473, %1472
  %1475 = select i1 %1473, double 0.000000e+00, double 0x7FF0000000000000
  %1476 = select i1 %1466, double %sub1.i.i22.i, double 0.000000e+00
  %1477 = call double @llvm.copysign.f64(double %1475, double %1476) #9
  %1478 = select i1 %1474, double %1477, double %1471
  %1479 = fcmp uno double %sub1.i.i22.i, 0.000000e+00
  %1480 = select i1 %1479, double 0x7FF8000000000000, double %1478
  %add.i.i24.i = fadd double %1300, %1480
  %sub3.i.i25.i = fsub double %add22.i.i, %add22.i.i
  %1481 = fcmp oeq double %sub3.i.i25.i, 1.000000e+00
  %1482 = select i1 %1481, double 1.000000e+00, double 2.000000e+00
  %1483 = call double @llvm.fabs.f64(double %sub3.i.i25.i) #9
  %1484 = call double @llvm.amdgcn.frexp.mant.f64(double %1483)
  %1485 = fcmp olt double %1484, 0x3FE5555555555555
  %.neg.i.i.i2.i.i26.i = sext i1 %1485 to i32
  %1486 = select i1 %1485, double 2.000000e+00, double 1.000000e+00
  %1487 = fmul double %1484, %1486
  %1488 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %1483)
  %1489 = add i32 %1488, %.neg.i.i.i2.i.i26.i
  %1490 = fadd double %1487, -1.000000e+00
  %1491 = fadd double %1487, 1.000000e+00
  %1492 = fadd double %1491, -1.000000e+00
  %1493 = fsub double %1487, %1492
  %1494 = call double @llvm.amdgcn.rcp.f64(double %1491)
  %1495 = fneg double %1491
  %1496 = call double @llvm.fma.f64(double %1495, double %1494, double 1.000000e+00)
  %1497 = call double @llvm.fma.f64(double %1496, double %1494, double %1494)
  %1498 = call double @llvm.fma.f64(double %1495, double %1497, double 1.000000e+00)
  %1499 = call double @llvm.fma.f64(double %1498, double %1497, double %1497)
  %1500 = fmul double %1490, %1499
  %1501 = fmul double %1491, %1500
  %1502 = fneg double %1501
  %1503 = call double @llvm.fma.f64(double %1500, double %1491, double %1502)
  %1504 = call double @llvm.fma.f64(double %1500, double %1493, double %1503)
  %1505 = fadd double %1501, %1504
  %1506 = fsub double %1505, %1501
  %1507 = fsub double %1490, %1505
  %1508 = fsub double %1490, %1507
  %1509 = fsub double %1508, %1505
  %1510 = fsub double %1506, %1504
  %1511 = fadd double %1510, %1509
  %1512 = fadd double %1507, %1511
  %1513 = fmul double %1499, %1512
  %1514 = fadd double %1500, %1513
  %1515 = fsub double %1514, %1500
  %1516 = fsub double %1513, %1515
  %1517 = fmul double %1514, %1514
  %1518 = fneg double %1517
  %1519 = call double @llvm.fma.f64(double %1514, double %1514, double %1518)
  %1520 = fmul double %1516, 2.000000e+00
  %1521 = call double @llvm.fma.f64(double %1514, double %1520, double %1519)
  %1522 = fadd double %1517, %1521
  %1523 = fsub double %1522, %1517
  %1524 = fsub double %1521, %1523
  %1525 = call double @llvm.fma.f64(double %1522, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1526 = call double @llvm.fma.f64(double %1522, double %1525, double 0x3FBE25E43ABE935A)
  %1527 = call double @llvm.fma.f64(double %1522, double %1526, double 0x3FC110EF47E6C9C2)
  %1528 = call double @llvm.fma.f64(double %1522, double %1527, double 0x3FC3B13BCFA74449)
  %1529 = call double @llvm.fma.f64(double %1522, double %1528, double 0x3FC745D171BF3C30)
  %1530 = call double @llvm.fma.f64(double %1522, double %1529, double 0x3FCC71C71C7792CE)
  %1531 = call double @llvm.fma.f64(double %1522, double %1530, double 0x3FD24924924920DA)
  %1532 = call double @llvm.fma.f64(double %1522, double %1531, double 0x3FD999999999999C)
  %1533 = sitofp i32 %1489 to double
  %1534 = fmul double %1533, 0x3FE62E42FEFA39EF
  %1535 = fneg double %1534
  %1536 = call double @llvm.fma.f64(double %1533, double 0x3FE62E42FEFA39EF, double %1535)
  %1537 = call double @llvm.fma.f64(double %1533, double 0x3C7ABC9E3B39803F, double %1536)
  %1538 = fadd double %1534, %1537
  %1539 = fsub double %1538, %1534
  %1540 = fsub double %1537, %1539
  %1541 = call double @llvm.ldexp.f64.i32(double %1514, i32 1)
  %1542 = call double @llvm.ldexp.f64.i32(double %1516, i32 1)
  %1543 = fmul double %1514, %1522
  %1544 = fneg double %1543
  %1545 = call double @llvm.fma.f64(double %1522, double %1514, double %1544)
  %1546 = call double @llvm.fma.f64(double %1522, double %1516, double %1545)
  %1547 = call double @llvm.fma.f64(double %1524, double %1514, double %1546)
  %1548 = fadd double %1543, %1547
  %1549 = fsub double %1548, %1543
  %1550 = fsub double %1547, %1549
  %1551 = fmul double %1522, %1532
  %1552 = fneg double %1551
  %1553 = call double @llvm.fma.f64(double %1522, double %1532, double %1552)
  %1554 = call double @llvm.fma.f64(double %1524, double %1532, double %1553)
  %1555 = fadd double %1551, %1554
  %1556 = fsub double %1555, %1551
  %1557 = fsub double %1554, %1556
  %1558 = fadd double %1555, 0x3FE5555555555555
  %1559 = fadd double %1558, 0xBFE5555555555555
  %1560 = fsub double %1555, %1559
  %1561 = fadd double %1557, 0x3C8543B0D5DF274D
  %1562 = fadd double %1561, %1560
  %1563 = fadd double %1558, %1562
  %1564 = fsub double %1558, %1563
  %1565 = fadd double %1562, %1564
  %1566 = fmul double %1548, %1563
  %1567 = fneg double %1566
  %1568 = call double @llvm.fma.f64(double %1548, double %1563, double %1567)
  %1569 = call double @llvm.fma.f64(double %1548, double %1565, double %1568)
  %1570 = call double @llvm.fma.f64(double %1550, double %1563, double %1569)
  %1571 = fadd double %1566, %1570
  %1572 = fsub double %1571, %1566
  %1573 = fsub double %1570, %1572
  %1574 = fadd double %1541, %1571
  %1575 = fsub double %1574, %1541
  %1576 = fsub double %1571, %1575
  %1577 = fadd double %1542, %1573
  %1578 = fadd double %1577, %1576
  %1579 = fadd double %1574, %1578
  %1580 = fsub double %1579, %1574
  %1581 = fsub double %1578, %1580
  %1582 = fadd double %1538, %1579
  %1583 = fsub double %1582, %1538
  %1584 = fsub double %1582, %1583
  %1585 = fsub double %1538, %1584
  %1586 = fsub double %1579, %1583
  %1587 = fadd double %1586, %1585
  %1588 = fadd double %1540, %1581
  %1589 = fsub double %1588, %1540
  %1590 = fsub double %1588, %1589
  %1591 = fsub double %1540, %1590
  %1592 = fsub double %1581, %1589
  %1593 = fadd double %1592, %1591
  %1594 = fadd double %1588, %1587
  %1595 = fadd double %1582, %1594
  %1596 = fsub double %1595, %1582
  %1597 = fsub double %1594, %1596
  %1598 = fadd double %1593, %1597
  %1599 = fadd double %1595, %1598
  %1600 = fsub double %1599, %1595
  %1601 = fsub double %1598, %1600
  %1602 = fmul double %1482, %1599
  %1603 = fneg double %1602
  %1604 = call double @llvm.fma.f64(double %1482, double %1599, double %1603) #9
  %1605 = call double @llvm.fma.f64(double %1482, double %1601, double %1604) #9
  %1606 = fadd double %1602, %1605
  %1607 = fsub double %1606, %1602
  %1608 = fsub double %1605, %1607
  %1609 = call double @llvm.fabs.f64(double %1602) #9
  %1610 = fcmp oeq double %1609, 0x7FF0000000000000
  %1611 = select i1 %1610, double %1602, double %1606
  %1612 = call double @llvm.fabs.f64(double %1611) #9
  %1613 = fcmp oeq double %1612, 0x7FF0000000000000
  %1614 = select i1 %1613, double 0.000000e+00, double %1608
  %1615 = fmul double %1611, 0x3FF71547652B82FE
  %1616 = call double @llvm.rint.f64(double %1615)
  %1617 = fneg double %1616
  %1618 = call double @llvm.fma.f64(double %1617, double 0x3FE62E42FEFA39EF, double %1611)
  %1619 = call double @llvm.fma.f64(double %1617, double 0x3C7ABC9E3B39803F, double %1618)
  %1620 = call double @llvm.fma.f64(double %1619, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1621 = call double @llvm.fma.f64(double %1619, double %1620, double 0x3EC71DEE623FDE64)
  %1622 = call double @llvm.fma.f64(double %1619, double %1621, double 0x3EFA01997C89E6B0)
  %1623 = call double @llvm.fma.f64(double %1619, double %1622, double 0x3F2A01A014761F6E)
  %1624 = call double @llvm.fma.f64(double %1619, double %1623, double 0x3F56C16C1852B7B0)
  %1625 = call double @llvm.fma.f64(double %1619, double %1624, double 0x3F81111111122322)
  %1626 = call double @llvm.fma.f64(double %1619, double %1625, double 0x3FA55555555502A1)
  %1627 = call double @llvm.fma.f64(double %1619, double %1626, double 0x3FC5555555555511)
  %1628 = call double @llvm.fma.f64(double %1619, double %1627, double 0x3FE000000000000B)
  %1629 = call double @llvm.fma.f64(double %1619, double %1628, double 1.000000e+00)
  %1630 = call double @llvm.fma.f64(double %1619, double %1629, double 1.000000e+00)
  %1631 = fptosi double %1616 to i32
  %1632 = call double @llvm.ldexp.f64.i32(double %1630, i32 %1631)
  %1633 = fcmp ogt double %1611, 1.024000e+03
  %1634 = select i1 %1633, double 0x7FF0000000000000, double %1632
  %1635 = fcmp olt double %1611, -1.075000e+03
  %1636 = select i1 %1635, double 0.000000e+00, double %1634
  %1637 = call double @llvm.fma.f64(double %1636, double %1614, double %1636) #9
  %1638 = call double @llvm.fabs.f64(double %1636) #9
  %1639 = fcmp oeq double %1638, 0x7FF0000000000000
  %1640 = select i1 %1639, double %1636, double %1637
  %1641 = call double @llvm.trunc.f64(double %1482) #9
  %1642 = fcmp oeq double %1641, %1482
  %1643 = fmul double %1482, 5.000000e-01
  %1644 = call double @llvm.trunc.f64(double %1643) #9
  %1645 = fcmp une double %1644, %1643
  %1646 = and i1 %1642, %1645
  %1647 = select i1 %1646, double %sub3.i.i25.i, double 1.000000e+00
  %1648 = call double @llvm.copysign.f64(double %1640, double %1647) #9
  %1649 = fcmp olt double %sub3.i.i25.i, 0.000000e+00
  %1650 = select i1 %1642, double %1648, double 0x7FF8000000000000
  %1651 = select i1 %1649, double %1650, double %1648
  %1652 = fcmp oeq double %1483, 0x7FF0000000000000
  %1653 = fcmp oeq double %sub3.i.i25.i, 0.000000e+00
  %1654 = or i1 %1653, %1652
  %1655 = select i1 %1653, double 0.000000e+00, double 0x7FF0000000000000
  %1656 = select i1 %1646, double %sub3.i.i25.i, double 0.000000e+00
  %1657 = call double @llvm.copysign.f64(double %1655, double %1656) #9
  %1658 = select i1 %1654, double %1657, double %1651
  %1659 = fcmp uno double %sub3.i.i25.i, 0.000000e+00
  %1660 = select i1 %1659, double 0x7FF8000000000000, double %1658
  %add5.i.i27.i = fadd double %1660, %add.i.i24.i
  %cmp.i.i28.i = fcmp olt double %add5.i.i27.i, 0x7FEFFFFFFFFFFFFF
  br i1 %cmp.i.i28.i, label %if.then.i.i30.i, label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i29.i

if.then.i.i30.i:                                  ; preds = %if.then26.i.i
  store double %35, ptr addrspace(5) %r0, align 8, !tbaa !35
  store double %add.i20.i, ptr addrspace(5) %9, align 8, !tbaa !37
  store double %add22.i.i, ptr addrspace(5) %10, align 8, !tbaa !38
  br label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i29.i

_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i29.i: ; preds = %if.then.i.i30.i, %if.then26.i.i
  %min_dist.4.i.i = phi double [ %add5.i.i27.i, %if.then.i.i30.i ], [ 0x7FEFFFFFFFFFFFFF, %if.then26.i.i ]
  br i1 %cmp.i.i28.i, label %if.then28.i.i, label %if.end32.i.i

if.then28.i.i:                                    ; preds = %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i29.i
  store i32 1, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %1661 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %this.val20.i.i = load ptr, ptr %1661, align 8, !tbaa !29
  %1662 = load double, ptr %arrayidx.i.i.i118, align 8, !tbaa !30
  %sub.i29.i.i = fsub double %add.i20.i, %1662
  %arrayidx.i1.i.i.i = getelementptr inbounds nuw i8, ptr %this.val20.i.i, i64 8
  %1663 = load double, ptr %arrayidx.i1.i.i.i, align 8, !tbaa !30
  %div.i.i.i = fdiv double %sub.i29.i.i, %1663
  %1664 = call noundef double @llvm.ceil.f64(double %div.i.i.i) #9
  %conv5.i.i.i = fptosi double %1664 to i32
  %arrayidx30.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 4
  store i32 %conv5.i.i.i, ptr addrspace(5) %arrayidx30.i.i, align 4, !tbaa !31
  br label %if.end32.i.i

if.end32.i.i:                                     ; preds = %if.then28.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i29.i, %if.then.i16.i, %lor.lhs.false.i9.i
  %min_dist.0.i10.i = phi double [ %min_dist.4.i.i, %if.then28.i.i ], [ %min_dist.4.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i29.i ], [ 0x7FEFFFFFFFFFFFFF, %if.then.i16.i ], [ 0x7FEFFFFFFFFFFFFF, %lor.lhs.false.i9.i ]
  %cmp33.i.i = fcmp olt double %33, %1118
  %cmp35.i.i = fcmp ogt double %retval.sroa.2.0.copyload.i80, %1118
  %or.cond9.i.i = select i1 %cmp33.i.i, i1 %cmp35.i.i, i1 false
  br i1 %or.cond9.i.i, label %if.then40.i.i, label %lor.lhs.false36.i.i

lor.lhs.false36.i.i:                              ; preds = %if.end32.i.i
  %cmp37.i.i = fcmp ogt double %33, %1118
  %cmp39.i.i = fcmp olt double %retval.sroa.2.0.copyload.i80, %1118
  %or.cond10.i.i = select i1 %cmp37.i.i, i1 %cmp39.i.i, i1 false
  br i1 %or.cond10.i.i, label %if.then40.i.i, label %if.end65.i.i

if.then40.i.i:                                    ; preds = %lor.lhs.false36.i.i, %if.end32.i.i
  %sub41.i.i = fsub double %1118, %33
  %sub42.i.i = fsub double %retval.sroa.0.0.copyload.i78, %32
  %mul43.i.i = fmul double %sub42.i.i, %sub41.i.i
  %sub44.i.i = fsub double %retval.sroa.2.0.copyload.i80, %33
  %div45.i.i = fdiv double %mul43.i.i, %sub44.i.i
  %add46.i.i = fadd double %32, %div45.i.i
  %sub49.i.i = fsub double %retval.sroa.3.0.copyload.i82, %34
  %mul50.i.i = fmul double %sub49.i.i, %sub41.i.i
  %div52.i.i = fdiv double %mul50.i.i, %sub44.i.i
  %add53.i.i = fadd double %34, %div52.i.i
  %cmp54.i.i = fcmp oge double %add46.i.i, %35
  %cmp56.i.i = fcmp olt double %add46.i.i, %1119
  %or.cond11.i.i = select i1 %cmp54.i.i, i1 %cmp56.i.i, i1 false
  br i1 %or.cond11.i.i, label %if.then57.i.i, label %if.end65.i.i

if.then57.i.i:                                    ; preds = %if.then40.i.i
  %sub.i30.i.i = fsub double %add46.i.i, %32
  %1665 = fcmp oeq double %sub.i30.i.i, 1.000000e+00
  %1666 = select i1 %1665, double 1.000000e+00, double 2.000000e+00
  %1667 = call double @llvm.fabs.f64(double %sub.i30.i.i) #9
  %1668 = call double @llvm.amdgcn.frexp.mant.f64(double %1667)
  %1669 = fcmp olt double %1668, 0x3FE5555555555555
  %.neg.i.i.i.i31.i.i = sext i1 %1669 to i32
  %1670 = select i1 %1669, double 2.000000e+00, double 1.000000e+00
  %1671 = fmul double %1668, %1670
  %1672 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %1667)
  %1673 = add i32 %1672, %.neg.i.i.i.i31.i.i
  %1674 = fadd double %1671, -1.000000e+00
  %1675 = fadd double %1671, 1.000000e+00
  %1676 = fadd double %1675, -1.000000e+00
  %1677 = fsub double %1671, %1676
  %1678 = call double @llvm.amdgcn.rcp.f64(double %1675)
  %1679 = fneg double %1675
  %1680 = call double @llvm.fma.f64(double %1679, double %1678, double 1.000000e+00)
  %1681 = call double @llvm.fma.f64(double %1680, double %1678, double %1678)
  %1682 = call double @llvm.fma.f64(double %1679, double %1681, double 1.000000e+00)
  %1683 = call double @llvm.fma.f64(double %1682, double %1681, double %1681)
  %1684 = fmul double %1674, %1683
  %1685 = fmul double %1675, %1684
  %1686 = fneg double %1685
  %1687 = call double @llvm.fma.f64(double %1684, double %1675, double %1686)
  %1688 = call double @llvm.fma.f64(double %1684, double %1677, double %1687)
  %1689 = fadd double %1685, %1688
  %1690 = fsub double %1689, %1685
  %1691 = fsub double %1674, %1689
  %1692 = fsub double %1674, %1691
  %1693 = fsub double %1692, %1689
  %1694 = fsub double %1690, %1688
  %1695 = fadd double %1694, %1693
  %1696 = fadd double %1691, %1695
  %1697 = fmul double %1683, %1696
  %1698 = fadd double %1684, %1697
  %1699 = fsub double %1698, %1684
  %1700 = fsub double %1697, %1699
  %1701 = fmul double %1698, %1698
  %1702 = fneg double %1701
  %1703 = call double @llvm.fma.f64(double %1698, double %1698, double %1702)
  %1704 = fmul double %1700, 2.000000e+00
  %1705 = call double @llvm.fma.f64(double %1698, double %1704, double %1703)
  %1706 = fadd double %1701, %1705
  %1707 = fsub double %1706, %1701
  %1708 = fsub double %1705, %1707
  %1709 = call double @llvm.fma.f64(double %1706, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1710 = call double @llvm.fma.f64(double %1706, double %1709, double 0x3FBE25E43ABE935A)
  %1711 = call double @llvm.fma.f64(double %1706, double %1710, double 0x3FC110EF47E6C9C2)
  %1712 = call double @llvm.fma.f64(double %1706, double %1711, double 0x3FC3B13BCFA74449)
  %1713 = call double @llvm.fma.f64(double %1706, double %1712, double 0x3FC745D171BF3C30)
  %1714 = call double @llvm.fma.f64(double %1706, double %1713, double 0x3FCC71C71C7792CE)
  %1715 = call double @llvm.fma.f64(double %1706, double %1714, double 0x3FD24924924920DA)
  %1716 = call double @llvm.fma.f64(double %1706, double %1715, double 0x3FD999999999999C)
  %1717 = sitofp i32 %1673 to double
  %1718 = fmul double %1717, 0x3FE62E42FEFA39EF
  %1719 = fneg double %1718
  %1720 = call double @llvm.fma.f64(double %1717, double 0x3FE62E42FEFA39EF, double %1719)
  %1721 = call double @llvm.fma.f64(double %1717, double 0x3C7ABC9E3B39803F, double %1720)
  %1722 = fadd double %1718, %1721
  %1723 = fsub double %1722, %1718
  %1724 = fsub double %1721, %1723
  %1725 = call double @llvm.ldexp.f64.i32(double %1698, i32 1)
  %1726 = call double @llvm.ldexp.f64.i32(double %1700, i32 1)
  %1727 = fmul double %1698, %1706
  %1728 = fneg double %1727
  %1729 = call double @llvm.fma.f64(double %1706, double %1698, double %1728)
  %1730 = call double @llvm.fma.f64(double %1706, double %1700, double %1729)
  %1731 = call double @llvm.fma.f64(double %1708, double %1698, double %1730)
  %1732 = fadd double %1727, %1731
  %1733 = fsub double %1732, %1727
  %1734 = fsub double %1731, %1733
  %1735 = fmul double %1706, %1716
  %1736 = fneg double %1735
  %1737 = call double @llvm.fma.f64(double %1706, double %1716, double %1736)
  %1738 = call double @llvm.fma.f64(double %1708, double %1716, double %1737)
  %1739 = fadd double %1735, %1738
  %1740 = fsub double %1739, %1735
  %1741 = fsub double %1738, %1740
  %1742 = fadd double %1739, 0x3FE5555555555555
  %1743 = fadd double %1742, 0xBFE5555555555555
  %1744 = fsub double %1739, %1743
  %1745 = fadd double %1741, 0x3C8543B0D5DF274D
  %1746 = fadd double %1745, %1744
  %1747 = fadd double %1742, %1746
  %1748 = fsub double %1742, %1747
  %1749 = fadd double %1746, %1748
  %1750 = fmul double %1732, %1747
  %1751 = fneg double %1750
  %1752 = call double @llvm.fma.f64(double %1732, double %1747, double %1751)
  %1753 = call double @llvm.fma.f64(double %1732, double %1749, double %1752)
  %1754 = call double @llvm.fma.f64(double %1734, double %1747, double %1753)
  %1755 = fadd double %1750, %1754
  %1756 = fsub double %1755, %1750
  %1757 = fsub double %1754, %1756
  %1758 = fadd double %1725, %1755
  %1759 = fsub double %1758, %1725
  %1760 = fsub double %1755, %1759
  %1761 = fadd double %1726, %1757
  %1762 = fadd double %1761, %1760
  %1763 = fadd double %1758, %1762
  %1764 = fsub double %1763, %1758
  %1765 = fsub double %1762, %1764
  %1766 = fadd double %1722, %1763
  %1767 = fsub double %1766, %1722
  %1768 = fsub double %1766, %1767
  %1769 = fsub double %1722, %1768
  %1770 = fsub double %1763, %1767
  %1771 = fadd double %1770, %1769
  %1772 = fadd double %1724, %1765
  %1773 = fsub double %1772, %1724
  %1774 = fsub double %1772, %1773
  %1775 = fsub double %1724, %1774
  %1776 = fsub double %1765, %1773
  %1777 = fadd double %1776, %1775
  %1778 = fadd double %1772, %1771
  %1779 = fadd double %1766, %1778
  %1780 = fsub double %1779, %1766
  %1781 = fsub double %1778, %1780
  %1782 = fadd double %1777, %1781
  %1783 = fadd double %1779, %1782
  %1784 = fsub double %1783, %1779
  %1785 = fsub double %1782, %1784
  %1786 = fmul double %1666, %1783
  %1787 = fneg double %1786
  %1788 = call double @llvm.fma.f64(double %1666, double %1783, double %1787) #9
  %1789 = call double @llvm.fma.f64(double %1666, double %1785, double %1788) #9
  %1790 = fadd double %1786, %1789
  %1791 = fsub double %1790, %1786
  %1792 = fsub double %1789, %1791
  %1793 = call double @llvm.fabs.f64(double %1786) #9
  %1794 = fcmp oeq double %1793, 0x7FF0000000000000
  %1795 = select i1 %1794, double %1786, double %1790
  %1796 = call double @llvm.fabs.f64(double %1795) #9
  %1797 = fcmp oeq double %1796, 0x7FF0000000000000
  %1798 = select i1 %1797, double 0.000000e+00, double %1792
  %1799 = fmul double %1795, 0x3FF71547652B82FE
  %1800 = call double @llvm.rint.f64(double %1799)
  %1801 = fneg double %1800
  %1802 = call double @llvm.fma.f64(double %1801, double 0x3FE62E42FEFA39EF, double %1795)
  %1803 = call double @llvm.fma.f64(double %1801, double 0x3C7ABC9E3B39803F, double %1802)
  %1804 = call double @llvm.fma.f64(double %1803, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1805 = call double @llvm.fma.f64(double %1803, double %1804, double 0x3EC71DEE623FDE64)
  %1806 = call double @llvm.fma.f64(double %1803, double %1805, double 0x3EFA01997C89E6B0)
  %1807 = call double @llvm.fma.f64(double %1803, double %1806, double 0x3F2A01A014761F6E)
  %1808 = call double @llvm.fma.f64(double %1803, double %1807, double 0x3F56C16C1852B7B0)
  %1809 = call double @llvm.fma.f64(double %1803, double %1808, double 0x3F81111111122322)
  %1810 = call double @llvm.fma.f64(double %1803, double %1809, double 0x3FA55555555502A1)
  %1811 = call double @llvm.fma.f64(double %1803, double %1810, double 0x3FC5555555555511)
  %1812 = call double @llvm.fma.f64(double %1803, double %1811, double 0x3FE000000000000B)
  %1813 = call double @llvm.fma.f64(double %1803, double %1812, double 1.000000e+00)
  %1814 = call double @llvm.fma.f64(double %1803, double %1813, double 1.000000e+00)
  %1815 = fptosi double %1800 to i32
  %1816 = call double @llvm.ldexp.f64.i32(double %1814, i32 %1815)
  %1817 = fcmp ogt double %1795, 1.024000e+03
  %1818 = select i1 %1817, double 0x7FF0000000000000, double %1816
  %1819 = fcmp olt double %1795, -1.075000e+03
  %1820 = select i1 %1819, double 0.000000e+00, double %1818
  %1821 = call double @llvm.fma.f64(double %1820, double %1798, double %1820) #9
  %1822 = call double @llvm.fabs.f64(double %1820) #9
  %1823 = fcmp oeq double %1822, 0x7FF0000000000000
  %1824 = select i1 %1823, double %1820, double %1821
  %1825 = call double @llvm.trunc.f64(double %1666) #9
  %1826 = fcmp oeq double %1825, %1666
  %1827 = fmul double %1666, 5.000000e-01
  %1828 = call double @llvm.trunc.f64(double %1827) #9
  %1829 = fcmp une double %1828, %1827
  %1830 = and i1 %1826, %1829
  %1831 = select i1 %1830, double %sub.i30.i.i, double 1.000000e+00
  %1832 = call double @llvm.copysign.f64(double %1824, double %1831) #9
  %1833 = fcmp olt double %sub.i30.i.i, 0.000000e+00
  %1834 = select i1 %1826, double %1832, double 0x7FF8000000000000
  %1835 = select i1 %1833, double %1834, double %1832
  %1836 = fcmp oeq double %1667, 0x7FF0000000000000
  %1837 = fcmp oeq double %sub.i30.i.i, 0.000000e+00
  %1838 = or i1 %1837, %1836
  %1839 = select i1 %1837, double 0.000000e+00, double 0x7FF0000000000000
  %1840 = select i1 %1830, double %sub.i30.i.i, double 0.000000e+00
  %1841 = call double @llvm.copysign.f64(double %1839, double %1840) #9
  %1842 = select i1 %1838, double %1841, double %1835
  %1843 = fcmp uno double %sub.i30.i.i, 0.000000e+00
  %1844 = select i1 %1843, double 0x7FF8000000000000, double %1842
  %1845 = fcmp oeq double %sub41.i.i, 1.000000e+00
  %1846 = select i1 %1845, double 1.000000e+00, double 2.000000e+00
  %1847 = call double @llvm.fabs.f64(double %sub41.i.i) #9
  %1848 = call double @llvm.amdgcn.frexp.mant.f64(double %1847)
  %1849 = fcmp olt double %1848, 0x3FE5555555555555
  %.neg.i.i.i1.i33.i.i = sext i1 %1849 to i32
  %1850 = select i1 %1849, double 2.000000e+00, double 1.000000e+00
  %1851 = fmul double %1848, %1850
  %1852 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %1847)
  %1853 = add i32 %1852, %.neg.i.i.i1.i33.i.i
  %1854 = fadd double %1851, -1.000000e+00
  %1855 = fadd double %1851, 1.000000e+00
  %1856 = fadd double %1855, -1.000000e+00
  %1857 = fsub double %1851, %1856
  %1858 = call double @llvm.amdgcn.rcp.f64(double %1855)
  %1859 = fneg double %1855
  %1860 = call double @llvm.fma.f64(double %1859, double %1858, double 1.000000e+00)
  %1861 = call double @llvm.fma.f64(double %1860, double %1858, double %1858)
  %1862 = call double @llvm.fma.f64(double %1859, double %1861, double 1.000000e+00)
  %1863 = call double @llvm.fma.f64(double %1862, double %1861, double %1861)
  %1864 = fmul double %1854, %1863
  %1865 = fmul double %1855, %1864
  %1866 = fneg double %1865
  %1867 = call double @llvm.fma.f64(double %1864, double %1855, double %1866)
  %1868 = call double @llvm.fma.f64(double %1864, double %1857, double %1867)
  %1869 = fadd double %1865, %1868
  %1870 = fsub double %1869, %1865
  %1871 = fsub double %1854, %1869
  %1872 = fsub double %1854, %1871
  %1873 = fsub double %1872, %1869
  %1874 = fsub double %1870, %1868
  %1875 = fadd double %1874, %1873
  %1876 = fadd double %1871, %1875
  %1877 = fmul double %1863, %1876
  %1878 = fadd double %1864, %1877
  %1879 = fsub double %1878, %1864
  %1880 = fsub double %1877, %1879
  %1881 = fmul double %1878, %1878
  %1882 = fneg double %1881
  %1883 = call double @llvm.fma.f64(double %1878, double %1878, double %1882)
  %1884 = fmul double %1880, 2.000000e+00
  %1885 = call double @llvm.fma.f64(double %1878, double %1884, double %1883)
  %1886 = fadd double %1881, %1885
  %1887 = fsub double %1886, %1881
  %1888 = fsub double %1885, %1887
  %1889 = call double @llvm.fma.f64(double %1886, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1890 = call double @llvm.fma.f64(double %1886, double %1889, double 0x3FBE25E43ABE935A)
  %1891 = call double @llvm.fma.f64(double %1886, double %1890, double 0x3FC110EF47E6C9C2)
  %1892 = call double @llvm.fma.f64(double %1886, double %1891, double 0x3FC3B13BCFA74449)
  %1893 = call double @llvm.fma.f64(double %1886, double %1892, double 0x3FC745D171BF3C30)
  %1894 = call double @llvm.fma.f64(double %1886, double %1893, double 0x3FCC71C71C7792CE)
  %1895 = call double @llvm.fma.f64(double %1886, double %1894, double 0x3FD24924924920DA)
  %1896 = call double @llvm.fma.f64(double %1886, double %1895, double 0x3FD999999999999C)
  %1897 = sitofp i32 %1853 to double
  %1898 = fmul double %1897, 0x3FE62E42FEFA39EF
  %1899 = fneg double %1898
  %1900 = call double @llvm.fma.f64(double %1897, double 0x3FE62E42FEFA39EF, double %1899)
  %1901 = call double @llvm.fma.f64(double %1897, double 0x3C7ABC9E3B39803F, double %1900)
  %1902 = fadd double %1898, %1901
  %1903 = fsub double %1902, %1898
  %1904 = fsub double %1901, %1903
  %1905 = call double @llvm.ldexp.f64.i32(double %1878, i32 1)
  %1906 = call double @llvm.ldexp.f64.i32(double %1880, i32 1)
  %1907 = fmul double %1878, %1886
  %1908 = fneg double %1907
  %1909 = call double @llvm.fma.f64(double %1886, double %1878, double %1908)
  %1910 = call double @llvm.fma.f64(double %1886, double %1880, double %1909)
  %1911 = call double @llvm.fma.f64(double %1888, double %1878, double %1910)
  %1912 = fadd double %1907, %1911
  %1913 = fsub double %1912, %1907
  %1914 = fsub double %1911, %1913
  %1915 = fmul double %1886, %1896
  %1916 = fneg double %1915
  %1917 = call double @llvm.fma.f64(double %1886, double %1896, double %1916)
  %1918 = call double @llvm.fma.f64(double %1888, double %1896, double %1917)
  %1919 = fadd double %1915, %1918
  %1920 = fsub double %1919, %1915
  %1921 = fsub double %1918, %1920
  %1922 = fadd double %1919, 0x3FE5555555555555
  %1923 = fadd double %1922, 0xBFE5555555555555
  %1924 = fsub double %1919, %1923
  %1925 = fadd double %1921, 0x3C8543B0D5DF274D
  %1926 = fadd double %1925, %1924
  %1927 = fadd double %1922, %1926
  %1928 = fsub double %1922, %1927
  %1929 = fadd double %1926, %1928
  %1930 = fmul double %1912, %1927
  %1931 = fneg double %1930
  %1932 = call double @llvm.fma.f64(double %1912, double %1927, double %1931)
  %1933 = call double @llvm.fma.f64(double %1912, double %1929, double %1932)
  %1934 = call double @llvm.fma.f64(double %1914, double %1927, double %1933)
  %1935 = fadd double %1930, %1934
  %1936 = fsub double %1935, %1930
  %1937 = fsub double %1934, %1936
  %1938 = fadd double %1905, %1935
  %1939 = fsub double %1938, %1905
  %1940 = fsub double %1935, %1939
  %1941 = fadd double %1906, %1937
  %1942 = fadd double %1941, %1940
  %1943 = fadd double %1938, %1942
  %1944 = fsub double %1943, %1938
  %1945 = fsub double %1942, %1944
  %1946 = fadd double %1902, %1943
  %1947 = fsub double %1946, %1902
  %1948 = fsub double %1946, %1947
  %1949 = fsub double %1902, %1948
  %1950 = fsub double %1943, %1947
  %1951 = fadd double %1950, %1949
  %1952 = fadd double %1904, %1945
  %1953 = fsub double %1952, %1904
  %1954 = fsub double %1952, %1953
  %1955 = fsub double %1904, %1954
  %1956 = fsub double %1945, %1953
  %1957 = fadd double %1956, %1955
  %1958 = fadd double %1952, %1951
  %1959 = fadd double %1946, %1958
  %1960 = fsub double %1959, %1946
  %1961 = fsub double %1958, %1960
  %1962 = fadd double %1957, %1961
  %1963 = fadd double %1959, %1962
  %1964 = fsub double %1963, %1959
  %1965 = fsub double %1962, %1964
  %1966 = fmul double %1846, %1963
  %1967 = fneg double %1966
  %1968 = call double @llvm.fma.f64(double %1846, double %1963, double %1967) #9
  %1969 = call double @llvm.fma.f64(double %1846, double %1965, double %1968) #9
  %1970 = fadd double %1966, %1969
  %1971 = fsub double %1970, %1966
  %1972 = fsub double %1969, %1971
  %1973 = call double @llvm.fabs.f64(double %1966) #9
  %1974 = fcmp oeq double %1973, 0x7FF0000000000000
  %1975 = select i1 %1974, double %1966, double %1970
  %1976 = call double @llvm.fabs.f64(double %1975) #9
  %1977 = fcmp oeq double %1976, 0x7FF0000000000000
  %1978 = select i1 %1977, double 0.000000e+00, double %1972
  %1979 = fmul double %1975, 0x3FF71547652B82FE
  %1980 = call double @llvm.rint.f64(double %1979)
  %1981 = fneg double %1980
  %1982 = call double @llvm.fma.f64(double %1981, double 0x3FE62E42FEFA39EF, double %1975)
  %1983 = call double @llvm.fma.f64(double %1981, double 0x3C7ABC9E3B39803F, double %1982)
  %1984 = call double @llvm.fma.f64(double %1983, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1985 = call double @llvm.fma.f64(double %1983, double %1984, double 0x3EC71DEE623FDE64)
  %1986 = call double @llvm.fma.f64(double %1983, double %1985, double 0x3EFA01997C89E6B0)
  %1987 = call double @llvm.fma.f64(double %1983, double %1986, double 0x3F2A01A014761F6E)
  %1988 = call double @llvm.fma.f64(double %1983, double %1987, double 0x3F56C16C1852B7B0)
  %1989 = call double @llvm.fma.f64(double %1983, double %1988, double 0x3F81111111122322)
  %1990 = call double @llvm.fma.f64(double %1983, double %1989, double 0x3FA55555555502A1)
  %1991 = call double @llvm.fma.f64(double %1983, double %1990, double 0x3FC5555555555511)
  %1992 = call double @llvm.fma.f64(double %1983, double %1991, double 0x3FE000000000000B)
  %1993 = call double @llvm.fma.f64(double %1983, double %1992, double 1.000000e+00)
  %1994 = call double @llvm.fma.f64(double %1983, double %1993, double 1.000000e+00)
  %1995 = fptosi double %1980 to i32
  %1996 = call double @llvm.ldexp.f64.i32(double %1994, i32 %1995)
  %1997 = fcmp ogt double %1975, 1.024000e+03
  %1998 = select i1 %1997, double 0x7FF0000000000000, double %1996
  %1999 = fcmp olt double %1975, -1.075000e+03
  %2000 = select i1 %1999, double 0.000000e+00, double %1998
  %2001 = call double @llvm.fma.f64(double %2000, double %1978, double %2000) #9
  %2002 = call double @llvm.fabs.f64(double %2000) #9
  %2003 = fcmp oeq double %2002, 0x7FF0000000000000
  %2004 = select i1 %2003, double %2000, double %2001
  %2005 = call double @llvm.trunc.f64(double %1846) #9
  %2006 = fcmp oeq double %2005, %1846
  %2007 = fmul double %1846, 5.000000e-01
  %2008 = call double @llvm.trunc.f64(double %2007) #9
  %2009 = fcmp une double %2008, %2007
  %2010 = and i1 %2006, %2009
  %2011 = select i1 %2010, double %sub41.i.i, double 1.000000e+00
  %2012 = call double @llvm.copysign.f64(double %2004, double %2011) #9
  %2013 = fcmp olt double %sub41.i.i, 0.000000e+00
  %2014 = select i1 %2006, double %2012, double 0x7FF8000000000000
  %2015 = select i1 %2013, double %2014, double %2012
  %2016 = fcmp oeq double %1847, 0x7FF0000000000000
  %2017 = fcmp oeq double %sub41.i.i, 0.000000e+00
  %2018 = or i1 %2017, %2016
  %2019 = select i1 %2017, double 0.000000e+00, double 0x7FF0000000000000
  %2020 = select i1 %2010, double %sub41.i.i, double 0.000000e+00
  %2021 = call double @llvm.copysign.f64(double %2019, double %2020) #9
  %2022 = select i1 %2018, double %2021, double %2015
  %2023 = fcmp uno double %sub41.i.i, 0.000000e+00
  %2024 = select i1 %2023, double 0x7FF8000000000000, double %2022
  %add.i34.i.i = fadd double %2024, %1844
  %sub3.i35.i.i = fsub double %add53.i.i, %add53.i.i
  %2025 = fcmp oeq double %sub3.i35.i.i, 1.000000e+00
  %2026 = select i1 %2025, double 1.000000e+00, double 2.000000e+00
  %2027 = call double @llvm.fabs.f64(double %sub3.i35.i.i) #9
  %2028 = call double @llvm.amdgcn.frexp.mant.f64(double %2027)
  %2029 = fcmp olt double %2028, 0x3FE5555555555555
  %.neg.i.i.i2.i36.i.i = sext i1 %2029 to i32
  %2030 = select i1 %2029, double 2.000000e+00, double 1.000000e+00
  %2031 = fmul double %2028, %2030
  %2032 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %2027)
  %2033 = add i32 %2032, %.neg.i.i.i2.i36.i.i
  %2034 = fadd double %2031, -1.000000e+00
  %2035 = fadd double %2031, 1.000000e+00
  %2036 = fadd double %2035, -1.000000e+00
  %2037 = fsub double %2031, %2036
  %2038 = call double @llvm.amdgcn.rcp.f64(double %2035)
  %2039 = fneg double %2035
  %2040 = call double @llvm.fma.f64(double %2039, double %2038, double 1.000000e+00)
  %2041 = call double @llvm.fma.f64(double %2040, double %2038, double %2038)
  %2042 = call double @llvm.fma.f64(double %2039, double %2041, double 1.000000e+00)
  %2043 = call double @llvm.fma.f64(double %2042, double %2041, double %2041)
  %2044 = fmul double %2034, %2043
  %2045 = fmul double %2035, %2044
  %2046 = fneg double %2045
  %2047 = call double @llvm.fma.f64(double %2044, double %2035, double %2046)
  %2048 = call double @llvm.fma.f64(double %2044, double %2037, double %2047)
  %2049 = fadd double %2045, %2048
  %2050 = fsub double %2049, %2045
  %2051 = fsub double %2034, %2049
  %2052 = fsub double %2034, %2051
  %2053 = fsub double %2052, %2049
  %2054 = fsub double %2050, %2048
  %2055 = fadd double %2054, %2053
  %2056 = fadd double %2051, %2055
  %2057 = fmul double %2043, %2056
  %2058 = fadd double %2044, %2057
  %2059 = fsub double %2058, %2044
  %2060 = fsub double %2057, %2059
  %2061 = fmul double %2058, %2058
  %2062 = fneg double %2061
  %2063 = call double @llvm.fma.f64(double %2058, double %2058, double %2062)
  %2064 = fmul double %2060, 2.000000e+00
  %2065 = call double @llvm.fma.f64(double %2058, double %2064, double %2063)
  %2066 = fadd double %2061, %2065
  %2067 = fsub double %2066, %2061
  %2068 = fsub double %2065, %2067
  %2069 = call double @llvm.fma.f64(double %2066, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %2070 = call double @llvm.fma.f64(double %2066, double %2069, double 0x3FBE25E43ABE935A)
  %2071 = call double @llvm.fma.f64(double %2066, double %2070, double 0x3FC110EF47E6C9C2)
  %2072 = call double @llvm.fma.f64(double %2066, double %2071, double 0x3FC3B13BCFA74449)
  %2073 = call double @llvm.fma.f64(double %2066, double %2072, double 0x3FC745D171BF3C30)
  %2074 = call double @llvm.fma.f64(double %2066, double %2073, double 0x3FCC71C71C7792CE)
  %2075 = call double @llvm.fma.f64(double %2066, double %2074, double 0x3FD24924924920DA)
  %2076 = call double @llvm.fma.f64(double %2066, double %2075, double 0x3FD999999999999C)
  %2077 = sitofp i32 %2033 to double
  %2078 = fmul double %2077, 0x3FE62E42FEFA39EF
  %2079 = fneg double %2078
  %2080 = call double @llvm.fma.f64(double %2077, double 0x3FE62E42FEFA39EF, double %2079)
  %2081 = call double @llvm.fma.f64(double %2077, double 0x3C7ABC9E3B39803F, double %2080)
  %2082 = fadd double %2078, %2081
  %2083 = fsub double %2082, %2078
  %2084 = fsub double %2081, %2083
  %2085 = call double @llvm.ldexp.f64.i32(double %2058, i32 1)
  %2086 = call double @llvm.ldexp.f64.i32(double %2060, i32 1)
  %2087 = fmul double %2058, %2066
  %2088 = fneg double %2087
  %2089 = call double @llvm.fma.f64(double %2066, double %2058, double %2088)
  %2090 = call double @llvm.fma.f64(double %2066, double %2060, double %2089)
  %2091 = call double @llvm.fma.f64(double %2068, double %2058, double %2090)
  %2092 = fadd double %2087, %2091
  %2093 = fsub double %2092, %2087
  %2094 = fsub double %2091, %2093
  %2095 = fmul double %2066, %2076
  %2096 = fneg double %2095
  %2097 = call double @llvm.fma.f64(double %2066, double %2076, double %2096)
  %2098 = call double @llvm.fma.f64(double %2068, double %2076, double %2097)
  %2099 = fadd double %2095, %2098
  %2100 = fsub double %2099, %2095
  %2101 = fsub double %2098, %2100
  %2102 = fadd double %2099, 0x3FE5555555555555
  %2103 = fadd double %2102, 0xBFE5555555555555
  %2104 = fsub double %2099, %2103
  %2105 = fadd double %2101, 0x3C8543B0D5DF274D
  %2106 = fadd double %2105, %2104
  %2107 = fadd double %2102, %2106
  %2108 = fsub double %2102, %2107
  %2109 = fadd double %2106, %2108
  %2110 = fmul double %2092, %2107
  %2111 = fneg double %2110
  %2112 = call double @llvm.fma.f64(double %2092, double %2107, double %2111)
  %2113 = call double @llvm.fma.f64(double %2092, double %2109, double %2112)
  %2114 = call double @llvm.fma.f64(double %2094, double %2107, double %2113)
  %2115 = fadd double %2110, %2114
  %2116 = fsub double %2115, %2110
  %2117 = fsub double %2114, %2116
  %2118 = fadd double %2085, %2115
  %2119 = fsub double %2118, %2085
  %2120 = fsub double %2115, %2119
  %2121 = fadd double %2086, %2117
  %2122 = fadd double %2121, %2120
  %2123 = fadd double %2118, %2122
  %2124 = fsub double %2123, %2118
  %2125 = fsub double %2122, %2124
  %2126 = fadd double %2082, %2123
  %2127 = fsub double %2126, %2082
  %2128 = fsub double %2126, %2127
  %2129 = fsub double %2082, %2128
  %2130 = fsub double %2123, %2127
  %2131 = fadd double %2130, %2129
  %2132 = fadd double %2084, %2125
  %2133 = fsub double %2132, %2084
  %2134 = fsub double %2132, %2133
  %2135 = fsub double %2084, %2134
  %2136 = fsub double %2125, %2133
  %2137 = fadd double %2136, %2135
  %2138 = fadd double %2132, %2131
  %2139 = fadd double %2126, %2138
  %2140 = fsub double %2139, %2126
  %2141 = fsub double %2138, %2140
  %2142 = fadd double %2137, %2141
  %2143 = fadd double %2139, %2142
  %2144 = fsub double %2143, %2139
  %2145 = fsub double %2142, %2144
  %2146 = fmul double %2026, %2143
  %2147 = fneg double %2146
  %2148 = call double @llvm.fma.f64(double %2026, double %2143, double %2147) #9
  %2149 = call double @llvm.fma.f64(double %2026, double %2145, double %2148) #9
  %2150 = fadd double %2146, %2149
  %2151 = fsub double %2150, %2146
  %2152 = fsub double %2149, %2151
  %2153 = call double @llvm.fabs.f64(double %2146) #9
  %2154 = fcmp oeq double %2153, 0x7FF0000000000000
  %2155 = select i1 %2154, double %2146, double %2150
  %2156 = call double @llvm.fabs.f64(double %2155) #9
  %2157 = fcmp oeq double %2156, 0x7FF0000000000000
  %2158 = select i1 %2157, double 0.000000e+00, double %2152
  %2159 = fmul double %2155, 0x3FF71547652B82FE
  %2160 = call double @llvm.rint.f64(double %2159)
  %2161 = fneg double %2160
  %2162 = call double @llvm.fma.f64(double %2161, double 0x3FE62E42FEFA39EF, double %2155)
  %2163 = call double @llvm.fma.f64(double %2161, double 0x3C7ABC9E3B39803F, double %2162)
  %2164 = call double @llvm.fma.f64(double %2163, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2165 = call double @llvm.fma.f64(double %2163, double %2164, double 0x3EC71DEE623FDE64)
  %2166 = call double @llvm.fma.f64(double %2163, double %2165, double 0x3EFA01997C89E6B0)
  %2167 = call double @llvm.fma.f64(double %2163, double %2166, double 0x3F2A01A014761F6E)
  %2168 = call double @llvm.fma.f64(double %2163, double %2167, double 0x3F56C16C1852B7B0)
  %2169 = call double @llvm.fma.f64(double %2163, double %2168, double 0x3F81111111122322)
  %2170 = call double @llvm.fma.f64(double %2163, double %2169, double 0x3FA55555555502A1)
  %2171 = call double @llvm.fma.f64(double %2163, double %2170, double 0x3FC5555555555511)
  %2172 = call double @llvm.fma.f64(double %2163, double %2171, double 0x3FE000000000000B)
  %2173 = call double @llvm.fma.f64(double %2163, double %2172, double 1.000000e+00)
  %2174 = call double @llvm.fma.f64(double %2163, double %2173, double 1.000000e+00)
  %2175 = fptosi double %2160 to i32
  %2176 = call double @llvm.ldexp.f64.i32(double %2174, i32 %2175)
  %2177 = fcmp ogt double %2155, 1.024000e+03
  %2178 = select i1 %2177, double 0x7FF0000000000000, double %2176
  %2179 = fcmp olt double %2155, -1.075000e+03
  %2180 = select i1 %2179, double 0.000000e+00, double %2178
  %2181 = call double @llvm.fma.f64(double %2180, double %2158, double %2180) #9
  %2182 = call double @llvm.fabs.f64(double %2180) #9
  %2183 = fcmp oeq double %2182, 0x7FF0000000000000
  %2184 = select i1 %2183, double %2180, double %2181
  %2185 = call double @llvm.trunc.f64(double %2026) #9
  %2186 = fcmp oeq double %2185, %2026
  %2187 = fmul double %2026, 5.000000e-01
  %2188 = call double @llvm.trunc.f64(double %2187) #9
  %2189 = fcmp une double %2188, %2187
  %2190 = and i1 %2186, %2189
  %2191 = select i1 %2190, double %sub3.i35.i.i, double 1.000000e+00
  %2192 = call double @llvm.copysign.f64(double %2184, double %2191) #9
  %2193 = fcmp olt double %sub3.i35.i.i, 0.000000e+00
  %2194 = select i1 %2186, double %2192, double 0x7FF8000000000000
  %2195 = select i1 %2193, double %2194, double %2192
  %2196 = fcmp oeq double %2027, 0x7FF0000000000000
  %2197 = fcmp oeq double %sub3.i35.i.i, 0.000000e+00
  %2198 = or i1 %2197, %2196
  %2199 = select i1 %2197, double 0.000000e+00, double 0x7FF0000000000000
  %2200 = select i1 %2190, double %sub3.i35.i.i, double 0.000000e+00
  %2201 = call double @llvm.copysign.f64(double %2199, double %2200) #9
  %2202 = select i1 %2198, double %2201, double %2195
  %2203 = fcmp uno double %sub3.i35.i.i, 0.000000e+00
  %2204 = select i1 %2203, double 0x7FF8000000000000, double %2202
  %add5.i37.i.i = fadd double %2204, %add.i34.i.i
  %cmp.i38.i.i = fcmp olt double %add5.i37.i.i, %min_dist.0.i10.i
  br i1 %cmp.i38.i.i, label %if.then.i39.i.i, label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit42.i.i

if.then.i39.i.i:                                  ; preds = %if.then57.i.i
  store double %add46.i.i, ptr addrspace(5) %r0, align 8, !tbaa !35
  store double %1118, ptr addrspace(5) %9, align 8, !tbaa !37
  store double %add53.i.i, ptr addrspace(5) %10, align 8, !tbaa !38
  br label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit42.i.i

_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit42.i.i: ; preds = %if.then.i39.i.i, %if.then57.i.i
  %min_dist.5.i.i = phi double [ %add5.i37.i.i, %if.then.i39.i.i ], [ %min_dist.0.i10.i, %if.then57.i.i ]
  br i1 %cmp.i38.i.i, label %if.then59.i.i, label %if.end65.i.i

if.then59.i.i:                                    ; preds = %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit42.i.i
  %2205 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %this.val22.i.i = load ptr, ptr %2205, align 8, !tbaa !29
  %2206 = load double, ptr %lower_left_.val.i.i, align 8, !tbaa !30
  %sub.i44.i.i = fsub double %add46.i.i, %2206
  %2207 = load double, ptr %this.val22.i.i, align 8, !tbaa !30
  %div.i46.i.i = fdiv double %sub.i44.i.i, %2207
  %2208 = call noundef double @llvm.ceil.f64(double %div.i46.i.i) #9
  %conv5.i47.i.i = fptosi double %2208 to i32
  store i32 %conv5.i47.i.i, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %arrayidx62.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 4
  store i32 1, ptr addrspace(5) %arrayidx62.i.i, align 4, !tbaa !31
  br label %if.end65.i.i

if.end65.i.i:                                     ; preds = %if.then59.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit42.i.i, %if.then40.i.i, %lor.lhs.false36.i.i
  %min_dist.1.i11.i = phi double [ %min_dist.5.i.i, %if.then59.i.i ], [ %min_dist.5.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit42.i.i ], [ %min_dist.0.i10.i, %if.then40.i.i ], [ %min_dist.0.i10.i, %lor.lhs.false36.i.i ]
  %cmp66.i.i = fcmp olt double %32, %1119
  %cmp68.i.i = fcmp ogt double %retval.sroa.0.0.copyload.i78, %1119
  %or.cond12.i.i = select i1 %cmp66.i.i, i1 %cmp68.i.i, i1 false
  br i1 %or.cond12.i.i, label %if.then73.i.i, label %lor.lhs.false69.i.i

lor.lhs.false69.i.i:                              ; preds = %if.end65.i.i
  %cmp70.i.i = fcmp ogt double %32, %1119
  %cmp72.i.i = fcmp olt double %retval.sroa.0.0.copyload.i78, %1119
  %or.cond13.i.i = select i1 %cmp70.i.i, i1 %cmp72.i.i, i1 false
  br i1 %or.cond13.i.i, label %if.then73.i.i, label %if.end100.i.i

if.then73.i.i:                                    ; preds = %lor.lhs.false69.i.i, %if.end65.i.i
  %sub75.i.i = fsub double %1119, %32
  %sub76.i.i = fsub double %retval.sroa.2.0.copyload.i80, %33
  %mul77.i.i = fmul double %sub76.i.i, %sub75.i.i
  %sub78.i.i = fsub double %retval.sroa.0.0.copyload.i78, %32
  %div79.i.i = fdiv double %mul77.i.i, %sub78.i.i
  %add80.i.i = fadd double %33, %div79.i.i
  %sub83.i.i = fsub double %retval.sroa.3.0.copyload.i82, %34
  %mul84.i.i = fmul double %sub83.i.i, %sub75.i.i
  %div86.i.i = fdiv double %mul84.i.i, %sub78.i.i
  %add87.i.i = fadd double %34, %div86.i.i
  %cmp88.i.i = fcmp oge double %add80.i.i, %1118
  %cmp90.i.i = fcmp olt double %add80.i.i, %1120
  %or.cond14.i.i = select i1 %cmp88.i.i, i1 %cmp90.i.i, i1 false
  br i1 %or.cond14.i.i, label %if.then91.i.i, label %if.end100.i.i

if.then91.i.i:                                    ; preds = %if.then73.i.i
  %2209 = fcmp oeq double %sub75.i.i, 1.000000e+00
  %2210 = select i1 %2209, double 1.000000e+00, double 2.000000e+00
  %2211 = call double @llvm.fabs.f64(double %sub75.i.i) #9
  %2212 = call double @llvm.amdgcn.frexp.mant.f64(double %2211)
  %2213 = fcmp olt double %2212, 0x3FE5555555555555
  %.neg.i.i.i.i49.i.i = sext i1 %2213 to i32
  %2214 = select i1 %2213, double 2.000000e+00, double 1.000000e+00
  %2215 = fmul double %2212, %2214
  %2216 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %2211)
  %2217 = add i32 %2216, %.neg.i.i.i.i49.i.i
  %2218 = fadd double %2215, -1.000000e+00
  %2219 = fadd double %2215, 1.000000e+00
  %2220 = fadd double %2219, -1.000000e+00
  %2221 = fsub double %2215, %2220
  %2222 = call double @llvm.amdgcn.rcp.f64(double %2219)
  %2223 = fneg double %2219
  %2224 = call double @llvm.fma.f64(double %2223, double %2222, double 1.000000e+00)
  %2225 = call double @llvm.fma.f64(double %2224, double %2222, double %2222)
  %2226 = call double @llvm.fma.f64(double %2223, double %2225, double 1.000000e+00)
  %2227 = call double @llvm.fma.f64(double %2226, double %2225, double %2225)
  %2228 = fmul double %2218, %2227
  %2229 = fmul double %2219, %2228
  %2230 = fneg double %2229
  %2231 = call double @llvm.fma.f64(double %2228, double %2219, double %2230)
  %2232 = call double @llvm.fma.f64(double %2228, double %2221, double %2231)
  %2233 = fadd double %2229, %2232
  %2234 = fsub double %2233, %2229
  %2235 = fsub double %2218, %2233
  %2236 = fsub double %2218, %2235
  %2237 = fsub double %2236, %2233
  %2238 = fsub double %2234, %2232
  %2239 = fadd double %2238, %2237
  %2240 = fadd double %2235, %2239
  %2241 = fmul double %2227, %2240
  %2242 = fadd double %2228, %2241
  %2243 = fsub double %2242, %2228
  %2244 = fsub double %2241, %2243
  %2245 = fmul double %2242, %2242
  %2246 = fneg double %2245
  %2247 = call double @llvm.fma.f64(double %2242, double %2242, double %2246)
  %2248 = fmul double %2244, 2.000000e+00
  %2249 = call double @llvm.fma.f64(double %2242, double %2248, double %2247)
  %2250 = fadd double %2245, %2249
  %2251 = fsub double %2250, %2245
  %2252 = fsub double %2249, %2251
  %2253 = call double @llvm.fma.f64(double %2250, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %2254 = call double @llvm.fma.f64(double %2250, double %2253, double 0x3FBE25E43ABE935A)
  %2255 = call double @llvm.fma.f64(double %2250, double %2254, double 0x3FC110EF47E6C9C2)
  %2256 = call double @llvm.fma.f64(double %2250, double %2255, double 0x3FC3B13BCFA74449)
  %2257 = call double @llvm.fma.f64(double %2250, double %2256, double 0x3FC745D171BF3C30)
  %2258 = call double @llvm.fma.f64(double %2250, double %2257, double 0x3FCC71C71C7792CE)
  %2259 = call double @llvm.fma.f64(double %2250, double %2258, double 0x3FD24924924920DA)
  %2260 = call double @llvm.fma.f64(double %2250, double %2259, double 0x3FD999999999999C)
  %2261 = sitofp i32 %2217 to double
  %2262 = fmul double %2261, 0x3FE62E42FEFA39EF
  %2263 = fneg double %2262
  %2264 = call double @llvm.fma.f64(double %2261, double 0x3FE62E42FEFA39EF, double %2263)
  %2265 = call double @llvm.fma.f64(double %2261, double 0x3C7ABC9E3B39803F, double %2264)
  %2266 = fadd double %2262, %2265
  %2267 = fsub double %2266, %2262
  %2268 = fsub double %2265, %2267
  %2269 = call double @llvm.ldexp.f64.i32(double %2242, i32 1)
  %2270 = call double @llvm.ldexp.f64.i32(double %2244, i32 1)
  %2271 = fmul double %2242, %2250
  %2272 = fneg double %2271
  %2273 = call double @llvm.fma.f64(double %2250, double %2242, double %2272)
  %2274 = call double @llvm.fma.f64(double %2250, double %2244, double %2273)
  %2275 = call double @llvm.fma.f64(double %2252, double %2242, double %2274)
  %2276 = fadd double %2271, %2275
  %2277 = fsub double %2276, %2271
  %2278 = fsub double %2275, %2277
  %2279 = fmul double %2250, %2260
  %2280 = fneg double %2279
  %2281 = call double @llvm.fma.f64(double %2250, double %2260, double %2280)
  %2282 = call double @llvm.fma.f64(double %2252, double %2260, double %2281)
  %2283 = fadd double %2279, %2282
  %2284 = fsub double %2283, %2279
  %2285 = fsub double %2282, %2284
  %2286 = fadd double %2283, 0x3FE5555555555555
  %2287 = fadd double %2286, 0xBFE5555555555555
  %2288 = fsub double %2283, %2287
  %2289 = fadd double %2285, 0x3C8543B0D5DF274D
  %2290 = fadd double %2289, %2288
  %2291 = fadd double %2286, %2290
  %2292 = fsub double %2286, %2291
  %2293 = fadd double %2290, %2292
  %2294 = fmul double %2276, %2291
  %2295 = fneg double %2294
  %2296 = call double @llvm.fma.f64(double %2276, double %2291, double %2295)
  %2297 = call double @llvm.fma.f64(double %2276, double %2293, double %2296)
  %2298 = call double @llvm.fma.f64(double %2278, double %2291, double %2297)
  %2299 = fadd double %2294, %2298
  %2300 = fsub double %2299, %2294
  %2301 = fsub double %2298, %2300
  %2302 = fadd double %2269, %2299
  %2303 = fsub double %2302, %2269
  %2304 = fsub double %2299, %2303
  %2305 = fadd double %2270, %2301
  %2306 = fadd double %2305, %2304
  %2307 = fadd double %2302, %2306
  %2308 = fsub double %2307, %2302
  %2309 = fsub double %2306, %2308
  %2310 = fadd double %2266, %2307
  %2311 = fsub double %2310, %2266
  %2312 = fsub double %2310, %2311
  %2313 = fsub double %2266, %2312
  %2314 = fsub double %2307, %2311
  %2315 = fadd double %2314, %2313
  %2316 = fadd double %2268, %2309
  %2317 = fsub double %2316, %2268
  %2318 = fsub double %2316, %2317
  %2319 = fsub double %2268, %2318
  %2320 = fsub double %2309, %2317
  %2321 = fadd double %2320, %2319
  %2322 = fadd double %2316, %2315
  %2323 = fadd double %2310, %2322
  %2324 = fsub double %2323, %2310
  %2325 = fsub double %2322, %2324
  %2326 = fadd double %2321, %2325
  %2327 = fadd double %2323, %2326
  %2328 = fsub double %2327, %2323
  %2329 = fsub double %2326, %2328
  %2330 = fmul double %2210, %2327
  %2331 = fneg double %2330
  %2332 = call double @llvm.fma.f64(double %2210, double %2327, double %2331) #9
  %2333 = call double @llvm.fma.f64(double %2210, double %2329, double %2332) #9
  %2334 = fadd double %2330, %2333
  %2335 = fsub double %2334, %2330
  %2336 = fsub double %2333, %2335
  %2337 = call double @llvm.fabs.f64(double %2330) #9
  %2338 = fcmp oeq double %2337, 0x7FF0000000000000
  %2339 = select i1 %2338, double %2330, double %2334
  %2340 = call double @llvm.fabs.f64(double %2339) #9
  %2341 = fcmp oeq double %2340, 0x7FF0000000000000
  %2342 = select i1 %2341, double 0.000000e+00, double %2336
  %2343 = fmul double %2339, 0x3FF71547652B82FE
  %2344 = call double @llvm.rint.f64(double %2343)
  %2345 = fneg double %2344
  %2346 = call double @llvm.fma.f64(double %2345, double 0x3FE62E42FEFA39EF, double %2339)
  %2347 = call double @llvm.fma.f64(double %2345, double 0x3C7ABC9E3B39803F, double %2346)
  %2348 = call double @llvm.fma.f64(double %2347, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2349 = call double @llvm.fma.f64(double %2347, double %2348, double 0x3EC71DEE623FDE64)
  %2350 = call double @llvm.fma.f64(double %2347, double %2349, double 0x3EFA01997C89E6B0)
  %2351 = call double @llvm.fma.f64(double %2347, double %2350, double 0x3F2A01A014761F6E)
  %2352 = call double @llvm.fma.f64(double %2347, double %2351, double 0x3F56C16C1852B7B0)
  %2353 = call double @llvm.fma.f64(double %2347, double %2352, double 0x3F81111111122322)
  %2354 = call double @llvm.fma.f64(double %2347, double %2353, double 0x3FA55555555502A1)
  %2355 = call double @llvm.fma.f64(double %2347, double %2354, double 0x3FC5555555555511)
  %2356 = call double @llvm.fma.f64(double %2347, double %2355, double 0x3FE000000000000B)
  %2357 = call double @llvm.fma.f64(double %2347, double %2356, double 1.000000e+00)
  %2358 = call double @llvm.fma.f64(double %2347, double %2357, double 1.000000e+00)
  %2359 = fptosi double %2344 to i32
  %2360 = call double @llvm.ldexp.f64.i32(double %2358, i32 %2359)
  %2361 = fcmp ogt double %2339, 1.024000e+03
  %2362 = select i1 %2361, double 0x7FF0000000000000, double %2360
  %2363 = fcmp olt double %2339, -1.075000e+03
  %2364 = select i1 %2363, double 0.000000e+00, double %2362
  %2365 = call double @llvm.fma.f64(double %2364, double %2342, double %2364) #9
  %2366 = call double @llvm.fabs.f64(double %2364) #9
  %2367 = fcmp oeq double %2366, 0x7FF0000000000000
  %2368 = select i1 %2367, double %2364, double %2365
  %2369 = call double @llvm.trunc.f64(double %2210) #9
  %2370 = fcmp oeq double %2369, %2210
  %2371 = fmul double %2210, 5.000000e-01
  %2372 = call double @llvm.trunc.f64(double %2371) #9
  %2373 = fcmp une double %2372, %2371
  %2374 = and i1 %2370, %2373
  %2375 = select i1 %2374, double %sub75.i.i, double 1.000000e+00
  %2376 = call double @llvm.copysign.f64(double %2368, double %2375) #9
  %2377 = fcmp olt double %sub75.i.i, 0.000000e+00
  %2378 = select i1 %2370, double %2376, double 0x7FF8000000000000
  %2379 = select i1 %2377, double %2378, double %2376
  %2380 = fcmp oeq double %2211, 0x7FF0000000000000
  %2381 = fcmp oeq double %sub75.i.i, 0.000000e+00
  %2382 = or i1 %2381, %2380
  %2383 = select i1 %2381, double 0.000000e+00, double 0x7FF0000000000000
  %2384 = select i1 %2374, double %sub75.i.i, double 0.000000e+00
  %2385 = call double @llvm.copysign.f64(double %2383, double %2384) #9
  %2386 = select i1 %2382, double %2385, double %2379
  %2387 = fcmp uno double %sub75.i.i, 0.000000e+00
  %2388 = select i1 %2387, double 0x7FF8000000000000, double %2386
  %sub1.i50.i.i = fsub double %add80.i.i, %33
  %2389 = fcmp oeq double %sub1.i50.i.i, 1.000000e+00
  %2390 = select i1 %2389, double 1.000000e+00, double 2.000000e+00
  %2391 = call double @llvm.fabs.f64(double %sub1.i50.i.i) #9
  %2392 = call double @llvm.amdgcn.frexp.mant.f64(double %2391)
  %2393 = fcmp olt double %2392, 0x3FE5555555555555
  %.neg.i.i.i1.i51.i.i = sext i1 %2393 to i32
  %2394 = select i1 %2393, double 2.000000e+00, double 1.000000e+00
  %2395 = fmul double %2392, %2394
  %2396 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %2391)
  %2397 = add i32 %2396, %.neg.i.i.i1.i51.i.i
  %2398 = fadd double %2395, -1.000000e+00
  %2399 = fadd double %2395, 1.000000e+00
  %2400 = fadd double %2399, -1.000000e+00
  %2401 = fsub double %2395, %2400
  %2402 = call double @llvm.amdgcn.rcp.f64(double %2399)
  %2403 = fneg double %2399
  %2404 = call double @llvm.fma.f64(double %2403, double %2402, double 1.000000e+00)
  %2405 = call double @llvm.fma.f64(double %2404, double %2402, double %2402)
  %2406 = call double @llvm.fma.f64(double %2403, double %2405, double 1.000000e+00)
  %2407 = call double @llvm.fma.f64(double %2406, double %2405, double %2405)
  %2408 = fmul double %2398, %2407
  %2409 = fmul double %2399, %2408
  %2410 = fneg double %2409
  %2411 = call double @llvm.fma.f64(double %2408, double %2399, double %2410)
  %2412 = call double @llvm.fma.f64(double %2408, double %2401, double %2411)
  %2413 = fadd double %2409, %2412
  %2414 = fsub double %2413, %2409
  %2415 = fsub double %2398, %2413
  %2416 = fsub double %2398, %2415
  %2417 = fsub double %2416, %2413
  %2418 = fsub double %2414, %2412
  %2419 = fadd double %2418, %2417
  %2420 = fadd double %2415, %2419
  %2421 = fmul double %2407, %2420
  %2422 = fadd double %2408, %2421
  %2423 = fsub double %2422, %2408
  %2424 = fsub double %2421, %2423
  %2425 = fmul double %2422, %2422
  %2426 = fneg double %2425
  %2427 = call double @llvm.fma.f64(double %2422, double %2422, double %2426)
  %2428 = fmul double %2424, 2.000000e+00
  %2429 = call double @llvm.fma.f64(double %2422, double %2428, double %2427)
  %2430 = fadd double %2425, %2429
  %2431 = fsub double %2430, %2425
  %2432 = fsub double %2429, %2431
  %2433 = call double @llvm.fma.f64(double %2430, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %2434 = call double @llvm.fma.f64(double %2430, double %2433, double 0x3FBE25E43ABE935A)
  %2435 = call double @llvm.fma.f64(double %2430, double %2434, double 0x3FC110EF47E6C9C2)
  %2436 = call double @llvm.fma.f64(double %2430, double %2435, double 0x3FC3B13BCFA74449)
  %2437 = call double @llvm.fma.f64(double %2430, double %2436, double 0x3FC745D171BF3C30)
  %2438 = call double @llvm.fma.f64(double %2430, double %2437, double 0x3FCC71C71C7792CE)
  %2439 = call double @llvm.fma.f64(double %2430, double %2438, double 0x3FD24924924920DA)
  %2440 = call double @llvm.fma.f64(double %2430, double %2439, double 0x3FD999999999999C)
  %2441 = sitofp i32 %2397 to double
  %2442 = fmul double %2441, 0x3FE62E42FEFA39EF
  %2443 = fneg double %2442
  %2444 = call double @llvm.fma.f64(double %2441, double 0x3FE62E42FEFA39EF, double %2443)
  %2445 = call double @llvm.fma.f64(double %2441, double 0x3C7ABC9E3B39803F, double %2444)
  %2446 = fadd double %2442, %2445
  %2447 = fsub double %2446, %2442
  %2448 = fsub double %2445, %2447
  %2449 = call double @llvm.ldexp.f64.i32(double %2422, i32 1)
  %2450 = call double @llvm.ldexp.f64.i32(double %2424, i32 1)
  %2451 = fmul double %2422, %2430
  %2452 = fneg double %2451
  %2453 = call double @llvm.fma.f64(double %2430, double %2422, double %2452)
  %2454 = call double @llvm.fma.f64(double %2430, double %2424, double %2453)
  %2455 = call double @llvm.fma.f64(double %2432, double %2422, double %2454)
  %2456 = fadd double %2451, %2455
  %2457 = fsub double %2456, %2451
  %2458 = fsub double %2455, %2457
  %2459 = fmul double %2430, %2440
  %2460 = fneg double %2459
  %2461 = call double @llvm.fma.f64(double %2430, double %2440, double %2460)
  %2462 = call double @llvm.fma.f64(double %2432, double %2440, double %2461)
  %2463 = fadd double %2459, %2462
  %2464 = fsub double %2463, %2459
  %2465 = fsub double %2462, %2464
  %2466 = fadd double %2463, 0x3FE5555555555555
  %2467 = fadd double %2466, 0xBFE5555555555555
  %2468 = fsub double %2463, %2467
  %2469 = fadd double %2465, 0x3C8543B0D5DF274D
  %2470 = fadd double %2469, %2468
  %2471 = fadd double %2466, %2470
  %2472 = fsub double %2466, %2471
  %2473 = fadd double %2470, %2472
  %2474 = fmul double %2456, %2471
  %2475 = fneg double %2474
  %2476 = call double @llvm.fma.f64(double %2456, double %2471, double %2475)
  %2477 = call double @llvm.fma.f64(double %2456, double %2473, double %2476)
  %2478 = call double @llvm.fma.f64(double %2458, double %2471, double %2477)
  %2479 = fadd double %2474, %2478
  %2480 = fsub double %2479, %2474
  %2481 = fsub double %2478, %2480
  %2482 = fadd double %2449, %2479
  %2483 = fsub double %2482, %2449
  %2484 = fsub double %2479, %2483
  %2485 = fadd double %2450, %2481
  %2486 = fadd double %2485, %2484
  %2487 = fadd double %2482, %2486
  %2488 = fsub double %2487, %2482
  %2489 = fsub double %2486, %2488
  %2490 = fadd double %2446, %2487
  %2491 = fsub double %2490, %2446
  %2492 = fsub double %2490, %2491
  %2493 = fsub double %2446, %2492
  %2494 = fsub double %2487, %2491
  %2495 = fadd double %2494, %2493
  %2496 = fadd double %2448, %2489
  %2497 = fsub double %2496, %2448
  %2498 = fsub double %2496, %2497
  %2499 = fsub double %2448, %2498
  %2500 = fsub double %2489, %2497
  %2501 = fadd double %2500, %2499
  %2502 = fadd double %2496, %2495
  %2503 = fadd double %2490, %2502
  %2504 = fsub double %2503, %2490
  %2505 = fsub double %2502, %2504
  %2506 = fadd double %2501, %2505
  %2507 = fadd double %2503, %2506
  %2508 = fsub double %2507, %2503
  %2509 = fsub double %2506, %2508
  %2510 = fmul double %2390, %2507
  %2511 = fneg double %2510
  %2512 = call double @llvm.fma.f64(double %2390, double %2507, double %2511) #9
  %2513 = call double @llvm.fma.f64(double %2390, double %2509, double %2512) #9
  %2514 = fadd double %2510, %2513
  %2515 = fsub double %2514, %2510
  %2516 = fsub double %2513, %2515
  %2517 = call double @llvm.fabs.f64(double %2510) #9
  %2518 = fcmp oeq double %2517, 0x7FF0000000000000
  %2519 = select i1 %2518, double %2510, double %2514
  %2520 = call double @llvm.fabs.f64(double %2519) #9
  %2521 = fcmp oeq double %2520, 0x7FF0000000000000
  %2522 = select i1 %2521, double 0.000000e+00, double %2516
  %2523 = fmul double %2519, 0x3FF71547652B82FE
  %2524 = call double @llvm.rint.f64(double %2523)
  %2525 = fneg double %2524
  %2526 = call double @llvm.fma.f64(double %2525, double 0x3FE62E42FEFA39EF, double %2519)
  %2527 = call double @llvm.fma.f64(double %2525, double 0x3C7ABC9E3B39803F, double %2526)
  %2528 = call double @llvm.fma.f64(double %2527, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2529 = call double @llvm.fma.f64(double %2527, double %2528, double 0x3EC71DEE623FDE64)
  %2530 = call double @llvm.fma.f64(double %2527, double %2529, double 0x3EFA01997C89E6B0)
  %2531 = call double @llvm.fma.f64(double %2527, double %2530, double 0x3F2A01A014761F6E)
  %2532 = call double @llvm.fma.f64(double %2527, double %2531, double 0x3F56C16C1852B7B0)
  %2533 = call double @llvm.fma.f64(double %2527, double %2532, double 0x3F81111111122322)
  %2534 = call double @llvm.fma.f64(double %2527, double %2533, double 0x3FA55555555502A1)
  %2535 = call double @llvm.fma.f64(double %2527, double %2534, double 0x3FC5555555555511)
  %2536 = call double @llvm.fma.f64(double %2527, double %2535, double 0x3FE000000000000B)
  %2537 = call double @llvm.fma.f64(double %2527, double %2536, double 1.000000e+00)
  %2538 = call double @llvm.fma.f64(double %2527, double %2537, double 1.000000e+00)
  %2539 = fptosi double %2524 to i32
  %2540 = call double @llvm.ldexp.f64.i32(double %2538, i32 %2539)
  %2541 = fcmp ogt double %2519, 1.024000e+03
  %2542 = select i1 %2541, double 0x7FF0000000000000, double %2540
  %2543 = fcmp olt double %2519, -1.075000e+03
  %2544 = select i1 %2543, double 0.000000e+00, double %2542
  %2545 = call double @llvm.fma.f64(double %2544, double %2522, double %2544) #9
  %2546 = call double @llvm.fabs.f64(double %2544) #9
  %2547 = fcmp oeq double %2546, 0x7FF0000000000000
  %2548 = select i1 %2547, double %2544, double %2545
  %2549 = call double @llvm.trunc.f64(double %2390) #9
  %2550 = fcmp oeq double %2549, %2390
  %2551 = fmul double %2390, 5.000000e-01
  %2552 = call double @llvm.trunc.f64(double %2551) #9
  %2553 = fcmp une double %2552, %2551
  %2554 = and i1 %2550, %2553
  %2555 = select i1 %2554, double %sub1.i50.i.i, double 1.000000e+00
  %2556 = call double @llvm.copysign.f64(double %2548, double %2555) #9
  %2557 = fcmp olt double %sub1.i50.i.i, 0.000000e+00
  %2558 = select i1 %2550, double %2556, double 0x7FF8000000000000
  %2559 = select i1 %2557, double %2558, double %2556
  %2560 = fcmp oeq double %2391, 0x7FF0000000000000
  %2561 = fcmp oeq double %sub1.i50.i.i, 0.000000e+00
  %2562 = or i1 %2561, %2560
  %2563 = select i1 %2561, double 0.000000e+00, double 0x7FF0000000000000
  %2564 = select i1 %2554, double %sub1.i50.i.i, double 0.000000e+00
  %2565 = call double @llvm.copysign.f64(double %2563, double %2564) #9
  %2566 = select i1 %2562, double %2565, double %2559
  %2567 = fcmp uno double %sub1.i50.i.i, 0.000000e+00
  %2568 = select i1 %2567, double 0x7FF8000000000000, double %2566
  %add.i52.i.i = fadd double %2388, %2568
  %sub3.i53.i.i = fsub double %add87.i.i, %add87.i.i
  %2569 = fcmp oeq double %sub3.i53.i.i, 1.000000e+00
  %2570 = select i1 %2569, double 1.000000e+00, double 2.000000e+00
  %2571 = call double @llvm.fabs.f64(double %sub3.i53.i.i) #9
  %2572 = call double @llvm.amdgcn.frexp.mant.f64(double %2571)
  %2573 = fcmp olt double %2572, 0x3FE5555555555555
  %.neg.i.i.i2.i54.i.i = sext i1 %2573 to i32
  %2574 = select i1 %2573, double 2.000000e+00, double 1.000000e+00
  %2575 = fmul double %2572, %2574
  %2576 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %2571)
  %2577 = add i32 %2576, %.neg.i.i.i2.i54.i.i
  %2578 = fadd double %2575, -1.000000e+00
  %2579 = fadd double %2575, 1.000000e+00
  %2580 = fadd double %2579, -1.000000e+00
  %2581 = fsub double %2575, %2580
  %2582 = call double @llvm.amdgcn.rcp.f64(double %2579)
  %2583 = fneg double %2579
  %2584 = call double @llvm.fma.f64(double %2583, double %2582, double 1.000000e+00)
  %2585 = call double @llvm.fma.f64(double %2584, double %2582, double %2582)
  %2586 = call double @llvm.fma.f64(double %2583, double %2585, double 1.000000e+00)
  %2587 = call double @llvm.fma.f64(double %2586, double %2585, double %2585)
  %2588 = fmul double %2578, %2587
  %2589 = fmul double %2579, %2588
  %2590 = fneg double %2589
  %2591 = call double @llvm.fma.f64(double %2588, double %2579, double %2590)
  %2592 = call double @llvm.fma.f64(double %2588, double %2581, double %2591)
  %2593 = fadd double %2589, %2592
  %2594 = fsub double %2593, %2589
  %2595 = fsub double %2578, %2593
  %2596 = fsub double %2578, %2595
  %2597 = fsub double %2596, %2593
  %2598 = fsub double %2594, %2592
  %2599 = fadd double %2598, %2597
  %2600 = fadd double %2595, %2599
  %2601 = fmul double %2587, %2600
  %2602 = fadd double %2588, %2601
  %2603 = fsub double %2602, %2588
  %2604 = fsub double %2601, %2603
  %2605 = fmul double %2602, %2602
  %2606 = fneg double %2605
  %2607 = call double @llvm.fma.f64(double %2602, double %2602, double %2606)
  %2608 = fmul double %2604, 2.000000e+00
  %2609 = call double @llvm.fma.f64(double %2602, double %2608, double %2607)
  %2610 = fadd double %2605, %2609
  %2611 = fsub double %2610, %2605
  %2612 = fsub double %2609, %2611
  %2613 = call double @llvm.fma.f64(double %2610, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %2614 = call double @llvm.fma.f64(double %2610, double %2613, double 0x3FBE25E43ABE935A)
  %2615 = call double @llvm.fma.f64(double %2610, double %2614, double 0x3FC110EF47E6C9C2)
  %2616 = call double @llvm.fma.f64(double %2610, double %2615, double 0x3FC3B13BCFA74449)
  %2617 = call double @llvm.fma.f64(double %2610, double %2616, double 0x3FC745D171BF3C30)
  %2618 = call double @llvm.fma.f64(double %2610, double %2617, double 0x3FCC71C71C7792CE)
  %2619 = call double @llvm.fma.f64(double %2610, double %2618, double 0x3FD24924924920DA)
  %2620 = call double @llvm.fma.f64(double %2610, double %2619, double 0x3FD999999999999C)
  %2621 = sitofp i32 %2577 to double
  %2622 = fmul double %2621, 0x3FE62E42FEFA39EF
  %2623 = fneg double %2622
  %2624 = call double @llvm.fma.f64(double %2621, double 0x3FE62E42FEFA39EF, double %2623)
  %2625 = call double @llvm.fma.f64(double %2621, double 0x3C7ABC9E3B39803F, double %2624)
  %2626 = fadd double %2622, %2625
  %2627 = fsub double %2626, %2622
  %2628 = fsub double %2625, %2627
  %2629 = call double @llvm.ldexp.f64.i32(double %2602, i32 1)
  %2630 = call double @llvm.ldexp.f64.i32(double %2604, i32 1)
  %2631 = fmul double %2602, %2610
  %2632 = fneg double %2631
  %2633 = call double @llvm.fma.f64(double %2610, double %2602, double %2632)
  %2634 = call double @llvm.fma.f64(double %2610, double %2604, double %2633)
  %2635 = call double @llvm.fma.f64(double %2612, double %2602, double %2634)
  %2636 = fadd double %2631, %2635
  %2637 = fsub double %2636, %2631
  %2638 = fsub double %2635, %2637
  %2639 = fmul double %2610, %2620
  %2640 = fneg double %2639
  %2641 = call double @llvm.fma.f64(double %2610, double %2620, double %2640)
  %2642 = call double @llvm.fma.f64(double %2612, double %2620, double %2641)
  %2643 = fadd double %2639, %2642
  %2644 = fsub double %2643, %2639
  %2645 = fsub double %2642, %2644
  %2646 = fadd double %2643, 0x3FE5555555555555
  %2647 = fadd double %2646, 0xBFE5555555555555
  %2648 = fsub double %2643, %2647
  %2649 = fadd double %2645, 0x3C8543B0D5DF274D
  %2650 = fadd double %2649, %2648
  %2651 = fadd double %2646, %2650
  %2652 = fsub double %2646, %2651
  %2653 = fadd double %2650, %2652
  %2654 = fmul double %2636, %2651
  %2655 = fneg double %2654
  %2656 = call double @llvm.fma.f64(double %2636, double %2651, double %2655)
  %2657 = call double @llvm.fma.f64(double %2636, double %2653, double %2656)
  %2658 = call double @llvm.fma.f64(double %2638, double %2651, double %2657)
  %2659 = fadd double %2654, %2658
  %2660 = fsub double %2659, %2654
  %2661 = fsub double %2658, %2660
  %2662 = fadd double %2629, %2659
  %2663 = fsub double %2662, %2629
  %2664 = fsub double %2659, %2663
  %2665 = fadd double %2630, %2661
  %2666 = fadd double %2665, %2664
  %2667 = fadd double %2662, %2666
  %2668 = fsub double %2667, %2662
  %2669 = fsub double %2666, %2668
  %2670 = fadd double %2626, %2667
  %2671 = fsub double %2670, %2626
  %2672 = fsub double %2670, %2671
  %2673 = fsub double %2626, %2672
  %2674 = fsub double %2667, %2671
  %2675 = fadd double %2674, %2673
  %2676 = fadd double %2628, %2669
  %2677 = fsub double %2676, %2628
  %2678 = fsub double %2676, %2677
  %2679 = fsub double %2628, %2678
  %2680 = fsub double %2669, %2677
  %2681 = fadd double %2680, %2679
  %2682 = fadd double %2676, %2675
  %2683 = fadd double %2670, %2682
  %2684 = fsub double %2683, %2670
  %2685 = fsub double %2682, %2684
  %2686 = fadd double %2681, %2685
  %2687 = fadd double %2683, %2686
  %2688 = fsub double %2687, %2683
  %2689 = fsub double %2686, %2688
  %2690 = fmul double %2570, %2687
  %2691 = fneg double %2690
  %2692 = call double @llvm.fma.f64(double %2570, double %2687, double %2691) #9
  %2693 = call double @llvm.fma.f64(double %2570, double %2689, double %2692) #9
  %2694 = fadd double %2690, %2693
  %2695 = fsub double %2694, %2690
  %2696 = fsub double %2693, %2695
  %2697 = call double @llvm.fabs.f64(double %2690) #9
  %2698 = fcmp oeq double %2697, 0x7FF0000000000000
  %2699 = select i1 %2698, double %2690, double %2694
  %2700 = call double @llvm.fabs.f64(double %2699) #9
  %2701 = fcmp oeq double %2700, 0x7FF0000000000000
  %2702 = select i1 %2701, double 0.000000e+00, double %2696
  %2703 = fmul double %2699, 0x3FF71547652B82FE
  %2704 = call double @llvm.rint.f64(double %2703)
  %2705 = fneg double %2704
  %2706 = call double @llvm.fma.f64(double %2705, double 0x3FE62E42FEFA39EF, double %2699)
  %2707 = call double @llvm.fma.f64(double %2705, double 0x3C7ABC9E3B39803F, double %2706)
  %2708 = call double @llvm.fma.f64(double %2707, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2709 = call double @llvm.fma.f64(double %2707, double %2708, double 0x3EC71DEE623FDE64)
  %2710 = call double @llvm.fma.f64(double %2707, double %2709, double 0x3EFA01997C89E6B0)
  %2711 = call double @llvm.fma.f64(double %2707, double %2710, double 0x3F2A01A014761F6E)
  %2712 = call double @llvm.fma.f64(double %2707, double %2711, double 0x3F56C16C1852B7B0)
  %2713 = call double @llvm.fma.f64(double %2707, double %2712, double 0x3F81111111122322)
  %2714 = call double @llvm.fma.f64(double %2707, double %2713, double 0x3FA55555555502A1)
  %2715 = call double @llvm.fma.f64(double %2707, double %2714, double 0x3FC5555555555511)
  %2716 = call double @llvm.fma.f64(double %2707, double %2715, double 0x3FE000000000000B)
  %2717 = call double @llvm.fma.f64(double %2707, double %2716, double 1.000000e+00)
  %2718 = call double @llvm.fma.f64(double %2707, double %2717, double 1.000000e+00)
  %2719 = fptosi double %2704 to i32
  %2720 = call double @llvm.ldexp.f64.i32(double %2718, i32 %2719)
  %2721 = fcmp ogt double %2699, 1.024000e+03
  %2722 = select i1 %2721, double 0x7FF0000000000000, double %2720
  %2723 = fcmp olt double %2699, -1.075000e+03
  %2724 = select i1 %2723, double 0.000000e+00, double %2722
  %2725 = call double @llvm.fma.f64(double %2724, double %2702, double %2724) #9
  %2726 = call double @llvm.fabs.f64(double %2724) #9
  %2727 = fcmp oeq double %2726, 0x7FF0000000000000
  %2728 = select i1 %2727, double %2724, double %2725
  %2729 = call double @llvm.trunc.f64(double %2570) #9
  %2730 = fcmp oeq double %2729, %2570
  %2731 = fmul double %2570, 5.000000e-01
  %2732 = call double @llvm.trunc.f64(double %2731) #9
  %2733 = fcmp une double %2732, %2731
  %2734 = and i1 %2730, %2733
  %2735 = select i1 %2734, double %sub3.i53.i.i, double 1.000000e+00
  %2736 = call double @llvm.copysign.f64(double %2728, double %2735) #9
  %2737 = fcmp olt double %sub3.i53.i.i, 0.000000e+00
  %2738 = select i1 %2730, double %2736, double 0x7FF8000000000000
  %2739 = select i1 %2737, double %2738, double %2736
  %2740 = fcmp oeq double %2571, 0x7FF0000000000000
  %2741 = fcmp oeq double %sub3.i53.i.i, 0.000000e+00
  %2742 = or i1 %2741, %2740
  %2743 = select i1 %2741, double 0.000000e+00, double 0x7FF0000000000000
  %2744 = select i1 %2734, double %sub3.i53.i.i, double 0.000000e+00
  %2745 = call double @llvm.copysign.f64(double %2743, double %2744) #9
  %2746 = select i1 %2742, double %2745, double %2739
  %2747 = fcmp uno double %sub3.i53.i.i, 0.000000e+00
  %2748 = select i1 %2747, double 0x7FF8000000000000, double %2746
  %add5.i55.i.i = fadd double %2748, %add.i52.i.i
  %cmp.i56.i.i = fcmp olt double %add5.i55.i.i, %min_dist.1.i11.i
  br i1 %cmp.i56.i.i, label %if.then.i57.i.i, label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit60.i.i

if.then.i57.i.i:                                  ; preds = %if.then91.i.i
  store double %1119, ptr addrspace(5) %r0, align 8, !tbaa !35
  store double %add80.i.i, ptr addrspace(5) %9, align 8, !tbaa !37
  store double %add87.i.i, ptr addrspace(5) %10, align 8, !tbaa !38
  br label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit60.i.i

_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit60.i.i: ; preds = %if.then.i57.i.i, %if.then91.i.i
  %min_dist.6.i.i = phi double [ %add5.i55.i.i, %if.then.i57.i.i ], [ %min_dist.1.i11.i, %if.then91.i.i ]
  br i1 %cmp.i56.i.i, label %if.then93.i.i, label %if.end100.i.i

if.then93.i.i:                                    ; preds = %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit60.i.i
  %shape_.i14.i = getelementptr inbounds nuw i8, ptr %this, i64 56
  %shape_.val.i15.i = load ptr, ptr %shape_.i14.i, align 8, !tbaa !32
  %2749 = load i32, ptr %shape_.val.i15.i, align 4, !tbaa !31
  store i32 %2749, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %2750 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %this.val24.i.i = load ptr, ptr %2750, align 8, !tbaa !29
  %2751 = load double, ptr %arrayidx.i.i.i118, align 8, !tbaa !30
  %sub.i63.i.i = fsub double %add80.i.i, %2751
  %arrayidx.i1.i64.i.i = getelementptr inbounds nuw i8, ptr %this.val24.i.i, i64 8
  %2752 = load double, ptr %arrayidx.i1.i64.i.i, align 8, !tbaa !30
  %div.i65.i.i = fdiv double %sub.i63.i.i, %2752
  %2753 = call noundef double @llvm.ceil.f64(double %div.i65.i.i) #9
  %conv5.i66.i.i = fptosi double %2753 to i32
  %arrayidx97.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 4
  store i32 %conv5.i66.i.i, ptr addrspace(5) %arrayidx97.i.i, align 4, !tbaa !31
  br label %if.end100.i.i

if.end100.i.i:                                    ; preds = %if.then93.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit60.i.i, %if.then73.i.i, %lor.lhs.false69.i.i
  %min_dist.2.i12.i = phi double [ %min_dist.6.i.i, %if.then93.i.i ], [ %min_dist.6.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit60.i.i ], [ %min_dist.1.i11.i, %if.then73.i.i ], [ %min_dist.1.i11.i, %lor.lhs.false69.i.i ]
  %cmp101.i.i = fcmp olt double %33, %1120
  %cmp103.i.i = fcmp ogt double %retval.sroa.2.0.copyload.i80, %1120
  %or.cond15.i.i = select i1 %cmp101.i.i, i1 %cmp103.i.i, i1 false
  br i1 %or.cond15.i.i, label %if.then108.i.i, label %lor.lhs.false104.i.i

lor.lhs.false104.i.i:                             ; preds = %if.end100.i.i
  %cmp105.i.i = fcmp ogt double %33, %1120
  %cmp107.i.i = fcmp olt double %retval.sroa.2.0.copyload.i80, %1120
  %or.cond16.i.i = select i1 %cmp105.i.i, i1 %cmp107.i.i, i1 false
  br i1 %or.cond16.i.i, label %if.then108.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then108.i.i:                                   ; preds = %lor.lhs.false104.i.i, %if.end100.i.i
  %sub110.i.i = fsub double %1120, %33
  %sub111.i.i = fsub double %retval.sroa.0.0.copyload.i78, %32
  %mul112.i.i = fmul double %sub111.i.i, %sub110.i.i
  %sub113.i.i = fsub double %retval.sroa.2.0.copyload.i80, %33
  %div114.i.i = fdiv double %mul112.i.i, %sub113.i.i
  %add115.i.i = fadd double %32, %div114.i.i
  %sub118.i.i = fsub double %retval.sroa.3.0.copyload.i82, %34
  %mul119.i.i = fmul double %sub118.i.i, %sub110.i.i
  %div121.i.i = fdiv double %mul119.i.i, %sub113.i.i
  %add122.i.i = fadd double %34, %div121.i.i
  %cmp123.i.i = fcmp oge double %add115.i.i, %35
  %cmp125.i.i = fcmp olt double %add115.i.i, %1119
  %or.cond17.i.i = select i1 %cmp123.i.i, i1 %cmp125.i.i, i1 false
  br i1 %or.cond17.i.i, label %if.then126.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then126.i.i:                                   ; preds = %if.then108.i.i
  %sub.i67.i.i = fsub double %add115.i.i, %32
  %2754 = fcmp oeq double %sub.i67.i.i, 1.000000e+00
  %2755 = select i1 %2754, double 1.000000e+00, double 2.000000e+00
  %2756 = call double @llvm.fabs.f64(double %sub.i67.i.i) #9
  %2757 = call double @llvm.amdgcn.frexp.mant.f64(double %2756)
  %2758 = fcmp olt double %2757, 0x3FE5555555555555
  %.neg.i.i.i.i68.i.i = sext i1 %2758 to i32
  %2759 = select i1 %2758, double 2.000000e+00, double 1.000000e+00
  %2760 = fmul double %2757, %2759
  %2761 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %2756)
  %2762 = add i32 %2761, %.neg.i.i.i.i68.i.i
  %2763 = fadd double %2760, -1.000000e+00
  %2764 = fadd double %2760, 1.000000e+00
  %2765 = fadd double %2764, -1.000000e+00
  %2766 = fsub double %2760, %2765
  %2767 = call double @llvm.amdgcn.rcp.f64(double %2764)
  %2768 = fneg double %2764
  %2769 = call double @llvm.fma.f64(double %2768, double %2767, double 1.000000e+00)
  %2770 = call double @llvm.fma.f64(double %2769, double %2767, double %2767)
  %2771 = call double @llvm.fma.f64(double %2768, double %2770, double 1.000000e+00)
  %2772 = call double @llvm.fma.f64(double %2771, double %2770, double %2770)
  %2773 = fmul double %2763, %2772
  %2774 = fmul double %2764, %2773
  %2775 = fneg double %2774
  %2776 = call double @llvm.fma.f64(double %2773, double %2764, double %2775)
  %2777 = call double @llvm.fma.f64(double %2773, double %2766, double %2776)
  %2778 = fadd double %2774, %2777
  %2779 = fsub double %2778, %2774
  %2780 = fsub double %2763, %2778
  %2781 = fsub double %2763, %2780
  %2782 = fsub double %2781, %2778
  %2783 = fsub double %2779, %2777
  %2784 = fadd double %2783, %2782
  %2785 = fadd double %2780, %2784
  %2786 = fmul double %2772, %2785
  %2787 = fadd double %2773, %2786
  %2788 = fsub double %2787, %2773
  %2789 = fsub double %2786, %2788
  %2790 = fmul double %2787, %2787
  %2791 = fneg double %2790
  %2792 = call double @llvm.fma.f64(double %2787, double %2787, double %2791)
  %2793 = fmul double %2789, 2.000000e+00
  %2794 = call double @llvm.fma.f64(double %2787, double %2793, double %2792)
  %2795 = fadd double %2790, %2794
  %2796 = fsub double %2795, %2790
  %2797 = fsub double %2794, %2796
  %2798 = call double @llvm.fma.f64(double %2795, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %2799 = call double @llvm.fma.f64(double %2795, double %2798, double 0x3FBE25E43ABE935A)
  %2800 = call double @llvm.fma.f64(double %2795, double %2799, double 0x3FC110EF47E6C9C2)
  %2801 = call double @llvm.fma.f64(double %2795, double %2800, double 0x3FC3B13BCFA74449)
  %2802 = call double @llvm.fma.f64(double %2795, double %2801, double 0x3FC745D171BF3C30)
  %2803 = call double @llvm.fma.f64(double %2795, double %2802, double 0x3FCC71C71C7792CE)
  %2804 = call double @llvm.fma.f64(double %2795, double %2803, double 0x3FD24924924920DA)
  %2805 = call double @llvm.fma.f64(double %2795, double %2804, double 0x3FD999999999999C)
  %2806 = sitofp i32 %2762 to double
  %2807 = fmul double %2806, 0x3FE62E42FEFA39EF
  %2808 = fneg double %2807
  %2809 = call double @llvm.fma.f64(double %2806, double 0x3FE62E42FEFA39EF, double %2808)
  %2810 = call double @llvm.fma.f64(double %2806, double 0x3C7ABC9E3B39803F, double %2809)
  %2811 = fadd double %2807, %2810
  %2812 = fsub double %2811, %2807
  %2813 = fsub double %2810, %2812
  %2814 = call double @llvm.ldexp.f64.i32(double %2787, i32 1)
  %2815 = call double @llvm.ldexp.f64.i32(double %2789, i32 1)
  %2816 = fmul double %2787, %2795
  %2817 = fneg double %2816
  %2818 = call double @llvm.fma.f64(double %2795, double %2787, double %2817)
  %2819 = call double @llvm.fma.f64(double %2795, double %2789, double %2818)
  %2820 = call double @llvm.fma.f64(double %2797, double %2787, double %2819)
  %2821 = fadd double %2816, %2820
  %2822 = fsub double %2821, %2816
  %2823 = fsub double %2820, %2822
  %2824 = fmul double %2795, %2805
  %2825 = fneg double %2824
  %2826 = call double @llvm.fma.f64(double %2795, double %2805, double %2825)
  %2827 = call double @llvm.fma.f64(double %2797, double %2805, double %2826)
  %2828 = fadd double %2824, %2827
  %2829 = fsub double %2828, %2824
  %2830 = fsub double %2827, %2829
  %2831 = fadd double %2828, 0x3FE5555555555555
  %2832 = fadd double %2831, 0xBFE5555555555555
  %2833 = fsub double %2828, %2832
  %2834 = fadd double %2830, 0x3C8543B0D5DF274D
  %2835 = fadd double %2834, %2833
  %2836 = fadd double %2831, %2835
  %2837 = fsub double %2831, %2836
  %2838 = fadd double %2835, %2837
  %2839 = fmul double %2821, %2836
  %2840 = fneg double %2839
  %2841 = call double @llvm.fma.f64(double %2821, double %2836, double %2840)
  %2842 = call double @llvm.fma.f64(double %2821, double %2838, double %2841)
  %2843 = call double @llvm.fma.f64(double %2823, double %2836, double %2842)
  %2844 = fadd double %2839, %2843
  %2845 = fsub double %2844, %2839
  %2846 = fsub double %2843, %2845
  %2847 = fadd double %2814, %2844
  %2848 = fsub double %2847, %2814
  %2849 = fsub double %2844, %2848
  %2850 = fadd double %2815, %2846
  %2851 = fadd double %2850, %2849
  %2852 = fadd double %2847, %2851
  %2853 = fsub double %2852, %2847
  %2854 = fsub double %2851, %2853
  %2855 = fadd double %2811, %2852
  %2856 = fsub double %2855, %2811
  %2857 = fsub double %2855, %2856
  %2858 = fsub double %2811, %2857
  %2859 = fsub double %2852, %2856
  %2860 = fadd double %2859, %2858
  %2861 = fadd double %2813, %2854
  %2862 = fsub double %2861, %2813
  %2863 = fsub double %2861, %2862
  %2864 = fsub double %2813, %2863
  %2865 = fsub double %2854, %2862
  %2866 = fadd double %2865, %2864
  %2867 = fadd double %2861, %2860
  %2868 = fadd double %2855, %2867
  %2869 = fsub double %2868, %2855
  %2870 = fsub double %2867, %2869
  %2871 = fadd double %2866, %2870
  %2872 = fadd double %2868, %2871
  %2873 = fsub double %2872, %2868
  %2874 = fsub double %2871, %2873
  %2875 = fmul double %2755, %2872
  %2876 = fneg double %2875
  %2877 = call double @llvm.fma.f64(double %2755, double %2872, double %2876) #9
  %2878 = call double @llvm.fma.f64(double %2755, double %2874, double %2877) #9
  %2879 = fadd double %2875, %2878
  %2880 = fsub double %2879, %2875
  %2881 = fsub double %2878, %2880
  %2882 = call double @llvm.fabs.f64(double %2875) #9
  %2883 = fcmp oeq double %2882, 0x7FF0000000000000
  %2884 = select i1 %2883, double %2875, double %2879
  %2885 = call double @llvm.fabs.f64(double %2884) #9
  %2886 = fcmp oeq double %2885, 0x7FF0000000000000
  %2887 = select i1 %2886, double 0.000000e+00, double %2881
  %2888 = fmul double %2884, 0x3FF71547652B82FE
  %2889 = call double @llvm.rint.f64(double %2888)
  %2890 = fneg double %2889
  %2891 = call double @llvm.fma.f64(double %2890, double 0x3FE62E42FEFA39EF, double %2884)
  %2892 = call double @llvm.fma.f64(double %2890, double 0x3C7ABC9E3B39803F, double %2891)
  %2893 = call double @llvm.fma.f64(double %2892, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2894 = call double @llvm.fma.f64(double %2892, double %2893, double 0x3EC71DEE623FDE64)
  %2895 = call double @llvm.fma.f64(double %2892, double %2894, double 0x3EFA01997C89E6B0)
  %2896 = call double @llvm.fma.f64(double %2892, double %2895, double 0x3F2A01A014761F6E)
  %2897 = call double @llvm.fma.f64(double %2892, double %2896, double 0x3F56C16C1852B7B0)
  %2898 = call double @llvm.fma.f64(double %2892, double %2897, double 0x3F81111111122322)
  %2899 = call double @llvm.fma.f64(double %2892, double %2898, double 0x3FA55555555502A1)
  %2900 = call double @llvm.fma.f64(double %2892, double %2899, double 0x3FC5555555555511)
  %2901 = call double @llvm.fma.f64(double %2892, double %2900, double 0x3FE000000000000B)
  %2902 = call double @llvm.fma.f64(double %2892, double %2901, double 1.000000e+00)
  %2903 = call double @llvm.fma.f64(double %2892, double %2902, double 1.000000e+00)
  %2904 = fptosi double %2889 to i32
  %2905 = call double @llvm.ldexp.f64.i32(double %2903, i32 %2904)
  %2906 = fcmp ogt double %2884, 1.024000e+03
  %2907 = select i1 %2906, double 0x7FF0000000000000, double %2905
  %2908 = fcmp olt double %2884, -1.075000e+03
  %2909 = select i1 %2908, double 0.000000e+00, double %2907
  %2910 = call double @llvm.fma.f64(double %2909, double %2887, double %2909) #9
  %2911 = call double @llvm.fabs.f64(double %2909) #9
  %2912 = fcmp oeq double %2911, 0x7FF0000000000000
  %2913 = select i1 %2912, double %2909, double %2910
  %2914 = call double @llvm.trunc.f64(double %2755) #9
  %2915 = fcmp oeq double %2914, %2755
  %2916 = fmul double %2755, 5.000000e-01
  %2917 = call double @llvm.trunc.f64(double %2916) #9
  %2918 = fcmp une double %2917, %2916
  %2919 = and i1 %2915, %2918
  %2920 = select i1 %2919, double %sub.i67.i.i, double 1.000000e+00
  %2921 = call double @llvm.copysign.f64(double %2913, double %2920) #9
  %2922 = fcmp olt double %sub.i67.i.i, 0.000000e+00
  %2923 = select i1 %2915, double %2921, double 0x7FF8000000000000
  %2924 = select i1 %2922, double %2923, double %2921
  %2925 = fcmp oeq double %2756, 0x7FF0000000000000
  %2926 = fcmp oeq double %sub.i67.i.i, 0.000000e+00
  %2927 = or i1 %2926, %2925
  %2928 = select i1 %2926, double 0.000000e+00, double 0x7FF0000000000000
  %2929 = select i1 %2919, double %sub.i67.i.i, double 0.000000e+00
  %2930 = call double @llvm.copysign.f64(double %2928, double %2929) #9
  %2931 = select i1 %2927, double %2930, double %2924
  %2932 = fcmp uno double %sub.i67.i.i, 0.000000e+00
  %2933 = select i1 %2932, double 0x7FF8000000000000, double %2931
  %2934 = fcmp oeq double %sub110.i.i, 1.000000e+00
  %2935 = select i1 %2934, double 1.000000e+00, double 2.000000e+00
  %2936 = call double @llvm.fabs.f64(double %sub110.i.i) #9
  %2937 = call double @llvm.amdgcn.frexp.mant.f64(double %2936)
  %2938 = fcmp olt double %2937, 0x3FE5555555555555
  %.neg.i.i.i1.i70.i.i = sext i1 %2938 to i32
  %2939 = select i1 %2938, double 2.000000e+00, double 1.000000e+00
  %2940 = fmul double %2937, %2939
  %2941 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %2936)
  %2942 = add i32 %2941, %.neg.i.i.i1.i70.i.i
  %2943 = fadd double %2940, -1.000000e+00
  %2944 = fadd double %2940, 1.000000e+00
  %2945 = fadd double %2944, -1.000000e+00
  %2946 = fsub double %2940, %2945
  %2947 = call double @llvm.amdgcn.rcp.f64(double %2944)
  %2948 = fneg double %2944
  %2949 = call double @llvm.fma.f64(double %2948, double %2947, double 1.000000e+00)
  %2950 = call double @llvm.fma.f64(double %2949, double %2947, double %2947)
  %2951 = call double @llvm.fma.f64(double %2948, double %2950, double 1.000000e+00)
  %2952 = call double @llvm.fma.f64(double %2951, double %2950, double %2950)
  %2953 = fmul double %2943, %2952
  %2954 = fmul double %2944, %2953
  %2955 = fneg double %2954
  %2956 = call double @llvm.fma.f64(double %2953, double %2944, double %2955)
  %2957 = call double @llvm.fma.f64(double %2953, double %2946, double %2956)
  %2958 = fadd double %2954, %2957
  %2959 = fsub double %2958, %2954
  %2960 = fsub double %2943, %2958
  %2961 = fsub double %2943, %2960
  %2962 = fsub double %2961, %2958
  %2963 = fsub double %2959, %2957
  %2964 = fadd double %2963, %2962
  %2965 = fadd double %2960, %2964
  %2966 = fmul double %2952, %2965
  %2967 = fadd double %2953, %2966
  %2968 = fsub double %2967, %2953
  %2969 = fsub double %2966, %2968
  %2970 = fmul double %2967, %2967
  %2971 = fneg double %2970
  %2972 = call double @llvm.fma.f64(double %2967, double %2967, double %2971)
  %2973 = fmul double %2969, 2.000000e+00
  %2974 = call double @llvm.fma.f64(double %2967, double %2973, double %2972)
  %2975 = fadd double %2970, %2974
  %2976 = fsub double %2975, %2970
  %2977 = fsub double %2974, %2976
  %2978 = call double @llvm.fma.f64(double %2975, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %2979 = call double @llvm.fma.f64(double %2975, double %2978, double 0x3FBE25E43ABE935A)
  %2980 = call double @llvm.fma.f64(double %2975, double %2979, double 0x3FC110EF47E6C9C2)
  %2981 = call double @llvm.fma.f64(double %2975, double %2980, double 0x3FC3B13BCFA74449)
  %2982 = call double @llvm.fma.f64(double %2975, double %2981, double 0x3FC745D171BF3C30)
  %2983 = call double @llvm.fma.f64(double %2975, double %2982, double 0x3FCC71C71C7792CE)
  %2984 = call double @llvm.fma.f64(double %2975, double %2983, double 0x3FD24924924920DA)
  %2985 = call double @llvm.fma.f64(double %2975, double %2984, double 0x3FD999999999999C)
  %2986 = sitofp i32 %2942 to double
  %2987 = fmul double %2986, 0x3FE62E42FEFA39EF
  %2988 = fneg double %2987
  %2989 = call double @llvm.fma.f64(double %2986, double 0x3FE62E42FEFA39EF, double %2988)
  %2990 = call double @llvm.fma.f64(double %2986, double 0x3C7ABC9E3B39803F, double %2989)
  %2991 = fadd double %2987, %2990
  %2992 = fsub double %2991, %2987
  %2993 = fsub double %2990, %2992
  %2994 = call double @llvm.ldexp.f64.i32(double %2967, i32 1)
  %2995 = call double @llvm.ldexp.f64.i32(double %2969, i32 1)
  %2996 = fmul double %2967, %2975
  %2997 = fneg double %2996
  %2998 = call double @llvm.fma.f64(double %2975, double %2967, double %2997)
  %2999 = call double @llvm.fma.f64(double %2975, double %2969, double %2998)
  %3000 = call double @llvm.fma.f64(double %2977, double %2967, double %2999)
  %3001 = fadd double %2996, %3000
  %3002 = fsub double %3001, %2996
  %3003 = fsub double %3000, %3002
  %3004 = fmul double %2975, %2985
  %3005 = fneg double %3004
  %3006 = call double @llvm.fma.f64(double %2975, double %2985, double %3005)
  %3007 = call double @llvm.fma.f64(double %2977, double %2985, double %3006)
  %3008 = fadd double %3004, %3007
  %3009 = fsub double %3008, %3004
  %3010 = fsub double %3007, %3009
  %3011 = fadd double %3008, 0x3FE5555555555555
  %3012 = fadd double %3011, 0xBFE5555555555555
  %3013 = fsub double %3008, %3012
  %3014 = fadd double %3010, 0x3C8543B0D5DF274D
  %3015 = fadd double %3014, %3013
  %3016 = fadd double %3011, %3015
  %3017 = fsub double %3011, %3016
  %3018 = fadd double %3015, %3017
  %3019 = fmul double %3001, %3016
  %3020 = fneg double %3019
  %3021 = call double @llvm.fma.f64(double %3001, double %3016, double %3020)
  %3022 = call double @llvm.fma.f64(double %3001, double %3018, double %3021)
  %3023 = call double @llvm.fma.f64(double %3003, double %3016, double %3022)
  %3024 = fadd double %3019, %3023
  %3025 = fsub double %3024, %3019
  %3026 = fsub double %3023, %3025
  %3027 = fadd double %2994, %3024
  %3028 = fsub double %3027, %2994
  %3029 = fsub double %3024, %3028
  %3030 = fadd double %2995, %3026
  %3031 = fadd double %3030, %3029
  %3032 = fadd double %3027, %3031
  %3033 = fsub double %3032, %3027
  %3034 = fsub double %3031, %3033
  %3035 = fadd double %2991, %3032
  %3036 = fsub double %3035, %2991
  %3037 = fsub double %3035, %3036
  %3038 = fsub double %2991, %3037
  %3039 = fsub double %3032, %3036
  %3040 = fadd double %3039, %3038
  %3041 = fadd double %2993, %3034
  %3042 = fsub double %3041, %2993
  %3043 = fsub double %3041, %3042
  %3044 = fsub double %2993, %3043
  %3045 = fsub double %3034, %3042
  %3046 = fadd double %3045, %3044
  %3047 = fadd double %3041, %3040
  %3048 = fadd double %3035, %3047
  %3049 = fsub double %3048, %3035
  %3050 = fsub double %3047, %3049
  %3051 = fadd double %3046, %3050
  %3052 = fadd double %3048, %3051
  %3053 = fsub double %3052, %3048
  %3054 = fsub double %3051, %3053
  %3055 = fmul double %2935, %3052
  %3056 = fneg double %3055
  %3057 = call double @llvm.fma.f64(double %2935, double %3052, double %3056) #9
  %3058 = call double @llvm.fma.f64(double %2935, double %3054, double %3057) #9
  %3059 = fadd double %3055, %3058
  %3060 = fsub double %3059, %3055
  %3061 = fsub double %3058, %3060
  %3062 = call double @llvm.fabs.f64(double %3055) #9
  %3063 = fcmp oeq double %3062, 0x7FF0000000000000
  %3064 = select i1 %3063, double %3055, double %3059
  %3065 = call double @llvm.fabs.f64(double %3064) #9
  %3066 = fcmp oeq double %3065, 0x7FF0000000000000
  %3067 = select i1 %3066, double 0.000000e+00, double %3061
  %3068 = fmul double %3064, 0x3FF71547652B82FE
  %3069 = call double @llvm.rint.f64(double %3068)
  %3070 = fneg double %3069
  %3071 = call double @llvm.fma.f64(double %3070, double 0x3FE62E42FEFA39EF, double %3064)
  %3072 = call double @llvm.fma.f64(double %3070, double 0x3C7ABC9E3B39803F, double %3071)
  %3073 = call double @llvm.fma.f64(double %3072, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3074 = call double @llvm.fma.f64(double %3072, double %3073, double 0x3EC71DEE623FDE64)
  %3075 = call double @llvm.fma.f64(double %3072, double %3074, double 0x3EFA01997C89E6B0)
  %3076 = call double @llvm.fma.f64(double %3072, double %3075, double 0x3F2A01A014761F6E)
  %3077 = call double @llvm.fma.f64(double %3072, double %3076, double 0x3F56C16C1852B7B0)
  %3078 = call double @llvm.fma.f64(double %3072, double %3077, double 0x3F81111111122322)
  %3079 = call double @llvm.fma.f64(double %3072, double %3078, double 0x3FA55555555502A1)
  %3080 = call double @llvm.fma.f64(double %3072, double %3079, double 0x3FC5555555555511)
  %3081 = call double @llvm.fma.f64(double %3072, double %3080, double 0x3FE000000000000B)
  %3082 = call double @llvm.fma.f64(double %3072, double %3081, double 1.000000e+00)
  %3083 = call double @llvm.fma.f64(double %3072, double %3082, double 1.000000e+00)
  %3084 = fptosi double %3069 to i32
  %3085 = call double @llvm.ldexp.f64.i32(double %3083, i32 %3084)
  %3086 = fcmp ogt double %3064, 1.024000e+03
  %3087 = select i1 %3086, double 0x7FF0000000000000, double %3085
  %3088 = fcmp olt double %3064, -1.075000e+03
  %3089 = select i1 %3088, double 0.000000e+00, double %3087
  %3090 = call double @llvm.fma.f64(double %3089, double %3067, double %3089) #9
  %3091 = call double @llvm.fabs.f64(double %3089) #9
  %3092 = fcmp oeq double %3091, 0x7FF0000000000000
  %3093 = select i1 %3092, double %3089, double %3090
  %3094 = call double @llvm.trunc.f64(double %2935) #9
  %3095 = fcmp oeq double %3094, %2935
  %3096 = fmul double %2935, 5.000000e-01
  %3097 = call double @llvm.trunc.f64(double %3096) #9
  %3098 = fcmp une double %3097, %3096
  %3099 = and i1 %3095, %3098
  %3100 = select i1 %3099, double %sub110.i.i, double 1.000000e+00
  %3101 = call double @llvm.copysign.f64(double %3093, double %3100) #9
  %3102 = fcmp olt double %sub110.i.i, 0.000000e+00
  %3103 = select i1 %3095, double %3101, double 0x7FF8000000000000
  %3104 = select i1 %3102, double %3103, double %3101
  %3105 = fcmp oeq double %2936, 0x7FF0000000000000
  %3106 = fcmp oeq double %sub110.i.i, 0.000000e+00
  %3107 = or i1 %3106, %3105
  %3108 = select i1 %3106, double 0.000000e+00, double 0x7FF0000000000000
  %3109 = select i1 %3099, double %sub110.i.i, double 0.000000e+00
  %3110 = call double @llvm.copysign.f64(double %3108, double %3109) #9
  %3111 = select i1 %3107, double %3110, double %3104
  %3112 = fcmp uno double %sub110.i.i, 0.000000e+00
  %3113 = select i1 %3112, double 0x7FF8000000000000, double %3111
  %add.i71.i.i = fadd double %3113, %2933
  %sub3.i72.i.i = fsub double %add122.i.i, %add122.i.i
  %3114 = fcmp oeq double %sub3.i72.i.i, 1.000000e+00
  %3115 = select i1 %3114, double 1.000000e+00, double 2.000000e+00
  %3116 = call double @llvm.fabs.f64(double %sub3.i72.i.i) #9
  %3117 = call double @llvm.amdgcn.frexp.mant.f64(double %3116)
  %3118 = fcmp olt double %3117, 0x3FE5555555555555
  %.neg.i.i.i2.i73.i.i = sext i1 %3118 to i32
  %3119 = select i1 %3118, double 2.000000e+00, double 1.000000e+00
  %3120 = fmul double %3117, %3119
  %3121 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3116)
  %3122 = add i32 %3121, %.neg.i.i.i2.i73.i.i
  %3123 = fadd double %3120, -1.000000e+00
  %3124 = fadd double %3120, 1.000000e+00
  %3125 = fadd double %3124, -1.000000e+00
  %3126 = fsub double %3120, %3125
  %3127 = call double @llvm.amdgcn.rcp.f64(double %3124)
  %3128 = fneg double %3124
  %3129 = call double @llvm.fma.f64(double %3128, double %3127, double 1.000000e+00)
  %3130 = call double @llvm.fma.f64(double %3129, double %3127, double %3127)
  %3131 = call double @llvm.fma.f64(double %3128, double %3130, double 1.000000e+00)
  %3132 = call double @llvm.fma.f64(double %3131, double %3130, double %3130)
  %3133 = fmul double %3123, %3132
  %3134 = fmul double %3124, %3133
  %3135 = fneg double %3134
  %3136 = call double @llvm.fma.f64(double %3133, double %3124, double %3135)
  %3137 = call double @llvm.fma.f64(double %3133, double %3126, double %3136)
  %3138 = fadd double %3134, %3137
  %3139 = fsub double %3138, %3134
  %3140 = fsub double %3123, %3138
  %3141 = fsub double %3123, %3140
  %3142 = fsub double %3141, %3138
  %3143 = fsub double %3139, %3137
  %3144 = fadd double %3143, %3142
  %3145 = fadd double %3140, %3144
  %3146 = fmul double %3132, %3145
  %3147 = fadd double %3133, %3146
  %3148 = fsub double %3147, %3133
  %3149 = fsub double %3146, %3148
  %3150 = fmul double %3147, %3147
  %3151 = fneg double %3150
  %3152 = call double @llvm.fma.f64(double %3147, double %3147, double %3151)
  %3153 = fmul double %3149, 2.000000e+00
  %3154 = call double @llvm.fma.f64(double %3147, double %3153, double %3152)
  %3155 = fadd double %3150, %3154
  %3156 = fsub double %3155, %3150
  %3157 = fsub double %3154, %3156
  %3158 = call double @llvm.fma.f64(double %3155, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %3159 = call double @llvm.fma.f64(double %3155, double %3158, double 0x3FBE25E43ABE935A)
  %3160 = call double @llvm.fma.f64(double %3155, double %3159, double 0x3FC110EF47E6C9C2)
  %3161 = call double @llvm.fma.f64(double %3155, double %3160, double 0x3FC3B13BCFA74449)
  %3162 = call double @llvm.fma.f64(double %3155, double %3161, double 0x3FC745D171BF3C30)
  %3163 = call double @llvm.fma.f64(double %3155, double %3162, double 0x3FCC71C71C7792CE)
  %3164 = call double @llvm.fma.f64(double %3155, double %3163, double 0x3FD24924924920DA)
  %3165 = call double @llvm.fma.f64(double %3155, double %3164, double 0x3FD999999999999C)
  %3166 = sitofp i32 %3122 to double
  %3167 = fmul double %3166, 0x3FE62E42FEFA39EF
  %3168 = fneg double %3167
  %3169 = call double @llvm.fma.f64(double %3166, double 0x3FE62E42FEFA39EF, double %3168)
  %3170 = call double @llvm.fma.f64(double %3166, double 0x3C7ABC9E3B39803F, double %3169)
  %3171 = fadd double %3167, %3170
  %3172 = fsub double %3171, %3167
  %3173 = fsub double %3170, %3172
  %3174 = call double @llvm.ldexp.f64.i32(double %3147, i32 1)
  %3175 = call double @llvm.ldexp.f64.i32(double %3149, i32 1)
  %3176 = fmul double %3147, %3155
  %3177 = fneg double %3176
  %3178 = call double @llvm.fma.f64(double %3155, double %3147, double %3177)
  %3179 = call double @llvm.fma.f64(double %3155, double %3149, double %3178)
  %3180 = call double @llvm.fma.f64(double %3157, double %3147, double %3179)
  %3181 = fadd double %3176, %3180
  %3182 = fsub double %3181, %3176
  %3183 = fsub double %3180, %3182
  %3184 = fmul double %3155, %3165
  %3185 = fneg double %3184
  %3186 = call double @llvm.fma.f64(double %3155, double %3165, double %3185)
  %3187 = call double @llvm.fma.f64(double %3157, double %3165, double %3186)
  %3188 = fadd double %3184, %3187
  %3189 = fsub double %3188, %3184
  %3190 = fsub double %3187, %3189
  %3191 = fadd double %3188, 0x3FE5555555555555
  %3192 = fadd double %3191, 0xBFE5555555555555
  %3193 = fsub double %3188, %3192
  %3194 = fadd double %3190, 0x3C8543B0D5DF274D
  %3195 = fadd double %3194, %3193
  %3196 = fadd double %3191, %3195
  %3197 = fsub double %3191, %3196
  %3198 = fadd double %3195, %3197
  %3199 = fmul double %3181, %3196
  %3200 = fneg double %3199
  %3201 = call double @llvm.fma.f64(double %3181, double %3196, double %3200)
  %3202 = call double @llvm.fma.f64(double %3181, double %3198, double %3201)
  %3203 = call double @llvm.fma.f64(double %3183, double %3196, double %3202)
  %3204 = fadd double %3199, %3203
  %3205 = fsub double %3204, %3199
  %3206 = fsub double %3203, %3205
  %3207 = fadd double %3174, %3204
  %3208 = fsub double %3207, %3174
  %3209 = fsub double %3204, %3208
  %3210 = fadd double %3175, %3206
  %3211 = fadd double %3210, %3209
  %3212 = fadd double %3207, %3211
  %3213 = fsub double %3212, %3207
  %3214 = fsub double %3211, %3213
  %3215 = fadd double %3171, %3212
  %3216 = fsub double %3215, %3171
  %3217 = fsub double %3215, %3216
  %3218 = fsub double %3171, %3217
  %3219 = fsub double %3212, %3216
  %3220 = fadd double %3219, %3218
  %3221 = fadd double %3173, %3214
  %3222 = fsub double %3221, %3173
  %3223 = fsub double %3221, %3222
  %3224 = fsub double %3173, %3223
  %3225 = fsub double %3214, %3222
  %3226 = fadd double %3225, %3224
  %3227 = fadd double %3221, %3220
  %3228 = fadd double %3215, %3227
  %3229 = fsub double %3228, %3215
  %3230 = fsub double %3227, %3229
  %3231 = fadd double %3226, %3230
  %3232 = fadd double %3228, %3231
  %3233 = fsub double %3232, %3228
  %3234 = fsub double %3231, %3233
  %3235 = fmul double %3115, %3232
  %3236 = fneg double %3235
  %3237 = call double @llvm.fma.f64(double %3115, double %3232, double %3236) #9
  %3238 = call double @llvm.fma.f64(double %3115, double %3234, double %3237) #9
  %3239 = fadd double %3235, %3238
  %3240 = fsub double %3239, %3235
  %3241 = fsub double %3238, %3240
  %3242 = call double @llvm.fabs.f64(double %3235) #9
  %3243 = fcmp oeq double %3242, 0x7FF0000000000000
  %3244 = select i1 %3243, double %3235, double %3239
  %3245 = call double @llvm.fabs.f64(double %3244) #9
  %3246 = fcmp oeq double %3245, 0x7FF0000000000000
  %3247 = select i1 %3246, double 0.000000e+00, double %3241
  %3248 = fmul double %3244, 0x3FF71547652B82FE
  %3249 = call double @llvm.rint.f64(double %3248)
  %3250 = fneg double %3249
  %3251 = call double @llvm.fma.f64(double %3250, double 0x3FE62E42FEFA39EF, double %3244)
  %3252 = call double @llvm.fma.f64(double %3250, double 0x3C7ABC9E3B39803F, double %3251)
  %3253 = call double @llvm.fma.f64(double %3252, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3254 = call double @llvm.fma.f64(double %3252, double %3253, double 0x3EC71DEE623FDE64)
  %3255 = call double @llvm.fma.f64(double %3252, double %3254, double 0x3EFA01997C89E6B0)
  %3256 = call double @llvm.fma.f64(double %3252, double %3255, double 0x3F2A01A014761F6E)
  %3257 = call double @llvm.fma.f64(double %3252, double %3256, double 0x3F56C16C1852B7B0)
  %3258 = call double @llvm.fma.f64(double %3252, double %3257, double 0x3F81111111122322)
  %3259 = call double @llvm.fma.f64(double %3252, double %3258, double 0x3FA55555555502A1)
  %3260 = call double @llvm.fma.f64(double %3252, double %3259, double 0x3FC5555555555511)
  %3261 = call double @llvm.fma.f64(double %3252, double %3260, double 0x3FE000000000000B)
  %3262 = call double @llvm.fma.f64(double %3252, double %3261, double 1.000000e+00)
  %3263 = call double @llvm.fma.f64(double %3252, double %3262, double 1.000000e+00)
  %3264 = fptosi double %3249 to i32
  %3265 = call double @llvm.ldexp.f64.i32(double %3263, i32 %3264)
  %3266 = fcmp ogt double %3244, 1.024000e+03
  %3267 = select i1 %3266, double 0x7FF0000000000000, double %3265
  %3268 = fcmp olt double %3244, -1.075000e+03
  %3269 = select i1 %3268, double 0.000000e+00, double %3267
  %3270 = call double @llvm.fma.f64(double %3269, double %3247, double %3269) #9
  %3271 = call double @llvm.fabs.f64(double %3269) #9
  %3272 = fcmp oeq double %3271, 0x7FF0000000000000
  %3273 = select i1 %3272, double %3269, double %3270
  %3274 = call double @llvm.trunc.f64(double %3115) #9
  %3275 = fcmp oeq double %3274, %3115
  %3276 = fmul double %3115, 5.000000e-01
  %3277 = call double @llvm.trunc.f64(double %3276) #9
  %3278 = fcmp une double %3277, %3276
  %3279 = and i1 %3275, %3278
  %3280 = select i1 %3279, double %sub3.i72.i.i, double 1.000000e+00
  %3281 = call double @llvm.copysign.f64(double %3273, double %3280) #9
  %3282 = fcmp olt double %sub3.i72.i.i, 0.000000e+00
  %3283 = select i1 %3275, double %3281, double 0x7FF8000000000000
  %3284 = select i1 %3282, double %3283, double %3281
  %3285 = fcmp oeq double %3116, 0x7FF0000000000000
  %3286 = fcmp oeq double %sub3.i72.i.i, 0.000000e+00
  %3287 = or i1 %3286, %3285
  %3288 = select i1 %3286, double 0.000000e+00, double 0x7FF0000000000000
  %3289 = select i1 %3279, double %sub3.i72.i.i, double 0.000000e+00
  %3290 = call double @llvm.copysign.f64(double %3288, double %3289) #9
  %3291 = select i1 %3287, double %3290, double %3284
  %3292 = fcmp uno double %sub3.i72.i.i, 0.000000e+00
  %3293 = select i1 %3292, double 0x7FF8000000000000, double %3291
  %add5.i74.i.i = fadd double %3293, %add.i71.i.i
  %cmp.i75.i.i = fcmp olt double %add5.i74.i.i, %min_dist.2.i12.i
  br i1 %cmp.i75.i.i, label %if.then.i76.i.i, label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit79.i.i

if.then.i76.i.i:                                  ; preds = %if.then126.i.i
  store double %add115.i.i, ptr addrspace(5) %r0, align 8, !tbaa !35
  store double %1120, ptr addrspace(5) %9, align 8, !tbaa !37
  store double %add122.i.i, ptr addrspace(5) %10, align 8, !tbaa !38
  br label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit79.i.i

_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit79.i.i: ; preds = %if.then.i76.i.i, %if.then126.i.i
  %min_dist.7.i.i = phi double [ %add5.i74.i.i, %if.then.i76.i.i ], [ %min_dist.2.i12.i, %if.then126.i.i ]
  br i1 %cmp.i75.i.i, label %if.then128.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then128.i.i:                                   ; preds = %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit79.i.i
  %3294 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %this.val26.i.i = load ptr, ptr %3294, align 8, !tbaa !29
  %3295 = load double, ptr %lower_left_.val.i.i, align 8, !tbaa !30
  %sub.i81.i.i = fsub double %add115.i.i, %3295
  %3296 = load double, ptr %this.val26.i.i, align 8, !tbaa !30
  %div.i83.i.i = fdiv double %sub.i81.i.i, %3296
  %3297 = call noundef double @llvm.ceil.f64(double %div.i83.i.i) #9
  %conv5.i84.i.i = fptosi double %3297 to i32
  store i32 %conv5.i84.i.i, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %shape_131.i.i = getelementptr inbounds nuw i8, ptr %this, i64 56
  %shape_131.val.i.i = load ptr, ptr %shape_131.i.i, align 8, !tbaa !32
  %arrayidx.i85.i.i = getelementptr inbounds nuw i8, ptr %shape_131.val.i.i, i64 4
  %3298 = load i32, ptr %arrayidx.i85.i.i, align 4, !tbaa !31
  %arrayidx133.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 4
  store i32 %3298, ptr addrspace(5) %arrayidx133.i.i, align 4, !tbaa !31
  br label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

sw.bb6.i:                                         ; preds = %if.else
  %arrayidx.i.i35.i = getelementptr inbounds nuw i8, ptr %lower_left_.val.i.i, i64 8
  %3299 = load double, ptr %arrayidx.i.i35.i, align 8, !tbaa !30
  %arrayidx.i67.i.i = getelementptr inbounds nuw i8, ptr %lower_left_.val.i.i, i64 16
  %3300 = load double, ptr %arrayidx.i67.i.i, align 8, !tbaa !30
  %upper_right_.i36.i = getelementptr inbounds nuw i8, ptr %this, i64 32
  %upper_right_.val.i37.i = load ptr, ptr %upper_right_.i36.i, align 8, !tbaa !29
  %3301 = load double, ptr %upper_right_.val.i37.i, align 8, !tbaa !30
  %arrayidx.i69.i.i = getelementptr inbounds nuw i8, ptr %upper_right_.val.i37.i, i64 8
  %3302 = load double, ptr %arrayidx.i69.i.i, align 8, !tbaa !30
  %arrayidx.i70.i.i = getelementptr inbounds nuw i8, ptr %upper_right_.val.i37.i, i64 16
  %3303 = load double, ptr %arrayidx.i70.i.i, align 8, !tbaa !30
  %cmp.i38.i = fcmp olt double %32, %35
  %cmp15.i.i = fcmp ogt double %retval.sroa.0.0.copyload.i78, %35
  %or.cond.i39.i = select i1 %cmp.i38.i, i1 %cmp15.i.i, i1 false
  br i1 %or.cond.i39.i, label %if.then.i58.i, label %lor.lhs.false.i40.i

lor.lhs.false.i40.i:                              ; preds = %sw.bb6.i
  %cmp16.i.i = fcmp ogt double %32, %35
  %cmp18.i.i = fcmp olt double %retval.sroa.0.0.copyload.i78, %35
  %or.cond11.i41.i = select i1 %cmp16.i.i, i1 %cmp18.i.i, i1 false
  br i1 %or.cond11.i41.i, label %if.then.i58.i, label %if.end42.i.i

if.then.i58.i:                                    ; preds = %lor.lhs.false.i40.i, %sw.bb6.i
  %sub.i59.i = fsub double %35, %32
  %sub19.i.i = fsub double %retval.sroa.2.0.copyload.i80, %33
  %mul.i60.i = fmul double %sub19.i.i, %sub.i59.i
  %sub20.i.i = fsub double %retval.sroa.0.0.copyload.i78, %32
  %div.i61.i = fdiv double %mul.i60.i, %sub20.i.i
  %add.i62.i = fadd double %33, %div.i61.i
  %sub22.i.i = fsub double %retval.sroa.3.0.copyload.i82, %34
  %mul23.i.i = fmul double %sub22.i.i, %sub.i59.i
  %div25.i.i = fdiv double %mul23.i.i, %sub20.i.i
  %add26.i.i = fadd double %34, %div25.i.i
  %cmp27.i.i = fcmp oge double %add.i62.i, %3299
  %cmp29.i.i = fcmp olt double %add.i62.i, %3302
  %or.cond12.not200.not202.i.i = select i1 %cmp27.i.i, i1 %cmp29.i.i, i1 false
  %cmp31.i.i = fcmp oge double %add26.i.i, %3300
  %or.cond13.not201.i.i = select i1 %or.cond12.not200.not202.i.i, i1 %cmp31.i.i, i1 false
  %cmp33.i63.i = fcmp olt double %add26.i.i, %3303
  %or.cond14.i64.i = select i1 %or.cond13.not201.i.i, i1 %cmp33.i63.i, i1 false
  br i1 %or.cond14.i64.i, label %if.then34.i.i, label %if.end42.i.i

if.then34.i.i:                                    ; preds = %if.then.i58.i
  %3304 = fcmp oeq double %sub.i59.i, 1.000000e+00
  %3305 = select i1 %3304, double 1.000000e+00, double 2.000000e+00
  %3306 = call double @llvm.fabs.f64(double %sub.i59.i) #9
  %3307 = call double @llvm.amdgcn.frexp.mant.f64(double %3306)
  %3308 = fcmp olt double %3307, 0x3FE5555555555555
  %.neg.i.i.i.i.i65.i = sext i1 %3308 to i32
  %3309 = select i1 %3308, double 2.000000e+00, double 1.000000e+00
  %3310 = fmul double %3307, %3309
  %3311 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3306)
  %3312 = add i32 %3311, %.neg.i.i.i.i.i65.i
  %3313 = fadd double %3310, -1.000000e+00
  %3314 = fadd double %3310, 1.000000e+00
  %3315 = fadd double %3314, -1.000000e+00
  %3316 = fsub double %3310, %3315
  %3317 = call double @llvm.amdgcn.rcp.f64(double %3314)
  %3318 = fneg double %3314
  %3319 = call double @llvm.fma.f64(double %3318, double %3317, double 1.000000e+00)
  %3320 = call double @llvm.fma.f64(double %3319, double %3317, double %3317)
  %3321 = call double @llvm.fma.f64(double %3318, double %3320, double 1.000000e+00)
  %3322 = call double @llvm.fma.f64(double %3321, double %3320, double %3320)
  %3323 = fmul double %3313, %3322
  %3324 = fmul double %3314, %3323
  %3325 = fneg double %3324
  %3326 = call double @llvm.fma.f64(double %3323, double %3314, double %3325)
  %3327 = call double @llvm.fma.f64(double %3323, double %3316, double %3326)
  %3328 = fadd double %3324, %3327
  %3329 = fsub double %3328, %3324
  %3330 = fsub double %3313, %3328
  %3331 = fsub double %3313, %3330
  %3332 = fsub double %3331, %3328
  %3333 = fsub double %3329, %3327
  %3334 = fadd double %3333, %3332
  %3335 = fadd double %3330, %3334
  %3336 = fmul double %3322, %3335
  %3337 = fadd double %3323, %3336
  %3338 = fsub double %3337, %3323
  %3339 = fsub double %3336, %3338
  %3340 = fmul double %3337, %3337
  %3341 = fneg double %3340
  %3342 = call double @llvm.fma.f64(double %3337, double %3337, double %3341)
  %3343 = fmul double %3339, 2.000000e+00
  %3344 = call double @llvm.fma.f64(double %3337, double %3343, double %3342)
  %3345 = fadd double %3340, %3344
  %3346 = fsub double %3345, %3340
  %3347 = fsub double %3344, %3346
  %3348 = call double @llvm.fma.f64(double %3345, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %3349 = call double @llvm.fma.f64(double %3345, double %3348, double 0x3FBE25E43ABE935A)
  %3350 = call double @llvm.fma.f64(double %3345, double %3349, double 0x3FC110EF47E6C9C2)
  %3351 = call double @llvm.fma.f64(double %3345, double %3350, double 0x3FC3B13BCFA74449)
  %3352 = call double @llvm.fma.f64(double %3345, double %3351, double 0x3FC745D171BF3C30)
  %3353 = call double @llvm.fma.f64(double %3345, double %3352, double 0x3FCC71C71C7792CE)
  %3354 = call double @llvm.fma.f64(double %3345, double %3353, double 0x3FD24924924920DA)
  %3355 = call double @llvm.fma.f64(double %3345, double %3354, double 0x3FD999999999999C)
  %3356 = sitofp i32 %3312 to double
  %3357 = fmul double %3356, 0x3FE62E42FEFA39EF
  %3358 = fneg double %3357
  %3359 = call double @llvm.fma.f64(double %3356, double 0x3FE62E42FEFA39EF, double %3358)
  %3360 = call double @llvm.fma.f64(double %3356, double 0x3C7ABC9E3B39803F, double %3359)
  %3361 = fadd double %3357, %3360
  %3362 = fsub double %3361, %3357
  %3363 = fsub double %3360, %3362
  %3364 = call double @llvm.ldexp.f64.i32(double %3337, i32 1)
  %3365 = call double @llvm.ldexp.f64.i32(double %3339, i32 1)
  %3366 = fmul double %3337, %3345
  %3367 = fneg double %3366
  %3368 = call double @llvm.fma.f64(double %3345, double %3337, double %3367)
  %3369 = call double @llvm.fma.f64(double %3345, double %3339, double %3368)
  %3370 = call double @llvm.fma.f64(double %3347, double %3337, double %3369)
  %3371 = fadd double %3366, %3370
  %3372 = fsub double %3371, %3366
  %3373 = fsub double %3370, %3372
  %3374 = fmul double %3345, %3355
  %3375 = fneg double %3374
  %3376 = call double @llvm.fma.f64(double %3345, double %3355, double %3375)
  %3377 = call double @llvm.fma.f64(double %3347, double %3355, double %3376)
  %3378 = fadd double %3374, %3377
  %3379 = fsub double %3378, %3374
  %3380 = fsub double %3377, %3379
  %3381 = fadd double %3378, 0x3FE5555555555555
  %3382 = fadd double %3381, 0xBFE5555555555555
  %3383 = fsub double %3378, %3382
  %3384 = fadd double %3380, 0x3C8543B0D5DF274D
  %3385 = fadd double %3384, %3383
  %3386 = fadd double %3381, %3385
  %3387 = fsub double %3381, %3386
  %3388 = fadd double %3385, %3387
  %3389 = fmul double %3371, %3386
  %3390 = fneg double %3389
  %3391 = call double @llvm.fma.f64(double %3371, double %3386, double %3390)
  %3392 = call double @llvm.fma.f64(double %3371, double %3388, double %3391)
  %3393 = call double @llvm.fma.f64(double %3373, double %3386, double %3392)
  %3394 = fadd double %3389, %3393
  %3395 = fsub double %3394, %3389
  %3396 = fsub double %3393, %3395
  %3397 = fadd double %3364, %3394
  %3398 = fsub double %3397, %3364
  %3399 = fsub double %3394, %3398
  %3400 = fadd double %3365, %3396
  %3401 = fadd double %3400, %3399
  %3402 = fadd double %3397, %3401
  %3403 = fsub double %3402, %3397
  %3404 = fsub double %3401, %3403
  %3405 = fadd double %3361, %3402
  %3406 = fsub double %3405, %3361
  %3407 = fsub double %3405, %3406
  %3408 = fsub double %3361, %3407
  %3409 = fsub double %3402, %3406
  %3410 = fadd double %3409, %3408
  %3411 = fadd double %3363, %3404
  %3412 = fsub double %3411, %3363
  %3413 = fsub double %3411, %3412
  %3414 = fsub double %3363, %3413
  %3415 = fsub double %3404, %3412
  %3416 = fadd double %3415, %3414
  %3417 = fadd double %3411, %3410
  %3418 = fadd double %3405, %3417
  %3419 = fsub double %3418, %3405
  %3420 = fsub double %3417, %3419
  %3421 = fadd double %3416, %3420
  %3422 = fadd double %3418, %3421
  %3423 = fsub double %3422, %3418
  %3424 = fsub double %3421, %3423
  %3425 = fmul double %3305, %3422
  %3426 = fneg double %3425
  %3427 = call double @llvm.fma.f64(double %3305, double %3422, double %3426) #9
  %3428 = call double @llvm.fma.f64(double %3305, double %3424, double %3427) #9
  %3429 = fadd double %3425, %3428
  %3430 = fsub double %3429, %3425
  %3431 = fsub double %3428, %3430
  %3432 = call double @llvm.fabs.f64(double %3425) #9
  %3433 = fcmp oeq double %3432, 0x7FF0000000000000
  %3434 = select i1 %3433, double %3425, double %3429
  %3435 = call double @llvm.fabs.f64(double %3434) #9
  %3436 = fcmp oeq double %3435, 0x7FF0000000000000
  %3437 = select i1 %3436, double 0.000000e+00, double %3431
  %3438 = fmul double %3434, 0x3FF71547652B82FE
  %3439 = call double @llvm.rint.f64(double %3438)
  %3440 = fneg double %3439
  %3441 = call double @llvm.fma.f64(double %3440, double 0x3FE62E42FEFA39EF, double %3434)
  %3442 = call double @llvm.fma.f64(double %3440, double 0x3C7ABC9E3B39803F, double %3441)
  %3443 = call double @llvm.fma.f64(double %3442, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3444 = call double @llvm.fma.f64(double %3442, double %3443, double 0x3EC71DEE623FDE64)
  %3445 = call double @llvm.fma.f64(double %3442, double %3444, double 0x3EFA01997C89E6B0)
  %3446 = call double @llvm.fma.f64(double %3442, double %3445, double 0x3F2A01A014761F6E)
  %3447 = call double @llvm.fma.f64(double %3442, double %3446, double 0x3F56C16C1852B7B0)
  %3448 = call double @llvm.fma.f64(double %3442, double %3447, double 0x3F81111111122322)
  %3449 = call double @llvm.fma.f64(double %3442, double %3448, double 0x3FA55555555502A1)
  %3450 = call double @llvm.fma.f64(double %3442, double %3449, double 0x3FC5555555555511)
  %3451 = call double @llvm.fma.f64(double %3442, double %3450, double 0x3FE000000000000B)
  %3452 = call double @llvm.fma.f64(double %3442, double %3451, double 1.000000e+00)
  %3453 = call double @llvm.fma.f64(double %3442, double %3452, double 1.000000e+00)
  %3454 = fptosi double %3439 to i32
  %3455 = call double @llvm.ldexp.f64.i32(double %3453, i32 %3454)
  %3456 = fcmp ogt double %3434, 1.024000e+03
  %3457 = select i1 %3456, double 0x7FF0000000000000, double %3455
  %3458 = fcmp olt double %3434, -1.075000e+03
  %3459 = select i1 %3458, double 0.000000e+00, double %3457
  %3460 = call double @llvm.fma.f64(double %3459, double %3437, double %3459) #9
  %3461 = call double @llvm.fabs.f64(double %3459) #9
  %3462 = fcmp oeq double %3461, 0x7FF0000000000000
  %3463 = select i1 %3462, double %3459, double %3460
  %3464 = call double @llvm.trunc.f64(double %3305) #9
  %3465 = fcmp oeq double %3464, %3305
  %3466 = fmul double %3305, 5.000000e-01
  %3467 = call double @llvm.trunc.f64(double %3466) #9
  %3468 = fcmp une double %3467, %3466
  %3469 = and i1 %3465, %3468
  %3470 = select i1 %3469, double %sub.i59.i, double 1.000000e+00
  %3471 = call double @llvm.copysign.f64(double %3463, double %3470) #9
  %3472 = fcmp olt double %sub.i59.i, 0.000000e+00
  %3473 = select i1 %3465, double %3471, double 0x7FF8000000000000
  %3474 = select i1 %3472, double %3473, double %3471
  %3475 = fcmp oeq double %3306, 0x7FF0000000000000
  %3476 = fcmp oeq double %sub.i59.i, 0.000000e+00
  %3477 = or i1 %3476, %3475
  %3478 = select i1 %3476, double 0.000000e+00, double 0x7FF0000000000000
  %3479 = select i1 %3469, double %sub.i59.i, double 0.000000e+00
  %3480 = call double @llvm.copysign.f64(double %3478, double %3479) #9
  %3481 = select i1 %3477, double %3480, double %3474
  %3482 = fcmp uno double %sub.i59.i, 0.000000e+00
  %3483 = select i1 %3482, double 0x7FF8000000000000, double %3481
  %sub1.i.i66.i = fsub double %add.i62.i, %33
  %3484 = fcmp oeq double %sub1.i.i66.i, 1.000000e+00
  %3485 = select i1 %3484, double 1.000000e+00, double 2.000000e+00
  %3486 = call double @llvm.fabs.f64(double %sub1.i.i66.i) #9
  %3487 = call double @llvm.amdgcn.frexp.mant.f64(double %3486)
  %3488 = fcmp olt double %3487, 0x3FE5555555555555
  %.neg.i.i.i1.i.i67.i = sext i1 %3488 to i32
  %3489 = select i1 %3488, double 2.000000e+00, double 1.000000e+00
  %3490 = fmul double %3487, %3489
  %3491 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3486)
  %3492 = add i32 %3491, %.neg.i.i.i1.i.i67.i
  %3493 = fadd double %3490, -1.000000e+00
  %3494 = fadd double %3490, 1.000000e+00
  %3495 = fadd double %3494, -1.000000e+00
  %3496 = fsub double %3490, %3495
  %3497 = call double @llvm.amdgcn.rcp.f64(double %3494)
  %3498 = fneg double %3494
  %3499 = call double @llvm.fma.f64(double %3498, double %3497, double 1.000000e+00)
  %3500 = call double @llvm.fma.f64(double %3499, double %3497, double %3497)
  %3501 = call double @llvm.fma.f64(double %3498, double %3500, double 1.000000e+00)
  %3502 = call double @llvm.fma.f64(double %3501, double %3500, double %3500)
  %3503 = fmul double %3493, %3502
  %3504 = fmul double %3494, %3503
  %3505 = fneg double %3504
  %3506 = call double @llvm.fma.f64(double %3503, double %3494, double %3505)
  %3507 = call double @llvm.fma.f64(double %3503, double %3496, double %3506)
  %3508 = fadd double %3504, %3507
  %3509 = fsub double %3508, %3504
  %3510 = fsub double %3493, %3508
  %3511 = fsub double %3493, %3510
  %3512 = fsub double %3511, %3508
  %3513 = fsub double %3509, %3507
  %3514 = fadd double %3513, %3512
  %3515 = fadd double %3510, %3514
  %3516 = fmul double %3502, %3515
  %3517 = fadd double %3503, %3516
  %3518 = fsub double %3517, %3503
  %3519 = fsub double %3516, %3518
  %3520 = fmul double %3517, %3517
  %3521 = fneg double %3520
  %3522 = call double @llvm.fma.f64(double %3517, double %3517, double %3521)
  %3523 = fmul double %3519, 2.000000e+00
  %3524 = call double @llvm.fma.f64(double %3517, double %3523, double %3522)
  %3525 = fadd double %3520, %3524
  %3526 = fsub double %3525, %3520
  %3527 = fsub double %3524, %3526
  %3528 = call double @llvm.fma.f64(double %3525, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %3529 = call double @llvm.fma.f64(double %3525, double %3528, double 0x3FBE25E43ABE935A)
  %3530 = call double @llvm.fma.f64(double %3525, double %3529, double 0x3FC110EF47E6C9C2)
  %3531 = call double @llvm.fma.f64(double %3525, double %3530, double 0x3FC3B13BCFA74449)
  %3532 = call double @llvm.fma.f64(double %3525, double %3531, double 0x3FC745D171BF3C30)
  %3533 = call double @llvm.fma.f64(double %3525, double %3532, double 0x3FCC71C71C7792CE)
  %3534 = call double @llvm.fma.f64(double %3525, double %3533, double 0x3FD24924924920DA)
  %3535 = call double @llvm.fma.f64(double %3525, double %3534, double 0x3FD999999999999C)
  %3536 = sitofp i32 %3492 to double
  %3537 = fmul double %3536, 0x3FE62E42FEFA39EF
  %3538 = fneg double %3537
  %3539 = call double @llvm.fma.f64(double %3536, double 0x3FE62E42FEFA39EF, double %3538)
  %3540 = call double @llvm.fma.f64(double %3536, double 0x3C7ABC9E3B39803F, double %3539)
  %3541 = fadd double %3537, %3540
  %3542 = fsub double %3541, %3537
  %3543 = fsub double %3540, %3542
  %3544 = call double @llvm.ldexp.f64.i32(double %3517, i32 1)
  %3545 = call double @llvm.ldexp.f64.i32(double %3519, i32 1)
  %3546 = fmul double %3517, %3525
  %3547 = fneg double %3546
  %3548 = call double @llvm.fma.f64(double %3525, double %3517, double %3547)
  %3549 = call double @llvm.fma.f64(double %3525, double %3519, double %3548)
  %3550 = call double @llvm.fma.f64(double %3527, double %3517, double %3549)
  %3551 = fadd double %3546, %3550
  %3552 = fsub double %3551, %3546
  %3553 = fsub double %3550, %3552
  %3554 = fmul double %3525, %3535
  %3555 = fneg double %3554
  %3556 = call double @llvm.fma.f64(double %3525, double %3535, double %3555)
  %3557 = call double @llvm.fma.f64(double %3527, double %3535, double %3556)
  %3558 = fadd double %3554, %3557
  %3559 = fsub double %3558, %3554
  %3560 = fsub double %3557, %3559
  %3561 = fadd double %3558, 0x3FE5555555555555
  %3562 = fadd double %3561, 0xBFE5555555555555
  %3563 = fsub double %3558, %3562
  %3564 = fadd double %3560, 0x3C8543B0D5DF274D
  %3565 = fadd double %3564, %3563
  %3566 = fadd double %3561, %3565
  %3567 = fsub double %3561, %3566
  %3568 = fadd double %3565, %3567
  %3569 = fmul double %3551, %3566
  %3570 = fneg double %3569
  %3571 = call double @llvm.fma.f64(double %3551, double %3566, double %3570)
  %3572 = call double @llvm.fma.f64(double %3551, double %3568, double %3571)
  %3573 = call double @llvm.fma.f64(double %3553, double %3566, double %3572)
  %3574 = fadd double %3569, %3573
  %3575 = fsub double %3574, %3569
  %3576 = fsub double %3573, %3575
  %3577 = fadd double %3544, %3574
  %3578 = fsub double %3577, %3544
  %3579 = fsub double %3574, %3578
  %3580 = fadd double %3545, %3576
  %3581 = fadd double %3580, %3579
  %3582 = fadd double %3577, %3581
  %3583 = fsub double %3582, %3577
  %3584 = fsub double %3581, %3583
  %3585 = fadd double %3541, %3582
  %3586 = fsub double %3585, %3541
  %3587 = fsub double %3585, %3586
  %3588 = fsub double %3541, %3587
  %3589 = fsub double %3582, %3586
  %3590 = fadd double %3589, %3588
  %3591 = fadd double %3543, %3584
  %3592 = fsub double %3591, %3543
  %3593 = fsub double %3591, %3592
  %3594 = fsub double %3543, %3593
  %3595 = fsub double %3584, %3592
  %3596 = fadd double %3595, %3594
  %3597 = fadd double %3591, %3590
  %3598 = fadd double %3585, %3597
  %3599 = fsub double %3598, %3585
  %3600 = fsub double %3597, %3599
  %3601 = fadd double %3596, %3600
  %3602 = fadd double %3598, %3601
  %3603 = fsub double %3602, %3598
  %3604 = fsub double %3601, %3603
  %3605 = fmul double %3485, %3602
  %3606 = fneg double %3605
  %3607 = call double @llvm.fma.f64(double %3485, double %3602, double %3606) #9
  %3608 = call double @llvm.fma.f64(double %3485, double %3604, double %3607) #9
  %3609 = fadd double %3605, %3608
  %3610 = fsub double %3609, %3605
  %3611 = fsub double %3608, %3610
  %3612 = call double @llvm.fabs.f64(double %3605) #9
  %3613 = fcmp oeq double %3612, 0x7FF0000000000000
  %3614 = select i1 %3613, double %3605, double %3609
  %3615 = call double @llvm.fabs.f64(double %3614) #9
  %3616 = fcmp oeq double %3615, 0x7FF0000000000000
  %3617 = select i1 %3616, double 0.000000e+00, double %3611
  %3618 = fmul double %3614, 0x3FF71547652B82FE
  %3619 = call double @llvm.rint.f64(double %3618)
  %3620 = fneg double %3619
  %3621 = call double @llvm.fma.f64(double %3620, double 0x3FE62E42FEFA39EF, double %3614)
  %3622 = call double @llvm.fma.f64(double %3620, double 0x3C7ABC9E3B39803F, double %3621)
  %3623 = call double @llvm.fma.f64(double %3622, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3624 = call double @llvm.fma.f64(double %3622, double %3623, double 0x3EC71DEE623FDE64)
  %3625 = call double @llvm.fma.f64(double %3622, double %3624, double 0x3EFA01997C89E6B0)
  %3626 = call double @llvm.fma.f64(double %3622, double %3625, double 0x3F2A01A014761F6E)
  %3627 = call double @llvm.fma.f64(double %3622, double %3626, double 0x3F56C16C1852B7B0)
  %3628 = call double @llvm.fma.f64(double %3622, double %3627, double 0x3F81111111122322)
  %3629 = call double @llvm.fma.f64(double %3622, double %3628, double 0x3FA55555555502A1)
  %3630 = call double @llvm.fma.f64(double %3622, double %3629, double 0x3FC5555555555511)
  %3631 = call double @llvm.fma.f64(double %3622, double %3630, double 0x3FE000000000000B)
  %3632 = call double @llvm.fma.f64(double %3622, double %3631, double 1.000000e+00)
  %3633 = call double @llvm.fma.f64(double %3622, double %3632, double 1.000000e+00)
  %3634 = fptosi double %3619 to i32
  %3635 = call double @llvm.ldexp.f64.i32(double %3633, i32 %3634)
  %3636 = fcmp ogt double %3614, 1.024000e+03
  %3637 = select i1 %3636, double 0x7FF0000000000000, double %3635
  %3638 = fcmp olt double %3614, -1.075000e+03
  %3639 = select i1 %3638, double 0.000000e+00, double %3637
  %3640 = call double @llvm.fma.f64(double %3639, double %3617, double %3639) #9
  %3641 = call double @llvm.fabs.f64(double %3639) #9
  %3642 = fcmp oeq double %3641, 0x7FF0000000000000
  %3643 = select i1 %3642, double %3639, double %3640
  %3644 = call double @llvm.trunc.f64(double %3485) #9
  %3645 = fcmp oeq double %3644, %3485
  %3646 = fmul double %3485, 5.000000e-01
  %3647 = call double @llvm.trunc.f64(double %3646) #9
  %3648 = fcmp une double %3647, %3646
  %3649 = and i1 %3645, %3648
  %3650 = select i1 %3649, double %sub1.i.i66.i, double 1.000000e+00
  %3651 = call double @llvm.copysign.f64(double %3643, double %3650) #9
  %3652 = fcmp olt double %sub1.i.i66.i, 0.000000e+00
  %3653 = select i1 %3645, double %3651, double 0x7FF8000000000000
  %3654 = select i1 %3652, double %3653, double %3651
  %3655 = fcmp oeq double %3486, 0x7FF0000000000000
  %3656 = fcmp oeq double %sub1.i.i66.i, 0.000000e+00
  %3657 = or i1 %3656, %3655
  %3658 = select i1 %3656, double 0.000000e+00, double 0x7FF0000000000000
  %3659 = select i1 %3649, double %sub1.i.i66.i, double 0.000000e+00
  %3660 = call double @llvm.copysign.f64(double %3658, double %3659) #9
  %3661 = select i1 %3657, double %3660, double %3654
  %3662 = fcmp uno double %sub1.i.i66.i, 0.000000e+00
  %3663 = select i1 %3662, double 0x7FF8000000000000, double %3661
  %add.i.i68.i = fadd double %3483, %3663
  %sub3.i.i69.i = fsub double %add26.i.i, %34
  %3664 = fcmp oeq double %sub3.i.i69.i, 1.000000e+00
  %3665 = select i1 %3664, double 1.000000e+00, double 2.000000e+00
  %3666 = call double @llvm.fabs.f64(double %sub3.i.i69.i) #9
  %3667 = call double @llvm.amdgcn.frexp.mant.f64(double %3666)
  %3668 = fcmp olt double %3667, 0x3FE5555555555555
  %.neg.i.i.i2.i.i70.i = sext i1 %3668 to i32
  %3669 = select i1 %3668, double 2.000000e+00, double 1.000000e+00
  %3670 = fmul double %3667, %3669
  %3671 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3666)
  %3672 = add i32 %3671, %.neg.i.i.i2.i.i70.i
  %3673 = fadd double %3670, -1.000000e+00
  %3674 = fadd double %3670, 1.000000e+00
  %3675 = fadd double %3674, -1.000000e+00
  %3676 = fsub double %3670, %3675
  %3677 = call double @llvm.amdgcn.rcp.f64(double %3674)
  %3678 = fneg double %3674
  %3679 = call double @llvm.fma.f64(double %3678, double %3677, double 1.000000e+00)
  %3680 = call double @llvm.fma.f64(double %3679, double %3677, double %3677)
  %3681 = call double @llvm.fma.f64(double %3678, double %3680, double 1.000000e+00)
  %3682 = call double @llvm.fma.f64(double %3681, double %3680, double %3680)
  %3683 = fmul double %3673, %3682
  %3684 = fmul double %3674, %3683
  %3685 = fneg double %3684
  %3686 = call double @llvm.fma.f64(double %3683, double %3674, double %3685)
  %3687 = call double @llvm.fma.f64(double %3683, double %3676, double %3686)
  %3688 = fadd double %3684, %3687
  %3689 = fsub double %3688, %3684
  %3690 = fsub double %3673, %3688
  %3691 = fsub double %3673, %3690
  %3692 = fsub double %3691, %3688
  %3693 = fsub double %3689, %3687
  %3694 = fadd double %3693, %3692
  %3695 = fadd double %3690, %3694
  %3696 = fmul double %3682, %3695
  %3697 = fadd double %3683, %3696
  %3698 = fsub double %3697, %3683
  %3699 = fsub double %3696, %3698
  %3700 = fmul double %3697, %3697
  %3701 = fneg double %3700
  %3702 = call double @llvm.fma.f64(double %3697, double %3697, double %3701)
  %3703 = fmul double %3699, 2.000000e+00
  %3704 = call double @llvm.fma.f64(double %3697, double %3703, double %3702)
  %3705 = fadd double %3700, %3704
  %3706 = fsub double %3705, %3700
  %3707 = fsub double %3704, %3706
  %3708 = call double @llvm.fma.f64(double %3705, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %3709 = call double @llvm.fma.f64(double %3705, double %3708, double 0x3FBE25E43ABE935A)
  %3710 = call double @llvm.fma.f64(double %3705, double %3709, double 0x3FC110EF47E6C9C2)
  %3711 = call double @llvm.fma.f64(double %3705, double %3710, double 0x3FC3B13BCFA74449)
  %3712 = call double @llvm.fma.f64(double %3705, double %3711, double 0x3FC745D171BF3C30)
  %3713 = call double @llvm.fma.f64(double %3705, double %3712, double 0x3FCC71C71C7792CE)
  %3714 = call double @llvm.fma.f64(double %3705, double %3713, double 0x3FD24924924920DA)
  %3715 = call double @llvm.fma.f64(double %3705, double %3714, double 0x3FD999999999999C)
  %3716 = sitofp i32 %3672 to double
  %3717 = fmul double %3716, 0x3FE62E42FEFA39EF
  %3718 = fneg double %3717
  %3719 = call double @llvm.fma.f64(double %3716, double 0x3FE62E42FEFA39EF, double %3718)
  %3720 = call double @llvm.fma.f64(double %3716, double 0x3C7ABC9E3B39803F, double %3719)
  %3721 = fadd double %3717, %3720
  %3722 = fsub double %3721, %3717
  %3723 = fsub double %3720, %3722
  %3724 = call double @llvm.ldexp.f64.i32(double %3697, i32 1)
  %3725 = call double @llvm.ldexp.f64.i32(double %3699, i32 1)
  %3726 = fmul double %3697, %3705
  %3727 = fneg double %3726
  %3728 = call double @llvm.fma.f64(double %3705, double %3697, double %3727)
  %3729 = call double @llvm.fma.f64(double %3705, double %3699, double %3728)
  %3730 = call double @llvm.fma.f64(double %3707, double %3697, double %3729)
  %3731 = fadd double %3726, %3730
  %3732 = fsub double %3731, %3726
  %3733 = fsub double %3730, %3732
  %3734 = fmul double %3705, %3715
  %3735 = fneg double %3734
  %3736 = call double @llvm.fma.f64(double %3705, double %3715, double %3735)
  %3737 = call double @llvm.fma.f64(double %3707, double %3715, double %3736)
  %3738 = fadd double %3734, %3737
  %3739 = fsub double %3738, %3734
  %3740 = fsub double %3737, %3739
  %3741 = fadd double %3738, 0x3FE5555555555555
  %3742 = fadd double %3741, 0xBFE5555555555555
  %3743 = fsub double %3738, %3742
  %3744 = fadd double %3740, 0x3C8543B0D5DF274D
  %3745 = fadd double %3744, %3743
  %3746 = fadd double %3741, %3745
  %3747 = fsub double %3741, %3746
  %3748 = fadd double %3745, %3747
  %3749 = fmul double %3731, %3746
  %3750 = fneg double %3749
  %3751 = call double @llvm.fma.f64(double %3731, double %3746, double %3750)
  %3752 = call double @llvm.fma.f64(double %3731, double %3748, double %3751)
  %3753 = call double @llvm.fma.f64(double %3733, double %3746, double %3752)
  %3754 = fadd double %3749, %3753
  %3755 = fsub double %3754, %3749
  %3756 = fsub double %3753, %3755
  %3757 = fadd double %3724, %3754
  %3758 = fsub double %3757, %3724
  %3759 = fsub double %3754, %3758
  %3760 = fadd double %3725, %3756
  %3761 = fadd double %3760, %3759
  %3762 = fadd double %3757, %3761
  %3763 = fsub double %3762, %3757
  %3764 = fsub double %3761, %3763
  %3765 = fadd double %3721, %3762
  %3766 = fsub double %3765, %3721
  %3767 = fsub double %3765, %3766
  %3768 = fsub double %3721, %3767
  %3769 = fsub double %3762, %3766
  %3770 = fadd double %3769, %3768
  %3771 = fadd double %3723, %3764
  %3772 = fsub double %3771, %3723
  %3773 = fsub double %3771, %3772
  %3774 = fsub double %3723, %3773
  %3775 = fsub double %3764, %3772
  %3776 = fadd double %3775, %3774
  %3777 = fadd double %3771, %3770
  %3778 = fadd double %3765, %3777
  %3779 = fsub double %3778, %3765
  %3780 = fsub double %3777, %3779
  %3781 = fadd double %3776, %3780
  %3782 = fadd double %3778, %3781
  %3783 = fsub double %3782, %3778
  %3784 = fsub double %3781, %3783
  %3785 = fmul double %3665, %3782
  %3786 = fneg double %3785
  %3787 = call double @llvm.fma.f64(double %3665, double %3782, double %3786) #9
  %3788 = call double @llvm.fma.f64(double %3665, double %3784, double %3787) #9
  %3789 = fadd double %3785, %3788
  %3790 = fsub double %3789, %3785
  %3791 = fsub double %3788, %3790
  %3792 = call double @llvm.fabs.f64(double %3785) #9
  %3793 = fcmp oeq double %3792, 0x7FF0000000000000
  %3794 = select i1 %3793, double %3785, double %3789
  %3795 = call double @llvm.fabs.f64(double %3794) #9
  %3796 = fcmp oeq double %3795, 0x7FF0000000000000
  %3797 = select i1 %3796, double 0.000000e+00, double %3791
  %3798 = fmul double %3794, 0x3FF71547652B82FE
  %3799 = call double @llvm.rint.f64(double %3798)
  %3800 = fneg double %3799
  %3801 = call double @llvm.fma.f64(double %3800, double 0x3FE62E42FEFA39EF, double %3794)
  %3802 = call double @llvm.fma.f64(double %3800, double 0x3C7ABC9E3B39803F, double %3801)
  %3803 = call double @llvm.fma.f64(double %3802, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3804 = call double @llvm.fma.f64(double %3802, double %3803, double 0x3EC71DEE623FDE64)
  %3805 = call double @llvm.fma.f64(double %3802, double %3804, double 0x3EFA01997C89E6B0)
  %3806 = call double @llvm.fma.f64(double %3802, double %3805, double 0x3F2A01A014761F6E)
  %3807 = call double @llvm.fma.f64(double %3802, double %3806, double 0x3F56C16C1852B7B0)
  %3808 = call double @llvm.fma.f64(double %3802, double %3807, double 0x3F81111111122322)
  %3809 = call double @llvm.fma.f64(double %3802, double %3808, double 0x3FA55555555502A1)
  %3810 = call double @llvm.fma.f64(double %3802, double %3809, double 0x3FC5555555555511)
  %3811 = call double @llvm.fma.f64(double %3802, double %3810, double 0x3FE000000000000B)
  %3812 = call double @llvm.fma.f64(double %3802, double %3811, double 1.000000e+00)
  %3813 = call double @llvm.fma.f64(double %3802, double %3812, double 1.000000e+00)
  %3814 = fptosi double %3799 to i32
  %3815 = call double @llvm.ldexp.f64.i32(double %3813, i32 %3814)
  %3816 = fcmp ogt double %3794, 1.024000e+03
  %3817 = select i1 %3816, double 0x7FF0000000000000, double %3815
  %3818 = fcmp olt double %3794, -1.075000e+03
  %3819 = select i1 %3818, double 0.000000e+00, double %3817
  %3820 = call double @llvm.fma.f64(double %3819, double %3797, double %3819) #9
  %3821 = call double @llvm.fabs.f64(double %3819) #9
  %3822 = fcmp oeq double %3821, 0x7FF0000000000000
  %3823 = select i1 %3822, double %3819, double %3820
  %3824 = call double @llvm.trunc.f64(double %3665) #9
  %3825 = fcmp oeq double %3824, %3665
  %3826 = fmul double %3665, 5.000000e-01
  %3827 = call double @llvm.trunc.f64(double %3826) #9
  %3828 = fcmp une double %3827, %3826
  %3829 = and i1 %3825, %3828
  %3830 = select i1 %3829, double %sub3.i.i69.i, double 1.000000e+00
  %3831 = call double @llvm.copysign.f64(double %3823, double %3830) #9
  %3832 = fcmp olt double %sub3.i.i69.i, 0.000000e+00
  %3833 = select i1 %3825, double %3831, double 0x7FF8000000000000
  %3834 = select i1 %3832, double %3833, double %3831
  %3835 = fcmp oeq double %3666, 0x7FF0000000000000
  %3836 = fcmp oeq double %sub3.i.i69.i, 0.000000e+00
  %3837 = or i1 %3836, %3835
  %3838 = select i1 %3836, double 0.000000e+00, double 0x7FF0000000000000
  %3839 = select i1 %3829, double %sub3.i.i69.i, double 0.000000e+00
  %3840 = call double @llvm.copysign.f64(double %3838, double %3839) #9
  %3841 = select i1 %3837, double %3840, double %3834
  %3842 = fcmp uno double %sub3.i.i69.i, 0.000000e+00
  %3843 = select i1 %3842, double 0x7FF8000000000000, double %3841
  %add5.i.i71.i = fadd double %3843, %add.i.i68.i
  %cmp.i.i72.i = fcmp olt double %add5.i.i71.i, 0x7FEFFFFFFFFFFFFF
  br i1 %cmp.i.i72.i, label %if.then.i.i78.i, label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i73.i

if.then.i.i78.i:                                  ; preds = %if.then34.i.i
  store double %35, ptr addrspace(5) %r0, align 8, !tbaa !35
  store double %add.i62.i, ptr addrspace(5) %9, align 8, !tbaa !37
  store double %add26.i.i, ptr addrspace(5) %10, align 8, !tbaa !38
  br label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i73.i

_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i73.i: ; preds = %if.then.i.i78.i, %if.then34.i.i
  %min_dist.6.i74.i = phi double [ %add5.i.i71.i, %if.then.i.i78.i ], [ 0x7FEFFFFFFFFFFFFF, %if.then34.i.i ]
  br i1 %cmp.i.i72.i, label %if.then36.i.i, label %if.end42.i.i

if.then36.i.i:                                    ; preds = %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i73.i
  store i32 1, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %3844 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %this.val44.i.i = load ptr, ptr %3844, align 8, !tbaa !29
  %3845 = load double, ptr %arrayidx.i.i35.i, align 8, !tbaa !30
  %sub.i71.i.i = fsub double %add.i62.i, %3845
  %arrayidx.i1.i.i75.i = getelementptr inbounds nuw i8, ptr %this.val44.i.i, i64 8
  %3846 = load double, ptr %arrayidx.i1.i.i75.i, align 8, !tbaa !30
  %div.i.i76.i = fdiv double %sub.i71.i.i, %3846
  %3847 = call noundef double @llvm.ceil.f64(double %div.i.i76.i) #9
  %conv5.i.i77.i = fptosi double %3847 to i32
  %arrayidx38.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 4
  store i32 %conv5.i.i77.i, ptr addrspace(5) %arrayidx38.i.i, align 4, !tbaa !31
  %3848 = load double, ptr %arrayidx.i67.i.i, align 8, !tbaa !30
  %sub.i73.i.i = fsub double %add26.i.i, %3848
  %arrayidx.i1.i74.i.i = getelementptr inbounds nuw i8, ptr %this.val44.i.i, i64 16
  %3849 = load double, ptr %arrayidx.i1.i74.i.i, align 8, !tbaa !30
  %div.i75.i.i = fdiv double %sub.i73.i.i, %3849
  %3850 = call noundef double @llvm.ceil.f64(double %div.i75.i.i) #9
  %conv5.i76.i.i = fptosi double %3850 to i32
  %arrayidx40.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 8
  store i32 %conv5.i76.i.i, ptr addrspace(5) %arrayidx40.i.i, align 4, !tbaa !31
  br label %if.end42.i.i

if.end42.i.i:                                     ; preds = %if.then36.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i73.i, %if.then.i58.i, %lor.lhs.false.i40.i
  %min_dist.0.i42.i = phi double [ %min_dist.6.i74.i, %if.then36.i.i ], [ %min_dist.6.i74.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit.i73.i ], [ 0x7FEFFFFFFFFFFFFF, %if.then.i58.i ], [ 0x7FEFFFFFFFFFFFFF, %lor.lhs.false.i40.i ]
  %cmp43.i.i = fcmp olt double %33, %3299
  %cmp45.i.i = fcmp ogt double %retval.sroa.2.0.copyload.i80, %3299
  %or.cond15.i43.i = select i1 %cmp43.i.i, i1 %cmp45.i.i, i1 false
  br i1 %or.cond15.i43.i, label %if.then50.i.i, label %lor.lhs.false46.i.i

lor.lhs.false46.i.i:                              ; preds = %if.end42.i.i
  %cmp47.i.i = fcmp ogt double %33, %3299
  %cmp49.i.i = fcmp olt double %retval.sroa.2.0.copyload.i80, %3299
  %or.cond16.i44.i = select i1 %cmp47.i.i, i1 %cmp49.i.i, i1 false
  br i1 %or.cond16.i44.i, label %if.then50.i.i, label %if.end81.i.i

if.then50.i.i:                                    ; preds = %lor.lhs.false46.i.i, %if.end42.i.i
  %sub51.i.i = fsub double %3299, %33
  %sub52.i.i = fsub double %retval.sroa.0.0.copyload.i78, %32
  %mul53.i.i = fmul double %sub52.i.i, %sub51.i.i
  %sub54.i.i = fsub double %retval.sroa.2.0.copyload.i80, %33
  %div55.i.i = fdiv double %mul53.i.i, %sub54.i.i
  %add56.i.i = fadd double %32, %div55.i.i
  %sub59.i.i = fsub double %retval.sroa.3.0.copyload.i82, %34
  %mul60.i.i = fmul double %sub59.i.i, %sub51.i.i
  %div62.i.i = fdiv double %mul60.i.i, %sub54.i.i
  %add63.i.i = fadd double %34, %div62.i.i
  %cmp64.i.i = fcmp oge double %add56.i.i, %35
  %cmp66.i53.i = fcmp olt double %add56.i.i, %3301
  %or.cond17.not203.not205.i.i = select i1 %cmp64.i.i, i1 %cmp66.i53.i, i1 false
  %cmp68.i54.i = fcmp oge double %add63.i.i, %3300
  %or.cond18.not204.i.i = select i1 %or.cond17.not203.not205.i.i, i1 %cmp68.i54.i, i1 false
  %cmp70.i55.i = fcmp olt double %add63.i.i, %3303
  %or.cond19.i.i = select i1 %or.cond18.not204.i.i, i1 %cmp70.i55.i, i1 false
  br i1 %or.cond19.i.i, label %if.then71.i.i, label %if.end81.i.i

if.then71.i.i:                                    ; preds = %if.then50.i.i
  %sub.i77.i.i = fsub double %add56.i.i, %32
  %3851 = fcmp oeq double %sub.i77.i.i, 1.000000e+00
  %3852 = select i1 %3851, double 1.000000e+00, double 2.000000e+00
  %3853 = call double @llvm.fabs.f64(double %sub.i77.i.i) #9
  %3854 = call double @llvm.amdgcn.frexp.mant.f64(double %3853)
  %3855 = fcmp olt double %3854, 0x3FE5555555555555
  %.neg.i.i.i.i78.i.i = sext i1 %3855 to i32
  %3856 = select i1 %3855, double 2.000000e+00, double 1.000000e+00
  %3857 = fmul double %3854, %3856
  %3858 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3853)
  %3859 = add i32 %3858, %.neg.i.i.i.i78.i.i
  %3860 = fadd double %3857, -1.000000e+00
  %3861 = fadd double %3857, 1.000000e+00
  %3862 = fadd double %3861, -1.000000e+00
  %3863 = fsub double %3857, %3862
  %3864 = call double @llvm.amdgcn.rcp.f64(double %3861)
  %3865 = fneg double %3861
  %3866 = call double @llvm.fma.f64(double %3865, double %3864, double 1.000000e+00)
  %3867 = call double @llvm.fma.f64(double %3866, double %3864, double %3864)
  %3868 = call double @llvm.fma.f64(double %3865, double %3867, double 1.000000e+00)
  %3869 = call double @llvm.fma.f64(double %3868, double %3867, double %3867)
  %3870 = fmul double %3860, %3869
  %3871 = fmul double %3861, %3870
  %3872 = fneg double %3871
  %3873 = call double @llvm.fma.f64(double %3870, double %3861, double %3872)
  %3874 = call double @llvm.fma.f64(double %3870, double %3863, double %3873)
  %3875 = fadd double %3871, %3874
  %3876 = fsub double %3875, %3871
  %3877 = fsub double %3860, %3875
  %3878 = fsub double %3860, %3877
  %3879 = fsub double %3878, %3875
  %3880 = fsub double %3876, %3874
  %3881 = fadd double %3880, %3879
  %3882 = fadd double %3877, %3881
  %3883 = fmul double %3869, %3882
  %3884 = fadd double %3870, %3883
  %3885 = fsub double %3884, %3870
  %3886 = fsub double %3883, %3885
  %3887 = fmul double %3884, %3884
  %3888 = fneg double %3887
  %3889 = call double @llvm.fma.f64(double %3884, double %3884, double %3888)
  %3890 = fmul double %3886, 2.000000e+00
  %3891 = call double @llvm.fma.f64(double %3884, double %3890, double %3889)
  %3892 = fadd double %3887, %3891
  %3893 = fsub double %3892, %3887
  %3894 = fsub double %3891, %3893
  %3895 = call double @llvm.fma.f64(double %3892, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %3896 = call double @llvm.fma.f64(double %3892, double %3895, double 0x3FBE25E43ABE935A)
  %3897 = call double @llvm.fma.f64(double %3892, double %3896, double 0x3FC110EF47E6C9C2)
  %3898 = call double @llvm.fma.f64(double %3892, double %3897, double 0x3FC3B13BCFA74449)
  %3899 = call double @llvm.fma.f64(double %3892, double %3898, double 0x3FC745D171BF3C30)
  %3900 = call double @llvm.fma.f64(double %3892, double %3899, double 0x3FCC71C71C7792CE)
  %3901 = call double @llvm.fma.f64(double %3892, double %3900, double 0x3FD24924924920DA)
  %3902 = call double @llvm.fma.f64(double %3892, double %3901, double 0x3FD999999999999C)
  %3903 = sitofp i32 %3859 to double
  %3904 = fmul double %3903, 0x3FE62E42FEFA39EF
  %3905 = fneg double %3904
  %3906 = call double @llvm.fma.f64(double %3903, double 0x3FE62E42FEFA39EF, double %3905)
  %3907 = call double @llvm.fma.f64(double %3903, double 0x3C7ABC9E3B39803F, double %3906)
  %3908 = fadd double %3904, %3907
  %3909 = fsub double %3908, %3904
  %3910 = fsub double %3907, %3909
  %3911 = call double @llvm.ldexp.f64.i32(double %3884, i32 1)
  %3912 = call double @llvm.ldexp.f64.i32(double %3886, i32 1)
  %3913 = fmul double %3884, %3892
  %3914 = fneg double %3913
  %3915 = call double @llvm.fma.f64(double %3892, double %3884, double %3914)
  %3916 = call double @llvm.fma.f64(double %3892, double %3886, double %3915)
  %3917 = call double @llvm.fma.f64(double %3894, double %3884, double %3916)
  %3918 = fadd double %3913, %3917
  %3919 = fsub double %3918, %3913
  %3920 = fsub double %3917, %3919
  %3921 = fmul double %3892, %3902
  %3922 = fneg double %3921
  %3923 = call double @llvm.fma.f64(double %3892, double %3902, double %3922)
  %3924 = call double @llvm.fma.f64(double %3894, double %3902, double %3923)
  %3925 = fadd double %3921, %3924
  %3926 = fsub double %3925, %3921
  %3927 = fsub double %3924, %3926
  %3928 = fadd double %3925, 0x3FE5555555555555
  %3929 = fadd double %3928, 0xBFE5555555555555
  %3930 = fsub double %3925, %3929
  %3931 = fadd double %3927, 0x3C8543B0D5DF274D
  %3932 = fadd double %3931, %3930
  %3933 = fadd double %3928, %3932
  %3934 = fsub double %3928, %3933
  %3935 = fadd double %3932, %3934
  %3936 = fmul double %3918, %3933
  %3937 = fneg double %3936
  %3938 = call double @llvm.fma.f64(double %3918, double %3933, double %3937)
  %3939 = call double @llvm.fma.f64(double %3918, double %3935, double %3938)
  %3940 = call double @llvm.fma.f64(double %3920, double %3933, double %3939)
  %3941 = fadd double %3936, %3940
  %3942 = fsub double %3941, %3936
  %3943 = fsub double %3940, %3942
  %3944 = fadd double %3911, %3941
  %3945 = fsub double %3944, %3911
  %3946 = fsub double %3941, %3945
  %3947 = fadd double %3912, %3943
  %3948 = fadd double %3947, %3946
  %3949 = fadd double %3944, %3948
  %3950 = fsub double %3949, %3944
  %3951 = fsub double %3948, %3950
  %3952 = fadd double %3908, %3949
  %3953 = fsub double %3952, %3908
  %3954 = fsub double %3952, %3953
  %3955 = fsub double %3908, %3954
  %3956 = fsub double %3949, %3953
  %3957 = fadd double %3956, %3955
  %3958 = fadd double %3910, %3951
  %3959 = fsub double %3958, %3910
  %3960 = fsub double %3958, %3959
  %3961 = fsub double %3910, %3960
  %3962 = fsub double %3951, %3959
  %3963 = fadd double %3962, %3961
  %3964 = fadd double %3958, %3957
  %3965 = fadd double %3952, %3964
  %3966 = fsub double %3965, %3952
  %3967 = fsub double %3964, %3966
  %3968 = fadd double %3963, %3967
  %3969 = fadd double %3965, %3968
  %3970 = fsub double %3969, %3965
  %3971 = fsub double %3968, %3970
  %3972 = fmul double %3852, %3969
  %3973 = fneg double %3972
  %3974 = call double @llvm.fma.f64(double %3852, double %3969, double %3973) #9
  %3975 = call double @llvm.fma.f64(double %3852, double %3971, double %3974) #9
  %3976 = fadd double %3972, %3975
  %3977 = fsub double %3976, %3972
  %3978 = fsub double %3975, %3977
  %3979 = call double @llvm.fabs.f64(double %3972) #9
  %3980 = fcmp oeq double %3979, 0x7FF0000000000000
  %3981 = select i1 %3980, double %3972, double %3976
  %3982 = call double @llvm.fabs.f64(double %3981) #9
  %3983 = fcmp oeq double %3982, 0x7FF0000000000000
  %3984 = select i1 %3983, double 0.000000e+00, double %3978
  %3985 = fmul double %3981, 0x3FF71547652B82FE
  %3986 = call double @llvm.rint.f64(double %3985)
  %3987 = fneg double %3986
  %3988 = call double @llvm.fma.f64(double %3987, double 0x3FE62E42FEFA39EF, double %3981)
  %3989 = call double @llvm.fma.f64(double %3987, double 0x3C7ABC9E3B39803F, double %3988)
  %3990 = call double @llvm.fma.f64(double %3989, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3991 = call double @llvm.fma.f64(double %3989, double %3990, double 0x3EC71DEE623FDE64)
  %3992 = call double @llvm.fma.f64(double %3989, double %3991, double 0x3EFA01997C89E6B0)
  %3993 = call double @llvm.fma.f64(double %3989, double %3992, double 0x3F2A01A014761F6E)
  %3994 = call double @llvm.fma.f64(double %3989, double %3993, double 0x3F56C16C1852B7B0)
  %3995 = call double @llvm.fma.f64(double %3989, double %3994, double 0x3F81111111122322)
  %3996 = call double @llvm.fma.f64(double %3989, double %3995, double 0x3FA55555555502A1)
  %3997 = call double @llvm.fma.f64(double %3989, double %3996, double 0x3FC5555555555511)
  %3998 = call double @llvm.fma.f64(double %3989, double %3997, double 0x3FE000000000000B)
  %3999 = call double @llvm.fma.f64(double %3989, double %3998, double 1.000000e+00)
  %4000 = call double @llvm.fma.f64(double %3989, double %3999, double 1.000000e+00)
  %4001 = fptosi double %3986 to i32
  %4002 = call double @llvm.ldexp.f64.i32(double %4000, i32 %4001)
  %4003 = fcmp ogt double %3981, 1.024000e+03
  %4004 = select i1 %4003, double 0x7FF0000000000000, double %4002
  %4005 = fcmp olt double %3981, -1.075000e+03
  %4006 = select i1 %4005, double 0.000000e+00, double %4004
  %4007 = call double @llvm.fma.f64(double %4006, double %3984, double %4006) #9
  %4008 = call double @llvm.fabs.f64(double %4006) #9
  %4009 = fcmp oeq double %4008, 0x7FF0000000000000
  %4010 = select i1 %4009, double %4006, double %4007
  %4011 = call double @llvm.trunc.f64(double %3852) #9
  %4012 = fcmp oeq double %4011, %3852
  %4013 = fmul double %3852, 5.000000e-01
  %4014 = call double @llvm.trunc.f64(double %4013) #9
  %4015 = fcmp une double %4014, %4013
  %4016 = and i1 %4012, %4015
  %4017 = select i1 %4016, double %sub.i77.i.i, double 1.000000e+00
  %4018 = call double @llvm.copysign.f64(double %4010, double %4017) #9
  %4019 = fcmp olt double %sub.i77.i.i, 0.000000e+00
  %4020 = select i1 %4012, double %4018, double 0x7FF8000000000000
  %4021 = select i1 %4019, double %4020, double %4018
  %4022 = fcmp oeq double %3853, 0x7FF0000000000000
  %4023 = fcmp oeq double %sub.i77.i.i, 0.000000e+00
  %4024 = or i1 %4023, %4022
  %4025 = select i1 %4023, double 0.000000e+00, double 0x7FF0000000000000
  %4026 = select i1 %4016, double %sub.i77.i.i, double 0.000000e+00
  %4027 = call double @llvm.copysign.f64(double %4025, double %4026) #9
  %4028 = select i1 %4024, double %4027, double %4021
  %4029 = fcmp uno double %sub.i77.i.i, 0.000000e+00
  %4030 = select i1 %4029, double 0x7FF8000000000000, double %4028
  %4031 = fcmp oeq double %sub51.i.i, 1.000000e+00
  %4032 = select i1 %4031, double 1.000000e+00, double 2.000000e+00
  %4033 = call double @llvm.fabs.f64(double %sub51.i.i) #9
  %4034 = call double @llvm.amdgcn.frexp.mant.f64(double %4033)
  %4035 = fcmp olt double %4034, 0x3FE5555555555555
  %.neg.i.i.i1.i80.i.i = sext i1 %4035 to i32
  %4036 = select i1 %4035, double 2.000000e+00, double 1.000000e+00
  %4037 = fmul double %4034, %4036
  %4038 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %4033)
  %4039 = add i32 %4038, %.neg.i.i.i1.i80.i.i
  %4040 = fadd double %4037, -1.000000e+00
  %4041 = fadd double %4037, 1.000000e+00
  %4042 = fadd double %4041, -1.000000e+00
  %4043 = fsub double %4037, %4042
  %4044 = call double @llvm.amdgcn.rcp.f64(double %4041)
  %4045 = fneg double %4041
  %4046 = call double @llvm.fma.f64(double %4045, double %4044, double 1.000000e+00)
  %4047 = call double @llvm.fma.f64(double %4046, double %4044, double %4044)
  %4048 = call double @llvm.fma.f64(double %4045, double %4047, double 1.000000e+00)
  %4049 = call double @llvm.fma.f64(double %4048, double %4047, double %4047)
  %4050 = fmul double %4040, %4049
  %4051 = fmul double %4041, %4050
  %4052 = fneg double %4051
  %4053 = call double @llvm.fma.f64(double %4050, double %4041, double %4052)
  %4054 = call double @llvm.fma.f64(double %4050, double %4043, double %4053)
  %4055 = fadd double %4051, %4054
  %4056 = fsub double %4055, %4051
  %4057 = fsub double %4040, %4055
  %4058 = fsub double %4040, %4057
  %4059 = fsub double %4058, %4055
  %4060 = fsub double %4056, %4054
  %4061 = fadd double %4060, %4059
  %4062 = fadd double %4057, %4061
  %4063 = fmul double %4049, %4062
  %4064 = fadd double %4050, %4063
  %4065 = fsub double %4064, %4050
  %4066 = fsub double %4063, %4065
  %4067 = fmul double %4064, %4064
  %4068 = fneg double %4067
  %4069 = call double @llvm.fma.f64(double %4064, double %4064, double %4068)
  %4070 = fmul double %4066, 2.000000e+00
  %4071 = call double @llvm.fma.f64(double %4064, double %4070, double %4069)
  %4072 = fadd double %4067, %4071
  %4073 = fsub double %4072, %4067
  %4074 = fsub double %4071, %4073
  %4075 = call double @llvm.fma.f64(double %4072, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %4076 = call double @llvm.fma.f64(double %4072, double %4075, double 0x3FBE25E43ABE935A)
  %4077 = call double @llvm.fma.f64(double %4072, double %4076, double 0x3FC110EF47E6C9C2)
  %4078 = call double @llvm.fma.f64(double %4072, double %4077, double 0x3FC3B13BCFA74449)
  %4079 = call double @llvm.fma.f64(double %4072, double %4078, double 0x3FC745D171BF3C30)
  %4080 = call double @llvm.fma.f64(double %4072, double %4079, double 0x3FCC71C71C7792CE)
  %4081 = call double @llvm.fma.f64(double %4072, double %4080, double 0x3FD24924924920DA)
  %4082 = call double @llvm.fma.f64(double %4072, double %4081, double 0x3FD999999999999C)
  %4083 = sitofp i32 %4039 to double
  %4084 = fmul double %4083, 0x3FE62E42FEFA39EF
  %4085 = fneg double %4084
  %4086 = call double @llvm.fma.f64(double %4083, double 0x3FE62E42FEFA39EF, double %4085)
  %4087 = call double @llvm.fma.f64(double %4083, double 0x3C7ABC9E3B39803F, double %4086)
  %4088 = fadd double %4084, %4087
  %4089 = fsub double %4088, %4084
  %4090 = fsub double %4087, %4089
  %4091 = call double @llvm.ldexp.f64.i32(double %4064, i32 1)
  %4092 = call double @llvm.ldexp.f64.i32(double %4066, i32 1)
  %4093 = fmul double %4064, %4072
  %4094 = fneg double %4093
  %4095 = call double @llvm.fma.f64(double %4072, double %4064, double %4094)
  %4096 = call double @llvm.fma.f64(double %4072, double %4066, double %4095)
  %4097 = call double @llvm.fma.f64(double %4074, double %4064, double %4096)
  %4098 = fadd double %4093, %4097
  %4099 = fsub double %4098, %4093
  %4100 = fsub double %4097, %4099
  %4101 = fmul double %4072, %4082
  %4102 = fneg double %4101
  %4103 = call double @llvm.fma.f64(double %4072, double %4082, double %4102)
  %4104 = call double @llvm.fma.f64(double %4074, double %4082, double %4103)
  %4105 = fadd double %4101, %4104
  %4106 = fsub double %4105, %4101
  %4107 = fsub double %4104, %4106
  %4108 = fadd double %4105, 0x3FE5555555555555
  %4109 = fadd double %4108, 0xBFE5555555555555
  %4110 = fsub double %4105, %4109
  %4111 = fadd double %4107, 0x3C8543B0D5DF274D
  %4112 = fadd double %4111, %4110
  %4113 = fadd double %4108, %4112
  %4114 = fsub double %4108, %4113
  %4115 = fadd double %4112, %4114
  %4116 = fmul double %4098, %4113
  %4117 = fneg double %4116
  %4118 = call double @llvm.fma.f64(double %4098, double %4113, double %4117)
  %4119 = call double @llvm.fma.f64(double %4098, double %4115, double %4118)
  %4120 = call double @llvm.fma.f64(double %4100, double %4113, double %4119)
  %4121 = fadd double %4116, %4120
  %4122 = fsub double %4121, %4116
  %4123 = fsub double %4120, %4122
  %4124 = fadd double %4091, %4121
  %4125 = fsub double %4124, %4091
  %4126 = fsub double %4121, %4125
  %4127 = fadd double %4092, %4123
  %4128 = fadd double %4127, %4126
  %4129 = fadd double %4124, %4128
  %4130 = fsub double %4129, %4124
  %4131 = fsub double %4128, %4130
  %4132 = fadd double %4088, %4129
  %4133 = fsub double %4132, %4088
  %4134 = fsub double %4132, %4133
  %4135 = fsub double %4088, %4134
  %4136 = fsub double %4129, %4133
  %4137 = fadd double %4136, %4135
  %4138 = fadd double %4090, %4131
  %4139 = fsub double %4138, %4090
  %4140 = fsub double %4138, %4139
  %4141 = fsub double %4090, %4140
  %4142 = fsub double %4131, %4139
  %4143 = fadd double %4142, %4141
  %4144 = fadd double %4138, %4137
  %4145 = fadd double %4132, %4144
  %4146 = fsub double %4145, %4132
  %4147 = fsub double %4144, %4146
  %4148 = fadd double %4143, %4147
  %4149 = fadd double %4145, %4148
  %4150 = fsub double %4149, %4145
  %4151 = fsub double %4148, %4150
  %4152 = fmul double %4032, %4149
  %4153 = fneg double %4152
  %4154 = call double @llvm.fma.f64(double %4032, double %4149, double %4153) #9
  %4155 = call double @llvm.fma.f64(double %4032, double %4151, double %4154) #9
  %4156 = fadd double %4152, %4155
  %4157 = fsub double %4156, %4152
  %4158 = fsub double %4155, %4157
  %4159 = call double @llvm.fabs.f64(double %4152) #9
  %4160 = fcmp oeq double %4159, 0x7FF0000000000000
  %4161 = select i1 %4160, double %4152, double %4156
  %4162 = call double @llvm.fabs.f64(double %4161) #9
  %4163 = fcmp oeq double %4162, 0x7FF0000000000000
  %4164 = select i1 %4163, double 0.000000e+00, double %4158
  %4165 = fmul double %4161, 0x3FF71547652B82FE
  %4166 = call double @llvm.rint.f64(double %4165)
  %4167 = fneg double %4166
  %4168 = call double @llvm.fma.f64(double %4167, double 0x3FE62E42FEFA39EF, double %4161)
  %4169 = call double @llvm.fma.f64(double %4167, double 0x3C7ABC9E3B39803F, double %4168)
  %4170 = call double @llvm.fma.f64(double %4169, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4171 = call double @llvm.fma.f64(double %4169, double %4170, double 0x3EC71DEE623FDE64)
  %4172 = call double @llvm.fma.f64(double %4169, double %4171, double 0x3EFA01997C89E6B0)
  %4173 = call double @llvm.fma.f64(double %4169, double %4172, double 0x3F2A01A014761F6E)
  %4174 = call double @llvm.fma.f64(double %4169, double %4173, double 0x3F56C16C1852B7B0)
  %4175 = call double @llvm.fma.f64(double %4169, double %4174, double 0x3F81111111122322)
  %4176 = call double @llvm.fma.f64(double %4169, double %4175, double 0x3FA55555555502A1)
  %4177 = call double @llvm.fma.f64(double %4169, double %4176, double 0x3FC5555555555511)
  %4178 = call double @llvm.fma.f64(double %4169, double %4177, double 0x3FE000000000000B)
  %4179 = call double @llvm.fma.f64(double %4169, double %4178, double 1.000000e+00)
  %4180 = call double @llvm.fma.f64(double %4169, double %4179, double 1.000000e+00)
  %4181 = fptosi double %4166 to i32
  %4182 = call double @llvm.ldexp.f64.i32(double %4180, i32 %4181)
  %4183 = fcmp ogt double %4161, 1.024000e+03
  %4184 = select i1 %4183, double 0x7FF0000000000000, double %4182
  %4185 = fcmp olt double %4161, -1.075000e+03
  %4186 = select i1 %4185, double 0.000000e+00, double %4184
  %4187 = call double @llvm.fma.f64(double %4186, double %4164, double %4186) #9
  %4188 = call double @llvm.fabs.f64(double %4186) #9
  %4189 = fcmp oeq double %4188, 0x7FF0000000000000
  %4190 = select i1 %4189, double %4186, double %4187
  %4191 = call double @llvm.trunc.f64(double %4032) #9
  %4192 = fcmp oeq double %4191, %4032
  %4193 = fmul double %4032, 5.000000e-01
  %4194 = call double @llvm.trunc.f64(double %4193) #9
  %4195 = fcmp une double %4194, %4193
  %4196 = and i1 %4192, %4195
  %4197 = select i1 %4196, double %sub51.i.i, double 1.000000e+00
  %4198 = call double @llvm.copysign.f64(double %4190, double %4197) #9
  %4199 = fcmp olt double %sub51.i.i, 0.000000e+00
  %4200 = select i1 %4192, double %4198, double 0x7FF8000000000000
  %4201 = select i1 %4199, double %4200, double %4198
  %4202 = fcmp oeq double %4033, 0x7FF0000000000000
  %4203 = fcmp oeq double %sub51.i.i, 0.000000e+00
  %4204 = or i1 %4203, %4202
  %4205 = select i1 %4203, double 0.000000e+00, double 0x7FF0000000000000
  %4206 = select i1 %4196, double %sub51.i.i, double 0.000000e+00
  %4207 = call double @llvm.copysign.f64(double %4205, double %4206) #9
  %4208 = select i1 %4204, double %4207, double %4201
  %4209 = fcmp uno double %sub51.i.i, 0.000000e+00
  %4210 = select i1 %4209, double 0x7FF8000000000000, double %4208
  %add.i81.i.i = fadd double %4210, %4030
  %sub3.i82.i.i = fsub double %add63.i.i, %34
  %4211 = fcmp oeq double %sub3.i82.i.i, 1.000000e+00
  %4212 = select i1 %4211, double 1.000000e+00, double 2.000000e+00
  %4213 = call double @llvm.fabs.f64(double %sub3.i82.i.i) #9
  %4214 = call double @llvm.amdgcn.frexp.mant.f64(double %4213)
  %4215 = fcmp olt double %4214, 0x3FE5555555555555
  %.neg.i.i.i2.i83.i.i = sext i1 %4215 to i32
  %4216 = select i1 %4215, double 2.000000e+00, double 1.000000e+00
  %4217 = fmul double %4214, %4216
  %4218 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %4213)
  %4219 = add i32 %4218, %.neg.i.i.i2.i83.i.i
  %4220 = fadd double %4217, -1.000000e+00
  %4221 = fadd double %4217, 1.000000e+00
  %4222 = fadd double %4221, -1.000000e+00
  %4223 = fsub double %4217, %4222
  %4224 = call double @llvm.amdgcn.rcp.f64(double %4221)
  %4225 = fneg double %4221
  %4226 = call double @llvm.fma.f64(double %4225, double %4224, double 1.000000e+00)
  %4227 = call double @llvm.fma.f64(double %4226, double %4224, double %4224)
  %4228 = call double @llvm.fma.f64(double %4225, double %4227, double 1.000000e+00)
  %4229 = call double @llvm.fma.f64(double %4228, double %4227, double %4227)
  %4230 = fmul double %4220, %4229
  %4231 = fmul double %4221, %4230
  %4232 = fneg double %4231
  %4233 = call double @llvm.fma.f64(double %4230, double %4221, double %4232)
  %4234 = call double @llvm.fma.f64(double %4230, double %4223, double %4233)
  %4235 = fadd double %4231, %4234
  %4236 = fsub double %4235, %4231
  %4237 = fsub double %4220, %4235
  %4238 = fsub double %4220, %4237
  %4239 = fsub double %4238, %4235
  %4240 = fsub double %4236, %4234
  %4241 = fadd double %4240, %4239
  %4242 = fadd double %4237, %4241
  %4243 = fmul double %4229, %4242
  %4244 = fadd double %4230, %4243
  %4245 = fsub double %4244, %4230
  %4246 = fsub double %4243, %4245
  %4247 = fmul double %4244, %4244
  %4248 = fneg double %4247
  %4249 = call double @llvm.fma.f64(double %4244, double %4244, double %4248)
  %4250 = fmul double %4246, 2.000000e+00
  %4251 = call double @llvm.fma.f64(double %4244, double %4250, double %4249)
  %4252 = fadd double %4247, %4251
  %4253 = fsub double %4252, %4247
  %4254 = fsub double %4251, %4253
  %4255 = call double @llvm.fma.f64(double %4252, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %4256 = call double @llvm.fma.f64(double %4252, double %4255, double 0x3FBE25E43ABE935A)
  %4257 = call double @llvm.fma.f64(double %4252, double %4256, double 0x3FC110EF47E6C9C2)
  %4258 = call double @llvm.fma.f64(double %4252, double %4257, double 0x3FC3B13BCFA74449)
  %4259 = call double @llvm.fma.f64(double %4252, double %4258, double 0x3FC745D171BF3C30)
  %4260 = call double @llvm.fma.f64(double %4252, double %4259, double 0x3FCC71C71C7792CE)
  %4261 = call double @llvm.fma.f64(double %4252, double %4260, double 0x3FD24924924920DA)
  %4262 = call double @llvm.fma.f64(double %4252, double %4261, double 0x3FD999999999999C)
  %4263 = sitofp i32 %4219 to double
  %4264 = fmul double %4263, 0x3FE62E42FEFA39EF
  %4265 = fneg double %4264
  %4266 = call double @llvm.fma.f64(double %4263, double 0x3FE62E42FEFA39EF, double %4265)
  %4267 = call double @llvm.fma.f64(double %4263, double 0x3C7ABC9E3B39803F, double %4266)
  %4268 = fadd double %4264, %4267
  %4269 = fsub double %4268, %4264
  %4270 = fsub double %4267, %4269
  %4271 = call double @llvm.ldexp.f64.i32(double %4244, i32 1)
  %4272 = call double @llvm.ldexp.f64.i32(double %4246, i32 1)
  %4273 = fmul double %4244, %4252
  %4274 = fneg double %4273
  %4275 = call double @llvm.fma.f64(double %4252, double %4244, double %4274)
  %4276 = call double @llvm.fma.f64(double %4252, double %4246, double %4275)
  %4277 = call double @llvm.fma.f64(double %4254, double %4244, double %4276)
  %4278 = fadd double %4273, %4277
  %4279 = fsub double %4278, %4273
  %4280 = fsub double %4277, %4279
  %4281 = fmul double %4252, %4262
  %4282 = fneg double %4281
  %4283 = call double @llvm.fma.f64(double %4252, double %4262, double %4282)
  %4284 = call double @llvm.fma.f64(double %4254, double %4262, double %4283)
  %4285 = fadd double %4281, %4284
  %4286 = fsub double %4285, %4281
  %4287 = fsub double %4284, %4286
  %4288 = fadd double %4285, 0x3FE5555555555555
  %4289 = fadd double %4288, 0xBFE5555555555555
  %4290 = fsub double %4285, %4289
  %4291 = fadd double %4287, 0x3C8543B0D5DF274D
  %4292 = fadd double %4291, %4290
  %4293 = fadd double %4288, %4292
  %4294 = fsub double %4288, %4293
  %4295 = fadd double %4292, %4294
  %4296 = fmul double %4278, %4293
  %4297 = fneg double %4296
  %4298 = call double @llvm.fma.f64(double %4278, double %4293, double %4297)
  %4299 = call double @llvm.fma.f64(double %4278, double %4295, double %4298)
  %4300 = call double @llvm.fma.f64(double %4280, double %4293, double %4299)
  %4301 = fadd double %4296, %4300
  %4302 = fsub double %4301, %4296
  %4303 = fsub double %4300, %4302
  %4304 = fadd double %4271, %4301
  %4305 = fsub double %4304, %4271
  %4306 = fsub double %4301, %4305
  %4307 = fadd double %4272, %4303
  %4308 = fadd double %4307, %4306
  %4309 = fadd double %4304, %4308
  %4310 = fsub double %4309, %4304
  %4311 = fsub double %4308, %4310
  %4312 = fadd double %4268, %4309
  %4313 = fsub double %4312, %4268
  %4314 = fsub double %4312, %4313
  %4315 = fsub double %4268, %4314
  %4316 = fsub double %4309, %4313
  %4317 = fadd double %4316, %4315
  %4318 = fadd double %4270, %4311
  %4319 = fsub double %4318, %4270
  %4320 = fsub double %4318, %4319
  %4321 = fsub double %4270, %4320
  %4322 = fsub double %4311, %4319
  %4323 = fadd double %4322, %4321
  %4324 = fadd double %4318, %4317
  %4325 = fadd double %4312, %4324
  %4326 = fsub double %4325, %4312
  %4327 = fsub double %4324, %4326
  %4328 = fadd double %4323, %4327
  %4329 = fadd double %4325, %4328
  %4330 = fsub double %4329, %4325
  %4331 = fsub double %4328, %4330
  %4332 = fmul double %4212, %4329
  %4333 = fneg double %4332
  %4334 = call double @llvm.fma.f64(double %4212, double %4329, double %4333) #9
  %4335 = call double @llvm.fma.f64(double %4212, double %4331, double %4334) #9
  %4336 = fadd double %4332, %4335
  %4337 = fsub double %4336, %4332
  %4338 = fsub double %4335, %4337
  %4339 = call double @llvm.fabs.f64(double %4332) #9
  %4340 = fcmp oeq double %4339, 0x7FF0000000000000
  %4341 = select i1 %4340, double %4332, double %4336
  %4342 = call double @llvm.fabs.f64(double %4341) #9
  %4343 = fcmp oeq double %4342, 0x7FF0000000000000
  %4344 = select i1 %4343, double 0.000000e+00, double %4338
  %4345 = fmul double %4341, 0x3FF71547652B82FE
  %4346 = call double @llvm.rint.f64(double %4345)
  %4347 = fneg double %4346
  %4348 = call double @llvm.fma.f64(double %4347, double 0x3FE62E42FEFA39EF, double %4341)
  %4349 = call double @llvm.fma.f64(double %4347, double 0x3C7ABC9E3B39803F, double %4348)
  %4350 = call double @llvm.fma.f64(double %4349, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4351 = call double @llvm.fma.f64(double %4349, double %4350, double 0x3EC71DEE623FDE64)
  %4352 = call double @llvm.fma.f64(double %4349, double %4351, double 0x3EFA01997C89E6B0)
  %4353 = call double @llvm.fma.f64(double %4349, double %4352, double 0x3F2A01A014761F6E)
  %4354 = call double @llvm.fma.f64(double %4349, double %4353, double 0x3F56C16C1852B7B0)
  %4355 = call double @llvm.fma.f64(double %4349, double %4354, double 0x3F81111111122322)
  %4356 = call double @llvm.fma.f64(double %4349, double %4355, double 0x3FA55555555502A1)
  %4357 = call double @llvm.fma.f64(double %4349, double %4356, double 0x3FC5555555555511)
  %4358 = call double @llvm.fma.f64(double %4349, double %4357, double 0x3FE000000000000B)
  %4359 = call double @llvm.fma.f64(double %4349, double %4358, double 1.000000e+00)
  %4360 = call double @llvm.fma.f64(double %4349, double %4359, double 1.000000e+00)
  %4361 = fptosi double %4346 to i32
  %4362 = call double @llvm.ldexp.f64.i32(double %4360, i32 %4361)
  %4363 = fcmp ogt double %4341, 1.024000e+03
  %4364 = select i1 %4363, double 0x7FF0000000000000, double %4362
  %4365 = fcmp olt double %4341, -1.075000e+03
  %4366 = select i1 %4365, double 0.000000e+00, double %4364
  %4367 = call double @llvm.fma.f64(double %4366, double %4344, double %4366) #9
  %4368 = call double @llvm.fabs.f64(double %4366) #9
  %4369 = fcmp oeq double %4368, 0x7FF0000000000000
  %4370 = select i1 %4369, double %4366, double %4367
  %4371 = call double @llvm.trunc.f64(double %4212) #9
  %4372 = fcmp oeq double %4371, %4212
  %4373 = fmul double %4212, 5.000000e-01
  %4374 = call double @llvm.trunc.f64(double %4373) #9
  %4375 = fcmp une double %4374, %4373
  %4376 = and i1 %4372, %4375
  %4377 = select i1 %4376, double %sub3.i82.i.i, double 1.000000e+00
  %4378 = call double @llvm.copysign.f64(double %4370, double %4377) #9
  %4379 = fcmp olt double %sub3.i82.i.i, 0.000000e+00
  %4380 = select i1 %4372, double %4378, double 0x7FF8000000000000
  %4381 = select i1 %4379, double %4380, double %4378
  %4382 = fcmp oeq double %4213, 0x7FF0000000000000
  %4383 = fcmp oeq double %sub3.i82.i.i, 0.000000e+00
  %4384 = or i1 %4383, %4382
  %4385 = select i1 %4383, double 0.000000e+00, double 0x7FF0000000000000
  %4386 = select i1 %4376, double %sub3.i82.i.i, double 0.000000e+00
  %4387 = call double @llvm.copysign.f64(double %4385, double %4386) #9
  %4388 = select i1 %4384, double %4387, double %4381
  %4389 = fcmp uno double %sub3.i82.i.i, 0.000000e+00
  %4390 = select i1 %4389, double 0x7FF8000000000000, double %4388
  %add5.i84.i.i = fadd double %4390, %add.i81.i.i
  %cmp.i85.i.i = fcmp olt double %add5.i84.i.i, %min_dist.0.i42.i
  br i1 %cmp.i85.i.i, label %if.then.i86.i.i, label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit89.i.i

if.then.i86.i.i:                                  ; preds = %if.then71.i.i
  store double %add56.i.i, ptr addrspace(5) %r0, align 8, !tbaa !35
  store double %3299, ptr addrspace(5) %9, align 8, !tbaa !37
  store double %add63.i.i, ptr addrspace(5) %10, align 8, !tbaa !38
  br label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit89.i.i

_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit89.i.i: ; preds = %if.then.i86.i.i, %if.then71.i.i
  %min_dist.7.i56.i = phi double [ %add5.i84.i.i, %if.then.i86.i.i ], [ %min_dist.0.i42.i, %if.then71.i.i ]
  br i1 %cmp.i85.i.i, label %if.then73.i57.i, label %if.end81.i.i

if.then73.i57.i:                                  ; preds = %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit89.i.i
  %4391 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %this.val48.i.i = load ptr, ptr %4391, align 8, !tbaa !29
  %4392 = load double, ptr %lower_left_.val.i.i, align 8, !tbaa !30
  %sub.i91.i.i = fsub double %add56.i.i, %4392
  %4393 = load double, ptr %this.val48.i.i, align 8, !tbaa !30
  %div.i93.i.i = fdiv double %sub.i91.i.i, %4393
  %4394 = call noundef double @llvm.ceil.f64(double %div.i93.i.i) #9
  %conv5.i94.i.i = fptosi double %4394 to i32
  store i32 %conv5.i94.i.i, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %arrayidx76.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 4
  store i32 1, ptr addrspace(5) %arrayidx76.i.i, align 4, !tbaa !31
  %4395 = load double, ptr %arrayidx.i67.i.i, align 8, !tbaa !30
  %sub.i96.i.i = fsub double %add63.i.i, %4395
  %arrayidx.i1.i97.i.i = getelementptr inbounds nuw i8, ptr %this.val48.i.i, i64 16
  %4396 = load double, ptr %arrayidx.i1.i97.i.i, align 8, !tbaa !30
  %div.i98.i.i = fdiv double %sub.i96.i.i, %4396
  %4397 = call noundef double @llvm.ceil.f64(double %div.i98.i.i) #9
  %conv5.i99.i.i = fptosi double %4397 to i32
  %arrayidx78.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 8
  store i32 %conv5.i99.i.i, ptr addrspace(5) %arrayidx78.i.i, align 4, !tbaa !31
  br label %if.end81.i.i

if.end81.i.i:                                     ; preds = %if.then73.i57.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit89.i.i, %if.then50.i.i, %lor.lhs.false46.i.i
  %min_dist.1.i45.i = phi double [ %min_dist.7.i56.i, %if.then73.i57.i ], [ %min_dist.7.i56.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit89.i.i ], [ %min_dist.0.i42.i, %if.then50.i.i ], [ %min_dist.0.i42.i, %lor.lhs.false46.i.i ]
  %cmp82.i.i = fcmp olt double %34, %3300
  %cmp84.i.i = fcmp ogt double %retval.sroa.3.0.copyload.i82, %3300
  %or.cond20.i.i = select i1 %cmp82.i.i, i1 %cmp84.i.i, i1 false
  br i1 %or.cond20.i.i, label %if.then89.i.i, label %lor.lhs.false85.i.i

lor.lhs.false85.i.i:                              ; preds = %if.end81.i.i
  %cmp86.i.i = fcmp ogt double %34, %3300
  %cmp88.i46.i = fcmp olt double %retval.sroa.3.0.copyload.i82, %3300
  %or.cond21.i.i = select i1 %cmp86.i.i, i1 %cmp88.i46.i, i1 false
  br i1 %or.cond21.i.i, label %if.then89.i.i, label %if.end121.i.i

if.then89.i.i:                                    ; preds = %lor.lhs.false85.i.i, %if.end81.i.i
  %sub91.i.i = fsub double %3300, %34
  %sub92.i.i = fsub double %retval.sroa.0.0.copyload.i78, %32
  %mul93.i.i = fmul double %sub92.i.i, %sub91.i.i
  %sub94.i.i = fsub double %retval.sroa.3.0.copyload.i82, %34
  %div95.i.i = fdiv double %mul93.i.i, %sub94.i.i
  %add96.i.i = fadd double %32, %div95.i.i
  %sub99.i.i = fsub double %retval.sroa.2.0.copyload.i80, %33
  %mul100.i.i = fmul double %sub99.i.i, %sub91.i.i
  %div102.i.i = fdiv double %mul100.i.i, %sub94.i.i
  %add103.i.i = fadd double %33, %div102.i.i
  %cmp104.i.i = fcmp oge double %add96.i.i, %35
  %cmp106.i.i = fcmp olt double %add96.i.i, %3301
  %or.cond22.not206.not208.i.i = select i1 %cmp104.i.i, i1 %cmp106.i.i, i1 false
  %cmp108.i.i = fcmp oge double %add103.i.i, %3299
  %or.cond23.not207.i.i = select i1 %or.cond22.not206.not208.i.i, i1 %cmp108.i.i, i1 false
  %cmp110.i.i = fcmp olt double %add103.i.i, %3302
  %or.cond24.i.i = select i1 %or.cond23.not207.i.i, i1 %cmp110.i.i, i1 false
  br i1 %or.cond24.i.i, label %if.then111.i.i, label %if.end121.i.i

if.then111.i.i:                                   ; preds = %if.then89.i.i
  %sub.i100.i.i = fsub double %add96.i.i, %32
  %4398 = fcmp oeq double %sub.i100.i.i, 1.000000e+00
  %4399 = select i1 %4398, double 1.000000e+00, double 2.000000e+00
  %4400 = call double @llvm.fabs.f64(double %sub.i100.i.i) #9
  %4401 = call double @llvm.amdgcn.frexp.mant.f64(double %4400)
  %4402 = fcmp olt double %4401, 0x3FE5555555555555
  %.neg.i.i.i.i101.i.i = sext i1 %4402 to i32
  %4403 = select i1 %4402, double 2.000000e+00, double 1.000000e+00
  %4404 = fmul double %4401, %4403
  %4405 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %4400)
  %4406 = add i32 %4405, %.neg.i.i.i.i101.i.i
  %4407 = fadd double %4404, -1.000000e+00
  %4408 = fadd double %4404, 1.000000e+00
  %4409 = fadd double %4408, -1.000000e+00
  %4410 = fsub double %4404, %4409
  %4411 = call double @llvm.amdgcn.rcp.f64(double %4408)
  %4412 = fneg double %4408
  %4413 = call double @llvm.fma.f64(double %4412, double %4411, double 1.000000e+00)
  %4414 = call double @llvm.fma.f64(double %4413, double %4411, double %4411)
  %4415 = call double @llvm.fma.f64(double %4412, double %4414, double 1.000000e+00)
  %4416 = call double @llvm.fma.f64(double %4415, double %4414, double %4414)
  %4417 = fmul double %4407, %4416
  %4418 = fmul double %4408, %4417
  %4419 = fneg double %4418
  %4420 = call double @llvm.fma.f64(double %4417, double %4408, double %4419)
  %4421 = call double @llvm.fma.f64(double %4417, double %4410, double %4420)
  %4422 = fadd double %4418, %4421
  %4423 = fsub double %4422, %4418
  %4424 = fsub double %4407, %4422
  %4425 = fsub double %4407, %4424
  %4426 = fsub double %4425, %4422
  %4427 = fsub double %4423, %4421
  %4428 = fadd double %4427, %4426
  %4429 = fadd double %4424, %4428
  %4430 = fmul double %4416, %4429
  %4431 = fadd double %4417, %4430
  %4432 = fsub double %4431, %4417
  %4433 = fsub double %4430, %4432
  %4434 = fmul double %4431, %4431
  %4435 = fneg double %4434
  %4436 = call double @llvm.fma.f64(double %4431, double %4431, double %4435)
  %4437 = fmul double %4433, 2.000000e+00
  %4438 = call double @llvm.fma.f64(double %4431, double %4437, double %4436)
  %4439 = fadd double %4434, %4438
  %4440 = fsub double %4439, %4434
  %4441 = fsub double %4438, %4440
  %4442 = call double @llvm.fma.f64(double %4439, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %4443 = call double @llvm.fma.f64(double %4439, double %4442, double 0x3FBE25E43ABE935A)
  %4444 = call double @llvm.fma.f64(double %4439, double %4443, double 0x3FC110EF47E6C9C2)
  %4445 = call double @llvm.fma.f64(double %4439, double %4444, double 0x3FC3B13BCFA74449)
  %4446 = call double @llvm.fma.f64(double %4439, double %4445, double 0x3FC745D171BF3C30)
  %4447 = call double @llvm.fma.f64(double %4439, double %4446, double 0x3FCC71C71C7792CE)
  %4448 = call double @llvm.fma.f64(double %4439, double %4447, double 0x3FD24924924920DA)
  %4449 = call double @llvm.fma.f64(double %4439, double %4448, double 0x3FD999999999999C)
  %4450 = sitofp i32 %4406 to double
  %4451 = fmul double %4450, 0x3FE62E42FEFA39EF
  %4452 = fneg double %4451
  %4453 = call double @llvm.fma.f64(double %4450, double 0x3FE62E42FEFA39EF, double %4452)
  %4454 = call double @llvm.fma.f64(double %4450, double 0x3C7ABC9E3B39803F, double %4453)
  %4455 = fadd double %4451, %4454
  %4456 = fsub double %4455, %4451
  %4457 = fsub double %4454, %4456
  %4458 = call double @llvm.ldexp.f64.i32(double %4431, i32 1)
  %4459 = call double @llvm.ldexp.f64.i32(double %4433, i32 1)
  %4460 = fmul double %4431, %4439
  %4461 = fneg double %4460
  %4462 = call double @llvm.fma.f64(double %4439, double %4431, double %4461)
  %4463 = call double @llvm.fma.f64(double %4439, double %4433, double %4462)
  %4464 = call double @llvm.fma.f64(double %4441, double %4431, double %4463)
  %4465 = fadd double %4460, %4464
  %4466 = fsub double %4465, %4460
  %4467 = fsub double %4464, %4466
  %4468 = fmul double %4439, %4449
  %4469 = fneg double %4468
  %4470 = call double @llvm.fma.f64(double %4439, double %4449, double %4469)
  %4471 = call double @llvm.fma.f64(double %4441, double %4449, double %4470)
  %4472 = fadd double %4468, %4471
  %4473 = fsub double %4472, %4468
  %4474 = fsub double %4471, %4473
  %4475 = fadd double %4472, 0x3FE5555555555555
  %4476 = fadd double %4475, 0xBFE5555555555555
  %4477 = fsub double %4472, %4476
  %4478 = fadd double %4474, 0x3C8543B0D5DF274D
  %4479 = fadd double %4478, %4477
  %4480 = fadd double %4475, %4479
  %4481 = fsub double %4475, %4480
  %4482 = fadd double %4479, %4481
  %4483 = fmul double %4465, %4480
  %4484 = fneg double %4483
  %4485 = call double @llvm.fma.f64(double %4465, double %4480, double %4484)
  %4486 = call double @llvm.fma.f64(double %4465, double %4482, double %4485)
  %4487 = call double @llvm.fma.f64(double %4467, double %4480, double %4486)
  %4488 = fadd double %4483, %4487
  %4489 = fsub double %4488, %4483
  %4490 = fsub double %4487, %4489
  %4491 = fadd double %4458, %4488
  %4492 = fsub double %4491, %4458
  %4493 = fsub double %4488, %4492
  %4494 = fadd double %4459, %4490
  %4495 = fadd double %4494, %4493
  %4496 = fadd double %4491, %4495
  %4497 = fsub double %4496, %4491
  %4498 = fsub double %4495, %4497
  %4499 = fadd double %4455, %4496
  %4500 = fsub double %4499, %4455
  %4501 = fsub double %4499, %4500
  %4502 = fsub double %4455, %4501
  %4503 = fsub double %4496, %4500
  %4504 = fadd double %4503, %4502
  %4505 = fadd double %4457, %4498
  %4506 = fsub double %4505, %4457
  %4507 = fsub double %4505, %4506
  %4508 = fsub double %4457, %4507
  %4509 = fsub double %4498, %4506
  %4510 = fadd double %4509, %4508
  %4511 = fadd double %4505, %4504
  %4512 = fadd double %4499, %4511
  %4513 = fsub double %4512, %4499
  %4514 = fsub double %4511, %4513
  %4515 = fadd double %4510, %4514
  %4516 = fadd double %4512, %4515
  %4517 = fsub double %4516, %4512
  %4518 = fsub double %4515, %4517
  %4519 = fmul double %4399, %4516
  %4520 = fneg double %4519
  %4521 = call double @llvm.fma.f64(double %4399, double %4516, double %4520) #9
  %4522 = call double @llvm.fma.f64(double %4399, double %4518, double %4521) #9
  %4523 = fadd double %4519, %4522
  %4524 = fsub double %4523, %4519
  %4525 = fsub double %4522, %4524
  %4526 = call double @llvm.fabs.f64(double %4519) #9
  %4527 = fcmp oeq double %4526, 0x7FF0000000000000
  %4528 = select i1 %4527, double %4519, double %4523
  %4529 = call double @llvm.fabs.f64(double %4528) #9
  %4530 = fcmp oeq double %4529, 0x7FF0000000000000
  %4531 = select i1 %4530, double 0.000000e+00, double %4525
  %4532 = fmul double %4528, 0x3FF71547652B82FE
  %4533 = call double @llvm.rint.f64(double %4532)
  %4534 = fneg double %4533
  %4535 = call double @llvm.fma.f64(double %4534, double 0x3FE62E42FEFA39EF, double %4528)
  %4536 = call double @llvm.fma.f64(double %4534, double 0x3C7ABC9E3B39803F, double %4535)
  %4537 = call double @llvm.fma.f64(double %4536, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4538 = call double @llvm.fma.f64(double %4536, double %4537, double 0x3EC71DEE623FDE64)
  %4539 = call double @llvm.fma.f64(double %4536, double %4538, double 0x3EFA01997C89E6B0)
  %4540 = call double @llvm.fma.f64(double %4536, double %4539, double 0x3F2A01A014761F6E)
  %4541 = call double @llvm.fma.f64(double %4536, double %4540, double 0x3F56C16C1852B7B0)
  %4542 = call double @llvm.fma.f64(double %4536, double %4541, double 0x3F81111111122322)
  %4543 = call double @llvm.fma.f64(double %4536, double %4542, double 0x3FA55555555502A1)
  %4544 = call double @llvm.fma.f64(double %4536, double %4543, double 0x3FC5555555555511)
  %4545 = call double @llvm.fma.f64(double %4536, double %4544, double 0x3FE000000000000B)
  %4546 = call double @llvm.fma.f64(double %4536, double %4545, double 1.000000e+00)
  %4547 = call double @llvm.fma.f64(double %4536, double %4546, double 1.000000e+00)
  %4548 = fptosi double %4533 to i32
  %4549 = call double @llvm.ldexp.f64.i32(double %4547, i32 %4548)
  %4550 = fcmp ogt double %4528, 1.024000e+03
  %4551 = select i1 %4550, double 0x7FF0000000000000, double %4549
  %4552 = fcmp olt double %4528, -1.075000e+03
  %4553 = select i1 %4552, double 0.000000e+00, double %4551
  %4554 = call double @llvm.fma.f64(double %4553, double %4531, double %4553) #9
  %4555 = call double @llvm.fabs.f64(double %4553) #9
  %4556 = fcmp oeq double %4555, 0x7FF0000000000000
  %4557 = select i1 %4556, double %4553, double %4554
  %4558 = call double @llvm.trunc.f64(double %4399) #9
  %4559 = fcmp oeq double %4558, %4399
  %4560 = fmul double %4399, 5.000000e-01
  %4561 = call double @llvm.trunc.f64(double %4560) #9
  %4562 = fcmp une double %4561, %4560
  %4563 = and i1 %4559, %4562
  %4564 = select i1 %4563, double %sub.i100.i.i, double 1.000000e+00
  %4565 = call double @llvm.copysign.f64(double %4557, double %4564) #9
  %4566 = fcmp olt double %sub.i100.i.i, 0.000000e+00
  %4567 = select i1 %4559, double %4565, double 0x7FF8000000000000
  %4568 = select i1 %4566, double %4567, double %4565
  %4569 = fcmp oeq double %4400, 0x7FF0000000000000
  %4570 = fcmp oeq double %sub.i100.i.i, 0.000000e+00
  %4571 = or i1 %4570, %4569
  %4572 = select i1 %4570, double 0.000000e+00, double 0x7FF0000000000000
  %4573 = select i1 %4563, double %sub.i100.i.i, double 0.000000e+00
  %4574 = call double @llvm.copysign.f64(double %4572, double %4573) #9
  %4575 = select i1 %4571, double %4574, double %4568
  %4576 = fcmp uno double %sub.i100.i.i, 0.000000e+00
  %4577 = select i1 %4576, double 0x7FF8000000000000, double %4575
  %sub1.i102.i.i = fsub double %add103.i.i, %33
  %4578 = fcmp oeq double %sub1.i102.i.i, 1.000000e+00
  %4579 = select i1 %4578, double 1.000000e+00, double 2.000000e+00
  %4580 = call double @llvm.fabs.f64(double %sub1.i102.i.i) #9
  %4581 = call double @llvm.amdgcn.frexp.mant.f64(double %4580)
  %4582 = fcmp olt double %4581, 0x3FE5555555555555
  %.neg.i.i.i1.i103.i.i = sext i1 %4582 to i32
  %4583 = select i1 %4582, double 2.000000e+00, double 1.000000e+00
  %4584 = fmul double %4581, %4583
  %4585 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %4580)
  %4586 = add i32 %4585, %.neg.i.i.i1.i103.i.i
  %4587 = fadd double %4584, -1.000000e+00
  %4588 = fadd double %4584, 1.000000e+00
  %4589 = fadd double %4588, -1.000000e+00
  %4590 = fsub double %4584, %4589
  %4591 = call double @llvm.amdgcn.rcp.f64(double %4588)
  %4592 = fneg double %4588
  %4593 = call double @llvm.fma.f64(double %4592, double %4591, double 1.000000e+00)
  %4594 = call double @llvm.fma.f64(double %4593, double %4591, double %4591)
  %4595 = call double @llvm.fma.f64(double %4592, double %4594, double 1.000000e+00)
  %4596 = call double @llvm.fma.f64(double %4595, double %4594, double %4594)
  %4597 = fmul double %4587, %4596
  %4598 = fmul double %4588, %4597
  %4599 = fneg double %4598
  %4600 = call double @llvm.fma.f64(double %4597, double %4588, double %4599)
  %4601 = call double @llvm.fma.f64(double %4597, double %4590, double %4600)
  %4602 = fadd double %4598, %4601
  %4603 = fsub double %4602, %4598
  %4604 = fsub double %4587, %4602
  %4605 = fsub double %4587, %4604
  %4606 = fsub double %4605, %4602
  %4607 = fsub double %4603, %4601
  %4608 = fadd double %4607, %4606
  %4609 = fadd double %4604, %4608
  %4610 = fmul double %4596, %4609
  %4611 = fadd double %4597, %4610
  %4612 = fsub double %4611, %4597
  %4613 = fsub double %4610, %4612
  %4614 = fmul double %4611, %4611
  %4615 = fneg double %4614
  %4616 = call double @llvm.fma.f64(double %4611, double %4611, double %4615)
  %4617 = fmul double %4613, 2.000000e+00
  %4618 = call double @llvm.fma.f64(double %4611, double %4617, double %4616)
  %4619 = fadd double %4614, %4618
  %4620 = fsub double %4619, %4614
  %4621 = fsub double %4618, %4620
  %4622 = call double @llvm.fma.f64(double %4619, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %4623 = call double @llvm.fma.f64(double %4619, double %4622, double 0x3FBE25E43ABE935A)
  %4624 = call double @llvm.fma.f64(double %4619, double %4623, double 0x3FC110EF47E6C9C2)
  %4625 = call double @llvm.fma.f64(double %4619, double %4624, double 0x3FC3B13BCFA74449)
  %4626 = call double @llvm.fma.f64(double %4619, double %4625, double 0x3FC745D171BF3C30)
  %4627 = call double @llvm.fma.f64(double %4619, double %4626, double 0x3FCC71C71C7792CE)
  %4628 = call double @llvm.fma.f64(double %4619, double %4627, double 0x3FD24924924920DA)
  %4629 = call double @llvm.fma.f64(double %4619, double %4628, double 0x3FD999999999999C)
  %4630 = sitofp i32 %4586 to double
  %4631 = fmul double %4630, 0x3FE62E42FEFA39EF
  %4632 = fneg double %4631
  %4633 = call double @llvm.fma.f64(double %4630, double 0x3FE62E42FEFA39EF, double %4632)
  %4634 = call double @llvm.fma.f64(double %4630, double 0x3C7ABC9E3B39803F, double %4633)
  %4635 = fadd double %4631, %4634
  %4636 = fsub double %4635, %4631
  %4637 = fsub double %4634, %4636
  %4638 = call double @llvm.ldexp.f64.i32(double %4611, i32 1)
  %4639 = call double @llvm.ldexp.f64.i32(double %4613, i32 1)
  %4640 = fmul double %4611, %4619
  %4641 = fneg double %4640
  %4642 = call double @llvm.fma.f64(double %4619, double %4611, double %4641)
  %4643 = call double @llvm.fma.f64(double %4619, double %4613, double %4642)
  %4644 = call double @llvm.fma.f64(double %4621, double %4611, double %4643)
  %4645 = fadd double %4640, %4644
  %4646 = fsub double %4645, %4640
  %4647 = fsub double %4644, %4646
  %4648 = fmul double %4619, %4629
  %4649 = fneg double %4648
  %4650 = call double @llvm.fma.f64(double %4619, double %4629, double %4649)
  %4651 = call double @llvm.fma.f64(double %4621, double %4629, double %4650)
  %4652 = fadd double %4648, %4651
  %4653 = fsub double %4652, %4648
  %4654 = fsub double %4651, %4653
  %4655 = fadd double %4652, 0x3FE5555555555555
  %4656 = fadd double %4655, 0xBFE5555555555555
  %4657 = fsub double %4652, %4656
  %4658 = fadd double %4654, 0x3C8543B0D5DF274D
  %4659 = fadd double %4658, %4657
  %4660 = fadd double %4655, %4659
  %4661 = fsub double %4655, %4660
  %4662 = fadd double %4659, %4661
  %4663 = fmul double %4645, %4660
  %4664 = fneg double %4663
  %4665 = call double @llvm.fma.f64(double %4645, double %4660, double %4664)
  %4666 = call double @llvm.fma.f64(double %4645, double %4662, double %4665)
  %4667 = call double @llvm.fma.f64(double %4647, double %4660, double %4666)
  %4668 = fadd double %4663, %4667
  %4669 = fsub double %4668, %4663
  %4670 = fsub double %4667, %4669
  %4671 = fadd double %4638, %4668
  %4672 = fsub double %4671, %4638
  %4673 = fsub double %4668, %4672
  %4674 = fadd double %4639, %4670
  %4675 = fadd double %4674, %4673
  %4676 = fadd double %4671, %4675
  %4677 = fsub double %4676, %4671
  %4678 = fsub double %4675, %4677
  %4679 = fadd double %4635, %4676
  %4680 = fsub double %4679, %4635
  %4681 = fsub double %4679, %4680
  %4682 = fsub double %4635, %4681
  %4683 = fsub double %4676, %4680
  %4684 = fadd double %4683, %4682
  %4685 = fadd double %4637, %4678
  %4686 = fsub double %4685, %4637
  %4687 = fsub double %4685, %4686
  %4688 = fsub double %4637, %4687
  %4689 = fsub double %4678, %4686
  %4690 = fadd double %4689, %4688
  %4691 = fadd double %4685, %4684
  %4692 = fadd double %4679, %4691
  %4693 = fsub double %4692, %4679
  %4694 = fsub double %4691, %4693
  %4695 = fadd double %4690, %4694
  %4696 = fadd double %4692, %4695
  %4697 = fsub double %4696, %4692
  %4698 = fsub double %4695, %4697
  %4699 = fmul double %4579, %4696
  %4700 = fneg double %4699
  %4701 = call double @llvm.fma.f64(double %4579, double %4696, double %4700) #9
  %4702 = call double @llvm.fma.f64(double %4579, double %4698, double %4701) #9
  %4703 = fadd double %4699, %4702
  %4704 = fsub double %4703, %4699
  %4705 = fsub double %4702, %4704
  %4706 = call double @llvm.fabs.f64(double %4699) #9
  %4707 = fcmp oeq double %4706, 0x7FF0000000000000
  %4708 = select i1 %4707, double %4699, double %4703
  %4709 = call double @llvm.fabs.f64(double %4708) #9
  %4710 = fcmp oeq double %4709, 0x7FF0000000000000
  %4711 = select i1 %4710, double 0.000000e+00, double %4705
  %4712 = fmul double %4708, 0x3FF71547652B82FE
  %4713 = call double @llvm.rint.f64(double %4712)
  %4714 = fneg double %4713
  %4715 = call double @llvm.fma.f64(double %4714, double 0x3FE62E42FEFA39EF, double %4708)
  %4716 = call double @llvm.fma.f64(double %4714, double 0x3C7ABC9E3B39803F, double %4715)
  %4717 = call double @llvm.fma.f64(double %4716, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4718 = call double @llvm.fma.f64(double %4716, double %4717, double 0x3EC71DEE623FDE64)
  %4719 = call double @llvm.fma.f64(double %4716, double %4718, double 0x3EFA01997C89E6B0)
  %4720 = call double @llvm.fma.f64(double %4716, double %4719, double 0x3F2A01A014761F6E)
  %4721 = call double @llvm.fma.f64(double %4716, double %4720, double 0x3F56C16C1852B7B0)
  %4722 = call double @llvm.fma.f64(double %4716, double %4721, double 0x3F81111111122322)
  %4723 = call double @llvm.fma.f64(double %4716, double %4722, double 0x3FA55555555502A1)
  %4724 = call double @llvm.fma.f64(double %4716, double %4723, double 0x3FC5555555555511)
  %4725 = call double @llvm.fma.f64(double %4716, double %4724, double 0x3FE000000000000B)
  %4726 = call double @llvm.fma.f64(double %4716, double %4725, double 1.000000e+00)
  %4727 = call double @llvm.fma.f64(double %4716, double %4726, double 1.000000e+00)
  %4728 = fptosi double %4713 to i32
  %4729 = call double @llvm.ldexp.f64.i32(double %4727, i32 %4728)
  %4730 = fcmp ogt double %4708, 1.024000e+03
  %4731 = select i1 %4730, double 0x7FF0000000000000, double %4729
  %4732 = fcmp olt double %4708, -1.075000e+03
  %4733 = select i1 %4732, double 0.000000e+00, double %4731
  %4734 = call double @llvm.fma.f64(double %4733, double %4711, double %4733) #9
  %4735 = call double @llvm.fabs.f64(double %4733) #9
  %4736 = fcmp oeq double %4735, 0x7FF0000000000000
  %4737 = select i1 %4736, double %4733, double %4734
  %4738 = call double @llvm.trunc.f64(double %4579) #9
  %4739 = fcmp oeq double %4738, %4579
  %4740 = fmul double %4579, 5.000000e-01
  %4741 = call double @llvm.trunc.f64(double %4740) #9
  %4742 = fcmp une double %4741, %4740
  %4743 = and i1 %4739, %4742
  %4744 = select i1 %4743, double %sub1.i102.i.i, double 1.000000e+00
  %4745 = call double @llvm.copysign.f64(double %4737, double %4744) #9
  %4746 = fcmp olt double %sub1.i102.i.i, 0.000000e+00
  %4747 = select i1 %4739, double %4745, double 0x7FF8000000000000
  %4748 = select i1 %4746, double %4747, double %4745
  %4749 = fcmp oeq double %4580, 0x7FF0000000000000
  %4750 = fcmp oeq double %sub1.i102.i.i, 0.000000e+00
  %4751 = or i1 %4750, %4749
  %4752 = select i1 %4750, double 0.000000e+00, double 0x7FF0000000000000
  %4753 = select i1 %4743, double %sub1.i102.i.i, double 0.000000e+00
  %4754 = call double @llvm.copysign.f64(double %4752, double %4753) #9
  %4755 = select i1 %4751, double %4754, double %4748
  %4756 = fcmp uno double %sub1.i102.i.i, 0.000000e+00
  %4757 = select i1 %4756, double 0x7FF8000000000000, double %4755
  %add.i104.i.i = fadd double %4577, %4757
  %4758 = fcmp oeq double %sub91.i.i, 1.000000e+00
  %4759 = select i1 %4758, double 1.000000e+00, double 2.000000e+00
  %4760 = call double @llvm.fabs.f64(double %sub91.i.i) #9
  %4761 = call double @llvm.amdgcn.frexp.mant.f64(double %4760)
  %4762 = fcmp olt double %4761, 0x3FE5555555555555
  %.neg.i.i.i2.i106.i.i = sext i1 %4762 to i32
  %4763 = select i1 %4762, double 2.000000e+00, double 1.000000e+00
  %4764 = fmul double %4761, %4763
  %4765 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %4760)
  %4766 = add i32 %4765, %.neg.i.i.i2.i106.i.i
  %4767 = fadd double %4764, -1.000000e+00
  %4768 = fadd double %4764, 1.000000e+00
  %4769 = fadd double %4768, -1.000000e+00
  %4770 = fsub double %4764, %4769
  %4771 = call double @llvm.amdgcn.rcp.f64(double %4768)
  %4772 = fneg double %4768
  %4773 = call double @llvm.fma.f64(double %4772, double %4771, double 1.000000e+00)
  %4774 = call double @llvm.fma.f64(double %4773, double %4771, double %4771)
  %4775 = call double @llvm.fma.f64(double %4772, double %4774, double 1.000000e+00)
  %4776 = call double @llvm.fma.f64(double %4775, double %4774, double %4774)
  %4777 = fmul double %4767, %4776
  %4778 = fmul double %4768, %4777
  %4779 = fneg double %4778
  %4780 = call double @llvm.fma.f64(double %4777, double %4768, double %4779)
  %4781 = call double @llvm.fma.f64(double %4777, double %4770, double %4780)
  %4782 = fadd double %4778, %4781
  %4783 = fsub double %4782, %4778
  %4784 = fsub double %4767, %4782
  %4785 = fsub double %4767, %4784
  %4786 = fsub double %4785, %4782
  %4787 = fsub double %4783, %4781
  %4788 = fadd double %4787, %4786
  %4789 = fadd double %4784, %4788
  %4790 = fmul double %4776, %4789
  %4791 = fadd double %4777, %4790
  %4792 = fsub double %4791, %4777
  %4793 = fsub double %4790, %4792
  %4794 = fmul double %4791, %4791
  %4795 = fneg double %4794
  %4796 = call double @llvm.fma.f64(double %4791, double %4791, double %4795)
  %4797 = fmul double %4793, 2.000000e+00
  %4798 = call double @llvm.fma.f64(double %4791, double %4797, double %4796)
  %4799 = fadd double %4794, %4798
  %4800 = fsub double %4799, %4794
  %4801 = fsub double %4798, %4800
  %4802 = call double @llvm.fma.f64(double %4799, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %4803 = call double @llvm.fma.f64(double %4799, double %4802, double 0x3FBE25E43ABE935A)
  %4804 = call double @llvm.fma.f64(double %4799, double %4803, double 0x3FC110EF47E6C9C2)
  %4805 = call double @llvm.fma.f64(double %4799, double %4804, double 0x3FC3B13BCFA74449)
  %4806 = call double @llvm.fma.f64(double %4799, double %4805, double 0x3FC745D171BF3C30)
  %4807 = call double @llvm.fma.f64(double %4799, double %4806, double 0x3FCC71C71C7792CE)
  %4808 = call double @llvm.fma.f64(double %4799, double %4807, double 0x3FD24924924920DA)
  %4809 = call double @llvm.fma.f64(double %4799, double %4808, double 0x3FD999999999999C)
  %4810 = sitofp i32 %4766 to double
  %4811 = fmul double %4810, 0x3FE62E42FEFA39EF
  %4812 = fneg double %4811
  %4813 = call double @llvm.fma.f64(double %4810, double 0x3FE62E42FEFA39EF, double %4812)
  %4814 = call double @llvm.fma.f64(double %4810, double 0x3C7ABC9E3B39803F, double %4813)
  %4815 = fadd double %4811, %4814
  %4816 = fsub double %4815, %4811
  %4817 = fsub double %4814, %4816
  %4818 = call double @llvm.ldexp.f64.i32(double %4791, i32 1)
  %4819 = call double @llvm.ldexp.f64.i32(double %4793, i32 1)
  %4820 = fmul double %4791, %4799
  %4821 = fneg double %4820
  %4822 = call double @llvm.fma.f64(double %4799, double %4791, double %4821)
  %4823 = call double @llvm.fma.f64(double %4799, double %4793, double %4822)
  %4824 = call double @llvm.fma.f64(double %4801, double %4791, double %4823)
  %4825 = fadd double %4820, %4824
  %4826 = fsub double %4825, %4820
  %4827 = fsub double %4824, %4826
  %4828 = fmul double %4799, %4809
  %4829 = fneg double %4828
  %4830 = call double @llvm.fma.f64(double %4799, double %4809, double %4829)
  %4831 = call double @llvm.fma.f64(double %4801, double %4809, double %4830)
  %4832 = fadd double %4828, %4831
  %4833 = fsub double %4832, %4828
  %4834 = fsub double %4831, %4833
  %4835 = fadd double %4832, 0x3FE5555555555555
  %4836 = fadd double %4835, 0xBFE5555555555555
  %4837 = fsub double %4832, %4836
  %4838 = fadd double %4834, 0x3C8543B0D5DF274D
  %4839 = fadd double %4838, %4837
  %4840 = fadd double %4835, %4839
  %4841 = fsub double %4835, %4840
  %4842 = fadd double %4839, %4841
  %4843 = fmul double %4825, %4840
  %4844 = fneg double %4843
  %4845 = call double @llvm.fma.f64(double %4825, double %4840, double %4844)
  %4846 = call double @llvm.fma.f64(double %4825, double %4842, double %4845)
  %4847 = call double @llvm.fma.f64(double %4827, double %4840, double %4846)
  %4848 = fadd double %4843, %4847
  %4849 = fsub double %4848, %4843
  %4850 = fsub double %4847, %4849
  %4851 = fadd double %4818, %4848
  %4852 = fsub double %4851, %4818
  %4853 = fsub double %4848, %4852
  %4854 = fadd double %4819, %4850
  %4855 = fadd double %4854, %4853
  %4856 = fadd double %4851, %4855
  %4857 = fsub double %4856, %4851
  %4858 = fsub double %4855, %4857
  %4859 = fadd double %4815, %4856
  %4860 = fsub double %4859, %4815
  %4861 = fsub double %4859, %4860
  %4862 = fsub double %4815, %4861
  %4863 = fsub double %4856, %4860
  %4864 = fadd double %4863, %4862
  %4865 = fadd double %4817, %4858
  %4866 = fsub double %4865, %4817
  %4867 = fsub double %4865, %4866
  %4868 = fsub double %4817, %4867
  %4869 = fsub double %4858, %4866
  %4870 = fadd double %4869, %4868
  %4871 = fadd double %4865, %4864
  %4872 = fadd double %4859, %4871
  %4873 = fsub double %4872, %4859
  %4874 = fsub double %4871, %4873
  %4875 = fadd double %4870, %4874
  %4876 = fadd double %4872, %4875
  %4877 = fsub double %4876, %4872
  %4878 = fsub double %4875, %4877
  %4879 = fmul double %4759, %4876
  %4880 = fneg double %4879
  %4881 = call double @llvm.fma.f64(double %4759, double %4876, double %4880) #9
  %4882 = call double @llvm.fma.f64(double %4759, double %4878, double %4881) #9
  %4883 = fadd double %4879, %4882
  %4884 = fsub double %4883, %4879
  %4885 = fsub double %4882, %4884
  %4886 = call double @llvm.fabs.f64(double %4879) #9
  %4887 = fcmp oeq double %4886, 0x7FF0000000000000
  %4888 = select i1 %4887, double %4879, double %4883
  %4889 = call double @llvm.fabs.f64(double %4888) #9
  %4890 = fcmp oeq double %4889, 0x7FF0000000000000
  %4891 = select i1 %4890, double 0.000000e+00, double %4885
  %4892 = fmul double %4888, 0x3FF71547652B82FE
  %4893 = call double @llvm.rint.f64(double %4892)
  %4894 = fneg double %4893
  %4895 = call double @llvm.fma.f64(double %4894, double 0x3FE62E42FEFA39EF, double %4888)
  %4896 = call double @llvm.fma.f64(double %4894, double 0x3C7ABC9E3B39803F, double %4895)
  %4897 = call double @llvm.fma.f64(double %4896, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4898 = call double @llvm.fma.f64(double %4896, double %4897, double 0x3EC71DEE623FDE64)
  %4899 = call double @llvm.fma.f64(double %4896, double %4898, double 0x3EFA01997C89E6B0)
  %4900 = call double @llvm.fma.f64(double %4896, double %4899, double 0x3F2A01A014761F6E)
  %4901 = call double @llvm.fma.f64(double %4896, double %4900, double 0x3F56C16C1852B7B0)
  %4902 = call double @llvm.fma.f64(double %4896, double %4901, double 0x3F81111111122322)
  %4903 = call double @llvm.fma.f64(double %4896, double %4902, double 0x3FA55555555502A1)
  %4904 = call double @llvm.fma.f64(double %4896, double %4903, double 0x3FC5555555555511)
  %4905 = call double @llvm.fma.f64(double %4896, double %4904, double 0x3FE000000000000B)
  %4906 = call double @llvm.fma.f64(double %4896, double %4905, double 1.000000e+00)
  %4907 = call double @llvm.fma.f64(double %4896, double %4906, double 1.000000e+00)
  %4908 = fptosi double %4893 to i32
  %4909 = call double @llvm.ldexp.f64.i32(double %4907, i32 %4908)
  %4910 = fcmp ogt double %4888, 1.024000e+03
  %4911 = select i1 %4910, double 0x7FF0000000000000, double %4909
  %4912 = fcmp olt double %4888, -1.075000e+03
  %4913 = select i1 %4912, double 0.000000e+00, double %4911
  %4914 = call double @llvm.fma.f64(double %4913, double %4891, double %4913) #9
  %4915 = call double @llvm.fabs.f64(double %4913) #9
  %4916 = fcmp oeq double %4915, 0x7FF0000000000000
  %4917 = select i1 %4916, double %4913, double %4914
  %4918 = call double @llvm.trunc.f64(double %4759) #9
  %4919 = fcmp oeq double %4918, %4759
  %4920 = fmul double %4759, 5.000000e-01
  %4921 = call double @llvm.trunc.f64(double %4920) #9
  %4922 = fcmp une double %4921, %4920
  %4923 = and i1 %4919, %4922
  %4924 = select i1 %4923, double %sub91.i.i, double 1.000000e+00
  %4925 = call double @llvm.copysign.f64(double %4917, double %4924) #9
  %4926 = fcmp olt double %sub91.i.i, 0.000000e+00
  %4927 = select i1 %4919, double %4925, double 0x7FF8000000000000
  %4928 = select i1 %4926, double %4927, double %4925
  %4929 = fcmp oeq double %4760, 0x7FF0000000000000
  %4930 = fcmp oeq double %sub91.i.i, 0.000000e+00
  %4931 = or i1 %4930, %4929
  %4932 = select i1 %4930, double 0.000000e+00, double 0x7FF0000000000000
  %4933 = select i1 %4923, double %sub91.i.i, double 0.000000e+00
  %4934 = call double @llvm.copysign.f64(double %4932, double %4933) #9
  %4935 = select i1 %4931, double %4934, double %4928
  %4936 = fcmp uno double %sub91.i.i, 0.000000e+00
  %4937 = select i1 %4936, double 0x7FF8000000000000, double %4935
  %add5.i107.i.i = fadd double %4937, %add.i104.i.i
  %cmp.i108.i.i = fcmp olt double %add5.i107.i.i, %min_dist.1.i45.i
  br i1 %cmp.i108.i.i, label %if.then.i109.i.i, label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit112.i.i

if.then.i109.i.i:                                 ; preds = %if.then111.i.i
  store double %add96.i.i, ptr addrspace(5) %r0, align 8, !tbaa !35
  store double %add103.i.i, ptr addrspace(5) %9, align 8, !tbaa !37
  store double %3300, ptr addrspace(5) %10, align 8, !tbaa !38
  br label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit112.i.i

_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit112.i.i: ; preds = %if.then.i109.i.i, %if.then111.i.i
  %min_dist.8.i.i = phi double [ %add5.i107.i.i, %if.then.i109.i.i ], [ %min_dist.1.i45.i, %if.then111.i.i ]
  br i1 %cmp.i108.i.i, label %if.then113.i.i, label %if.end121.i.i

if.then113.i.i:                                   ; preds = %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit112.i.i
  %4938 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %this.val52.i.i = load ptr, ptr %4938, align 8, !tbaa !29
  %4939 = load double, ptr %lower_left_.val.i.i, align 8, !tbaa !30
  %sub.i114.i.i = fsub double %add96.i.i, %4939
  %4940 = load double, ptr %this.val52.i.i, align 8, !tbaa !30
  %div.i116.i.i = fdiv double %sub.i114.i.i, %4940
  %4941 = call noundef double @llvm.ceil.f64(double %div.i116.i.i) #9
  %conv5.i117.i.i = fptosi double %4941 to i32
  store i32 %conv5.i117.i.i, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %4942 = load double, ptr %arrayidx.i.i35.i, align 8, !tbaa !30
  %sub.i119.i.i = fsub double %add103.i.i, %4942
  %arrayidx.i1.i120.i.i = getelementptr inbounds nuw i8, ptr %this.val52.i.i, i64 8
  %4943 = load double, ptr %arrayidx.i1.i120.i.i, align 8, !tbaa !30
  %div.i121.i.i = fdiv double %sub.i119.i.i, %4943
  %4944 = call noundef double @llvm.ceil.f64(double %div.i121.i.i) #9
  %conv5.i122.i.i = fptosi double %4944 to i32
  %arrayidx117.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 4
  store i32 %conv5.i122.i.i, ptr addrspace(5) %arrayidx117.i.i, align 4, !tbaa !31
  %arrayidx118.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 8
  store i32 1, ptr addrspace(5) %arrayidx118.i.i, align 4, !tbaa !31
  br label %if.end121.i.i

if.end121.i.i:                                    ; preds = %if.then113.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit112.i.i, %if.then89.i.i, %lor.lhs.false85.i.i
  %min_dist.2.i47.i = phi double [ %min_dist.8.i.i, %if.then113.i.i ], [ %min_dist.8.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit112.i.i ], [ %min_dist.1.i45.i, %if.then89.i.i ], [ %min_dist.1.i45.i, %lor.lhs.false85.i.i ]
  %cmp122.i.i = fcmp olt double %32, %3301
  %cmp124.i.i = fcmp ogt double %retval.sroa.0.0.copyload.i78, %3301
  %or.cond25.i.i = select i1 %cmp122.i.i, i1 %cmp124.i.i, i1 false
  br i1 %or.cond25.i.i, label %if.then129.i.i, label %lor.lhs.false125.i.i

lor.lhs.false125.i.i:                             ; preds = %if.end121.i.i
  %cmp126.i.i = fcmp ogt double %32, %3301
  %cmp128.i.i = fcmp olt double %retval.sroa.0.0.copyload.i78, %3301
  %or.cond26.i.i = select i1 %cmp126.i.i, i1 %cmp128.i.i, i1 false
  br i1 %or.cond26.i.i, label %if.then129.i.i, label %if.end162.i.i

if.then129.i.i:                                   ; preds = %lor.lhs.false125.i.i, %if.end121.i.i
  %sub131.i.i = fsub double %3301, %32
  %sub132.i.i = fsub double %retval.sroa.2.0.copyload.i80, %33
  %mul133.i.i = fmul double %sub132.i.i, %sub131.i.i
  %sub134.i.i = fsub double %retval.sroa.0.0.copyload.i78, %32
  %div135.i.i = fdiv double %mul133.i.i, %sub134.i.i
  %add136.i.i = fadd double %33, %div135.i.i
  %sub139.i.i = fsub double %retval.sroa.3.0.copyload.i82, %34
  %mul140.i.i = fmul double %sub139.i.i, %sub131.i.i
  %div142.i.i = fdiv double %mul140.i.i, %sub134.i.i
  %add143.i.i = fadd double %34, %div142.i.i
  %cmp144.i.i = fcmp oge double %add136.i.i, %3299
  %cmp146.i.i = fcmp olt double %add136.i.i, %3302
  %or.cond27.not209.not211.i.i = select i1 %cmp144.i.i, i1 %cmp146.i.i, i1 false
  %cmp148.i.i = fcmp oge double %add143.i.i, %3300
  %or.cond28.not210.i.i = select i1 %or.cond27.not209.not211.i.i, i1 %cmp148.i.i, i1 false
  %cmp150.i.i = fcmp olt double %add143.i.i, %3303
  %or.cond29.i.i = select i1 %or.cond28.not210.i.i, i1 %cmp150.i.i, i1 false
  br i1 %or.cond29.i.i, label %if.then151.i.i, label %if.end162.i.i

if.then151.i.i:                                   ; preds = %if.then129.i.i
  %4945 = fcmp oeq double %sub131.i.i, 1.000000e+00
  %4946 = select i1 %4945, double 1.000000e+00, double 2.000000e+00
  %4947 = call double @llvm.fabs.f64(double %sub131.i.i) #9
  %4948 = call double @llvm.amdgcn.frexp.mant.f64(double %4947)
  %4949 = fcmp olt double %4948, 0x3FE5555555555555
  %.neg.i.i.i.i124.i.i = sext i1 %4949 to i32
  %4950 = select i1 %4949, double 2.000000e+00, double 1.000000e+00
  %4951 = fmul double %4948, %4950
  %4952 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %4947)
  %4953 = add i32 %4952, %.neg.i.i.i.i124.i.i
  %4954 = fadd double %4951, -1.000000e+00
  %4955 = fadd double %4951, 1.000000e+00
  %4956 = fadd double %4955, -1.000000e+00
  %4957 = fsub double %4951, %4956
  %4958 = call double @llvm.amdgcn.rcp.f64(double %4955)
  %4959 = fneg double %4955
  %4960 = call double @llvm.fma.f64(double %4959, double %4958, double 1.000000e+00)
  %4961 = call double @llvm.fma.f64(double %4960, double %4958, double %4958)
  %4962 = call double @llvm.fma.f64(double %4959, double %4961, double 1.000000e+00)
  %4963 = call double @llvm.fma.f64(double %4962, double %4961, double %4961)
  %4964 = fmul double %4954, %4963
  %4965 = fmul double %4955, %4964
  %4966 = fneg double %4965
  %4967 = call double @llvm.fma.f64(double %4964, double %4955, double %4966)
  %4968 = call double @llvm.fma.f64(double %4964, double %4957, double %4967)
  %4969 = fadd double %4965, %4968
  %4970 = fsub double %4969, %4965
  %4971 = fsub double %4954, %4969
  %4972 = fsub double %4954, %4971
  %4973 = fsub double %4972, %4969
  %4974 = fsub double %4970, %4968
  %4975 = fadd double %4974, %4973
  %4976 = fadd double %4971, %4975
  %4977 = fmul double %4963, %4976
  %4978 = fadd double %4964, %4977
  %4979 = fsub double %4978, %4964
  %4980 = fsub double %4977, %4979
  %4981 = fmul double %4978, %4978
  %4982 = fneg double %4981
  %4983 = call double @llvm.fma.f64(double %4978, double %4978, double %4982)
  %4984 = fmul double %4980, 2.000000e+00
  %4985 = call double @llvm.fma.f64(double %4978, double %4984, double %4983)
  %4986 = fadd double %4981, %4985
  %4987 = fsub double %4986, %4981
  %4988 = fsub double %4985, %4987
  %4989 = call double @llvm.fma.f64(double %4986, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %4990 = call double @llvm.fma.f64(double %4986, double %4989, double 0x3FBE25E43ABE935A)
  %4991 = call double @llvm.fma.f64(double %4986, double %4990, double 0x3FC110EF47E6C9C2)
  %4992 = call double @llvm.fma.f64(double %4986, double %4991, double 0x3FC3B13BCFA74449)
  %4993 = call double @llvm.fma.f64(double %4986, double %4992, double 0x3FC745D171BF3C30)
  %4994 = call double @llvm.fma.f64(double %4986, double %4993, double 0x3FCC71C71C7792CE)
  %4995 = call double @llvm.fma.f64(double %4986, double %4994, double 0x3FD24924924920DA)
  %4996 = call double @llvm.fma.f64(double %4986, double %4995, double 0x3FD999999999999C)
  %4997 = sitofp i32 %4953 to double
  %4998 = fmul double %4997, 0x3FE62E42FEFA39EF
  %4999 = fneg double %4998
  %5000 = call double @llvm.fma.f64(double %4997, double 0x3FE62E42FEFA39EF, double %4999)
  %5001 = call double @llvm.fma.f64(double %4997, double 0x3C7ABC9E3B39803F, double %5000)
  %5002 = fadd double %4998, %5001
  %5003 = fsub double %5002, %4998
  %5004 = fsub double %5001, %5003
  %5005 = call double @llvm.ldexp.f64.i32(double %4978, i32 1)
  %5006 = call double @llvm.ldexp.f64.i32(double %4980, i32 1)
  %5007 = fmul double %4978, %4986
  %5008 = fneg double %5007
  %5009 = call double @llvm.fma.f64(double %4986, double %4978, double %5008)
  %5010 = call double @llvm.fma.f64(double %4986, double %4980, double %5009)
  %5011 = call double @llvm.fma.f64(double %4988, double %4978, double %5010)
  %5012 = fadd double %5007, %5011
  %5013 = fsub double %5012, %5007
  %5014 = fsub double %5011, %5013
  %5015 = fmul double %4986, %4996
  %5016 = fneg double %5015
  %5017 = call double @llvm.fma.f64(double %4986, double %4996, double %5016)
  %5018 = call double @llvm.fma.f64(double %4988, double %4996, double %5017)
  %5019 = fadd double %5015, %5018
  %5020 = fsub double %5019, %5015
  %5021 = fsub double %5018, %5020
  %5022 = fadd double %5019, 0x3FE5555555555555
  %5023 = fadd double %5022, 0xBFE5555555555555
  %5024 = fsub double %5019, %5023
  %5025 = fadd double %5021, 0x3C8543B0D5DF274D
  %5026 = fadd double %5025, %5024
  %5027 = fadd double %5022, %5026
  %5028 = fsub double %5022, %5027
  %5029 = fadd double %5026, %5028
  %5030 = fmul double %5012, %5027
  %5031 = fneg double %5030
  %5032 = call double @llvm.fma.f64(double %5012, double %5027, double %5031)
  %5033 = call double @llvm.fma.f64(double %5012, double %5029, double %5032)
  %5034 = call double @llvm.fma.f64(double %5014, double %5027, double %5033)
  %5035 = fadd double %5030, %5034
  %5036 = fsub double %5035, %5030
  %5037 = fsub double %5034, %5036
  %5038 = fadd double %5005, %5035
  %5039 = fsub double %5038, %5005
  %5040 = fsub double %5035, %5039
  %5041 = fadd double %5006, %5037
  %5042 = fadd double %5041, %5040
  %5043 = fadd double %5038, %5042
  %5044 = fsub double %5043, %5038
  %5045 = fsub double %5042, %5044
  %5046 = fadd double %5002, %5043
  %5047 = fsub double %5046, %5002
  %5048 = fsub double %5046, %5047
  %5049 = fsub double %5002, %5048
  %5050 = fsub double %5043, %5047
  %5051 = fadd double %5050, %5049
  %5052 = fadd double %5004, %5045
  %5053 = fsub double %5052, %5004
  %5054 = fsub double %5052, %5053
  %5055 = fsub double %5004, %5054
  %5056 = fsub double %5045, %5053
  %5057 = fadd double %5056, %5055
  %5058 = fadd double %5052, %5051
  %5059 = fadd double %5046, %5058
  %5060 = fsub double %5059, %5046
  %5061 = fsub double %5058, %5060
  %5062 = fadd double %5057, %5061
  %5063 = fadd double %5059, %5062
  %5064 = fsub double %5063, %5059
  %5065 = fsub double %5062, %5064
  %5066 = fmul double %4946, %5063
  %5067 = fneg double %5066
  %5068 = call double @llvm.fma.f64(double %4946, double %5063, double %5067) #9
  %5069 = call double @llvm.fma.f64(double %4946, double %5065, double %5068) #9
  %5070 = fadd double %5066, %5069
  %5071 = fsub double %5070, %5066
  %5072 = fsub double %5069, %5071
  %5073 = call double @llvm.fabs.f64(double %5066) #9
  %5074 = fcmp oeq double %5073, 0x7FF0000000000000
  %5075 = select i1 %5074, double %5066, double %5070
  %5076 = call double @llvm.fabs.f64(double %5075) #9
  %5077 = fcmp oeq double %5076, 0x7FF0000000000000
  %5078 = select i1 %5077, double 0.000000e+00, double %5072
  %5079 = fmul double %5075, 0x3FF71547652B82FE
  %5080 = call double @llvm.rint.f64(double %5079)
  %5081 = fneg double %5080
  %5082 = call double @llvm.fma.f64(double %5081, double 0x3FE62E42FEFA39EF, double %5075)
  %5083 = call double @llvm.fma.f64(double %5081, double 0x3C7ABC9E3B39803F, double %5082)
  %5084 = call double @llvm.fma.f64(double %5083, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %5085 = call double @llvm.fma.f64(double %5083, double %5084, double 0x3EC71DEE623FDE64)
  %5086 = call double @llvm.fma.f64(double %5083, double %5085, double 0x3EFA01997C89E6B0)
  %5087 = call double @llvm.fma.f64(double %5083, double %5086, double 0x3F2A01A014761F6E)
  %5088 = call double @llvm.fma.f64(double %5083, double %5087, double 0x3F56C16C1852B7B0)
  %5089 = call double @llvm.fma.f64(double %5083, double %5088, double 0x3F81111111122322)
  %5090 = call double @llvm.fma.f64(double %5083, double %5089, double 0x3FA55555555502A1)
  %5091 = call double @llvm.fma.f64(double %5083, double %5090, double 0x3FC5555555555511)
  %5092 = call double @llvm.fma.f64(double %5083, double %5091, double 0x3FE000000000000B)
  %5093 = call double @llvm.fma.f64(double %5083, double %5092, double 1.000000e+00)
  %5094 = call double @llvm.fma.f64(double %5083, double %5093, double 1.000000e+00)
  %5095 = fptosi double %5080 to i32
  %5096 = call double @llvm.ldexp.f64.i32(double %5094, i32 %5095)
  %5097 = fcmp ogt double %5075, 1.024000e+03
  %5098 = select i1 %5097, double 0x7FF0000000000000, double %5096
  %5099 = fcmp olt double %5075, -1.075000e+03
  %5100 = select i1 %5099, double 0.000000e+00, double %5098
  %5101 = call double @llvm.fma.f64(double %5100, double %5078, double %5100) #9
  %5102 = call double @llvm.fabs.f64(double %5100) #9
  %5103 = fcmp oeq double %5102, 0x7FF0000000000000
  %5104 = select i1 %5103, double %5100, double %5101
  %5105 = call double @llvm.trunc.f64(double %4946) #9
  %5106 = fcmp oeq double %5105, %4946
  %5107 = fmul double %4946, 5.000000e-01
  %5108 = call double @llvm.trunc.f64(double %5107) #9
  %5109 = fcmp une double %5108, %5107
  %5110 = and i1 %5106, %5109
  %5111 = select i1 %5110, double %sub131.i.i, double 1.000000e+00
  %5112 = call double @llvm.copysign.f64(double %5104, double %5111) #9
  %5113 = fcmp olt double %sub131.i.i, 0.000000e+00
  %5114 = select i1 %5106, double %5112, double 0x7FF8000000000000
  %5115 = select i1 %5113, double %5114, double %5112
  %5116 = fcmp oeq double %4947, 0x7FF0000000000000
  %5117 = fcmp oeq double %sub131.i.i, 0.000000e+00
  %5118 = or i1 %5117, %5116
  %5119 = select i1 %5117, double 0.000000e+00, double 0x7FF0000000000000
  %5120 = select i1 %5110, double %sub131.i.i, double 0.000000e+00
  %5121 = call double @llvm.copysign.f64(double %5119, double %5120) #9
  %5122 = select i1 %5118, double %5121, double %5115
  %5123 = fcmp uno double %sub131.i.i, 0.000000e+00
  %5124 = select i1 %5123, double 0x7FF8000000000000, double %5122
  %sub1.i125.i.i = fsub double %add136.i.i, %33
  %5125 = fcmp oeq double %sub1.i125.i.i, 1.000000e+00
  %5126 = select i1 %5125, double 1.000000e+00, double 2.000000e+00
  %5127 = call double @llvm.fabs.f64(double %sub1.i125.i.i) #9
  %5128 = call double @llvm.amdgcn.frexp.mant.f64(double %5127)
  %5129 = fcmp olt double %5128, 0x3FE5555555555555
  %.neg.i.i.i1.i126.i.i = sext i1 %5129 to i32
  %5130 = select i1 %5129, double 2.000000e+00, double 1.000000e+00
  %5131 = fmul double %5128, %5130
  %5132 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %5127)
  %5133 = add i32 %5132, %.neg.i.i.i1.i126.i.i
  %5134 = fadd double %5131, -1.000000e+00
  %5135 = fadd double %5131, 1.000000e+00
  %5136 = fadd double %5135, -1.000000e+00
  %5137 = fsub double %5131, %5136
  %5138 = call double @llvm.amdgcn.rcp.f64(double %5135)
  %5139 = fneg double %5135
  %5140 = call double @llvm.fma.f64(double %5139, double %5138, double 1.000000e+00)
  %5141 = call double @llvm.fma.f64(double %5140, double %5138, double %5138)
  %5142 = call double @llvm.fma.f64(double %5139, double %5141, double 1.000000e+00)
  %5143 = call double @llvm.fma.f64(double %5142, double %5141, double %5141)
  %5144 = fmul double %5134, %5143
  %5145 = fmul double %5135, %5144
  %5146 = fneg double %5145
  %5147 = call double @llvm.fma.f64(double %5144, double %5135, double %5146)
  %5148 = call double @llvm.fma.f64(double %5144, double %5137, double %5147)
  %5149 = fadd double %5145, %5148
  %5150 = fsub double %5149, %5145
  %5151 = fsub double %5134, %5149
  %5152 = fsub double %5134, %5151
  %5153 = fsub double %5152, %5149
  %5154 = fsub double %5150, %5148
  %5155 = fadd double %5154, %5153
  %5156 = fadd double %5151, %5155
  %5157 = fmul double %5143, %5156
  %5158 = fadd double %5144, %5157
  %5159 = fsub double %5158, %5144
  %5160 = fsub double %5157, %5159
  %5161 = fmul double %5158, %5158
  %5162 = fneg double %5161
  %5163 = call double @llvm.fma.f64(double %5158, double %5158, double %5162)
  %5164 = fmul double %5160, 2.000000e+00
  %5165 = call double @llvm.fma.f64(double %5158, double %5164, double %5163)
  %5166 = fadd double %5161, %5165
  %5167 = fsub double %5166, %5161
  %5168 = fsub double %5165, %5167
  %5169 = call double @llvm.fma.f64(double %5166, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %5170 = call double @llvm.fma.f64(double %5166, double %5169, double 0x3FBE25E43ABE935A)
  %5171 = call double @llvm.fma.f64(double %5166, double %5170, double 0x3FC110EF47E6C9C2)
  %5172 = call double @llvm.fma.f64(double %5166, double %5171, double 0x3FC3B13BCFA74449)
  %5173 = call double @llvm.fma.f64(double %5166, double %5172, double 0x3FC745D171BF3C30)
  %5174 = call double @llvm.fma.f64(double %5166, double %5173, double 0x3FCC71C71C7792CE)
  %5175 = call double @llvm.fma.f64(double %5166, double %5174, double 0x3FD24924924920DA)
  %5176 = call double @llvm.fma.f64(double %5166, double %5175, double 0x3FD999999999999C)
  %5177 = sitofp i32 %5133 to double
  %5178 = fmul double %5177, 0x3FE62E42FEFA39EF
  %5179 = fneg double %5178
  %5180 = call double @llvm.fma.f64(double %5177, double 0x3FE62E42FEFA39EF, double %5179)
  %5181 = call double @llvm.fma.f64(double %5177, double 0x3C7ABC9E3B39803F, double %5180)
  %5182 = fadd double %5178, %5181
  %5183 = fsub double %5182, %5178
  %5184 = fsub double %5181, %5183
  %5185 = call double @llvm.ldexp.f64.i32(double %5158, i32 1)
  %5186 = call double @llvm.ldexp.f64.i32(double %5160, i32 1)
  %5187 = fmul double %5158, %5166
  %5188 = fneg double %5187
  %5189 = call double @llvm.fma.f64(double %5166, double %5158, double %5188)
  %5190 = call double @llvm.fma.f64(double %5166, double %5160, double %5189)
  %5191 = call double @llvm.fma.f64(double %5168, double %5158, double %5190)
  %5192 = fadd double %5187, %5191
  %5193 = fsub double %5192, %5187
  %5194 = fsub double %5191, %5193
  %5195 = fmul double %5166, %5176
  %5196 = fneg double %5195
  %5197 = call double @llvm.fma.f64(double %5166, double %5176, double %5196)
  %5198 = call double @llvm.fma.f64(double %5168, double %5176, double %5197)
  %5199 = fadd double %5195, %5198
  %5200 = fsub double %5199, %5195
  %5201 = fsub double %5198, %5200
  %5202 = fadd double %5199, 0x3FE5555555555555
  %5203 = fadd double %5202, 0xBFE5555555555555
  %5204 = fsub double %5199, %5203
  %5205 = fadd double %5201, 0x3C8543B0D5DF274D
  %5206 = fadd double %5205, %5204
  %5207 = fadd double %5202, %5206
  %5208 = fsub double %5202, %5207
  %5209 = fadd double %5206, %5208
  %5210 = fmul double %5192, %5207
  %5211 = fneg double %5210
  %5212 = call double @llvm.fma.f64(double %5192, double %5207, double %5211)
  %5213 = call double @llvm.fma.f64(double %5192, double %5209, double %5212)
  %5214 = call double @llvm.fma.f64(double %5194, double %5207, double %5213)
  %5215 = fadd double %5210, %5214
  %5216 = fsub double %5215, %5210
  %5217 = fsub double %5214, %5216
  %5218 = fadd double %5185, %5215
  %5219 = fsub double %5218, %5185
  %5220 = fsub double %5215, %5219
  %5221 = fadd double %5186, %5217
  %5222 = fadd double %5221, %5220
  %5223 = fadd double %5218, %5222
  %5224 = fsub double %5223, %5218
  %5225 = fsub double %5222, %5224
  %5226 = fadd double %5182, %5223
  %5227 = fsub double %5226, %5182
  %5228 = fsub double %5226, %5227
  %5229 = fsub double %5182, %5228
  %5230 = fsub double %5223, %5227
  %5231 = fadd double %5230, %5229
  %5232 = fadd double %5184, %5225
  %5233 = fsub double %5232, %5184
  %5234 = fsub double %5232, %5233
  %5235 = fsub double %5184, %5234
  %5236 = fsub double %5225, %5233
  %5237 = fadd double %5236, %5235
  %5238 = fadd double %5232, %5231
  %5239 = fadd double %5226, %5238
  %5240 = fsub double %5239, %5226
  %5241 = fsub double %5238, %5240
  %5242 = fadd double %5237, %5241
  %5243 = fadd double %5239, %5242
  %5244 = fsub double %5243, %5239
  %5245 = fsub double %5242, %5244
  %5246 = fmul double %5126, %5243
  %5247 = fneg double %5246
  %5248 = call double @llvm.fma.f64(double %5126, double %5243, double %5247) #9
  %5249 = call double @llvm.fma.f64(double %5126, double %5245, double %5248) #9
  %5250 = fadd double %5246, %5249
  %5251 = fsub double %5250, %5246
  %5252 = fsub double %5249, %5251
  %5253 = call double @llvm.fabs.f64(double %5246) #9
  %5254 = fcmp oeq double %5253, 0x7FF0000000000000
  %5255 = select i1 %5254, double %5246, double %5250
  %5256 = call double @llvm.fabs.f64(double %5255) #9
  %5257 = fcmp oeq double %5256, 0x7FF0000000000000
  %5258 = select i1 %5257, double 0.000000e+00, double %5252
  %5259 = fmul double %5255, 0x3FF71547652B82FE
  %5260 = call double @llvm.rint.f64(double %5259)
  %5261 = fneg double %5260
  %5262 = call double @llvm.fma.f64(double %5261, double 0x3FE62E42FEFA39EF, double %5255)
  %5263 = call double @llvm.fma.f64(double %5261, double 0x3C7ABC9E3B39803F, double %5262)
  %5264 = call double @llvm.fma.f64(double %5263, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %5265 = call double @llvm.fma.f64(double %5263, double %5264, double 0x3EC71DEE623FDE64)
  %5266 = call double @llvm.fma.f64(double %5263, double %5265, double 0x3EFA01997C89E6B0)
  %5267 = call double @llvm.fma.f64(double %5263, double %5266, double 0x3F2A01A014761F6E)
  %5268 = call double @llvm.fma.f64(double %5263, double %5267, double 0x3F56C16C1852B7B0)
  %5269 = call double @llvm.fma.f64(double %5263, double %5268, double 0x3F81111111122322)
  %5270 = call double @llvm.fma.f64(double %5263, double %5269, double 0x3FA55555555502A1)
  %5271 = call double @llvm.fma.f64(double %5263, double %5270, double 0x3FC5555555555511)
  %5272 = call double @llvm.fma.f64(double %5263, double %5271, double 0x3FE000000000000B)
  %5273 = call double @llvm.fma.f64(double %5263, double %5272, double 1.000000e+00)
  %5274 = call double @llvm.fma.f64(double %5263, double %5273, double 1.000000e+00)
  %5275 = fptosi double %5260 to i32
  %5276 = call double @llvm.ldexp.f64.i32(double %5274, i32 %5275)
  %5277 = fcmp ogt double %5255, 1.024000e+03
  %5278 = select i1 %5277, double 0x7FF0000000000000, double %5276
  %5279 = fcmp olt double %5255, -1.075000e+03
  %5280 = select i1 %5279, double 0.000000e+00, double %5278
  %5281 = call double @llvm.fma.f64(double %5280, double %5258, double %5280) #9
  %5282 = call double @llvm.fabs.f64(double %5280) #9
  %5283 = fcmp oeq double %5282, 0x7FF0000000000000
  %5284 = select i1 %5283, double %5280, double %5281
  %5285 = call double @llvm.trunc.f64(double %5126) #9
  %5286 = fcmp oeq double %5285, %5126
  %5287 = fmul double %5126, 5.000000e-01
  %5288 = call double @llvm.trunc.f64(double %5287) #9
  %5289 = fcmp une double %5288, %5287
  %5290 = and i1 %5286, %5289
  %5291 = select i1 %5290, double %sub1.i125.i.i, double 1.000000e+00
  %5292 = call double @llvm.copysign.f64(double %5284, double %5291) #9
  %5293 = fcmp olt double %sub1.i125.i.i, 0.000000e+00
  %5294 = select i1 %5286, double %5292, double 0x7FF8000000000000
  %5295 = select i1 %5293, double %5294, double %5292
  %5296 = fcmp oeq double %5127, 0x7FF0000000000000
  %5297 = fcmp oeq double %sub1.i125.i.i, 0.000000e+00
  %5298 = or i1 %5297, %5296
  %5299 = select i1 %5297, double 0.000000e+00, double 0x7FF0000000000000
  %5300 = select i1 %5290, double %sub1.i125.i.i, double 0.000000e+00
  %5301 = call double @llvm.copysign.f64(double %5299, double %5300) #9
  %5302 = select i1 %5298, double %5301, double %5295
  %5303 = fcmp uno double %sub1.i125.i.i, 0.000000e+00
  %5304 = select i1 %5303, double 0x7FF8000000000000, double %5302
  %add.i127.i.i = fadd double %5124, %5304
  %sub3.i128.i.i = fsub double %add143.i.i, %34
  %5305 = fcmp oeq double %sub3.i128.i.i, 1.000000e+00
  %5306 = select i1 %5305, double 1.000000e+00, double 2.000000e+00
  %5307 = call double @llvm.fabs.f64(double %sub3.i128.i.i) #9
  %5308 = call double @llvm.amdgcn.frexp.mant.f64(double %5307)
  %5309 = fcmp olt double %5308, 0x3FE5555555555555
  %.neg.i.i.i2.i129.i.i = sext i1 %5309 to i32
  %5310 = select i1 %5309, double 2.000000e+00, double 1.000000e+00
  %5311 = fmul double %5308, %5310
  %5312 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %5307)
  %5313 = add i32 %5312, %.neg.i.i.i2.i129.i.i
  %5314 = fadd double %5311, -1.000000e+00
  %5315 = fadd double %5311, 1.000000e+00
  %5316 = fadd double %5315, -1.000000e+00
  %5317 = fsub double %5311, %5316
  %5318 = call double @llvm.amdgcn.rcp.f64(double %5315)
  %5319 = fneg double %5315
  %5320 = call double @llvm.fma.f64(double %5319, double %5318, double 1.000000e+00)
  %5321 = call double @llvm.fma.f64(double %5320, double %5318, double %5318)
  %5322 = call double @llvm.fma.f64(double %5319, double %5321, double 1.000000e+00)
  %5323 = call double @llvm.fma.f64(double %5322, double %5321, double %5321)
  %5324 = fmul double %5314, %5323
  %5325 = fmul double %5315, %5324
  %5326 = fneg double %5325
  %5327 = call double @llvm.fma.f64(double %5324, double %5315, double %5326)
  %5328 = call double @llvm.fma.f64(double %5324, double %5317, double %5327)
  %5329 = fadd double %5325, %5328
  %5330 = fsub double %5329, %5325
  %5331 = fsub double %5314, %5329
  %5332 = fsub double %5314, %5331
  %5333 = fsub double %5332, %5329
  %5334 = fsub double %5330, %5328
  %5335 = fadd double %5334, %5333
  %5336 = fadd double %5331, %5335
  %5337 = fmul double %5323, %5336
  %5338 = fadd double %5324, %5337
  %5339 = fsub double %5338, %5324
  %5340 = fsub double %5337, %5339
  %5341 = fmul double %5338, %5338
  %5342 = fneg double %5341
  %5343 = call double @llvm.fma.f64(double %5338, double %5338, double %5342)
  %5344 = fmul double %5340, 2.000000e+00
  %5345 = call double @llvm.fma.f64(double %5338, double %5344, double %5343)
  %5346 = fadd double %5341, %5345
  %5347 = fsub double %5346, %5341
  %5348 = fsub double %5345, %5347
  %5349 = call double @llvm.fma.f64(double %5346, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %5350 = call double @llvm.fma.f64(double %5346, double %5349, double 0x3FBE25E43ABE935A)
  %5351 = call double @llvm.fma.f64(double %5346, double %5350, double 0x3FC110EF47E6C9C2)
  %5352 = call double @llvm.fma.f64(double %5346, double %5351, double 0x3FC3B13BCFA74449)
  %5353 = call double @llvm.fma.f64(double %5346, double %5352, double 0x3FC745D171BF3C30)
  %5354 = call double @llvm.fma.f64(double %5346, double %5353, double 0x3FCC71C71C7792CE)
  %5355 = call double @llvm.fma.f64(double %5346, double %5354, double 0x3FD24924924920DA)
  %5356 = call double @llvm.fma.f64(double %5346, double %5355, double 0x3FD999999999999C)
  %5357 = sitofp i32 %5313 to double
  %5358 = fmul double %5357, 0x3FE62E42FEFA39EF
  %5359 = fneg double %5358
  %5360 = call double @llvm.fma.f64(double %5357, double 0x3FE62E42FEFA39EF, double %5359)
  %5361 = call double @llvm.fma.f64(double %5357, double 0x3C7ABC9E3B39803F, double %5360)
  %5362 = fadd double %5358, %5361
  %5363 = fsub double %5362, %5358
  %5364 = fsub double %5361, %5363
  %5365 = call double @llvm.ldexp.f64.i32(double %5338, i32 1)
  %5366 = call double @llvm.ldexp.f64.i32(double %5340, i32 1)
  %5367 = fmul double %5338, %5346
  %5368 = fneg double %5367
  %5369 = call double @llvm.fma.f64(double %5346, double %5338, double %5368)
  %5370 = call double @llvm.fma.f64(double %5346, double %5340, double %5369)
  %5371 = call double @llvm.fma.f64(double %5348, double %5338, double %5370)
  %5372 = fadd double %5367, %5371
  %5373 = fsub double %5372, %5367
  %5374 = fsub double %5371, %5373
  %5375 = fmul double %5346, %5356
  %5376 = fneg double %5375
  %5377 = call double @llvm.fma.f64(double %5346, double %5356, double %5376)
  %5378 = call double @llvm.fma.f64(double %5348, double %5356, double %5377)
  %5379 = fadd double %5375, %5378
  %5380 = fsub double %5379, %5375
  %5381 = fsub double %5378, %5380
  %5382 = fadd double %5379, 0x3FE5555555555555
  %5383 = fadd double %5382, 0xBFE5555555555555
  %5384 = fsub double %5379, %5383
  %5385 = fadd double %5381, 0x3C8543B0D5DF274D
  %5386 = fadd double %5385, %5384
  %5387 = fadd double %5382, %5386
  %5388 = fsub double %5382, %5387
  %5389 = fadd double %5386, %5388
  %5390 = fmul double %5372, %5387
  %5391 = fneg double %5390
  %5392 = call double @llvm.fma.f64(double %5372, double %5387, double %5391)
  %5393 = call double @llvm.fma.f64(double %5372, double %5389, double %5392)
  %5394 = call double @llvm.fma.f64(double %5374, double %5387, double %5393)
  %5395 = fadd double %5390, %5394
  %5396 = fsub double %5395, %5390
  %5397 = fsub double %5394, %5396
  %5398 = fadd double %5365, %5395
  %5399 = fsub double %5398, %5365
  %5400 = fsub double %5395, %5399
  %5401 = fadd double %5366, %5397
  %5402 = fadd double %5401, %5400
  %5403 = fadd double %5398, %5402
  %5404 = fsub double %5403, %5398
  %5405 = fsub double %5402, %5404
  %5406 = fadd double %5362, %5403
  %5407 = fsub double %5406, %5362
  %5408 = fsub double %5406, %5407
  %5409 = fsub double %5362, %5408
  %5410 = fsub double %5403, %5407
  %5411 = fadd double %5410, %5409
  %5412 = fadd double %5364, %5405
  %5413 = fsub double %5412, %5364
  %5414 = fsub double %5412, %5413
  %5415 = fsub double %5364, %5414
  %5416 = fsub double %5405, %5413
  %5417 = fadd double %5416, %5415
  %5418 = fadd double %5412, %5411
  %5419 = fadd double %5406, %5418
  %5420 = fsub double %5419, %5406
  %5421 = fsub double %5418, %5420
  %5422 = fadd double %5417, %5421
  %5423 = fadd double %5419, %5422
  %5424 = fsub double %5423, %5419
  %5425 = fsub double %5422, %5424
  %5426 = fmul double %5306, %5423
  %5427 = fneg double %5426
  %5428 = call double @llvm.fma.f64(double %5306, double %5423, double %5427) #9
  %5429 = call double @llvm.fma.f64(double %5306, double %5425, double %5428) #9
  %5430 = fadd double %5426, %5429
  %5431 = fsub double %5430, %5426
  %5432 = fsub double %5429, %5431
  %5433 = call double @llvm.fabs.f64(double %5426) #9
  %5434 = fcmp oeq double %5433, 0x7FF0000000000000
  %5435 = select i1 %5434, double %5426, double %5430
  %5436 = call double @llvm.fabs.f64(double %5435) #9
  %5437 = fcmp oeq double %5436, 0x7FF0000000000000
  %5438 = select i1 %5437, double 0.000000e+00, double %5432
  %5439 = fmul double %5435, 0x3FF71547652B82FE
  %5440 = call double @llvm.rint.f64(double %5439)
  %5441 = fneg double %5440
  %5442 = call double @llvm.fma.f64(double %5441, double 0x3FE62E42FEFA39EF, double %5435)
  %5443 = call double @llvm.fma.f64(double %5441, double 0x3C7ABC9E3B39803F, double %5442)
  %5444 = call double @llvm.fma.f64(double %5443, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %5445 = call double @llvm.fma.f64(double %5443, double %5444, double 0x3EC71DEE623FDE64)
  %5446 = call double @llvm.fma.f64(double %5443, double %5445, double 0x3EFA01997C89E6B0)
  %5447 = call double @llvm.fma.f64(double %5443, double %5446, double 0x3F2A01A014761F6E)
  %5448 = call double @llvm.fma.f64(double %5443, double %5447, double 0x3F56C16C1852B7B0)
  %5449 = call double @llvm.fma.f64(double %5443, double %5448, double 0x3F81111111122322)
  %5450 = call double @llvm.fma.f64(double %5443, double %5449, double 0x3FA55555555502A1)
  %5451 = call double @llvm.fma.f64(double %5443, double %5450, double 0x3FC5555555555511)
  %5452 = call double @llvm.fma.f64(double %5443, double %5451, double 0x3FE000000000000B)
  %5453 = call double @llvm.fma.f64(double %5443, double %5452, double 1.000000e+00)
  %5454 = call double @llvm.fma.f64(double %5443, double %5453, double 1.000000e+00)
  %5455 = fptosi double %5440 to i32
  %5456 = call double @llvm.ldexp.f64.i32(double %5454, i32 %5455)
  %5457 = fcmp ogt double %5435, 1.024000e+03
  %5458 = select i1 %5457, double 0x7FF0000000000000, double %5456
  %5459 = fcmp olt double %5435, -1.075000e+03
  %5460 = select i1 %5459, double 0.000000e+00, double %5458
  %5461 = call double @llvm.fma.f64(double %5460, double %5438, double %5460) #9
  %5462 = call double @llvm.fabs.f64(double %5460) #9
  %5463 = fcmp oeq double %5462, 0x7FF0000000000000
  %5464 = select i1 %5463, double %5460, double %5461
  %5465 = call double @llvm.trunc.f64(double %5306) #9
  %5466 = fcmp oeq double %5465, %5306
  %5467 = fmul double %5306, 5.000000e-01
  %5468 = call double @llvm.trunc.f64(double %5467) #9
  %5469 = fcmp une double %5468, %5467
  %5470 = and i1 %5466, %5469
  %5471 = select i1 %5470, double %sub3.i128.i.i, double 1.000000e+00
  %5472 = call double @llvm.copysign.f64(double %5464, double %5471) #9
  %5473 = fcmp olt double %sub3.i128.i.i, 0.000000e+00
  %5474 = select i1 %5466, double %5472, double 0x7FF8000000000000
  %5475 = select i1 %5473, double %5474, double %5472
  %5476 = fcmp oeq double %5307, 0x7FF0000000000000
  %5477 = fcmp oeq double %sub3.i128.i.i, 0.000000e+00
  %5478 = or i1 %5477, %5476
  %5479 = select i1 %5477, double 0.000000e+00, double 0x7FF0000000000000
  %5480 = select i1 %5470, double %sub3.i128.i.i, double 0.000000e+00
  %5481 = call double @llvm.copysign.f64(double %5479, double %5480) #9
  %5482 = select i1 %5478, double %5481, double %5475
  %5483 = fcmp uno double %sub3.i128.i.i, 0.000000e+00
  %5484 = select i1 %5483, double 0x7FF8000000000000, double %5482
  %add5.i130.i.i = fadd double %5484, %add.i127.i.i
  %cmp.i131.i.i = fcmp olt double %add5.i130.i.i, %min_dist.2.i47.i
  br i1 %cmp.i131.i.i, label %if.then.i132.i.i, label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit135.i.i

if.then.i132.i.i:                                 ; preds = %if.then151.i.i
  store double %3301, ptr addrspace(5) %r0, align 8, !tbaa !35
  store double %add136.i.i, ptr addrspace(5) %9, align 8, !tbaa !37
  store double %add143.i.i, ptr addrspace(5) %10, align 8, !tbaa !38
  br label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit135.i.i

_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit135.i.i: ; preds = %if.then.i132.i.i, %if.then151.i.i
  %min_dist.9.i.i = phi double [ %add5.i130.i.i, %if.then.i132.i.i ], [ %min_dist.2.i47.i, %if.then151.i.i ]
  br i1 %cmp.i131.i.i, label %if.then153.i.i, label %if.end162.i.i

if.then153.i.i:                                   ; preds = %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit135.i.i
  %shape_.i51.i = getelementptr inbounds nuw i8, ptr %this, i64 56
  %shape_.val.i52.i = load ptr, ptr %shape_.i51.i, align 8, !tbaa !32
  %5485 = load i32, ptr %shape_.val.i52.i, align 4, !tbaa !31
  store i32 %5485, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %5486 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %this.val56.i.i = load ptr, ptr %5486, align 8, !tbaa !29
  %5487 = load double, ptr %arrayidx.i.i35.i, align 8, !tbaa !30
  %sub.i138.i.i = fsub double %add136.i.i, %5487
  %arrayidx.i1.i139.i.i = getelementptr inbounds nuw i8, ptr %this.val56.i.i, i64 8
  %5488 = load double, ptr %arrayidx.i1.i139.i.i, align 8, !tbaa !30
  %div.i140.i.i = fdiv double %sub.i138.i.i, %5488
  %5489 = call noundef double @llvm.ceil.f64(double %div.i140.i.i) #9
  %conv5.i141.i.i = fptosi double %5489 to i32
  %arrayidx157.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 4
  store i32 %conv5.i141.i.i, ptr addrspace(5) %arrayidx157.i.i, align 4, !tbaa !31
  %5490 = load double, ptr %arrayidx.i67.i.i, align 8, !tbaa !30
  %sub.i143.i.i = fsub double %add143.i.i, %5490
  %arrayidx.i1.i144.i.i = getelementptr inbounds nuw i8, ptr %this.val56.i.i, i64 16
  %5491 = load double, ptr %arrayidx.i1.i144.i.i, align 8, !tbaa !30
  %div.i145.i.i = fdiv double %sub.i143.i.i, %5491
  %5492 = call noundef double @llvm.ceil.f64(double %div.i145.i.i) #9
  %conv5.i146.i.i = fptosi double %5492 to i32
  %arrayidx159.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 8
  store i32 %conv5.i146.i.i, ptr addrspace(5) %arrayidx159.i.i, align 4, !tbaa !31
  br label %if.end162.i.i

if.end162.i.i:                                    ; preds = %if.then153.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit135.i.i, %if.then129.i.i, %lor.lhs.false125.i.i
  %min_dist.3.i48.i = phi double [ %min_dist.9.i.i, %if.then153.i.i ], [ %min_dist.9.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit135.i.i ], [ %min_dist.2.i47.i, %if.then129.i.i ], [ %min_dist.2.i47.i, %lor.lhs.false125.i.i ]
  %cmp163.i.i = fcmp olt double %33, %3302
  %cmp165.i.i = fcmp ogt double %retval.sroa.2.0.copyload.i80, %3302
  %or.cond30.i.i = select i1 %cmp163.i.i, i1 %cmp165.i.i, i1 false
  br i1 %or.cond30.i.i, label %if.then170.i.i, label %lor.lhs.false166.i.i

lor.lhs.false166.i.i:                             ; preds = %if.end162.i.i
  %cmp167.i.i = fcmp ogt double %33, %3302
  %cmp169.i.i = fcmp olt double %retval.sroa.2.0.copyload.i80, %3302
  %or.cond31.i.i = select i1 %cmp167.i.i, i1 %cmp169.i.i, i1 false
  br i1 %or.cond31.i.i, label %if.then170.i.i, label %if.end204.i.i

if.then170.i.i:                                   ; preds = %lor.lhs.false166.i.i, %if.end162.i.i
  %sub172.i.i = fsub double %3302, %33
  %sub173.i.i = fsub double %retval.sroa.0.0.copyload.i78, %32
  %mul174.i.i = fmul double %sub173.i.i, %sub172.i.i
  %sub175.i.i = fsub double %retval.sroa.2.0.copyload.i80, %33
  %div176.i.i = fdiv double %mul174.i.i, %sub175.i.i
  %add177.i.i = fadd double %32, %div176.i.i
  %sub180.i.i = fsub double %retval.sroa.3.0.copyload.i82, %34
  %mul181.i.i = fmul double %sub180.i.i, %sub172.i.i
  %div183.i.i = fdiv double %mul181.i.i, %sub175.i.i
  %add184.i.i = fadd double %34, %div183.i.i
  %cmp185.i.i = fcmp oge double %add177.i.i, %35
  %cmp187.i.i = fcmp olt double %add177.i.i, %3301
  %or.cond32.not212.not214.i.i = select i1 %cmp185.i.i, i1 %cmp187.i.i, i1 false
  %cmp189.i.i = fcmp oge double %add184.i.i, %3300
  %or.cond33.not213.i.i = select i1 %or.cond32.not212.not214.i.i, i1 %cmp189.i.i, i1 false
  %cmp191.i.i = fcmp olt double %add184.i.i, %3303
  %or.cond34.i.i = select i1 %or.cond33.not213.i.i, i1 %cmp191.i.i, i1 false
  br i1 %or.cond34.i.i, label %if.then192.i.i, label %if.end204.i.i

if.then192.i.i:                                   ; preds = %if.then170.i.i
  %sub.i147.i.i = fsub double %add177.i.i, %32
  %5493 = fcmp oeq double %sub.i147.i.i, 1.000000e+00
  %5494 = select i1 %5493, double 1.000000e+00, double 2.000000e+00
  %5495 = call double @llvm.fabs.f64(double %sub.i147.i.i) #9
  %5496 = call double @llvm.amdgcn.frexp.mant.f64(double %5495)
  %5497 = fcmp olt double %5496, 0x3FE5555555555555
  %.neg.i.i.i.i148.i.i = sext i1 %5497 to i32
  %5498 = select i1 %5497, double 2.000000e+00, double 1.000000e+00
  %5499 = fmul double %5496, %5498
  %5500 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %5495)
  %5501 = add i32 %5500, %.neg.i.i.i.i148.i.i
  %5502 = fadd double %5499, -1.000000e+00
  %5503 = fadd double %5499, 1.000000e+00
  %5504 = fadd double %5503, -1.000000e+00
  %5505 = fsub double %5499, %5504
  %5506 = call double @llvm.amdgcn.rcp.f64(double %5503)
  %5507 = fneg double %5503
  %5508 = call double @llvm.fma.f64(double %5507, double %5506, double 1.000000e+00)
  %5509 = call double @llvm.fma.f64(double %5508, double %5506, double %5506)
  %5510 = call double @llvm.fma.f64(double %5507, double %5509, double 1.000000e+00)
  %5511 = call double @llvm.fma.f64(double %5510, double %5509, double %5509)
  %5512 = fmul double %5502, %5511
  %5513 = fmul double %5503, %5512
  %5514 = fneg double %5513
  %5515 = call double @llvm.fma.f64(double %5512, double %5503, double %5514)
  %5516 = call double @llvm.fma.f64(double %5512, double %5505, double %5515)
  %5517 = fadd double %5513, %5516
  %5518 = fsub double %5517, %5513
  %5519 = fsub double %5502, %5517
  %5520 = fsub double %5502, %5519
  %5521 = fsub double %5520, %5517
  %5522 = fsub double %5518, %5516
  %5523 = fadd double %5522, %5521
  %5524 = fadd double %5519, %5523
  %5525 = fmul double %5511, %5524
  %5526 = fadd double %5512, %5525
  %5527 = fsub double %5526, %5512
  %5528 = fsub double %5525, %5527
  %5529 = fmul double %5526, %5526
  %5530 = fneg double %5529
  %5531 = call double @llvm.fma.f64(double %5526, double %5526, double %5530)
  %5532 = fmul double %5528, 2.000000e+00
  %5533 = call double @llvm.fma.f64(double %5526, double %5532, double %5531)
  %5534 = fadd double %5529, %5533
  %5535 = fsub double %5534, %5529
  %5536 = fsub double %5533, %5535
  %5537 = call double @llvm.fma.f64(double %5534, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %5538 = call double @llvm.fma.f64(double %5534, double %5537, double 0x3FBE25E43ABE935A)
  %5539 = call double @llvm.fma.f64(double %5534, double %5538, double 0x3FC110EF47E6C9C2)
  %5540 = call double @llvm.fma.f64(double %5534, double %5539, double 0x3FC3B13BCFA74449)
  %5541 = call double @llvm.fma.f64(double %5534, double %5540, double 0x3FC745D171BF3C30)
  %5542 = call double @llvm.fma.f64(double %5534, double %5541, double 0x3FCC71C71C7792CE)
  %5543 = call double @llvm.fma.f64(double %5534, double %5542, double 0x3FD24924924920DA)
  %5544 = call double @llvm.fma.f64(double %5534, double %5543, double 0x3FD999999999999C)
  %5545 = sitofp i32 %5501 to double
  %5546 = fmul double %5545, 0x3FE62E42FEFA39EF
  %5547 = fneg double %5546
  %5548 = call double @llvm.fma.f64(double %5545, double 0x3FE62E42FEFA39EF, double %5547)
  %5549 = call double @llvm.fma.f64(double %5545, double 0x3C7ABC9E3B39803F, double %5548)
  %5550 = fadd double %5546, %5549
  %5551 = fsub double %5550, %5546
  %5552 = fsub double %5549, %5551
  %5553 = call double @llvm.ldexp.f64.i32(double %5526, i32 1)
  %5554 = call double @llvm.ldexp.f64.i32(double %5528, i32 1)
  %5555 = fmul double %5526, %5534
  %5556 = fneg double %5555
  %5557 = call double @llvm.fma.f64(double %5534, double %5526, double %5556)
  %5558 = call double @llvm.fma.f64(double %5534, double %5528, double %5557)
  %5559 = call double @llvm.fma.f64(double %5536, double %5526, double %5558)
  %5560 = fadd double %5555, %5559
  %5561 = fsub double %5560, %5555
  %5562 = fsub double %5559, %5561
  %5563 = fmul double %5534, %5544
  %5564 = fneg double %5563
  %5565 = call double @llvm.fma.f64(double %5534, double %5544, double %5564)
  %5566 = call double @llvm.fma.f64(double %5536, double %5544, double %5565)
  %5567 = fadd double %5563, %5566
  %5568 = fsub double %5567, %5563
  %5569 = fsub double %5566, %5568
  %5570 = fadd double %5567, 0x3FE5555555555555
  %5571 = fadd double %5570, 0xBFE5555555555555
  %5572 = fsub double %5567, %5571
  %5573 = fadd double %5569, 0x3C8543B0D5DF274D
  %5574 = fadd double %5573, %5572
  %5575 = fadd double %5570, %5574
  %5576 = fsub double %5570, %5575
  %5577 = fadd double %5574, %5576
  %5578 = fmul double %5560, %5575
  %5579 = fneg double %5578
  %5580 = call double @llvm.fma.f64(double %5560, double %5575, double %5579)
  %5581 = call double @llvm.fma.f64(double %5560, double %5577, double %5580)
  %5582 = call double @llvm.fma.f64(double %5562, double %5575, double %5581)
  %5583 = fadd double %5578, %5582
  %5584 = fsub double %5583, %5578
  %5585 = fsub double %5582, %5584
  %5586 = fadd double %5553, %5583
  %5587 = fsub double %5586, %5553
  %5588 = fsub double %5583, %5587
  %5589 = fadd double %5554, %5585
  %5590 = fadd double %5589, %5588
  %5591 = fadd double %5586, %5590
  %5592 = fsub double %5591, %5586
  %5593 = fsub double %5590, %5592
  %5594 = fadd double %5550, %5591
  %5595 = fsub double %5594, %5550
  %5596 = fsub double %5594, %5595
  %5597 = fsub double %5550, %5596
  %5598 = fsub double %5591, %5595
  %5599 = fadd double %5598, %5597
  %5600 = fadd double %5552, %5593
  %5601 = fsub double %5600, %5552
  %5602 = fsub double %5600, %5601
  %5603 = fsub double %5552, %5602
  %5604 = fsub double %5593, %5601
  %5605 = fadd double %5604, %5603
  %5606 = fadd double %5600, %5599
  %5607 = fadd double %5594, %5606
  %5608 = fsub double %5607, %5594
  %5609 = fsub double %5606, %5608
  %5610 = fadd double %5605, %5609
  %5611 = fadd double %5607, %5610
  %5612 = fsub double %5611, %5607
  %5613 = fsub double %5610, %5612
  %5614 = fmul double %5494, %5611
  %5615 = fneg double %5614
  %5616 = call double @llvm.fma.f64(double %5494, double %5611, double %5615) #9
  %5617 = call double @llvm.fma.f64(double %5494, double %5613, double %5616) #9
  %5618 = fadd double %5614, %5617
  %5619 = fsub double %5618, %5614
  %5620 = fsub double %5617, %5619
  %5621 = call double @llvm.fabs.f64(double %5614) #9
  %5622 = fcmp oeq double %5621, 0x7FF0000000000000
  %5623 = select i1 %5622, double %5614, double %5618
  %5624 = call double @llvm.fabs.f64(double %5623) #9
  %5625 = fcmp oeq double %5624, 0x7FF0000000000000
  %5626 = select i1 %5625, double 0.000000e+00, double %5620
  %5627 = fmul double %5623, 0x3FF71547652B82FE
  %5628 = call double @llvm.rint.f64(double %5627)
  %5629 = fneg double %5628
  %5630 = call double @llvm.fma.f64(double %5629, double 0x3FE62E42FEFA39EF, double %5623)
  %5631 = call double @llvm.fma.f64(double %5629, double 0x3C7ABC9E3B39803F, double %5630)
  %5632 = call double @llvm.fma.f64(double %5631, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %5633 = call double @llvm.fma.f64(double %5631, double %5632, double 0x3EC71DEE623FDE64)
  %5634 = call double @llvm.fma.f64(double %5631, double %5633, double 0x3EFA01997C89E6B0)
  %5635 = call double @llvm.fma.f64(double %5631, double %5634, double 0x3F2A01A014761F6E)
  %5636 = call double @llvm.fma.f64(double %5631, double %5635, double 0x3F56C16C1852B7B0)
  %5637 = call double @llvm.fma.f64(double %5631, double %5636, double 0x3F81111111122322)
  %5638 = call double @llvm.fma.f64(double %5631, double %5637, double 0x3FA55555555502A1)
  %5639 = call double @llvm.fma.f64(double %5631, double %5638, double 0x3FC5555555555511)
  %5640 = call double @llvm.fma.f64(double %5631, double %5639, double 0x3FE000000000000B)
  %5641 = call double @llvm.fma.f64(double %5631, double %5640, double 1.000000e+00)
  %5642 = call double @llvm.fma.f64(double %5631, double %5641, double 1.000000e+00)
  %5643 = fptosi double %5628 to i32
  %5644 = call double @llvm.ldexp.f64.i32(double %5642, i32 %5643)
  %5645 = fcmp ogt double %5623, 1.024000e+03
  %5646 = select i1 %5645, double 0x7FF0000000000000, double %5644
  %5647 = fcmp olt double %5623, -1.075000e+03
  %5648 = select i1 %5647, double 0.000000e+00, double %5646
  %5649 = call double @llvm.fma.f64(double %5648, double %5626, double %5648) #9
  %5650 = call double @llvm.fabs.f64(double %5648) #9
  %5651 = fcmp oeq double %5650, 0x7FF0000000000000
  %5652 = select i1 %5651, double %5648, double %5649
  %5653 = call double @llvm.trunc.f64(double %5494) #9
  %5654 = fcmp oeq double %5653, %5494
  %5655 = fmul double %5494, 5.000000e-01
  %5656 = call double @llvm.trunc.f64(double %5655) #9
  %5657 = fcmp une double %5656, %5655
  %5658 = and i1 %5654, %5657
  %5659 = select i1 %5658, double %sub.i147.i.i, double 1.000000e+00
  %5660 = call double @llvm.copysign.f64(double %5652, double %5659) #9
  %5661 = fcmp olt double %sub.i147.i.i, 0.000000e+00
  %5662 = select i1 %5654, double %5660, double 0x7FF8000000000000
  %5663 = select i1 %5661, double %5662, double %5660
  %5664 = fcmp oeq double %5495, 0x7FF0000000000000
  %5665 = fcmp oeq double %sub.i147.i.i, 0.000000e+00
  %5666 = or i1 %5665, %5664
  %5667 = select i1 %5665, double 0.000000e+00, double 0x7FF0000000000000
  %5668 = select i1 %5658, double %sub.i147.i.i, double 0.000000e+00
  %5669 = call double @llvm.copysign.f64(double %5667, double %5668) #9
  %5670 = select i1 %5666, double %5669, double %5663
  %5671 = fcmp uno double %sub.i147.i.i, 0.000000e+00
  %5672 = select i1 %5671, double 0x7FF8000000000000, double %5670
  %5673 = fcmp oeq double %sub172.i.i, 1.000000e+00
  %5674 = select i1 %5673, double 1.000000e+00, double 2.000000e+00
  %5675 = call double @llvm.fabs.f64(double %sub172.i.i) #9
  %5676 = call double @llvm.amdgcn.frexp.mant.f64(double %5675)
  %5677 = fcmp olt double %5676, 0x3FE5555555555555
  %.neg.i.i.i1.i150.i.i = sext i1 %5677 to i32
  %5678 = select i1 %5677, double 2.000000e+00, double 1.000000e+00
  %5679 = fmul double %5676, %5678
  %5680 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %5675)
  %5681 = add i32 %5680, %.neg.i.i.i1.i150.i.i
  %5682 = fadd double %5679, -1.000000e+00
  %5683 = fadd double %5679, 1.000000e+00
  %5684 = fadd double %5683, -1.000000e+00
  %5685 = fsub double %5679, %5684
  %5686 = call double @llvm.amdgcn.rcp.f64(double %5683)
  %5687 = fneg double %5683
  %5688 = call double @llvm.fma.f64(double %5687, double %5686, double 1.000000e+00)
  %5689 = call double @llvm.fma.f64(double %5688, double %5686, double %5686)
  %5690 = call double @llvm.fma.f64(double %5687, double %5689, double 1.000000e+00)
  %5691 = call double @llvm.fma.f64(double %5690, double %5689, double %5689)
  %5692 = fmul double %5682, %5691
  %5693 = fmul double %5683, %5692
  %5694 = fneg double %5693
  %5695 = call double @llvm.fma.f64(double %5692, double %5683, double %5694)
  %5696 = call double @llvm.fma.f64(double %5692, double %5685, double %5695)
  %5697 = fadd double %5693, %5696
  %5698 = fsub double %5697, %5693
  %5699 = fsub double %5682, %5697
  %5700 = fsub double %5682, %5699
  %5701 = fsub double %5700, %5697
  %5702 = fsub double %5698, %5696
  %5703 = fadd double %5702, %5701
  %5704 = fadd double %5699, %5703
  %5705 = fmul double %5691, %5704
  %5706 = fadd double %5692, %5705
  %5707 = fsub double %5706, %5692
  %5708 = fsub double %5705, %5707
  %5709 = fmul double %5706, %5706
  %5710 = fneg double %5709
  %5711 = call double @llvm.fma.f64(double %5706, double %5706, double %5710)
  %5712 = fmul double %5708, 2.000000e+00
  %5713 = call double @llvm.fma.f64(double %5706, double %5712, double %5711)
  %5714 = fadd double %5709, %5713
  %5715 = fsub double %5714, %5709
  %5716 = fsub double %5713, %5715
  %5717 = call double @llvm.fma.f64(double %5714, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %5718 = call double @llvm.fma.f64(double %5714, double %5717, double 0x3FBE25E43ABE935A)
  %5719 = call double @llvm.fma.f64(double %5714, double %5718, double 0x3FC110EF47E6C9C2)
  %5720 = call double @llvm.fma.f64(double %5714, double %5719, double 0x3FC3B13BCFA74449)
  %5721 = call double @llvm.fma.f64(double %5714, double %5720, double 0x3FC745D171BF3C30)
  %5722 = call double @llvm.fma.f64(double %5714, double %5721, double 0x3FCC71C71C7792CE)
  %5723 = call double @llvm.fma.f64(double %5714, double %5722, double 0x3FD24924924920DA)
  %5724 = call double @llvm.fma.f64(double %5714, double %5723, double 0x3FD999999999999C)
  %5725 = sitofp i32 %5681 to double
  %5726 = fmul double %5725, 0x3FE62E42FEFA39EF
  %5727 = fneg double %5726
  %5728 = call double @llvm.fma.f64(double %5725, double 0x3FE62E42FEFA39EF, double %5727)
  %5729 = call double @llvm.fma.f64(double %5725, double 0x3C7ABC9E3B39803F, double %5728)
  %5730 = fadd double %5726, %5729
  %5731 = fsub double %5730, %5726
  %5732 = fsub double %5729, %5731
  %5733 = call double @llvm.ldexp.f64.i32(double %5706, i32 1)
  %5734 = call double @llvm.ldexp.f64.i32(double %5708, i32 1)
  %5735 = fmul double %5706, %5714
  %5736 = fneg double %5735
  %5737 = call double @llvm.fma.f64(double %5714, double %5706, double %5736)
  %5738 = call double @llvm.fma.f64(double %5714, double %5708, double %5737)
  %5739 = call double @llvm.fma.f64(double %5716, double %5706, double %5738)
  %5740 = fadd double %5735, %5739
  %5741 = fsub double %5740, %5735
  %5742 = fsub double %5739, %5741
  %5743 = fmul double %5714, %5724
  %5744 = fneg double %5743
  %5745 = call double @llvm.fma.f64(double %5714, double %5724, double %5744)
  %5746 = call double @llvm.fma.f64(double %5716, double %5724, double %5745)
  %5747 = fadd double %5743, %5746
  %5748 = fsub double %5747, %5743
  %5749 = fsub double %5746, %5748
  %5750 = fadd double %5747, 0x3FE5555555555555
  %5751 = fadd double %5750, 0xBFE5555555555555
  %5752 = fsub double %5747, %5751
  %5753 = fadd double %5749, 0x3C8543B0D5DF274D
  %5754 = fadd double %5753, %5752
  %5755 = fadd double %5750, %5754
  %5756 = fsub double %5750, %5755
  %5757 = fadd double %5754, %5756
  %5758 = fmul double %5740, %5755
  %5759 = fneg double %5758
  %5760 = call double @llvm.fma.f64(double %5740, double %5755, double %5759)
  %5761 = call double @llvm.fma.f64(double %5740, double %5757, double %5760)
  %5762 = call double @llvm.fma.f64(double %5742, double %5755, double %5761)
  %5763 = fadd double %5758, %5762
  %5764 = fsub double %5763, %5758
  %5765 = fsub double %5762, %5764
  %5766 = fadd double %5733, %5763
  %5767 = fsub double %5766, %5733
  %5768 = fsub double %5763, %5767
  %5769 = fadd double %5734, %5765
  %5770 = fadd double %5769, %5768
  %5771 = fadd double %5766, %5770
  %5772 = fsub double %5771, %5766
  %5773 = fsub double %5770, %5772
  %5774 = fadd double %5730, %5771
  %5775 = fsub double %5774, %5730
  %5776 = fsub double %5774, %5775
  %5777 = fsub double %5730, %5776
  %5778 = fsub double %5771, %5775
  %5779 = fadd double %5778, %5777
  %5780 = fadd double %5732, %5773
  %5781 = fsub double %5780, %5732
  %5782 = fsub double %5780, %5781
  %5783 = fsub double %5732, %5782
  %5784 = fsub double %5773, %5781
  %5785 = fadd double %5784, %5783
  %5786 = fadd double %5780, %5779
  %5787 = fadd double %5774, %5786
  %5788 = fsub double %5787, %5774
  %5789 = fsub double %5786, %5788
  %5790 = fadd double %5785, %5789
  %5791 = fadd double %5787, %5790
  %5792 = fsub double %5791, %5787
  %5793 = fsub double %5790, %5792
  %5794 = fmul double %5674, %5791
  %5795 = fneg double %5794
  %5796 = call double @llvm.fma.f64(double %5674, double %5791, double %5795) #9
  %5797 = call double @llvm.fma.f64(double %5674, double %5793, double %5796) #9
  %5798 = fadd double %5794, %5797
  %5799 = fsub double %5798, %5794
  %5800 = fsub double %5797, %5799
  %5801 = call double @llvm.fabs.f64(double %5794) #9
  %5802 = fcmp oeq double %5801, 0x7FF0000000000000
  %5803 = select i1 %5802, double %5794, double %5798
  %5804 = call double @llvm.fabs.f64(double %5803) #9
  %5805 = fcmp oeq double %5804, 0x7FF0000000000000
  %5806 = select i1 %5805, double 0.000000e+00, double %5800
  %5807 = fmul double %5803, 0x3FF71547652B82FE
  %5808 = call double @llvm.rint.f64(double %5807)
  %5809 = fneg double %5808
  %5810 = call double @llvm.fma.f64(double %5809, double 0x3FE62E42FEFA39EF, double %5803)
  %5811 = call double @llvm.fma.f64(double %5809, double 0x3C7ABC9E3B39803F, double %5810)
  %5812 = call double @llvm.fma.f64(double %5811, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %5813 = call double @llvm.fma.f64(double %5811, double %5812, double 0x3EC71DEE623FDE64)
  %5814 = call double @llvm.fma.f64(double %5811, double %5813, double 0x3EFA01997C89E6B0)
  %5815 = call double @llvm.fma.f64(double %5811, double %5814, double 0x3F2A01A014761F6E)
  %5816 = call double @llvm.fma.f64(double %5811, double %5815, double 0x3F56C16C1852B7B0)
  %5817 = call double @llvm.fma.f64(double %5811, double %5816, double 0x3F81111111122322)
  %5818 = call double @llvm.fma.f64(double %5811, double %5817, double 0x3FA55555555502A1)
  %5819 = call double @llvm.fma.f64(double %5811, double %5818, double 0x3FC5555555555511)
  %5820 = call double @llvm.fma.f64(double %5811, double %5819, double 0x3FE000000000000B)
  %5821 = call double @llvm.fma.f64(double %5811, double %5820, double 1.000000e+00)
  %5822 = call double @llvm.fma.f64(double %5811, double %5821, double 1.000000e+00)
  %5823 = fptosi double %5808 to i32
  %5824 = call double @llvm.ldexp.f64.i32(double %5822, i32 %5823)
  %5825 = fcmp ogt double %5803, 1.024000e+03
  %5826 = select i1 %5825, double 0x7FF0000000000000, double %5824
  %5827 = fcmp olt double %5803, -1.075000e+03
  %5828 = select i1 %5827, double 0.000000e+00, double %5826
  %5829 = call double @llvm.fma.f64(double %5828, double %5806, double %5828) #9
  %5830 = call double @llvm.fabs.f64(double %5828) #9
  %5831 = fcmp oeq double %5830, 0x7FF0000000000000
  %5832 = select i1 %5831, double %5828, double %5829
  %5833 = call double @llvm.trunc.f64(double %5674) #9
  %5834 = fcmp oeq double %5833, %5674
  %5835 = fmul double %5674, 5.000000e-01
  %5836 = call double @llvm.trunc.f64(double %5835) #9
  %5837 = fcmp une double %5836, %5835
  %5838 = and i1 %5834, %5837
  %5839 = select i1 %5838, double %sub172.i.i, double 1.000000e+00
  %5840 = call double @llvm.copysign.f64(double %5832, double %5839) #9
  %5841 = fcmp olt double %sub172.i.i, 0.000000e+00
  %5842 = select i1 %5834, double %5840, double 0x7FF8000000000000
  %5843 = select i1 %5841, double %5842, double %5840
  %5844 = fcmp oeq double %5675, 0x7FF0000000000000
  %5845 = fcmp oeq double %sub172.i.i, 0.000000e+00
  %5846 = or i1 %5845, %5844
  %5847 = select i1 %5845, double 0.000000e+00, double 0x7FF0000000000000
  %5848 = select i1 %5838, double %sub172.i.i, double 0.000000e+00
  %5849 = call double @llvm.copysign.f64(double %5847, double %5848) #9
  %5850 = select i1 %5846, double %5849, double %5843
  %5851 = fcmp uno double %sub172.i.i, 0.000000e+00
  %5852 = select i1 %5851, double 0x7FF8000000000000, double %5850
  %add.i151.i.i = fadd double %5852, %5672
  %sub3.i152.i.i = fsub double %add184.i.i, %34
  %5853 = fcmp oeq double %sub3.i152.i.i, 1.000000e+00
  %5854 = select i1 %5853, double 1.000000e+00, double 2.000000e+00
  %5855 = call double @llvm.fabs.f64(double %sub3.i152.i.i) #9
  %5856 = call double @llvm.amdgcn.frexp.mant.f64(double %5855)
  %5857 = fcmp olt double %5856, 0x3FE5555555555555
  %.neg.i.i.i2.i153.i.i = sext i1 %5857 to i32
  %5858 = select i1 %5857, double 2.000000e+00, double 1.000000e+00
  %5859 = fmul double %5856, %5858
  %5860 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %5855)
  %5861 = add i32 %5860, %.neg.i.i.i2.i153.i.i
  %5862 = fadd double %5859, -1.000000e+00
  %5863 = fadd double %5859, 1.000000e+00
  %5864 = fadd double %5863, -1.000000e+00
  %5865 = fsub double %5859, %5864
  %5866 = call double @llvm.amdgcn.rcp.f64(double %5863)
  %5867 = fneg double %5863
  %5868 = call double @llvm.fma.f64(double %5867, double %5866, double 1.000000e+00)
  %5869 = call double @llvm.fma.f64(double %5868, double %5866, double %5866)
  %5870 = call double @llvm.fma.f64(double %5867, double %5869, double 1.000000e+00)
  %5871 = call double @llvm.fma.f64(double %5870, double %5869, double %5869)
  %5872 = fmul double %5862, %5871
  %5873 = fmul double %5863, %5872
  %5874 = fneg double %5873
  %5875 = call double @llvm.fma.f64(double %5872, double %5863, double %5874)
  %5876 = call double @llvm.fma.f64(double %5872, double %5865, double %5875)
  %5877 = fadd double %5873, %5876
  %5878 = fsub double %5877, %5873
  %5879 = fsub double %5862, %5877
  %5880 = fsub double %5862, %5879
  %5881 = fsub double %5880, %5877
  %5882 = fsub double %5878, %5876
  %5883 = fadd double %5882, %5881
  %5884 = fadd double %5879, %5883
  %5885 = fmul double %5871, %5884
  %5886 = fadd double %5872, %5885
  %5887 = fsub double %5886, %5872
  %5888 = fsub double %5885, %5887
  %5889 = fmul double %5886, %5886
  %5890 = fneg double %5889
  %5891 = call double @llvm.fma.f64(double %5886, double %5886, double %5890)
  %5892 = fmul double %5888, 2.000000e+00
  %5893 = call double @llvm.fma.f64(double %5886, double %5892, double %5891)
  %5894 = fadd double %5889, %5893
  %5895 = fsub double %5894, %5889
  %5896 = fsub double %5893, %5895
  %5897 = call double @llvm.fma.f64(double %5894, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %5898 = call double @llvm.fma.f64(double %5894, double %5897, double 0x3FBE25E43ABE935A)
  %5899 = call double @llvm.fma.f64(double %5894, double %5898, double 0x3FC110EF47E6C9C2)
  %5900 = call double @llvm.fma.f64(double %5894, double %5899, double 0x3FC3B13BCFA74449)
  %5901 = call double @llvm.fma.f64(double %5894, double %5900, double 0x3FC745D171BF3C30)
  %5902 = call double @llvm.fma.f64(double %5894, double %5901, double 0x3FCC71C71C7792CE)
  %5903 = call double @llvm.fma.f64(double %5894, double %5902, double 0x3FD24924924920DA)
  %5904 = call double @llvm.fma.f64(double %5894, double %5903, double 0x3FD999999999999C)
  %5905 = sitofp i32 %5861 to double
  %5906 = fmul double %5905, 0x3FE62E42FEFA39EF
  %5907 = fneg double %5906
  %5908 = call double @llvm.fma.f64(double %5905, double 0x3FE62E42FEFA39EF, double %5907)
  %5909 = call double @llvm.fma.f64(double %5905, double 0x3C7ABC9E3B39803F, double %5908)
  %5910 = fadd double %5906, %5909
  %5911 = fsub double %5910, %5906
  %5912 = fsub double %5909, %5911
  %5913 = call double @llvm.ldexp.f64.i32(double %5886, i32 1)
  %5914 = call double @llvm.ldexp.f64.i32(double %5888, i32 1)
  %5915 = fmul double %5886, %5894
  %5916 = fneg double %5915
  %5917 = call double @llvm.fma.f64(double %5894, double %5886, double %5916)
  %5918 = call double @llvm.fma.f64(double %5894, double %5888, double %5917)
  %5919 = call double @llvm.fma.f64(double %5896, double %5886, double %5918)
  %5920 = fadd double %5915, %5919
  %5921 = fsub double %5920, %5915
  %5922 = fsub double %5919, %5921
  %5923 = fmul double %5894, %5904
  %5924 = fneg double %5923
  %5925 = call double @llvm.fma.f64(double %5894, double %5904, double %5924)
  %5926 = call double @llvm.fma.f64(double %5896, double %5904, double %5925)
  %5927 = fadd double %5923, %5926
  %5928 = fsub double %5927, %5923
  %5929 = fsub double %5926, %5928
  %5930 = fadd double %5927, 0x3FE5555555555555
  %5931 = fadd double %5930, 0xBFE5555555555555
  %5932 = fsub double %5927, %5931
  %5933 = fadd double %5929, 0x3C8543B0D5DF274D
  %5934 = fadd double %5933, %5932
  %5935 = fadd double %5930, %5934
  %5936 = fsub double %5930, %5935
  %5937 = fadd double %5934, %5936
  %5938 = fmul double %5920, %5935
  %5939 = fneg double %5938
  %5940 = call double @llvm.fma.f64(double %5920, double %5935, double %5939)
  %5941 = call double @llvm.fma.f64(double %5920, double %5937, double %5940)
  %5942 = call double @llvm.fma.f64(double %5922, double %5935, double %5941)
  %5943 = fadd double %5938, %5942
  %5944 = fsub double %5943, %5938
  %5945 = fsub double %5942, %5944
  %5946 = fadd double %5913, %5943
  %5947 = fsub double %5946, %5913
  %5948 = fsub double %5943, %5947
  %5949 = fadd double %5914, %5945
  %5950 = fadd double %5949, %5948
  %5951 = fadd double %5946, %5950
  %5952 = fsub double %5951, %5946
  %5953 = fsub double %5950, %5952
  %5954 = fadd double %5910, %5951
  %5955 = fsub double %5954, %5910
  %5956 = fsub double %5954, %5955
  %5957 = fsub double %5910, %5956
  %5958 = fsub double %5951, %5955
  %5959 = fadd double %5958, %5957
  %5960 = fadd double %5912, %5953
  %5961 = fsub double %5960, %5912
  %5962 = fsub double %5960, %5961
  %5963 = fsub double %5912, %5962
  %5964 = fsub double %5953, %5961
  %5965 = fadd double %5964, %5963
  %5966 = fadd double %5960, %5959
  %5967 = fadd double %5954, %5966
  %5968 = fsub double %5967, %5954
  %5969 = fsub double %5966, %5968
  %5970 = fadd double %5965, %5969
  %5971 = fadd double %5967, %5970
  %5972 = fsub double %5971, %5967
  %5973 = fsub double %5970, %5972
  %5974 = fmul double %5854, %5971
  %5975 = fneg double %5974
  %5976 = call double @llvm.fma.f64(double %5854, double %5971, double %5975) #9
  %5977 = call double @llvm.fma.f64(double %5854, double %5973, double %5976) #9
  %5978 = fadd double %5974, %5977
  %5979 = fsub double %5978, %5974
  %5980 = fsub double %5977, %5979
  %5981 = call double @llvm.fabs.f64(double %5974) #9
  %5982 = fcmp oeq double %5981, 0x7FF0000000000000
  %5983 = select i1 %5982, double %5974, double %5978
  %5984 = call double @llvm.fabs.f64(double %5983) #9
  %5985 = fcmp oeq double %5984, 0x7FF0000000000000
  %5986 = select i1 %5985, double 0.000000e+00, double %5980
  %5987 = fmul double %5983, 0x3FF71547652B82FE
  %5988 = call double @llvm.rint.f64(double %5987)
  %5989 = fneg double %5988
  %5990 = call double @llvm.fma.f64(double %5989, double 0x3FE62E42FEFA39EF, double %5983)
  %5991 = call double @llvm.fma.f64(double %5989, double 0x3C7ABC9E3B39803F, double %5990)
  %5992 = call double @llvm.fma.f64(double %5991, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %5993 = call double @llvm.fma.f64(double %5991, double %5992, double 0x3EC71DEE623FDE64)
  %5994 = call double @llvm.fma.f64(double %5991, double %5993, double 0x3EFA01997C89E6B0)
  %5995 = call double @llvm.fma.f64(double %5991, double %5994, double 0x3F2A01A014761F6E)
  %5996 = call double @llvm.fma.f64(double %5991, double %5995, double 0x3F56C16C1852B7B0)
  %5997 = call double @llvm.fma.f64(double %5991, double %5996, double 0x3F81111111122322)
  %5998 = call double @llvm.fma.f64(double %5991, double %5997, double 0x3FA55555555502A1)
  %5999 = call double @llvm.fma.f64(double %5991, double %5998, double 0x3FC5555555555511)
  %6000 = call double @llvm.fma.f64(double %5991, double %5999, double 0x3FE000000000000B)
  %6001 = call double @llvm.fma.f64(double %5991, double %6000, double 1.000000e+00)
  %6002 = call double @llvm.fma.f64(double %5991, double %6001, double 1.000000e+00)
  %6003 = fptosi double %5988 to i32
  %6004 = call double @llvm.ldexp.f64.i32(double %6002, i32 %6003)
  %6005 = fcmp ogt double %5983, 1.024000e+03
  %6006 = select i1 %6005, double 0x7FF0000000000000, double %6004
  %6007 = fcmp olt double %5983, -1.075000e+03
  %6008 = select i1 %6007, double 0.000000e+00, double %6006
  %6009 = call double @llvm.fma.f64(double %6008, double %5986, double %6008) #9
  %6010 = call double @llvm.fabs.f64(double %6008) #9
  %6011 = fcmp oeq double %6010, 0x7FF0000000000000
  %6012 = select i1 %6011, double %6008, double %6009
  %6013 = call double @llvm.trunc.f64(double %5854) #9
  %6014 = fcmp oeq double %6013, %5854
  %6015 = fmul double %5854, 5.000000e-01
  %6016 = call double @llvm.trunc.f64(double %6015) #9
  %6017 = fcmp une double %6016, %6015
  %6018 = and i1 %6014, %6017
  %6019 = select i1 %6018, double %sub3.i152.i.i, double 1.000000e+00
  %6020 = call double @llvm.copysign.f64(double %6012, double %6019) #9
  %6021 = fcmp olt double %sub3.i152.i.i, 0.000000e+00
  %6022 = select i1 %6014, double %6020, double 0x7FF8000000000000
  %6023 = select i1 %6021, double %6022, double %6020
  %6024 = fcmp oeq double %5855, 0x7FF0000000000000
  %6025 = fcmp oeq double %sub3.i152.i.i, 0.000000e+00
  %6026 = or i1 %6025, %6024
  %6027 = select i1 %6025, double 0.000000e+00, double 0x7FF0000000000000
  %6028 = select i1 %6018, double %sub3.i152.i.i, double 0.000000e+00
  %6029 = call double @llvm.copysign.f64(double %6027, double %6028) #9
  %6030 = select i1 %6026, double %6029, double %6023
  %6031 = fcmp uno double %sub3.i152.i.i, 0.000000e+00
  %6032 = select i1 %6031, double 0x7FF8000000000000, double %6030
  %add5.i154.i.i = fadd double %6032, %add.i151.i.i
  %cmp.i155.i.i = fcmp olt double %add5.i154.i.i, %min_dist.3.i48.i
  br i1 %cmp.i155.i.i, label %if.then.i156.i.i, label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit159.i.i

if.then.i156.i.i:                                 ; preds = %if.then192.i.i
  store double %add177.i.i, ptr addrspace(5) %r0, align 8, !tbaa !35
  store double %3302, ptr addrspace(5) %9, align 8, !tbaa !37
  store double %add184.i.i, ptr addrspace(5) %10, align 8, !tbaa !38
  br label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit159.i.i

_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit159.i.i: ; preds = %if.then.i156.i.i, %if.then192.i.i
  %min_dist.10.i.i = phi double [ %add5.i154.i.i, %if.then.i156.i.i ], [ %min_dist.3.i48.i, %if.then192.i.i ]
  br i1 %cmp.i155.i.i, label %if.then194.i.i, label %if.end204.i.i

if.then194.i.i:                                   ; preds = %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit159.i.i
  %6033 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %this.val60.i.i = load ptr, ptr %6033, align 8, !tbaa !29
  %6034 = load double, ptr %lower_left_.val.i.i, align 8, !tbaa !30
  %sub.i161.i.i = fsub double %add177.i.i, %6034
  %6035 = load double, ptr %this.val60.i.i, align 8, !tbaa !30
  %div.i163.i.i = fdiv double %sub.i161.i.i, %6035
  %6036 = call noundef double @llvm.ceil.f64(double %div.i163.i.i) #9
  %conv5.i164.i.i = fptosi double %6036 to i32
  store i32 %conv5.i164.i.i, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %shape_197.i.i = getelementptr inbounds nuw i8, ptr %this, i64 56
  %shape_197.val.i.i = load ptr, ptr %shape_197.i.i, align 8, !tbaa !32
  %arrayidx.i165.i.i = getelementptr inbounds nuw i8, ptr %shape_197.val.i.i, i64 4
  %6037 = load i32, ptr %arrayidx.i165.i.i, align 4, !tbaa !31
  %arrayidx199.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 4
  store i32 %6037, ptr addrspace(5) %arrayidx199.i.i, align 4, !tbaa !31
  %6038 = load double, ptr %arrayidx.i67.i.i, align 8, !tbaa !30
  %sub.i167.i.i = fsub double %add184.i.i, %6038
  %arrayidx.i1.i168.i.i = getelementptr inbounds nuw i8, ptr %this.val60.i.i, i64 16
  %6039 = load double, ptr %arrayidx.i1.i168.i.i, align 8, !tbaa !30
  %div.i169.i.i = fdiv double %sub.i167.i.i, %6039
  %6040 = call noundef double @llvm.ceil.f64(double %div.i169.i.i) #9
  %conv5.i170.i.i = fptosi double %6040 to i32
  %arrayidx201.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 8
  store i32 %conv5.i170.i.i, ptr addrspace(5) %arrayidx201.i.i, align 4, !tbaa !31
  br label %if.end204.i.i

if.end204.i.i:                                    ; preds = %if.then194.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit159.i.i, %if.then170.i.i, %lor.lhs.false166.i.i
  %min_dist.4.i49.i = phi double [ %min_dist.10.i.i, %if.then194.i.i ], [ %min_dist.10.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit159.i.i ], [ %min_dist.3.i48.i, %if.then170.i.i ], [ %min_dist.3.i48.i, %lor.lhs.false166.i.i ]
  %cmp205.i.i = fcmp olt double %34, %3303
  %cmp207.i.i = fcmp ogt double %retval.sroa.3.0.copyload.i82, %3303
  %or.cond35.i.i = select i1 %cmp205.i.i, i1 %cmp207.i.i, i1 false
  br i1 %or.cond35.i.i, label %if.then212.i.i, label %lor.lhs.false208.i.i

lor.lhs.false208.i.i:                             ; preds = %if.end204.i.i
  %cmp209.i.i = fcmp ogt double %34, %3303
  %cmp211.i.i = fcmp olt double %retval.sroa.3.0.copyload.i82, %3303
  %or.cond36.i.i = select i1 %cmp209.i.i, i1 %cmp211.i.i, i1 false
  br i1 %or.cond36.i.i, label %if.then212.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then212.i.i:                                   ; preds = %lor.lhs.false208.i.i, %if.end204.i.i
  %sub214.i.i = fsub double %3303, %34
  %sub215.i.i = fsub double %retval.sroa.0.0.copyload.i78, %32
  %mul216.i.i = fmul double %sub215.i.i, %sub214.i.i
  %sub217.i.i = fsub double %retval.sroa.3.0.copyload.i82, %34
  %div218.i.i = fdiv double %mul216.i.i, %sub217.i.i
  %add219.i.i = fadd double %32, %div218.i.i
  %sub222.i.i = fsub double %retval.sroa.2.0.copyload.i80, %33
  %mul223.i.i = fmul double %sub222.i.i, %sub214.i.i
  %div225.i.i = fdiv double %mul223.i.i, %sub217.i.i
  %add226.i.i = fadd double %33, %div225.i.i
  %cmp227.i.i = fcmp oge double %add219.i.i, %35
  %cmp229.i.i = fcmp olt double %add219.i.i, %3301
  %or.cond37.not215.not217.i.i = select i1 %cmp227.i.i, i1 %cmp229.i.i, i1 false
  %cmp231.i.i = fcmp oge double %add226.i.i, %3299
  %or.cond38.not216.i.i = select i1 %or.cond37.not215.not217.i.i, i1 %cmp231.i.i, i1 false
  %cmp233.i.i = fcmp olt double %add226.i.i, %3302
  %or.cond39.i.i = select i1 %or.cond38.not216.i.i, i1 %cmp233.i.i, i1 false
  br i1 %or.cond39.i.i, label %if.then234.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then234.i.i:                                   ; preds = %if.then212.i.i
  %sub.i171.i.i = fsub double %add219.i.i, %32
  %6041 = fcmp oeq double %sub.i171.i.i, 1.000000e+00
  %6042 = select i1 %6041, double 1.000000e+00, double 2.000000e+00
  %6043 = call double @llvm.fabs.f64(double %sub.i171.i.i) #9
  %6044 = call double @llvm.amdgcn.frexp.mant.f64(double %6043)
  %6045 = fcmp olt double %6044, 0x3FE5555555555555
  %.neg.i.i.i.i172.i.i = sext i1 %6045 to i32
  %6046 = select i1 %6045, double 2.000000e+00, double 1.000000e+00
  %6047 = fmul double %6044, %6046
  %6048 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %6043)
  %6049 = add i32 %6048, %.neg.i.i.i.i172.i.i
  %6050 = fadd double %6047, -1.000000e+00
  %6051 = fadd double %6047, 1.000000e+00
  %6052 = fadd double %6051, -1.000000e+00
  %6053 = fsub double %6047, %6052
  %6054 = call double @llvm.amdgcn.rcp.f64(double %6051)
  %6055 = fneg double %6051
  %6056 = call double @llvm.fma.f64(double %6055, double %6054, double 1.000000e+00)
  %6057 = call double @llvm.fma.f64(double %6056, double %6054, double %6054)
  %6058 = call double @llvm.fma.f64(double %6055, double %6057, double 1.000000e+00)
  %6059 = call double @llvm.fma.f64(double %6058, double %6057, double %6057)
  %6060 = fmul double %6050, %6059
  %6061 = fmul double %6051, %6060
  %6062 = fneg double %6061
  %6063 = call double @llvm.fma.f64(double %6060, double %6051, double %6062)
  %6064 = call double @llvm.fma.f64(double %6060, double %6053, double %6063)
  %6065 = fadd double %6061, %6064
  %6066 = fsub double %6065, %6061
  %6067 = fsub double %6050, %6065
  %6068 = fsub double %6050, %6067
  %6069 = fsub double %6068, %6065
  %6070 = fsub double %6066, %6064
  %6071 = fadd double %6070, %6069
  %6072 = fadd double %6067, %6071
  %6073 = fmul double %6059, %6072
  %6074 = fadd double %6060, %6073
  %6075 = fsub double %6074, %6060
  %6076 = fsub double %6073, %6075
  %6077 = fmul double %6074, %6074
  %6078 = fneg double %6077
  %6079 = call double @llvm.fma.f64(double %6074, double %6074, double %6078)
  %6080 = fmul double %6076, 2.000000e+00
  %6081 = call double @llvm.fma.f64(double %6074, double %6080, double %6079)
  %6082 = fadd double %6077, %6081
  %6083 = fsub double %6082, %6077
  %6084 = fsub double %6081, %6083
  %6085 = call double @llvm.fma.f64(double %6082, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %6086 = call double @llvm.fma.f64(double %6082, double %6085, double 0x3FBE25E43ABE935A)
  %6087 = call double @llvm.fma.f64(double %6082, double %6086, double 0x3FC110EF47E6C9C2)
  %6088 = call double @llvm.fma.f64(double %6082, double %6087, double 0x3FC3B13BCFA74449)
  %6089 = call double @llvm.fma.f64(double %6082, double %6088, double 0x3FC745D171BF3C30)
  %6090 = call double @llvm.fma.f64(double %6082, double %6089, double 0x3FCC71C71C7792CE)
  %6091 = call double @llvm.fma.f64(double %6082, double %6090, double 0x3FD24924924920DA)
  %6092 = call double @llvm.fma.f64(double %6082, double %6091, double 0x3FD999999999999C)
  %6093 = sitofp i32 %6049 to double
  %6094 = fmul double %6093, 0x3FE62E42FEFA39EF
  %6095 = fneg double %6094
  %6096 = call double @llvm.fma.f64(double %6093, double 0x3FE62E42FEFA39EF, double %6095)
  %6097 = call double @llvm.fma.f64(double %6093, double 0x3C7ABC9E3B39803F, double %6096)
  %6098 = fadd double %6094, %6097
  %6099 = fsub double %6098, %6094
  %6100 = fsub double %6097, %6099
  %6101 = call double @llvm.ldexp.f64.i32(double %6074, i32 1)
  %6102 = call double @llvm.ldexp.f64.i32(double %6076, i32 1)
  %6103 = fmul double %6074, %6082
  %6104 = fneg double %6103
  %6105 = call double @llvm.fma.f64(double %6082, double %6074, double %6104)
  %6106 = call double @llvm.fma.f64(double %6082, double %6076, double %6105)
  %6107 = call double @llvm.fma.f64(double %6084, double %6074, double %6106)
  %6108 = fadd double %6103, %6107
  %6109 = fsub double %6108, %6103
  %6110 = fsub double %6107, %6109
  %6111 = fmul double %6082, %6092
  %6112 = fneg double %6111
  %6113 = call double @llvm.fma.f64(double %6082, double %6092, double %6112)
  %6114 = call double @llvm.fma.f64(double %6084, double %6092, double %6113)
  %6115 = fadd double %6111, %6114
  %6116 = fsub double %6115, %6111
  %6117 = fsub double %6114, %6116
  %6118 = fadd double %6115, 0x3FE5555555555555
  %6119 = fadd double %6118, 0xBFE5555555555555
  %6120 = fsub double %6115, %6119
  %6121 = fadd double %6117, 0x3C8543B0D5DF274D
  %6122 = fadd double %6121, %6120
  %6123 = fadd double %6118, %6122
  %6124 = fsub double %6118, %6123
  %6125 = fadd double %6122, %6124
  %6126 = fmul double %6108, %6123
  %6127 = fneg double %6126
  %6128 = call double @llvm.fma.f64(double %6108, double %6123, double %6127)
  %6129 = call double @llvm.fma.f64(double %6108, double %6125, double %6128)
  %6130 = call double @llvm.fma.f64(double %6110, double %6123, double %6129)
  %6131 = fadd double %6126, %6130
  %6132 = fsub double %6131, %6126
  %6133 = fsub double %6130, %6132
  %6134 = fadd double %6101, %6131
  %6135 = fsub double %6134, %6101
  %6136 = fsub double %6131, %6135
  %6137 = fadd double %6102, %6133
  %6138 = fadd double %6137, %6136
  %6139 = fadd double %6134, %6138
  %6140 = fsub double %6139, %6134
  %6141 = fsub double %6138, %6140
  %6142 = fadd double %6098, %6139
  %6143 = fsub double %6142, %6098
  %6144 = fsub double %6142, %6143
  %6145 = fsub double %6098, %6144
  %6146 = fsub double %6139, %6143
  %6147 = fadd double %6146, %6145
  %6148 = fadd double %6100, %6141
  %6149 = fsub double %6148, %6100
  %6150 = fsub double %6148, %6149
  %6151 = fsub double %6100, %6150
  %6152 = fsub double %6141, %6149
  %6153 = fadd double %6152, %6151
  %6154 = fadd double %6148, %6147
  %6155 = fadd double %6142, %6154
  %6156 = fsub double %6155, %6142
  %6157 = fsub double %6154, %6156
  %6158 = fadd double %6153, %6157
  %6159 = fadd double %6155, %6158
  %6160 = fsub double %6159, %6155
  %6161 = fsub double %6158, %6160
  %6162 = fmul double %6042, %6159
  %6163 = fneg double %6162
  %6164 = call double @llvm.fma.f64(double %6042, double %6159, double %6163) #9
  %6165 = call double @llvm.fma.f64(double %6042, double %6161, double %6164) #9
  %6166 = fadd double %6162, %6165
  %6167 = fsub double %6166, %6162
  %6168 = fsub double %6165, %6167
  %6169 = call double @llvm.fabs.f64(double %6162) #9
  %6170 = fcmp oeq double %6169, 0x7FF0000000000000
  %6171 = select i1 %6170, double %6162, double %6166
  %6172 = call double @llvm.fabs.f64(double %6171) #9
  %6173 = fcmp oeq double %6172, 0x7FF0000000000000
  %6174 = select i1 %6173, double 0.000000e+00, double %6168
  %6175 = fmul double %6171, 0x3FF71547652B82FE
  %6176 = call double @llvm.rint.f64(double %6175)
  %6177 = fneg double %6176
  %6178 = call double @llvm.fma.f64(double %6177, double 0x3FE62E42FEFA39EF, double %6171)
  %6179 = call double @llvm.fma.f64(double %6177, double 0x3C7ABC9E3B39803F, double %6178)
  %6180 = call double @llvm.fma.f64(double %6179, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %6181 = call double @llvm.fma.f64(double %6179, double %6180, double 0x3EC71DEE623FDE64)
  %6182 = call double @llvm.fma.f64(double %6179, double %6181, double 0x3EFA01997C89E6B0)
  %6183 = call double @llvm.fma.f64(double %6179, double %6182, double 0x3F2A01A014761F6E)
  %6184 = call double @llvm.fma.f64(double %6179, double %6183, double 0x3F56C16C1852B7B0)
  %6185 = call double @llvm.fma.f64(double %6179, double %6184, double 0x3F81111111122322)
  %6186 = call double @llvm.fma.f64(double %6179, double %6185, double 0x3FA55555555502A1)
  %6187 = call double @llvm.fma.f64(double %6179, double %6186, double 0x3FC5555555555511)
  %6188 = call double @llvm.fma.f64(double %6179, double %6187, double 0x3FE000000000000B)
  %6189 = call double @llvm.fma.f64(double %6179, double %6188, double 1.000000e+00)
  %6190 = call double @llvm.fma.f64(double %6179, double %6189, double 1.000000e+00)
  %6191 = fptosi double %6176 to i32
  %6192 = call double @llvm.ldexp.f64.i32(double %6190, i32 %6191)
  %6193 = fcmp ogt double %6171, 1.024000e+03
  %6194 = select i1 %6193, double 0x7FF0000000000000, double %6192
  %6195 = fcmp olt double %6171, -1.075000e+03
  %6196 = select i1 %6195, double 0.000000e+00, double %6194
  %6197 = call double @llvm.fma.f64(double %6196, double %6174, double %6196) #9
  %6198 = call double @llvm.fabs.f64(double %6196) #9
  %6199 = fcmp oeq double %6198, 0x7FF0000000000000
  %6200 = select i1 %6199, double %6196, double %6197
  %6201 = call double @llvm.trunc.f64(double %6042) #9
  %6202 = fcmp oeq double %6201, %6042
  %6203 = fmul double %6042, 5.000000e-01
  %6204 = call double @llvm.trunc.f64(double %6203) #9
  %6205 = fcmp une double %6204, %6203
  %6206 = and i1 %6202, %6205
  %6207 = select i1 %6206, double %sub.i171.i.i, double 1.000000e+00
  %6208 = call double @llvm.copysign.f64(double %6200, double %6207) #9
  %6209 = fcmp olt double %sub.i171.i.i, 0.000000e+00
  %6210 = select i1 %6202, double %6208, double 0x7FF8000000000000
  %6211 = select i1 %6209, double %6210, double %6208
  %6212 = fcmp oeq double %6043, 0x7FF0000000000000
  %6213 = fcmp oeq double %sub.i171.i.i, 0.000000e+00
  %6214 = or i1 %6213, %6212
  %6215 = select i1 %6213, double 0.000000e+00, double 0x7FF0000000000000
  %6216 = select i1 %6206, double %sub.i171.i.i, double 0.000000e+00
  %6217 = call double @llvm.copysign.f64(double %6215, double %6216) #9
  %6218 = select i1 %6214, double %6217, double %6211
  %6219 = fcmp uno double %sub.i171.i.i, 0.000000e+00
  %6220 = select i1 %6219, double 0x7FF8000000000000, double %6218
  %sub1.i173.i.i = fsub double %add226.i.i, %33
  %6221 = fcmp oeq double %sub1.i173.i.i, 1.000000e+00
  %6222 = select i1 %6221, double 1.000000e+00, double 2.000000e+00
  %6223 = call double @llvm.fabs.f64(double %sub1.i173.i.i) #9
  %6224 = call double @llvm.amdgcn.frexp.mant.f64(double %6223)
  %6225 = fcmp olt double %6224, 0x3FE5555555555555
  %.neg.i.i.i1.i174.i.i = sext i1 %6225 to i32
  %6226 = select i1 %6225, double 2.000000e+00, double 1.000000e+00
  %6227 = fmul double %6224, %6226
  %6228 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %6223)
  %6229 = add i32 %6228, %.neg.i.i.i1.i174.i.i
  %6230 = fadd double %6227, -1.000000e+00
  %6231 = fadd double %6227, 1.000000e+00
  %6232 = fadd double %6231, -1.000000e+00
  %6233 = fsub double %6227, %6232
  %6234 = call double @llvm.amdgcn.rcp.f64(double %6231)
  %6235 = fneg double %6231
  %6236 = call double @llvm.fma.f64(double %6235, double %6234, double 1.000000e+00)
  %6237 = call double @llvm.fma.f64(double %6236, double %6234, double %6234)
  %6238 = call double @llvm.fma.f64(double %6235, double %6237, double 1.000000e+00)
  %6239 = call double @llvm.fma.f64(double %6238, double %6237, double %6237)
  %6240 = fmul double %6230, %6239
  %6241 = fmul double %6231, %6240
  %6242 = fneg double %6241
  %6243 = call double @llvm.fma.f64(double %6240, double %6231, double %6242)
  %6244 = call double @llvm.fma.f64(double %6240, double %6233, double %6243)
  %6245 = fadd double %6241, %6244
  %6246 = fsub double %6245, %6241
  %6247 = fsub double %6230, %6245
  %6248 = fsub double %6230, %6247
  %6249 = fsub double %6248, %6245
  %6250 = fsub double %6246, %6244
  %6251 = fadd double %6250, %6249
  %6252 = fadd double %6247, %6251
  %6253 = fmul double %6239, %6252
  %6254 = fadd double %6240, %6253
  %6255 = fsub double %6254, %6240
  %6256 = fsub double %6253, %6255
  %6257 = fmul double %6254, %6254
  %6258 = fneg double %6257
  %6259 = call double @llvm.fma.f64(double %6254, double %6254, double %6258)
  %6260 = fmul double %6256, 2.000000e+00
  %6261 = call double @llvm.fma.f64(double %6254, double %6260, double %6259)
  %6262 = fadd double %6257, %6261
  %6263 = fsub double %6262, %6257
  %6264 = fsub double %6261, %6263
  %6265 = call double @llvm.fma.f64(double %6262, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %6266 = call double @llvm.fma.f64(double %6262, double %6265, double 0x3FBE25E43ABE935A)
  %6267 = call double @llvm.fma.f64(double %6262, double %6266, double 0x3FC110EF47E6C9C2)
  %6268 = call double @llvm.fma.f64(double %6262, double %6267, double 0x3FC3B13BCFA74449)
  %6269 = call double @llvm.fma.f64(double %6262, double %6268, double 0x3FC745D171BF3C30)
  %6270 = call double @llvm.fma.f64(double %6262, double %6269, double 0x3FCC71C71C7792CE)
  %6271 = call double @llvm.fma.f64(double %6262, double %6270, double 0x3FD24924924920DA)
  %6272 = call double @llvm.fma.f64(double %6262, double %6271, double 0x3FD999999999999C)
  %6273 = sitofp i32 %6229 to double
  %6274 = fmul double %6273, 0x3FE62E42FEFA39EF
  %6275 = fneg double %6274
  %6276 = call double @llvm.fma.f64(double %6273, double 0x3FE62E42FEFA39EF, double %6275)
  %6277 = call double @llvm.fma.f64(double %6273, double 0x3C7ABC9E3B39803F, double %6276)
  %6278 = fadd double %6274, %6277
  %6279 = fsub double %6278, %6274
  %6280 = fsub double %6277, %6279
  %6281 = call double @llvm.ldexp.f64.i32(double %6254, i32 1)
  %6282 = call double @llvm.ldexp.f64.i32(double %6256, i32 1)
  %6283 = fmul double %6254, %6262
  %6284 = fneg double %6283
  %6285 = call double @llvm.fma.f64(double %6262, double %6254, double %6284)
  %6286 = call double @llvm.fma.f64(double %6262, double %6256, double %6285)
  %6287 = call double @llvm.fma.f64(double %6264, double %6254, double %6286)
  %6288 = fadd double %6283, %6287
  %6289 = fsub double %6288, %6283
  %6290 = fsub double %6287, %6289
  %6291 = fmul double %6262, %6272
  %6292 = fneg double %6291
  %6293 = call double @llvm.fma.f64(double %6262, double %6272, double %6292)
  %6294 = call double @llvm.fma.f64(double %6264, double %6272, double %6293)
  %6295 = fadd double %6291, %6294
  %6296 = fsub double %6295, %6291
  %6297 = fsub double %6294, %6296
  %6298 = fadd double %6295, 0x3FE5555555555555
  %6299 = fadd double %6298, 0xBFE5555555555555
  %6300 = fsub double %6295, %6299
  %6301 = fadd double %6297, 0x3C8543B0D5DF274D
  %6302 = fadd double %6301, %6300
  %6303 = fadd double %6298, %6302
  %6304 = fsub double %6298, %6303
  %6305 = fadd double %6302, %6304
  %6306 = fmul double %6288, %6303
  %6307 = fneg double %6306
  %6308 = call double @llvm.fma.f64(double %6288, double %6303, double %6307)
  %6309 = call double @llvm.fma.f64(double %6288, double %6305, double %6308)
  %6310 = call double @llvm.fma.f64(double %6290, double %6303, double %6309)
  %6311 = fadd double %6306, %6310
  %6312 = fsub double %6311, %6306
  %6313 = fsub double %6310, %6312
  %6314 = fadd double %6281, %6311
  %6315 = fsub double %6314, %6281
  %6316 = fsub double %6311, %6315
  %6317 = fadd double %6282, %6313
  %6318 = fadd double %6317, %6316
  %6319 = fadd double %6314, %6318
  %6320 = fsub double %6319, %6314
  %6321 = fsub double %6318, %6320
  %6322 = fadd double %6278, %6319
  %6323 = fsub double %6322, %6278
  %6324 = fsub double %6322, %6323
  %6325 = fsub double %6278, %6324
  %6326 = fsub double %6319, %6323
  %6327 = fadd double %6326, %6325
  %6328 = fadd double %6280, %6321
  %6329 = fsub double %6328, %6280
  %6330 = fsub double %6328, %6329
  %6331 = fsub double %6280, %6330
  %6332 = fsub double %6321, %6329
  %6333 = fadd double %6332, %6331
  %6334 = fadd double %6328, %6327
  %6335 = fadd double %6322, %6334
  %6336 = fsub double %6335, %6322
  %6337 = fsub double %6334, %6336
  %6338 = fadd double %6333, %6337
  %6339 = fadd double %6335, %6338
  %6340 = fsub double %6339, %6335
  %6341 = fsub double %6338, %6340
  %6342 = fmul double %6222, %6339
  %6343 = fneg double %6342
  %6344 = call double @llvm.fma.f64(double %6222, double %6339, double %6343) #9
  %6345 = call double @llvm.fma.f64(double %6222, double %6341, double %6344) #9
  %6346 = fadd double %6342, %6345
  %6347 = fsub double %6346, %6342
  %6348 = fsub double %6345, %6347
  %6349 = call double @llvm.fabs.f64(double %6342) #9
  %6350 = fcmp oeq double %6349, 0x7FF0000000000000
  %6351 = select i1 %6350, double %6342, double %6346
  %6352 = call double @llvm.fabs.f64(double %6351) #9
  %6353 = fcmp oeq double %6352, 0x7FF0000000000000
  %6354 = select i1 %6353, double 0.000000e+00, double %6348
  %6355 = fmul double %6351, 0x3FF71547652B82FE
  %6356 = call double @llvm.rint.f64(double %6355)
  %6357 = fneg double %6356
  %6358 = call double @llvm.fma.f64(double %6357, double 0x3FE62E42FEFA39EF, double %6351)
  %6359 = call double @llvm.fma.f64(double %6357, double 0x3C7ABC9E3B39803F, double %6358)
  %6360 = call double @llvm.fma.f64(double %6359, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %6361 = call double @llvm.fma.f64(double %6359, double %6360, double 0x3EC71DEE623FDE64)
  %6362 = call double @llvm.fma.f64(double %6359, double %6361, double 0x3EFA01997C89E6B0)
  %6363 = call double @llvm.fma.f64(double %6359, double %6362, double 0x3F2A01A014761F6E)
  %6364 = call double @llvm.fma.f64(double %6359, double %6363, double 0x3F56C16C1852B7B0)
  %6365 = call double @llvm.fma.f64(double %6359, double %6364, double 0x3F81111111122322)
  %6366 = call double @llvm.fma.f64(double %6359, double %6365, double 0x3FA55555555502A1)
  %6367 = call double @llvm.fma.f64(double %6359, double %6366, double 0x3FC5555555555511)
  %6368 = call double @llvm.fma.f64(double %6359, double %6367, double 0x3FE000000000000B)
  %6369 = call double @llvm.fma.f64(double %6359, double %6368, double 1.000000e+00)
  %6370 = call double @llvm.fma.f64(double %6359, double %6369, double 1.000000e+00)
  %6371 = fptosi double %6356 to i32
  %6372 = call double @llvm.ldexp.f64.i32(double %6370, i32 %6371)
  %6373 = fcmp ogt double %6351, 1.024000e+03
  %6374 = select i1 %6373, double 0x7FF0000000000000, double %6372
  %6375 = fcmp olt double %6351, -1.075000e+03
  %6376 = select i1 %6375, double 0.000000e+00, double %6374
  %6377 = call double @llvm.fma.f64(double %6376, double %6354, double %6376) #9
  %6378 = call double @llvm.fabs.f64(double %6376) #9
  %6379 = fcmp oeq double %6378, 0x7FF0000000000000
  %6380 = select i1 %6379, double %6376, double %6377
  %6381 = call double @llvm.trunc.f64(double %6222) #9
  %6382 = fcmp oeq double %6381, %6222
  %6383 = fmul double %6222, 5.000000e-01
  %6384 = call double @llvm.trunc.f64(double %6383) #9
  %6385 = fcmp une double %6384, %6383
  %6386 = and i1 %6382, %6385
  %6387 = select i1 %6386, double %sub1.i173.i.i, double 1.000000e+00
  %6388 = call double @llvm.copysign.f64(double %6380, double %6387) #9
  %6389 = fcmp olt double %sub1.i173.i.i, 0.000000e+00
  %6390 = select i1 %6382, double %6388, double 0x7FF8000000000000
  %6391 = select i1 %6389, double %6390, double %6388
  %6392 = fcmp oeq double %6223, 0x7FF0000000000000
  %6393 = fcmp oeq double %sub1.i173.i.i, 0.000000e+00
  %6394 = or i1 %6393, %6392
  %6395 = select i1 %6393, double 0.000000e+00, double 0x7FF0000000000000
  %6396 = select i1 %6386, double %sub1.i173.i.i, double 0.000000e+00
  %6397 = call double @llvm.copysign.f64(double %6395, double %6396) #9
  %6398 = select i1 %6394, double %6397, double %6391
  %6399 = fcmp uno double %sub1.i173.i.i, 0.000000e+00
  %6400 = select i1 %6399, double 0x7FF8000000000000, double %6398
  %add.i175.i.i = fadd double %6220, %6400
  %6401 = fcmp oeq double %sub214.i.i, 1.000000e+00
  %6402 = select i1 %6401, double 1.000000e+00, double 2.000000e+00
  %6403 = call double @llvm.fabs.f64(double %sub214.i.i) #9
  %6404 = call double @llvm.amdgcn.frexp.mant.f64(double %6403)
  %6405 = fcmp olt double %6404, 0x3FE5555555555555
  %.neg.i.i.i2.i177.i.i = sext i1 %6405 to i32
  %6406 = select i1 %6405, double 2.000000e+00, double 1.000000e+00
  %6407 = fmul double %6404, %6406
  %6408 = call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %6403)
  %6409 = add i32 %6408, %.neg.i.i.i2.i177.i.i
  %6410 = fadd double %6407, -1.000000e+00
  %6411 = fadd double %6407, 1.000000e+00
  %6412 = fadd double %6411, -1.000000e+00
  %6413 = fsub double %6407, %6412
  %6414 = call double @llvm.amdgcn.rcp.f64(double %6411)
  %6415 = fneg double %6411
  %6416 = call double @llvm.fma.f64(double %6415, double %6414, double 1.000000e+00)
  %6417 = call double @llvm.fma.f64(double %6416, double %6414, double %6414)
  %6418 = call double @llvm.fma.f64(double %6415, double %6417, double 1.000000e+00)
  %6419 = call double @llvm.fma.f64(double %6418, double %6417, double %6417)
  %6420 = fmul double %6410, %6419
  %6421 = fmul double %6411, %6420
  %6422 = fneg double %6421
  %6423 = call double @llvm.fma.f64(double %6420, double %6411, double %6422)
  %6424 = call double @llvm.fma.f64(double %6420, double %6413, double %6423)
  %6425 = fadd double %6421, %6424
  %6426 = fsub double %6425, %6421
  %6427 = fsub double %6410, %6425
  %6428 = fsub double %6410, %6427
  %6429 = fsub double %6428, %6425
  %6430 = fsub double %6426, %6424
  %6431 = fadd double %6430, %6429
  %6432 = fadd double %6427, %6431
  %6433 = fmul double %6419, %6432
  %6434 = fadd double %6420, %6433
  %6435 = fsub double %6434, %6420
  %6436 = fsub double %6433, %6435
  %6437 = fmul double %6434, %6434
  %6438 = fneg double %6437
  %6439 = call double @llvm.fma.f64(double %6434, double %6434, double %6438)
  %6440 = fmul double %6436, 2.000000e+00
  %6441 = call double @llvm.fma.f64(double %6434, double %6440, double %6439)
  %6442 = fadd double %6437, %6441
  %6443 = fsub double %6442, %6437
  %6444 = fsub double %6441, %6443
  %6445 = call double @llvm.fma.f64(double %6442, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %6446 = call double @llvm.fma.f64(double %6442, double %6445, double 0x3FBE25E43ABE935A)
  %6447 = call double @llvm.fma.f64(double %6442, double %6446, double 0x3FC110EF47E6C9C2)
  %6448 = call double @llvm.fma.f64(double %6442, double %6447, double 0x3FC3B13BCFA74449)
  %6449 = call double @llvm.fma.f64(double %6442, double %6448, double 0x3FC745D171BF3C30)
  %6450 = call double @llvm.fma.f64(double %6442, double %6449, double 0x3FCC71C71C7792CE)
  %6451 = call double @llvm.fma.f64(double %6442, double %6450, double 0x3FD24924924920DA)
  %6452 = call double @llvm.fma.f64(double %6442, double %6451, double 0x3FD999999999999C)
  %6453 = sitofp i32 %6409 to double
  %6454 = fmul double %6453, 0x3FE62E42FEFA39EF
  %6455 = fneg double %6454
  %6456 = call double @llvm.fma.f64(double %6453, double 0x3FE62E42FEFA39EF, double %6455)
  %6457 = call double @llvm.fma.f64(double %6453, double 0x3C7ABC9E3B39803F, double %6456)
  %6458 = fadd double %6454, %6457
  %6459 = fsub double %6458, %6454
  %6460 = fsub double %6457, %6459
  %6461 = call double @llvm.ldexp.f64.i32(double %6434, i32 1)
  %6462 = call double @llvm.ldexp.f64.i32(double %6436, i32 1)
  %6463 = fmul double %6434, %6442
  %6464 = fneg double %6463
  %6465 = call double @llvm.fma.f64(double %6442, double %6434, double %6464)
  %6466 = call double @llvm.fma.f64(double %6442, double %6436, double %6465)
  %6467 = call double @llvm.fma.f64(double %6444, double %6434, double %6466)
  %6468 = fadd double %6463, %6467
  %6469 = fsub double %6468, %6463
  %6470 = fsub double %6467, %6469
  %6471 = fmul double %6442, %6452
  %6472 = fneg double %6471
  %6473 = call double @llvm.fma.f64(double %6442, double %6452, double %6472)
  %6474 = call double @llvm.fma.f64(double %6444, double %6452, double %6473)
  %6475 = fadd double %6471, %6474
  %6476 = fsub double %6475, %6471
  %6477 = fsub double %6474, %6476
  %6478 = fadd double %6475, 0x3FE5555555555555
  %6479 = fadd double %6478, 0xBFE5555555555555
  %6480 = fsub double %6475, %6479
  %6481 = fadd double %6477, 0x3C8543B0D5DF274D
  %6482 = fadd double %6481, %6480
  %6483 = fadd double %6478, %6482
  %6484 = fsub double %6478, %6483
  %6485 = fadd double %6482, %6484
  %6486 = fmul double %6468, %6483
  %6487 = fneg double %6486
  %6488 = call double @llvm.fma.f64(double %6468, double %6483, double %6487)
  %6489 = call double @llvm.fma.f64(double %6468, double %6485, double %6488)
  %6490 = call double @llvm.fma.f64(double %6470, double %6483, double %6489)
  %6491 = fadd double %6486, %6490
  %6492 = fsub double %6491, %6486
  %6493 = fsub double %6490, %6492
  %6494 = fadd double %6461, %6491
  %6495 = fsub double %6494, %6461
  %6496 = fsub double %6491, %6495
  %6497 = fadd double %6462, %6493
  %6498 = fadd double %6497, %6496
  %6499 = fadd double %6494, %6498
  %6500 = fsub double %6499, %6494
  %6501 = fsub double %6498, %6500
  %6502 = fadd double %6458, %6499
  %6503 = fsub double %6502, %6458
  %6504 = fsub double %6502, %6503
  %6505 = fsub double %6458, %6504
  %6506 = fsub double %6499, %6503
  %6507 = fadd double %6506, %6505
  %6508 = fadd double %6460, %6501
  %6509 = fsub double %6508, %6460
  %6510 = fsub double %6508, %6509
  %6511 = fsub double %6460, %6510
  %6512 = fsub double %6501, %6509
  %6513 = fadd double %6512, %6511
  %6514 = fadd double %6508, %6507
  %6515 = fadd double %6502, %6514
  %6516 = fsub double %6515, %6502
  %6517 = fsub double %6514, %6516
  %6518 = fadd double %6513, %6517
  %6519 = fadd double %6515, %6518
  %6520 = fsub double %6519, %6515
  %6521 = fsub double %6518, %6520
  %6522 = fmul double %6402, %6519
  %6523 = fneg double %6522
  %6524 = call double @llvm.fma.f64(double %6402, double %6519, double %6523) #9
  %6525 = call double @llvm.fma.f64(double %6402, double %6521, double %6524) #9
  %6526 = fadd double %6522, %6525
  %6527 = fsub double %6526, %6522
  %6528 = fsub double %6525, %6527
  %6529 = call double @llvm.fabs.f64(double %6522) #9
  %6530 = fcmp oeq double %6529, 0x7FF0000000000000
  %6531 = select i1 %6530, double %6522, double %6526
  %6532 = call double @llvm.fabs.f64(double %6531) #9
  %6533 = fcmp oeq double %6532, 0x7FF0000000000000
  %6534 = select i1 %6533, double 0.000000e+00, double %6528
  %6535 = fmul double %6531, 0x3FF71547652B82FE
  %6536 = call double @llvm.rint.f64(double %6535)
  %6537 = fneg double %6536
  %6538 = call double @llvm.fma.f64(double %6537, double 0x3FE62E42FEFA39EF, double %6531)
  %6539 = call double @llvm.fma.f64(double %6537, double 0x3C7ABC9E3B39803F, double %6538)
  %6540 = call double @llvm.fma.f64(double %6539, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %6541 = call double @llvm.fma.f64(double %6539, double %6540, double 0x3EC71DEE623FDE64)
  %6542 = call double @llvm.fma.f64(double %6539, double %6541, double 0x3EFA01997C89E6B0)
  %6543 = call double @llvm.fma.f64(double %6539, double %6542, double 0x3F2A01A014761F6E)
  %6544 = call double @llvm.fma.f64(double %6539, double %6543, double 0x3F56C16C1852B7B0)
  %6545 = call double @llvm.fma.f64(double %6539, double %6544, double 0x3F81111111122322)
  %6546 = call double @llvm.fma.f64(double %6539, double %6545, double 0x3FA55555555502A1)
  %6547 = call double @llvm.fma.f64(double %6539, double %6546, double 0x3FC5555555555511)
  %6548 = call double @llvm.fma.f64(double %6539, double %6547, double 0x3FE000000000000B)
  %6549 = call double @llvm.fma.f64(double %6539, double %6548, double 1.000000e+00)
  %6550 = call double @llvm.fma.f64(double %6539, double %6549, double 1.000000e+00)
  %6551 = fptosi double %6536 to i32
  %6552 = call double @llvm.ldexp.f64.i32(double %6550, i32 %6551)
  %6553 = fcmp ogt double %6531, 1.024000e+03
  %6554 = select i1 %6553, double 0x7FF0000000000000, double %6552
  %6555 = fcmp olt double %6531, -1.075000e+03
  %6556 = select i1 %6555, double 0.000000e+00, double %6554
  %6557 = call double @llvm.fma.f64(double %6556, double %6534, double %6556) #9
  %6558 = call double @llvm.fabs.f64(double %6556) #9
  %6559 = fcmp oeq double %6558, 0x7FF0000000000000
  %6560 = select i1 %6559, double %6556, double %6557
  %6561 = call double @llvm.trunc.f64(double %6402) #9
  %6562 = fcmp oeq double %6561, %6402
  %6563 = fmul double %6402, 5.000000e-01
  %6564 = call double @llvm.trunc.f64(double %6563) #9
  %6565 = fcmp une double %6564, %6563
  %6566 = and i1 %6562, %6565
  %6567 = select i1 %6566, double %sub214.i.i, double 1.000000e+00
  %6568 = call double @llvm.copysign.f64(double %6560, double %6567) #9
  %6569 = fcmp olt double %sub214.i.i, 0.000000e+00
  %6570 = select i1 %6562, double %6568, double 0x7FF8000000000000
  %6571 = select i1 %6569, double %6570, double %6568
  %6572 = fcmp oeq double %6403, 0x7FF0000000000000
  %6573 = fcmp oeq double %sub214.i.i, 0.000000e+00
  %6574 = or i1 %6573, %6572
  %6575 = select i1 %6573, double 0.000000e+00, double 0x7FF0000000000000
  %6576 = select i1 %6566, double %sub214.i.i, double 0.000000e+00
  %6577 = call double @llvm.copysign.f64(double %6575, double %6576) #9
  %6578 = select i1 %6574, double %6577, double %6571
  %6579 = fcmp uno double %sub214.i.i, 0.000000e+00
  %6580 = select i1 %6579, double 0x7FF8000000000000, double %6578
  %add5.i178.i.i = fadd double %6580, %add.i175.i.i
  %cmp.i179.i.i = fcmp olt double %add5.i178.i.i, %min_dist.4.i49.i
  br i1 %cmp.i179.i.i, label %if.then.i180.i.i, label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit183.i.i

if.then.i180.i.i:                                 ; preds = %if.then234.i.i
  store double %add219.i.i, ptr addrspace(5) %r0, align 8, !tbaa !35
  store double %add226.i.i, ptr addrspace(5) %9, align 8, !tbaa !37
  store double %3303, ptr addrspace(5) %10, align 8, !tbaa !38
  br label %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit183.i.i

_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit183.i.i: ; preds = %if.then.i180.i.i, %if.then234.i.i
  %min_dist.11.i.i = phi double [ %add5.i178.i.i, %if.then.i180.i.i ], [ %min_dist.4.i49.i, %if.then234.i.i ]
  br i1 %cmp.i179.i.i, label %if.then236.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then236.i.i:                                   ; preds = %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit183.i.i
  %6581 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %this.val64.i.i = load ptr, ptr %6581, align 8, !tbaa !29
  %6582 = load double, ptr %lower_left_.val.i.i, align 8, !tbaa !30
  %sub.i185.i.i = fsub double %add219.i.i, %6582
  %6583 = load double, ptr %this.val64.i.i, align 8, !tbaa !30
  %div.i187.i.i = fdiv double %sub.i185.i.i, %6583
  %6584 = call noundef double @llvm.ceil.f64(double %div.i187.i.i) #9
  %conv5.i188.i.i = fptosi double %6584 to i32
  store i32 %conv5.i188.i.i, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %6585 = load double, ptr %arrayidx.i.i35.i, align 8, !tbaa !30
  %sub.i190.i.i = fsub double %add226.i.i, %6585
  %arrayidx.i1.i191.i.i = getelementptr inbounds nuw i8, ptr %this.val64.i.i, i64 8
  %6586 = load double, ptr %arrayidx.i1.i191.i.i, align 8, !tbaa !30
  %div.i192.i.i = fdiv double %sub.i190.i.i, %6586
  %6587 = call noundef double @llvm.ceil.f64(double %div.i192.i.i) #9
  %conv5.i193.i.i = fptosi double %6587 to i32
  %arrayidx240.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 4
  store i32 %conv5.i193.i.i, ptr addrspace(5) %arrayidx240.i.i, align 4, !tbaa !31
  %shape_241.i.i = getelementptr inbounds nuw i8, ptr %this, i64 56
  %shape_241.val.i.i = load ptr, ptr %shape_241.i.i, align 8, !tbaa !32
  %arrayidx.i194.i.i = getelementptr inbounds nuw i8, ptr %shape_241.val.i.i, i64 8
  %6588 = load i32, ptr %arrayidx.i194.i.i, align 4, !tbaa !31
  %arrayidx243.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 8
  store i32 %6588, ptr addrspace(5) %arrayidx243.i.i, align 4, !tbaa !31
  br label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

sw.epilog.i:                                      ; preds = %if.else
  unreachable

_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit: ; preds = %if.then236.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit183.i.i, %if.then212.i.i, %lor.lhs.false208.i.i, %if.then128.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit79.i.i, %if.then108.i.i, %lor.lhs.false104.i.i, %if.then45.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit18.i.i, %lor.lhs.false25.i.i
  %retval.0.in.i = phi double [ %min_dist.3.i.i, %if.then45.i.i ], [ %min_dist.3.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit18.i.i ], [ %min_dist.0.i.i, %lor.lhs.false25.i.i ], [ %min_dist.7.i.i, %if.then128.i.i ], [ %min_dist.7.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit79.i.i ], [ %min_dist.2.i12.i, %if.then108.i.i ], [ %min_dist.2.i12.i, %lor.lhs.false104.i.i ], [ %min_dist.11.i.i, %if.then236.i.i ], [ %min_dist.11.i.i, %_ZN6openmc24check_intersection_pointEddddddRNS_8PositionERd.internalized.exit183.i.i ], [ %min_dist.4.i49.i, %if.then212.i.i ], [ %min_dist.4.i49.i, %lor.lhs.false208.i.i ]
  %retval.0.i = fcmp olt double %retval.0.in.i, 0x7FEFFFFFFFFFFFFF
  br i1 %retval.0.i, label %if.end23, label %cleanup126

if.end23:                                         ; preds = %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit, %if.then
  %cmp = fcmp olt double %4, 2.000000e-08
  %or.cond = and i1 %cmp, %cmp2.i
  br i1 %or.cond, label %for.body, label %if.end28

for.body:                                         ; preds = %for.body, %if.end23
  %i.0254 = phi i32 [ %inc, %for.body ], [ 0, %if.end23 ]
  %arrayidx = getelementptr inbounds nuw [3 x i32], ptr addrspace(5) %ijk0, i32 0, i32 %i.0254
  %6589 = load i32, ptr addrspace(5) %arrayidx, align 4, !tbaa !31
  %arrayidx27 = getelementptr inbounds nuw [3 x i32], ptr addrspace(5) %ijk1, i32 0, i32 %i.0254
  store i32 %6589, ptr addrspace(5) %arrayidx27, align 4, !tbaa !31
  %inc = add nuw nsw i32 %i.0254, 1
  %exitcond.not = icmp eq i32 %inc, %15
  br i1 %exitcond.not, label %if.end28, label %for.body, !llvm.loop !39

if.end28:                                         ; preds = %for.body, %if.end23
  %tobool.not.not.i.i.i.i = icmp eq i32 %15, 0
  %add.ptr = getelementptr inbounds i32, ptr addrspace(5) %ijk0, i32 %15
  %6590 = addrspacecast ptr addrspace(5) %add.ptr to ptr
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %6590 to i64
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %ijk0.ascast to i64
  %sub.ptr.sub.i.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  %6591 = getelementptr inbounds nuw i8, ptr %this, i64 8
  %6592 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %add.ptr81.idx = shl nsw i32 %15, 3
  %add.ptr81 = getelementptr inbounds i8, ptr addrspace(5) %d, i32 %add.ptr81.idx
  %or.cond.i.i146 = icmp ult i32 %15, 2
  %incdec.ptr1.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %d, i32 8
  %sub.ptr.rhs.cast = ptrtoint ptr %d.ascast to i64
  %6593 = getelementptr inbounds nuw i8, ptr %this, i64 56
  %arrayidx8.i149 = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 8
  %arrayidx13.i153 = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 4
  %6594 = getelementptr inbounds nuw i8, ptr %match, i64 1504
  %weights_.i173 = getelementptr inbounds nuw i8, ptr %match, i64 504
  %b1.i179 = addrspacecast ptr addrspace(5) %b.i178 to ptr
  %6595 = getelementptr inbounds nuw i8, ptr addrspace(5) %b.i178, i32 8
  %6596 = getelementptr inbounds nuw i8, ptr addrspace(5) %b.i178, i32 16
  br label %while.cond

while.cond.critedge:                              ; preds = %for.cond102, %_ZN6openmc8PositionixEi.internalized.exit
  call void @llvm.lifetime.end.p5(i64 24, ptr addrspace(5) %d) #7
  br label %while.cond

while.cond:                                       ; preds = %while.cond.critedge, %if.end28
  br i1 %tobool.not.not.i.i.i.i, label %_ZSt5equalIPiS0_EbT_S1_T0_.internalized.exit, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %while.cond
  %call.i.i.i.i.i = call noundef i32 @memcmp(ptr noundef %ijk0.ascast, ptr noundef %ijk1.ascast, i64 noundef %sub.ptr.sub.i.i.i.i) #8
  %tobool1.not.i.i.i.i = icmp eq i32 %call.i.i.i.i.i, 0
  br label %_ZSt5equalIPiS0_EbT_S1_T0_.internalized.exit

_ZSt5equalIPiS0_EbT_S1_T0_.internalized.exit:     ; preds = %if.then.i.i.i.i, %while.cond
  %retval.0.i.i.i.i = phi i1 [ %tobool1.not.i.i.i.i, %if.then.i.i.i.i ], [ undef, %while.cond ]
  %spec.select.i.i.i.i = or i1 %tobool.not.not.i.i.i.i, %retval.0.i.i.i.i
  br i1 %spec.select.i.i.i.i, label %if.then33, label %if.end41

if.then33:                                        ; preds = %_ZSt5equalIPiS0_EbT_S1_T0_.internalized.exit
  %agg.tmp36.sroa.0.0.copyload = load double, ptr addrspace(5) %r0, align 8, !tbaa !30
  %agg.tmp36.sroa.2.0.copyload = load double, ptr addrspace(5) %9, align 8, !tbaa !30
  %agg.tmp36.sroa.3.0.copyload = load double, ptr addrspace(5) %10, align 8, !tbaa !30
  call void @llvm.lifetime.start.p5(i64 24, ptr addrspace(5) %a.i121)
  %a1.i122 = addrspacecast ptr addrspace(5) %a.i121 to ptr
  store double %r.sroa.0.0.copyload, ptr addrspace(5) %a.i121, align 8
  %6597 = getelementptr inbounds nuw i8, ptr addrspace(5) %a.i121, i32 8
  store double %r.sroa.6.0.copyload, ptr addrspace(5) %6597, align 8
  %6598 = getelementptr inbounds nuw i8, ptr addrspace(5) %a.i121, i32 16
  store double %r.sroa.9.0.copyload, ptr addrspace(5) %6598, align 8
  %call.i123 = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionmIES0_(ptr noundef nonnull align 8 dereferenceable(24) %a1.i122, double %agg.tmp36.sroa.0.0.copyload, double %agg.tmp36.sroa.2.0.copyload, double %agg.tmp36.sroa.3.0.copyload) #8
  %retval.sroa.0.0.copyload.i124 = load double, ptr %call.i123, align 8, !tbaa !30
  %retval.sroa.2.0.call.sroa_idx.i125 = getelementptr inbounds nuw i8, ptr %call.i123, i64 8
  %retval.sroa.2.0.copyload.i126 = load double, ptr %retval.sroa.2.0.call.sroa_idx.i125, align 8, !tbaa !30
  %retval.sroa.3.0.call.sroa_idx.i127 = getelementptr inbounds nuw i8, ptr %call.i123, i64 16
  %retval.sroa.3.0.copyload.i128 = load double, ptr %retval.sroa.3.0.call.sroa_idx.i127, align 8, !tbaa !30
  call void @llvm.lifetime.end.p5(i64 24, ptr addrspace(5) %a.i121)
  %mul4.i133 = fmul double %retval.sroa.2.0.copyload.i126, %retval.sroa.2.0.copyload.i126
  %6599 = call double @llvm.fmuladd.f64(double %retval.sroa.0.0.copyload.i124, double %retval.sroa.0.0.copyload.i124, double %mul4.i133) #9
  %6600 = call double @llvm.fmuladd.f64(double %retval.sroa.3.0.copyload.i128, double %retval.sroa.3.0.copyload.i128, double %6599) #9
  %6601 = call noundef double @llvm.sqrt.f64(double %6600) #9
  %this.val = load i32, ptr %n_dimension_, align 4, !tbaa !17
  %this.val37 = load ptr, ptr %6593, align 8
  switch i32 %this.val, label %sw.epilog.i139 [
    i32 1, label %sw.bb.i138
    i32 2, label %sw.bb2.i
    i32 3, label %sw.bb7.i
  ]

sw.bb.i138:                                       ; preds = %if.then33
  %6602 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit

sw.bb2.i:                                         ; preds = %if.then33
  %6603 = load i32, ptr addrspace(5) %arrayidx13.i153, align 4, !tbaa !31
  %sub4.i = add nsw i32 %6603, -1
  %6604 = load i32, ptr %this.val37, align 4, !tbaa !31
  %mul.i = mul nsw i32 %sub4.i, %6604
  %6605 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %add.i = add nsw i32 %mul.i, %6605
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit

sw.bb7.i:                                         ; preds = %if.then33
  %6606 = load i32, ptr addrspace(5) %arrayidx8.i149, align 4, !tbaa !31
  %sub9.i = add nsw i32 %6606, -1
  %arrayidx.i.i135 = getelementptr inbounds nuw i8, ptr %this.val37, i64 4
  %6607 = load i32, ptr %arrayidx.i.i135, align 4, !tbaa !31
  %mul12.i = mul nsw i32 %sub9.i, %6607
  %6608 = load i32, ptr addrspace(5) %arrayidx13.i153, align 4, !tbaa !31
  %sub14.i = add nsw i32 %6608, -1
  %add15.i = add nsw i32 %sub14.i, %mul12.i
  %6609 = load i32, ptr %this.val37, align 4, !tbaa !31
  %mul18.i = mul nsw i32 %add15.i, %6609
  %6610 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %add20.i = add nsw i32 %mul18.i, %6610
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit

sw.epilog.i139:                                   ; preds = %if.then33
  unreachable

_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit: ; preds = %sw.bb7.i, %sw.bb2.i, %sw.bb.i138
  %retval.0.in.i136 = phi i32 [ %add20.i, %sw.bb7.i ], [ %add.i, %sw.bb2.i ], [ %6602, %sw.bb.i138 ]
  %this.val.i140 = load i32, ptr %6594, align 8, !tbaa !40
  %cmp.i.i141 = icmp sgt i32 %this.val.i140, 124
  br i1 %cmp.i.i141, label %cleanup126, label %if.then.i142

if.then.i142:                                     ; preds = %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit
  %div = fdiv double %6601, %4
  %retval.0.i137 = add nsw i32 %retval.0.in.i136, -1
  %idxprom.i = sext i32 %this.val.i140 to i64
  %arrayidx.i143 = getelementptr inbounds [125 x i32], ptr %match, i64 0, i64 %idxprom.i
  store i32 %retval.0.i137, ptr %arrayidx.i143, align 4, !tbaa !31
  %6611 = load i32, ptr %6594, align 8, !tbaa !40
  %idxprom3.i = sext i32 %6611 to i64
  %arrayidx4.i = getelementptr inbounds [125 x double], ptr %weights_.i173, i64 0, i64 %idxprom3.i
  store double %div, ptr %arrayidx4.i, align 8, !tbaa !30
  %inc.i144 = add nsw i32 %6611, 1
  store i32 %inc.i144, ptr %6594, align 8, !tbaa !40
  br label %cleanup126

if.end41:                                         ; preds = %_ZSt5equalIPiS0_EbT_S1_T0_.internalized.exit
  call void @llvm.lifetime.start.p5(i64 24, ptr addrspace(5) %d) #7
  br i1 %cmp2.i, label %for.body45, label %for.cond.cleanup44

for.cond.cleanup44:                               ; preds = %for.inc75, %if.end41
  br i1 %or.cond.i.i146, label %_ZSt11min_elementIPdET_S1_S1_.internalized.exit, label %while.body.preheader.i.i

while.body.preheader.i.i:                         ; preds = %for.cond.cleanup44
  %__result.0.val.pre.i.i = load double, ptr addrspace(5) %d, align 8, !tbaa !30
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %while.body.preheader.i.i
  %__result.0.val.i.i = phi double [ %6613, %while.body.i.i ], [ %__result.0.val.pre.i.i, %while.body.preheader.i.i ]
  %incdec.ptr4.i.i = phi ptr addrspace(5) [ %incdec.ptr.i.i, %while.body.i.i ], [ %incdec.ptr1.i.i, %while.body.preheader.i.i ]
  %__result.03.i.i = phi ptr [ %spec.select.i.i, %while.body.i.i ], [ %d.ascast, %while.body.preheader.i.i ]
  %6612 = addrspacecast ptr addrspace(5) %incdec.ptr4.i.i to ptr
  %incdec.ptr.val.i.i = load double, ptr addrspace(5) %incdec.ptr4.i.i, align 8, !tbaa !30
  %cmp.i.i.i147 = fcmp olt double %incdec.ptr.val.i.i, %__result.0.val.i.i
  %6613 = select i1 %cmp.i.i.i147, double %incdec.ptr.val.i.i, double %__result.0.val.i.i
  %spec.select.i.i = select i1 %cmp.i.i.i147, ptr %6612, ptr %__result.03.i.i
  %incdec.ptr.i.i = getelementptr inbounds nuw i8, ptr addrspace(5) %incdec.ptr4.i.i, i32 8
  %cmp1.not.i.i = icmp eq ptr addrspace(5) %incdec.ptr.i.i, %add.ptr81
  br i1 %cmp1.not.i.i, label %_ZSt11min_elementIPdET_S1_S1_.internalized.exit.loopexit, label %while.body.i.i, !llvm.loop !43

_ZSt11min_elementIPdET_S1_S1_.internalized.exit.loopexit: ; preds = %while.body.i.i
  %.pre261 = ptrtoint ptr %spec.select.i.i to i64
  br label %_ZSt11min_elementIPdET_S1_S1_.internalized.exit

_ZSt11min_elementIPdET_S1_S1_.internalized.exit:  ; preds = %_ZSt11min_elementIPdET_S1_S1_.internalized.exit.loopexit, %for.cond.cleanup44
  %sub.ptr.lhs.cast.pre-phi = phi i64 [ %.pre261, %_ZSt11min_elementIPdET_S1_S1_.internalized.exit.loopexit ], [ %sub.ptr.rhs.cast, %for.cond.cleanup44 ]
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast.pre-phi, %sub.ptr.rhs.cast
  %sub.ptr.div = lshr exact i64 %sub.ptr.sub, 3
  %6614 = trunc i64 %sub.ptr.div to i32
  %arrayidx85 = getelementptr inbounds [3 x double], ptr addrspace(5) %d, i32 0, i32 %6614
  %6615 = load double, ptr addrspace(5) %arrayidx85, align 8, !tbaa !30
  %this.val38 = load i32, ptr %n_dimension_, align 4, !tbaa !17
  %this.val39 = load ptr, ptr %6593, align 8
  switch i32 %this.val38, label %sw.epilog.i166 [
    i32 1, label %sw.bb.i165
    i32 2, label %sw.bb2.i160
    i32 3, label %sw.bb7.i148
  ]

sw.bb.i165:                                       ; preds = %_ZSt11min_elementIPdET_S1_S1_.internalized.exit
  %6616 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit167

sw.bb2.i160:                                      ; preds = %_ZSt11min_elementIPdET_S1_S1_.internalized.exit
  %6617 = load i32, ptr addrspace(5) %arrayidx13.i153, align 4, !tbaa !31
  %sub4.i162 = add nsw i32 %6617, -1
  %6618 = load i32, ptr %this.val39, align 4, !tbaa !31
  %mul.i163 = mul nsw i32 %sub4.i162, %6618
  %6619 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %add.i164 = add nsw i32 %mul.i163, %6619
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit167

sw.bb7.i148:                                      ; preds = %_ZSt11min_elementIPdET_S1_S1_.internalized.exit
  %6620 = load i32, ptr addrspace(5) %arrayidx8.i149, align 4, !tbaa !31
  %sub9.i150 = add nsw i32 %6620, -1
  %arrayidx.i.i151 = getelementptr inbounds nuw i8, ptr %this.val39, i64 4
  %6621 = load i32, ptr %arrayidx.i.i151, align 4, !tbaa !31
  %mul12.i152 = mul nsw i32 %sub9.i150, %6621
  %6622 = load i32, ptr addrspace(5) %arrayidx13.i153, align 4, !tbaa !31
  %sub14.i154 = add nsw i32 %6622, -1
  %add15.i155 = add nsw i32 %sub14.i154, %mul12.i152
  %6623 = load i32, ptr %this.val39, align 4, !tbaa !31
  %mul18.i156 = mul nsw i32 %add15.i155, %6623
  %6624 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %add20.i157 = add nsw i32 %mul18.i156, %6624
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit167

sw.epilog.i166:                                   ; preds = %_ZSt11min_elementIPdET_S1_S1_.internalized.exit
  unreachable

_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit167: ; preds = %sw.bb7.i148, %sw.bb2.i160, %sw.bb.i165
  %retval.0.in.i158 = phi i32 [ %add20.i157, %sw.bb7.i148 ], [ %add.i164, %sw.bb2.i160 ], [ %6616, %sw.bb.i165 ]
  %this.val.i168 = load i32, ptr %6594, align 8, !tbaa !40
  %cmp.i.i169 = icmp sgt i32 %this.val.i168, 124
  br i1 %cmp.i.i169, label %_ZN6openmc11FilterMatch9push_backEid.internalized.exit177, label %if.then.i170

if.then.i170:                                     ; preds = %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit167
  %div88 = fdiv double %6615, %4
  %retval.0.i159 = add nsw i32 %retval.0.in.i158, -1
  %idxprom.i171 = sext i32 %this.val.i168 to i64
  %arrayidx.i172 = getelementptr inbounds [125 x i32], ptr %match, i64 0, i64 %idxprom.i171
  store i32 %retval.0.i159, ptr %arrayidx.i172, align 4, !tbaa !31
  %6625 = load i32, ptr %6594, align 8, !tbaa !40
  %idxprom3.i174 = sext i32 %6625 to i64
  %arrayidx4.i175 = getelementptr inbounds [125 x double], ptr %weights_.i173, i64 0, i64 %idxprom3.i174
  store double %div88, ptr %arrayidx4.i175, align 8, !tbaa !30
  %inc.i176 = add nsw i32 %6625, 1
  store i32 %inc.i176, ptr %6594, align 8, !tbaa !40
  br label %_ZN6openmc11FilterMatch9push_backEid.internalized.exit177

_ZN6openmc11FilterMatch9push_backEid.internalized.exit177: ; preds = %if.then.i170, %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit167
  call void @llvm.lifetime.start.p5(i64 24, ptr addrspace(5) %b.i178)
  store double %u.sroa.0.0.copyload, ptr addrspace(5) %b.i178, align 8
  store double %u.sroa.16.0.copyload, ptr addrspace(5) %6595, align 8
  store double %u.sroa.24.0.copyload, ptr addrspace(5) %6596, align 8
  %call.i180 = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionmLEd(ptr noundef nonnull align 8 dereferenceable(24) %b1.i179, double noundef %6615) #8
  %retval.sroa.0.0.copyload.i181 = load double, ptr %call.i180, align 8, !tbaa !30
  %retval.sroa.2.0.call.sroa_idx.i182 = getelementptr inbounds nuw i8, ptr %call.i180, i64 8
  %retval.sroa.2.0.copyload.i183 = load double, ptr %retval.sroa.2.0.call.sroa_idx.i182, align 8, !tbaa !30
  %retval.sroa.3.0.call.sroa_idx.i184 = getelementptr inbounds nuw i8, ptr %call.i180, i64 16
  %retval.sroa.3.0.copyload.i185 = load double, ptr %retval.sroa.3.0.call.sroa_idx.i184, align 8, !tbaa !30
  call void @llvm.lifetime.end.p5(i64 24, ptr addrspace(5) %b.i178)
  %call92 = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionpLES0_(ptr noundef nonnull align 8 dereferenceable(24) %r0.ascast, double %retval.sroa.0.0.copyload.i181, double %retval.sroa.2.0.copyload.i183, double %retval.sroa.3.0.copyload.i185) #8
  switch i32 %6614, label %sw.default.i [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit
    i32 1, label %sw.bb2.i192
    i32 2, label %sw.bb3.i189
  ]

sw.bb2.i192:                                      ; preds = %_ZN6openmc11FilterMatch9push_backEid.internalized.exit177
  br label %_ZN6openmc8PositionixEi.internalized.exit

sw.bb3.i189:                                      ; preds = %_ZN6openmc11FilterMatch9push_backEid.internalized.exit177
  br label %_ZN6openmc8PositionixEi.internalized.exit

sw.default.i:                                     ; preds = %_ZN6openmc11FilterMatch9push_backEid.internalized.exit177
  %call.i194 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit

_ZN6openmc8PositionixEi.internalized.exit:        ; preds = %sw.default.i, %sw.bb3.i189, %sw.bb2.i192, %_ZN6openmc11FilterMatch9push_backEid.internalized.exit177
  %retval.0.i191.sroa.speculated = phi double [ %u.sroa.0.0.copyload, %sw.default.i ], [ %u.sroa.24.0.copyload, %sw.bb3.i189 ], [ %u.sroa.16.0.copyload, %sw.bb2.i192 ], [ %u.sroa.0.0.copyload, %_ZN6openmc11FilterMatch9push_backEid.internalized.exit177 ]
  %cmp94 = fcmp ogt double %retval.0.i191.sroa.speculated, 0.000000e+00
  %arrayidx96 = getelementptr inbounds [3 x i32], ptr addrspace(5) %ijk0, i32 0, i32 %6614
  %6626 = load i32, ptr addrspace(5) %arrayidx96, align 4, !tbaa !31
  %. = select i1 %cmp94, i32 1, i32 -1
  %dec = add nsw i32 %6626, %.
  store i32 %dec, ptr addrspace(5) %arrayidx96, align 4, !tbaa !31
  br i1 %cmp2.i, label %for.body105.lr.ph, label %while.cond.critedge

for.body45:                                       ; preds = %for.inc75, %if.end41
  %k.0256 = phi i32 [ %inc76, %for.inc75 ], [ 0, %if.end41 ]
  switch i32 %k.0256, label %sw.default.i200 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit202
    i32 1, label %sw.bb2.i198
    i32 2, label %sw.bb3.i195
  ]

sw.bb2.i198:                                      ; preds = %for.body45
  br label %_ZN6openmc8PositionixEi.internalized.exit202

sw.bb3.i195:                                      ; preds = %for.body45
  br label %_ZN6openmc8PositionixEi.internalized.exit202

sw.default.i200:                                  ; preds = %for.body45
  %call.i201 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit202

_ZN6openmc8PositionixEi.internalized.exit202:     ; preds = %sw.default.i200, %sw.bb3.i195, %sw.bb2.i198, %for.body45
  %retval.0.i197.sroa.speculated = phi double [ %u.sroa.0.0.copyload, %sw.default.i200 ], [ %u.sroa.24.0.copyload, %sw.bb3.i195 ], [ %u.sroa.16.0.copyload, %sw.bb2.i198 ], [ %u.sroa.0.0.copyload, %for.body45 ]
  %6627 = call noundef double @llvm.fabs.f64(double %retval.0.i197.sroa.speculated) #9
  %cmp48 = fcmp olt double %6627, 0x3D06849B86A12B9B
  br i1 %cmp48, label %for.inc75, label %if.else52

if.else52:                                        ; preds = %_ZN6openmc8PositionixEi.internalized.exit202
  switch i32 %k.0256, label %sw.default.i208 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit210
    i32 1, label %sw.bb2.i206
    i32 2, label %sw.bb3.i203
  ]

sw.bb2.i206:                                      ; preds = %if.else52
  br label %_ZN6openmc8PositionixEi.internalized.exit210

sw.bb3.i203:                                      ; preds = %if.else52
  br label %_ZN6openmc8PositionixEi.internalized.exit210

sw.default.i208:                                  ; preds = %if.else52
  %call.i209 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit210

_ZN6openmc8PositionixEi.internalized.exit210:     ; preds = %sw.default.i208, %sw.bb3.i203, %sw.bb2.i206, %if.else52
  %retval.0.i205.sroa.speculated = phi double [ %u.sroa.0.0.copyload, %sw.default.i208 ], [ %u.sroa.24.0.copyload, %sw.bb3.i203 ], [ %u.sroa.16.0.copyload, %sw.bb2.i206 ], [ %u.sroa.0.0.copyload, %if.else52 ]
  %cmp54 = fcmp ogt double %retval.0.i205.sroa.speculated, 0.000000e+00
  %this.val40 = load ptr, ptr %6591, align 8, !tbaa !29
  %this.val41 = load ptr, ptr %6592, align 8, !tbaa !29
  %conv.i = zext nneg i32 %k.0256 to i64
  %arrayidx.i.i211 = getelementptr inbounds nuw double, ptr %this.val40, i64 %conv.i
  %6628 = load double, ptr %arrayidx.i.i211, align 8, !tbaa !30
  %arrayidx.i212 = getelementptr inbounds nuw i32, ptr addrspace(5) %ijk0, i32 %k.0256
  %6629 = load i32, ptr addrspace(5) %arrayidx.i212, align 4, !tbaa !31
  br i1 %cmp54, label %if.then55, label %if.else63

if.then55:                                        ; preds = %_ZN6openmc8PositionixEi.internalized.exit210
  %conv2.i = sitofp i32 %6629 to double
  %arrayidx.i1.i = getelementptr inbounds nuw double, ptr %this.val41, i64 %conv.i
  %6630 = load double, ptr %arrayidx.i1.i, align 8, !tbaa !30
  %6631 = call noundef double @llvm.fmuladd.f64(double %conv2.i, double %6630, double %6628) #9
  switch i32 %k.0256, label %sw.default.i218 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit220
    i32 1, label %sw.bb2.i216
    i32 2, label %sw.bb3.i213
  ]

sw.bb2.i216:                                      ; preds = %if.then55
  br label %_ZN6openmc8PositionixEi.internalized.exit220

sw.bb3.i213:                                      ; preds = %if.then55
  br label %_ZN6openmc8PositionixEi.internalized.exit220

sw.default.i218:                                  ; preds = %if.then55
  %call.i219 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit220

_ZN6openmc8PositionixEi.internalized.exit220:     ; preds = %sw.default.i218, %sw.bb3.i213, %sw.bb2.i216, %if.then55
  %retval.0.i215 = phi ptr addrspace(5) [ %r0, %sw.default.i218 ], [ %10, %sw.bb3.i213 ], [ %9, %sw.bb2.i216 ], [ %r0, %if.then55 ]
  %6632 = load double, ptr addrspace(5) %retval.0.i215, align 8, !tbaa !30
  %sub = fsub double %6631, %6632
  switch i32 %k.0256, label %sw.default.i226 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit228
    i32 1, label %sw.bb2.i224
    i32 2, label %sw.bb3.i221
  ]

sw.bb2.i224:                                      ; preds = %_ZN6openmc8PositionixEi.internalized.exit220
  br label %_ZN6openmc8PositionixEi.internalized.exit228

sw.bb3.i221:                                      ; preds = %_ZN6openmc8PositionixEi.internalized.exit220
  br label %_ZN6openmc8PositionixEi.internalized.exit228

sw.default.i226:                                  ; preds = %_ZN6openmc8PositionixEi.internalized.exit220
  %call.i227 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit228

_ZN6openmc8PositionixEi.internalized.exit228:     ; preds = %sw.default.i226, %sw.bb3.i221, %sw.bb2.i224, %_ZN6openmc8PositionixEi.internalized.exit220
  %retval.0.i223.sroa.speculated = phi double [ %u.sroa.0.0.copyload, %sw.default.i226 ], [ %u.sroa.24.0.copyload, %sw.bb3.i221 ], [ %u.sroa.16.0.copyload, %sw.bb2.i224 ], [ %u.sroa.0.0.copyload, %_ZN6openmc8PositionixEi.internalized.exit220 ]
  %div60 = fdiv double %sub, %retval.0.i223.sroa.speculated
  br label %for.inc75

if.else63:                                        ; preds = %_ZN6openmc8PositionixEi.internalized.exit210
  %sub.i = add nsw i32 %6629, -1
  %conv2.i232 = sitofp i32 %sub.i to double
  %arrayidx.i1.i233 = getelementptr inbounds nuw double, ptr %this.val41, i64 %conv.i
  %6633 = load double, ptr %arrayidx.i1.i233, align 8, !tbaa !30
  %6634 = call noundef double @llvm.fmuladd.f64(double %conv2.i232, double %6633, double %6628) #9
  switch i32 %k.0256, label %sw.default.i239 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit241
    i32 1, label %sw.bb2.i237
    i32 2, label %sw.bb3.i234
  ]

sw.bb2.i237:                                      ; preds = %if.else63
  br label %_ZN6openmc8PositionixEi.internalized.exit241

sw.bb3.i234:                                      ; preds = %if.else63
  br label %_ZN6openmc8PositionixEi.internalized.exit241

sw.default.i239:                                  ; preds = %if.else63
  %call.i240 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit241

_ZN6openmc8PositionixEi.internalized.exit241:     ; preds = %sw.default.i239, %sw.bb3.i234, %sw.bb2.i237, %if.else63
  %retval.0.i236 = phi ptr addrspace(5) [ %r0, %sw.default.i239 ], [ %10, %sw.bb3.i234 ], [ %9, %sw.bb2.i237 ], [ %r0, %if.else63 ]
  %6635 = load double, ptr addrspace(5) %retval.0.i236, align 8, !tbaa !30
  %sub68 = fsub double %6634, %6635
  switch i32 %k.0256, label %sw.default.i247 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit249
    i32 1, label %sw.bb2.i245
    i32 2, label %sw.bb3.i242
  ]

sw.bb2.i245:                                      ; preds = %_ZN6openmc8PositionixEi.internalized.exit241
  br label %_ZN6openmc8PositionixEi.internalized.exit249

sw.bb3.i242:                                      ; preds = %_ZN6openmc8PositionixEi.internalized.exit241
  br label %_ZN6openmc8PositionixEi.internalized.exit249

sw.default.i247:                                  ; preds = %_ZN6openmc8PositionixEi.internalized.exit241
  %call.i248 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit249

_ZN6openmc8PositionixEi.internalized.exit249:     ; preds = %sw.default.i247, %sw.bb3.i242, %sw.bb2.i245, %_ZN6openmc8PositionixEi.internalized.exit241
  %retval.0.i244.sroa.speculated = phi double [ %u.sroa.0.0.copyload, %sw.default.i247 ], [ %u.sroa.24.0.copyload, %sw.bb3.i242 ], [ %u.sroa.16.0.copyload, %sw.bb2.i245 ], [ %u.sroa.0.0.copyload, %_ZN6openmc8PositionixEi.internalized.exit241 ]
  %div70 = fdiv double %sub68, %retval.0.i244.sroa.speculated
  br label %for.inc75

for.inc75:                                        ; preds = %_ZN6openmc8PositionixEi.internalized.exit249, %_ZN6openmc8PositionixEi.internalized.exit228, %_ZN6openmc8PositionixEi.internalized.exit202
  %.sink = phi double [ %div70, %_ZN6openmc8PositionixEi.internalized.exit249 ], [ %div60, %_ZN6openmc8PositionixEi.internalized.exit228 ], [ 0x7FEFFFFFFFFFFFFF, %_ZN6openmc8PositionixEi.internalized.exit202 ]
  %arrayidx51 = getelementptr inbounds nuw [3 x double], ptr addrspace(5) %d, i32 0, i32 %k.0256
  store double %.sink, ptr addrspace(5) %arrayidx51, align 8, !tbaa !30
  %inc76 = add nuw nsw i32 %k.0256, 1
  %exitcond259.not = icmp eq i32 %inc76, %15
  br i1 %exitcond259.not, label %for.cond.cleanup44, label %for.body45, !llvm.loop !44

for.body105.lr.ph:                                ; preds = %_ZN6openmc8PositionixEi.internalized.exit
  %shape_.val = load ptr, ptr %6593, align 8
  br label %for.body105

for.cond102:                                      ; preds = %lor.lhs.false
  %inc117 = add nuw nsw i32 %i101.0258, 1
  %exitcond260.not = icmp eq i32 %inc117, %15
  br i1 %exitcond260.not, label %while.cond.critedge, label %for.body105, !llvm.loop !45

for.body105:                                      ; preds = %for.cond102, %for.body105.lr.ph
  %i101.0258 = phi i32 [ 0, %for.body105.lr.ph ], [ %inc117, %for.cond102 ]
  %arrayidx107 = getelementptr inbounds nuw [3 x i32], ptr addrspace(5) %ijk0, i32 0, i32 %i101.0258
  %6636 = load i32, ptr addrspace(5) %arrayidx107, align 4, !tbaa !31
  %cmp108 = icmp slt i32 %6636, 1
  br i1 %cmp108, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body105
  %idxprom106 = zext nneg i32 %i101.0258 to i64
  %arrayidx.i250 = getelementptr inbounds nuw i32, ptr %shape_.val, i64 %idxprom106
  %6637 = load i32, ptr %arrayidx.i250, align 4, !tbaa !31
  %cmp113 = icmp sgt i32 %6636, %6637
  br i1 %cmp113, label %cleanup, label %for.cond102

cleanup:                                          ; preds = %lor.lhs.false, %for.body105
  call void @llvm.lifetime.end.p5(i64 24, ptr addrspace(5) %d) #7
  br label %cleanup126

cleanup126:                                       ; preds = %cleanup, %if.then.i142, %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit, %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit
  call void @llvm.lifetime.end.p5(i64 12, ptr addrspace(5) %ijk1) #7
  call void @llvm.lifetime.end.p5(i64 12, ptr addrspace(5) %ijk0) #7
  call void @llvm.lifetime.end.p5(i64 24, ptr addrspace(5) %r0) #7
  ret void
}

; Function Attrs: convergent
declare noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionpLES0_(ptr noundef nonnull align 8 dereferenceable(24), double, double, double) local_unnamed_addr #4

; Function Attrs: convergent
declare noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionmIES0_(ptr noundef nonnull align 8 dereferenceable(24), double, double, double) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.sqrt.f64(double) #2

; Function Attrs: convergent
declare noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionmLEd(ptr noundef nonnull align 8 dereferenceable(24), double noundef) local_unnamed_addr #4

; Function Attrs: convergent nounwind
declare i32 @memcmp(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #2

; Function Attrs: convergent mustprogress nounwind
define hidden void @_ZNK6openmc4Mesh20surface_bins_crossedERKNS_8ParticleERNS_11FilterMatchE(ptr noundef nonnull readonly align 8 captures(none) dereferenceable(112) %this, ptr noundef nonnull readonly align 8 captures(none) dereferenceable(2728) %p, ptr noundef nonnull align 8 captures(none) dereferenceable(1513) %match) local_unnamed_addr #3 align 2 {
entry:
  %b.i = alloca %"struct.openmc::Position", align 8, addrspace(5)
  %r0 = alloca %"struct.openmc::Position", align 8, addrspace(5)
  %ijk0 = alloca %"struct.std::array.0", align 4, addrspace(5)
  %ijk1 = alloca %"struct.std::array.0", align 4, addrspace(5)
  %xyz_cross.sroa.0 = alloca double, align 8, addrspace(5)
  %xyz_cross.sroa.13 = alloca double, align 8, addrspace(5)
  %xyz_cross.sroa.19 = alloca double, align 8, addrspace(5)
  %d.sroa.0 = alloca double, align 8, addrspace(5)
  %d.sroa.11 = alloca double, align 8, addrspace(5)
  %d.sroa.16 = alloca double, align 8, addrspace(5)
  %r0.ascast = addrspacecast ptr addrspace(5) %r0 to ptr
  call void @llvm.lifetime.start.p5(i64 24, ptr addrspace(5) %r0) #7
  %r_last_current_ = getelementptr inbounds nuw i8, ptr %p, i64 1440
  call void @llvm.memcpy.p5.p0.i64(ptr addrspace(5) noundef align 8 dereferenceable(24) %r0, ptr noundef nonnull align 8 dereferenceable(24) %r_last_current_, i64 24, i1 false), !tbaa.struct !46
  %coord_.i = getelementptr inbounds nuw i8, ptr %p, i64 888
  %r1.sroa.0.0.copyload = load double, ptr %coord_.i, align 8, !tbaa !30
  %r1.sroa.5.0.call.sroa_idx = getelementptr inbounds nuw i8, ptr %p, i64 896
  %r1.sroa.5.0.copyload = load double, ptr %r1.sroa.5.0.call.sroa_idx, align 8, !tbaa !30
  %r1.sroa.7.0.call.sroa_idx = getelementptr inbounds nuw i8, ptr %p, i64 904
  %r1.sroa.7.0.copyload = load double, ptr %r1.sroa.7.0.call.sroa_idx, align 8, !tbaa !30
  %u.i = getelementptr inbounds nuw i8, ptr %p, i64 912
  %u.sroa.0.0.copyload = load double, ptr %u.i, align 8, !tbaa !30
  %u.sroa.12.0.u.i.sroa_idx = getelementptr inbounds nuw i8, ptr %p, i64 920
  %u.sroa.12.0.copyload = load double, ptr %u.sroa.12.0.u.i.sroa_idx, align 8, !tbaa !30
  %u.sroa.17.0.u.i.sroa_idx = getelementptr inbounds nuw i8, ptr %p, i64 928
  %u.sroa.17.0.copyload = load double, ptr %u.sroa.17.0.u.i.sroa_idx, align 8, !tbaa !30
  %n_dimension_ = getelementptr inbounds nuw i8, ptr %this, i64 4
  %0 = load i32, ptr %n_dimension_, align 4, !tbaa !17
  call void @llvm.lifetime.start.p5(i64 12, ptr addrspace(5) %ijk0) #7
  call void @llvm.lifetime.start.p5(i64 12, ptr addrspace(5) %ijk1) #7
  %agg.tmp.sroa.0.0.copyload = load double, ptr addrspace(5) %r0, align 8, !tbaa !30
  %agg.tmp.sroa.2.0.r0.ascast.sroa_idx = getelementptr inbounds nuw i8, ptr addrspace(5) %r0, i32 8
  %agg.tmp.sroa.2.0.copyload = load double, ptr addrspace(5) %agg.tmp.sroa.2.0.r0.ascast.sroa_idx, align 8, !tbaa !30
  %agg.tmp.sroa.3.0.r0.ascast.sroa_idx = getelementptr inbounds nuw i8, ptr addrspace(5) %r0, i32 16
  %agg.tmp.sroa.3.0.copyload = load double, ptr addrspace(5) %agg.tmp.sroa.3.0.r0.ascast.sroa_idx, align 8, !tbaa !30
  %cmp2.i = icmp sgt i32 %0, 0
  br i1 %cmp2.i, label %for.body.lr.ph.i, label %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %1 = getelementptr inbounds nuw i8, ptr %this, i64 8
  %2 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %shape_.i = getelementptr inbounds nuw i8, ptr %this, i64 56
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %start_in_mesh.0.off0 = phi i1 [ true, %for.body.lr.ph.i ], [ %start_in_mesh.1.off0, %for.inc.i ]
  %i.03.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  switch i32 %i.03.i, label %sw.default.i.i [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit.i
    i32 1, label %sw.bb2.i.i
    i32 2, label %sw.bb3.i.i
  ]

sw.bb2.i.i:                                       ; preds = %for.body.i
  br label %_ZN6openmc8PositionixEi.internalized.exit.i

sw.bb3.i.i:                                       ; preds = %for.body.i
  br label %_ZN6openmc8PositionixEi.internalized.exit.i

sw.default.i.i:                                   ; preds = %for.body.i
  %call.i.i = tail call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit.i

_ZN6openmc8PositionixEi.internalized.exit.i:      ; preds = %sw.default.i.i, %sw.bb3.i.i, %sw.bb2.i.i, %for.body.i
  %retval.0.i.sroa.speculated.i = phi double [ %agg.tmp.sroa.0.0.copyload, %sw.default.i.i ], [ %agg.tmp.sroa.3.0.copyload, %sw.bb3.i.i ], [ %agg.tmp.sroa.2.0.copyload, %sw.bb2.i.i ], [ %agg.tmp.sroa.0.0.copyload, %for.body.i ]
  %this.val.i = load ptr, ptr %1, align 8, !tbaa !29
  %this.val1.i = load ptr, ptr %2, align 8, !tbaa !29
  %conv.i.i = zext nneg i32 %i.03.i to i64
  %arrayidx.i.i.i = getelementptr inbounds nuw double, ptr %this.val.i, i64 %conv.i.i
  %3 = load double, ptr %arrayidx.i.i.i, align 8, !tbaa !30
  %sub.i.i = fsub double %retval.0.i.sroa.speculated.i, %3
  %arrayidx.i1.i.i = getelementptr inbounds nuw double, ptr %this.val1.i, i64 %conv.i.i
  %4 = load double, ptr %arrayidx.i1.i.i, align 8, !tbaa !30
  %div.i.i = fdiv double %sub.i.i, %4
  %5 = tail call noundef double @llvm.ceil.f64(double %div.i.i) #9
  %conv5.i.i = fptosi double %5 to i32
  %arrayidx.i = getelementptr inbounds nuw i32, ptr addrspace(5) %ijk0, i32 %i.03.i
  store i32 %conv5.i.i, ptr addrspace(5) %arrayidx.i, align 4, !tbaa !31
  %cmp6.i = icmp slt i32 %conv5.i.i, 1
  br i1 %cmp6.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %_ZN6openmc8PositionixEi.internalized.exit.i
  %shape_.val.i = load ptr, ptr %shape_.i, align 8, !tbaa !32
  %arrayidx.i.i = getelementptr inbounds nuw i32, ptr %shape_.val.i, i64 %conv.i.i
  %6 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !31
  %cmp10.i = icmp slt i32 %6, %conv5.i.i
  br i1 %cmp10.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %lor.lhs.false.i, %_ZN6openmc8PositionixEi.internalized.exit.i
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %lor.lhs.false.i
  %start_in_mesh.1.off0 = phi i1 [ false, %if.then.i ], [ %start_in_mesh.0.off0, %lor.lhs.false.i ]
  %inc.i = add nuw nsw i32 %i.03.i, 1
  %7 = load i32, ptr %n_dimension_, align 4, !tbaa !17
  %cmp.i = icmp slt i32 %inc.i, %7
  br i1 %cmp.i, label %for.body.i, label %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit, !llvm.loop !33

_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit: ; preds = %for.inc.i, %entry
  %8 = phi i32 [ %0, %entry ], [ %7, %for.inc.i ]
  %start_in_mesh.2.off0 = phi i1 [ true, %entry ], [ %start_in_mesh.1.off0, %for.inc.i ]
  %cmp2.i76 = icmp sgt i32 %8, 0
  br i1 %cmp2.i76, label %for.body.lr.ph.i77, label %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit105

for.body.lr.ph.i77:                               ; preds = %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit
  %9 = getelementptr inbounds nuw i8, ptr %this, i64 8
  %10 = getelementptr inbounds nuw i8, ptr %this, i64 88
  br label %for.body.i79

for.body.i79:                                     ; preds = %_ZN6openmc8PositionixEi.internalized.exit.i82, %for.body.lr.ph.i77
  %11 = phi i32 [ %8, %for.body.lr.ph.i77 ], [ %12, %_ZN6openmc8PositionixEi.internalized.exit.i82 ]
  %i.03.i80 = phi i32 [ 0, %for.body.lr.ph.i77 ], [ %inc.i99, %_ZN6openmc8PositionixEi.internalized.exit.i82 ]
  switch i32 %i.03.i80, label %sw.default.i.i103 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit.i82
    i32 1, label %sw.bb2.i.i102
    i32 2, label %sw.bb3.i.i81
  ]

sw.bb2.i.i102:                                    ; preds = %for.body.i79
  br label %_ZN6openmc8PositionixEi.internalized.exit.i82

sw.bb3.i.i81:                                     ; preds = %for.body.i79
  br label %_ZN6openmc8PositionixEi.internalized.exit.i82

sw.default.i.i103:                                ; preds = %for.body.i79
  %call.i.i104 = tail call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  %.pre = load i32, ptr %n_dimension_, align 4, !tbaa !17
  br label %_ZN6openmc8PositionixEi.internalized.exit.i82

_ZN6openmc8PositionixEi.internalized.exit.i82:    ; preds = %sw.default.i.i103, %sw.bb3.i.i81, %sw.bb2.i.i102, %for.body.i79
  %12 = phi i32 [ %.pre, %sw.default.i.i103 ], [ %11, %sw.bb3.i.i81 ], [ %11, %sw.bb2.i.i102 ], [ %11, %for.body.i79 ]
  %retval.0.i.sroa.speculated.i83 = phi double [ %r1.sroa.0.0.copyload, %sw.default.i.i103 ], [ %r1.sroa.7.0.copyload, %sw.bb3.i.i81 ], [ %r1.sroa.5.0.copyload, %sw.bb2.i.i102 ], [ %r1.sroa.0.0.copyload, %for.body.i79 ]
  %this.val.i84 = load ptr, ptr %9, align 8, !tbaa !29
  %this.val1.i85 = load ptr, ptr %10, align 8, !tbaa !29
  %conv.i.i86 = zext nneg i32 %i.03.i80 to i64
  %arrayidx.i.i.i87 = getelementptr inbounds nuw double, ptr %this.val.i84, i64 %conv.i.i86
  %13 = load double, ptr %arrayidx.i.i.i87, align 8, !tbaa !30
  %sub.i.i88 = fsub double %retval.0.i.sroa.speculated.i83, %13
  %arrayidx.i1.i.i89 = getelementptr inbounds nuw double, ptr %this.val1.i85, i64 %conv.i.i86
  %14 = load double, ptr %arrayidx.i1.i.i89, align 8, !tbaa !30
  %div.i.i90 = fdiv double %sub.i.i88, %14
  %15 = tail call noundef double @llvm.ceil.f64(double %div.i.i90) #9
  %conv5.i.i91 = fptosi double %15 to i32
  %arrayidx.i92 = getelementptr inbounds nuw i32, ptr addrspace(5) %ijk1, i32 %i.03.i80
  store i32 %conv5.i.i91, ptr addrspace(5) %arrayidx.i92, align 4, !tbaa !31
  %inc.i99 = add nuw nsw i32 %i.03.i80, 1
  %cmp.i100 = icmp slt i32 %inc.i99, %12
  br i1 %cmp.i100, label %for.body.i79, label %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit105, !llvm.loop !33

_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit105: ; preds = %_ZN6openmc8PositionixEi.internalized.exit.i82, %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit
  %16 = phi i32 [ %8, %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit ], [ %12, %_ZN6openmc8PositionixEi.internalized.exit.i82 ]
  br i1 %start_in_mesh.2.off0, label %if.end11, label %if.then

if.then:                                          ; preds = %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit105
  %lower_left_.i.i = getelementptr inbounds nuw i8, ptr %this, i64 8
  %lower_left_.val.i.i = load ptr, ptr %lower_left_.i.i, align 8, !tbaa !29
  %17 = load double, ptr %lower_left_.val.i.i, align 8, !tbaa !30
  switch i32 %16, label %sw.epilog.i [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb3.i
    i32 3, label %sw.bb6.i
  ]

sw.bb.i:                                          ; preds = %if.then
  %upper_right_.i.i = getelementptr inbounds nuw i8, ptr %this, i64 32
  %upper_right_.val.i.i = load ptr, ptr %upper_right_.i.i, align 8, !tbaa !29
  %18 = load double, ptr %upper_right_.val.i.i, align 8, !tbaa !30
  %cmp.i.i = fcmp olt double %agg.tmp.sroa.0.0.copyload, %17
  %cmp7.i.i = fcmp ogt double %r1.sroa.0.0.copyload, %17
  %or.cond.i.i = select i1 %cmp.i.i, i1 %cmp7.i.i, i1 false
  br i1 %or.cond.i.i, label %if.then.i.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %sw.bb.i
  %cmp8.i.i = fcmp ogt double %agg.tmp.sroa.0.0.copyload, %17
  %cmp10.i.i = fcmp olt double %r1.sroa.0.0.copyload, %17
  %or.cond3.i.i = select i1 %cmp8.i.i, i1 %cmp10.i.i, i1 false
  br i1 %or.cond3.i.i, label %if.then.i.i, label %if.end21.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i, %sw.bb.i
  %sub.i.i108 = fsub double %17, %agg.tmp.sroa.0.0.copyload
  %sub11.i.i = fsub double %r1.sroa.5.0.copyload, %agg.tmp.sroa.2.0.copyload
  %mul.i.i = fmul double %sub11.i.i, %sub.i.i108
  %sub12.i.i = fsub double %r1.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %div.i.i109 = fdiv double %mul.i.i, %sub12.i.i
  %add.i.i = fadd double %agg.tmp.sroa.2.0.copyload, %div.i.i109
  %sub14.i.i = fsub double %r1.sroa.7.0.copyload, %agg.tmp.sroa.3.0.copyload
  %mul15.i.i = fmul double %sub14.i.i, %sub.i.i108
  %div17.i.i = fdiv double %mul15.i.i, %sub12.i.i
  %add18.i.i = fadd double %agg.tmp.sroa.3.0.copyload, %div17.i.i
  %19 = fcmp oeq double %sub.i.i108, 1.000000e+00
  %20 = select i1 %19, double 1.000000e+00, double 2.000000e+00
  %21 = tail call double @llvm.fabs.f64(double %sub.i.i108) #9
  %22 = tail call double @llvm.amdgcn.frexp.mant.f64(double %21)
  %23 = fcmp olt double %22, 0x3FE5555555555555
  %.neg.i.i.i.i.i.i = sext i1 %23 to i32
  %24 = select i1 %23, double 2.000000e+00, double 1.000000e+00
  %25 = fmul double %22, %24
  %26 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %21)
  %27 = add i32 %26, %.neg.i.i.i.i.i.i
  %28 = fadd double %25, -1.000000e+00
  %29 = fadd double %25, 1.000000e+00
  %30 = fadd double %29, -1.000000e+00
  %31 = fsub double %25, %30
  %32 = tail call double @llvm.amdgcn.rcp.f64(double %29)
  %33 = fneg double %29
  %34 = tail call double @llvm.fma.f64(double %33, double %32, double 1.000000e+00)
  %35 = tail call double @llvm.fma.f64(double %34, double %32, double %32)
  %36 = tail call double @llvm.fma.f64(double %33, double %35, double 1.000000e+00)
  %37 = tail call double @llvm.fma.f64(double %36, double %35, double %35)
  %38 = fmul double %28, %37
  %39 = fmul double %29, %38
  %40 = fneg double %39
  %41 = tail call double @llvm.fma.f64(double %38, double %29, double %40)
  %42 = tail call double @llvm.fma.f64(double %38, double %31, double %41)
  %43 = fadd double %39, %42
  %44 = fsub double %43, %39
  %45 = fsub double %28, %43
  %46 = fsub double %28, %45
  %47 = fsub double %46, %43
  %48 = fsub double %44, %42
  %49 = fadd double %48, %47
  %50 = fadd double %45, %49
  %51 = fmul double %37, %50
  %52 = fadd double %38, %51
  %53 = fsub double %52, %38
  %54 = fsub double %51, %53
  %55 = fmul double %52, %52
  %56 = fneg double %55
  %57 = tail call double @llvm.fma.f64(double %52, double %52, double %56)
  %58 = fmul double %54, 2.000000e+00
  %59 = tail call double @llvm.fma.f64(double %52, double %58, double %57)
  %60 = fadd double %55, %59
  %61 = fsub double %60, %55
  %62 = fsub double %59, %61
  %63 = tail call double @llvm.fma.f64(double %60, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %64 = tail call double @llvm.fma.f64(double %60, double %63, double 0x3FBE25E43ABE935A)
  %65 = tail call double @llvm.fma.f64(double %60, double %64, double 0x3FC110EF47E6C9C2)
  %66 = tail call double @llvm.fma.f64(double %60, double %65, double 0x3FC3B13BCFA74449)
  %67 = tail call double @llvm.fma.f64(double %60, double %66, double 0x3FC745D171BF3C30)
  %68 = tail call double @llvm.fma.f64(double %60, double %67, double 0x3FCC71C71C7792CE)
  %69 = tail call double @llvm.fma.f64(double %60, double %68, double 0x3FD24924924920DA)
  %70 = tail call double @llvm.fma.f64(double %60, double %69, double 0x3FD999999999999C)
  %71 = sitofp i32 %27 to double
  %72 = fmul double %71, 0x3FE62E42FEFA39EF
  %73 = fneg double %72
  %74 = tail call double @llvm.fma.f64(double %71, double 0x3FE62E42FEFA39EF, double %73)
  %75 = tail call double @llvm.fma.f64(double %71, double 0x3C7ABC9E3B39803F, double %74)
  %76 = fadd double %72, %75
  %77 = fsub double %76, %72
  %78 = fsub double %75, %77
  %79 = tail call double @llvm.ldexp.f64.i32(double %52, i32 1)
  %80 = tail call double @llvm.ldexp.f64.i32(double %54, i32 1)
  %81 = fmul double %52, %60
  %82 = fneg double %81
  %83 = tail call double @llvm.fma.f64(double %60, double %52, double %82)
  %84 = tail call double @llvm.fma.f64(double %60, double %54, double %83)
  %85 = tail call double @llvm.fma.f64(double %62, double %52, double %84)
  %86 = fadd double %81, %85
  %87 = fsub double %86, %81
  %88 = fsub double %85, %87
  %89 = fmul double %60, %70
  %90 = fneg double %89
  %91 = tail call double @llvm.fma.f64(double %60, double %70, double %90)
  %92 = tail call double @llvm.fma.f64(double %62, double %70, double %91)
  %93 = fadd double %89, %92
  %94 = fsub double %93, %89
  %95 = fsub double %92, %94
  %96 = fadd double %93, 0x3FE5555555555555
  %97 = fadd double %96, 0xBFE5555555555555
  %98 = fsub double %93, %97
  %99 = fadd double %95, 0x3C8543B0D5DF274D
  %100 = fadd double %99, %98
  %101 = fadd double %96, %100
  %102 = fsub double %96, %101
  %103 = fadd double %100, %102
  %104 = fmul double %86, %101
  %105 = fneg double %104
  %106 = tail call double @llvm.fma.f64(double %86, double %101, double %105)
  %107 = tail call double @llvm.fma.f64(double %86, double %103, double %106)
  %108 = tail call double @llvm.fma.f64(double %88, double %101, double %107)
  %109 = fadd double %104, %108
  %110 = fsub double %109, %104
  %111 = fsub double %108, %110
  %112 = fadd double %79, %109
  %113 = fsub double %112, %79
  %114 = fsub double %109, %113
  %115 = fadd double %80, %111
  %116 = fadd double %115, %114
  %117 = fadd double %112, %116
  %118 = fsub double %117, %112
  %119 = fsub double %116, %118
  %120 = fadd double %76, %117
  %121 = fsub double %120, %76
  %122 = fsub double %120, %121
  %123 = fsub double %76, %122
  %124 = fsub double %117, %121
  %125 = fadd double %124, %123
  %126 = fadd double %78, %119
  %127 = fsub double %126, %78
  %128 = fsub double %126, %127
  %129 = fsub double %78, %128
  %130 = fsub double %119, %127
  %131 = fadd double %130, %129
  %132 = fadd double %126, %125
  %133 = fadd double %120, %132
  %134 = fsub double %133, %120
  %135 = fsub double %132, %134
  %136 = fadd double %131, %135
  %137 = fadd double %133, %136
  %138 = fsub double %137, %133
  %139 = fsub double %136, %138
  %140 = fmul double %20, %137
  %141 = fneg double %140
  %142 = tail call double @llvm.fma.f64(double %20, double %137, double %141) #9
  %143 = tail call double @llvm.fma.f64(double %20, double %139, double %142) #9
  %144 = fadd double %140, %143
  %145 = fsub double %144, %140
  %146 = fsub double %143, %145
  %147 = tail call double @llvm.fabs.f64(double %140) #9
  %148 = fcmp oeq double %147, 0x7FF0000000000000
  %149 = select i1 %148, double %140, double %144
  %150 = tail call double @llvm.fabs.f64(double %149) #9
  %151 = fcmp oeq double %150, 0x7FF0000000000000
  %152 = select i1 %151, double 0.000000e+00, double %146
  %153 = fmul double %149, 0x3FF71547652B82FE
  %154 = tail call double @llvm.rint.f64(double %153)
  %155 = fneg double %154
  %156 = tail call double @llvm.fma.f64(double %155, double 0x3FE62E42FEFA39EF, double %149)
  %157 = tail call double @llvm.fma.f64(double %155, double 0x3C7ABC9E3B39803F, double %156)
  %158 = tail call double @llvm.fma.f64(double %157, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %159 = tail call double @llvm.fma.f64(double %157, double %158, double 0x3EC71DEE623FDE64)
  %160 = tail call double @llvm.fma.f64(double %157, double %159, double 0x3EFA01997C89E6B0)
  %161 = tail call double @llvm.fma.f64(double %157, double %160, double 0x3F2A01A014761F6E)
  %162 = tail call double @llvm.fma.f64(double %157, double %161, double 0x3F56C16C1852B7B0)
  %163 = tail call double @llvm.fma.f64(double %157, double %162, double 0x3F81111111122322)
  %164 = tail call double @llvm.fma.f64(double %157, double %163, double 0x3FA55555555502A1)
  %165 = tail call double @llvm.fma.f64(double %157, double %164, double 0x3FC5555555555511)
  %166 = tail call double @llvm.fma.f64(double %157, double %165, double 0x3FE000000000000B)
  %167 = tail call double @llvm.fma.f64(double %157, double %166, double 1.000000e+00)
  %168 = tail call double @llvm.fma.f64(double %157, double %167, double 1.000000e+00)
  %169 = fptosi double %154 to i32
  %170 = tail call double @llvm.ldexp.f64.i32(double %168, i32 %169)
  %171 = fcmp ogt double %149, 1.024000e+03
  %172 = select i1 %171, double 0x7FF0000000000000, double %170
  %173 = fcmp olt double %149, -1.075000e+03
  %174 = select i1 %173, double 0.000000e+00, double %172
  %175 = tail call double @llvm.fma.f64(double %174, double %152, double %174) #9
  %176 = tail call double @llvm.fabs.f64(double %174) #9
  %177 = fcmp oeq double %176, 0x7FF0000000000000
  %178 = select i1 %177, double %174, double %175
  %179 = tail call double @llvm.trunc.f64(double %20) #9
  %180 = fcmp oeq double %179, %20
  %181 = fmul double %20, 5.000000e-01
  %182 = tail call double @llvm.trunc.f64(double %181) #9
  %183 = fcmp une double %182, %181
  %184 = and i1 %180, %183
  %185 = select i1 %184, double %sub.i.i108, double 1.000000e+00
  %186 = tail call double @llvm.copysign.f64(double %178, double %185) #9
  %187 = fcmp olt double %sub.i.i108, 0.000000e+00
  %188 = select i1 %180, double %186, double 0x7FF8000000000000
  %189 = select i1 %187, double %188, double %186
  %190 = fcmp oeq double %21, 0x7FF0000000000000
  %191 = fcmp oeq double %sub.i.i108, 0.000000e+00
  %192 = or i1 %191, %190
  %193 = select i1 %191, double 0.000000e+00, double 0x7FF0000000000000
  %194 = select i1 %184, double %sub.i.i108, double 0.000000e+00
  %195 = tail call double @llvm.copysign.f64(double %193, double %194) #9
  %196 = select i1 %192, double %195, double %189
  %197 = fcmp uno double %sub.i.i108, 0.000000e+00
  %198 = select i1 %197, double 0x7FF8000000000000, double %196
  %sub1.i.i.i = fsub double %add.i.i, %add.i.i
  %199 = fcmp oeq double %sub1.i.i.i, 1.000000e+00
  %200 = select i1 %199, double 1.000000e+00, double 2.000000e+00
  %201 = tail call double @llvm.fabs.f64(double %sub1.i.i.i) #9
  %202 = tail call double @llvm.amdgcn.frexp.mant.f64(double %201)
  %203 = fcmp olt double %202, 0x3FE5555555555555
  %.neg.i.i.i1.i.i.i = sext i1 %203 to i32
  %204 = select i1 %203, double 2.000000e+00, double 1.000000e+00
  %205 = fmul double %202, %204
  %206 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %201)
  %207 = add i32 %206, %.neg.i.i.i1.i.i.i
  %208 = fadd double %205, -1.000000e+00
  %209 = fadd double %205, 1.000000e+00
  %210 = fadd double %209, -1.000000e+00
  %211 = fsub double %205, %210
  %212 = tail call double @llvm.amdgcn.rcp.f64(double %209)
  %213 = fneg double %209
  %214 = tail call double @llvm.fma.f64(double %213, double %212, double 1.000000e+00)
  %215 = tail call double @llvm.fma.f64(double %214, double %212, double %212)
  %216 = tail call double @llvm.fma.f64(double %213, double %215, double 1.000000e+00)
  %217 = tail call double @llvm.fma.f64(double %216, double %215, double %215)
  %218 = fmul double %208, %217
  %219 = fmul double %209, %218
  %220 = fneg double %219
  %221 = tail call double @llvm.fma.f64(double %218, double %209, double %220)
  %222 = tail call double @llvm.fma.f64(double %218, double %211, double %221)
  %223 = fadd double %219, %222
  %224 = fsub double %223, %219
  %225 = fsub double %208, %223
  %226 = fsub double %208, %225
  %227 = fsub double %226, %223
  %228 = fsub double %224, %222
  %229 = fadd double %228, %227
  %230 = fadd double %225, %229
  %231 = fmul double %217, %230
  %232 = fadd double %218, %231
  %233 = fsub double %232, %218
  %234 = fsub double %231, %233
  %235 = fmul double %232, %232
  %236 = fneg double %235
  %237 = tail call double @llvm.fma.f64(double %232, double %232, double %236)
  %238 = fmul double %234, 2.000000e+00
  %239 = tail call double @llvm.fma.f64(double %232, double %238, double %237)
  %240 = fadd double %235, %239
  %241 = fsub double %240, %235
  %242 = fsub double %239, %241
  %243 = tail call double @llvm.fma.f64(double %240, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %244 = tail call double @llvm.fma.f64(double %240, double %243, double 0x3FBE25E43ABE935A)
  %245 = tail call double @llvm.fma.f64(double %240, double %244, double 0x3FC110EF47E6C9C2)
  %246 = tail call double @llvm.fma.f64(double %240, double %245, double 0x3FC3B13BCFA74449)
  %247 = tail call double @llvm.fma.f64(double %240, double %246, double 0x3FC745D171BF3C30)
  %248 = tail call double @llvm.fma.f64(double %240, double %247, double 0x3FCC71C71C7792CE)
  %249 = tail call double @llvm.fma.f64(double %240, double %248, double 0x3FD24924924920DA)
  %250 = tail call double @llvm.fma.f64(double %240, double %249, double 0x3FD999999999999C)
  %251 = sitofp i32 %207 to double
  %252 = fmul double %251, 0x3FE62E42FEFA39EF
  %253 = fneg double %252
  %254 = tail call double @llvm.fma.f64(double %251, double 0x3FE62E42FEFA39EF, double %253)
  %255 = tail call double @llvm.fma.f64(double %251, double 0x3C7ABC9E3B39803F, double %254)
  %256 = fadd double %252, %255
  %257 = fsub double %256, %252
  %258 = fsub double %255, %257
  %259 = tail call double @llvm.ldexp.f64.i32(double %232, i32 1)
  %260 = tail call double @llvm.ldexp.f64.i32(double %234, i32 1)
  %261 = fmul double %232, %240
  %262 = fneg double %261
  %263 = tail call double @llvm.fma.f64(double %240, double %232, double %262)
  %264 = tail call double @llvm.fma.f64(double %240, double %234, double %263)
  %265 = tail call double @llvm.fma.f64(double %242, double %232, double %264)
  %266 = fadd double %261, %265
  %267 = fsub double %266, %261
  %268 = fsub double %265, %267
  %269 = fmul double %240, %250
  %270 = fneg double %269
  %271 = tail call double @llvm.fma.f64(double %240, double %250, double %270)
  %272 = tail call double @llvm.fma.f64(double %242, double %250, double %271)
  %273 = fadd double %269, %272
  %274 = fsub double %273, %269
  %275 = fsub double %272, %274
  %276 = fadd double %273, 0x3FE5555555555555
  %277 = fadd double %276, 0xBFE5555555555555
  %278 = fsub double %273, %277
  %279 = fadd double %275, 0x3C8543B0D5DF274D
  %280 = fadd double %279, %278
  %281 = fadd double %276, %280
  %282 = fsub double %276, %281
  %283 = fadd double %280, %282
  %284 = fmul double %266, %281
  %285 = fneg double %284
  %286 = tail call double @llvm.fma.f64(double %266, double %281, double %285)
  %287 = tail call double @llvm.fma.f64(double %266, double %283, double %286)
  %288 = tail call double @llvm.fma.f64(double %268, double %281, double %287)
  %289 = fadd double %284, %288
  %290 = fsub double %289, %284
  %291 = fsub double %288, %290
  %292 = fadd double %259, %289
  %293 = fsub double %292, %259
  %294 = fsub double %289, %293
  %295 = fadd double %260, %291
  %296 = fadd double %295, %294
  %297 = fadd double %292, %296
  %298 = fsub double %297, %292
  %299 = fsub double %296, %298
  %300 = fadd double %256, %297
  %301 = fsub double %300, %256
  %302 = fsub double %300, %301
  %303 = fsub double %256, %302
  %304 = fsub double %297, %301
  %305 = fadd double %304, %303
  %306 = fadd double %258, %299
  %307 = fsub double %306, %258
  %308 = fsub double %306, %307
  %309 = fsub double %258, %308
  %310 = fsub double %299, %307
  %311 = fadd double %310, %309
  %312 = fadd double %306, %305
  %313 = fadd double %300, %312
  %314 = fsub double %313, %300
  %315 = fsub double %312, %314
  %316 = fadd double %311, %315
  %317 = fadd double %313, %316
  %318 = fsub double %317, %313
  %319 = fsub double %316, %318
  %320 = fmul double %200, %317
  %321 = fneg double %320
  %322 = tail call double @llvm.fma.f64(double %200, double %317, double %321) #9
  %323 = tail call double @llvm.fma.f64(double %200, double %319, double %322) #9
  %324 = fadd double %320, %323
  %325 = fsub double %324, %320
  %326 = fsub double %323, %325
  %327 = tail call double @llvm.fabs.f64(double %320) #9
  %328 = fcmp oeq double %327, 0x7FF0000000000000
  %329 = select i1 %328, double %320, double %324
  %330 = tail call double @llvm.fabs.f64(double %329) #9
  %331 = fcmp oeq double %330, 0x7FF0000000000000
  %332 = select i1 %331, double 0.000000e+00, double %326
  %333 = fmul double %329, 0x3FF71547652B82FE
  %334 = tail call double @llvm.rint.f64(double %333)
  %335 = fneg double %334
  %336 = tail call double @llvm.fma.f64(double %335, double 0x3FE62E42FEFA39EF, double %329)
  %337 = tail call double @llvm.fma.f64(double %335, double 0x3C7ABC9E3B39803F, double %336)
  %338 = tail call double @llvm.fma.f64(double %337, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %339 = tail call double @llvm.fma.f64(double %337, double %338, double 0x3EC71DEE623FDE64)
  %340 = tail call double @llvm.fma.f64(double %337, double %339, double 0x3EFA01997C89E6B0)
  %341 = tail call double @llvm.fma.f64(double %337, double %340, double 0x3F2A01A014761F6E)
  %342 = tail call double @llvm.fma.f64(double %337, double %341, double 0x3F56C16C1852B7B0)
  %343 = tail call double @llvm.fma.f64(double %337, double %342, double 0x3F81111111122322)
  %344 = tail call double @llvm.fma.f64(double %337, double %343, double 0x3FA55555555502A1)
  %345 = tail call double @llvm.fma.f64(double %337, double %344, double 0x3FC5555555555511)
  %346 = tail call double @llvm.fma.f64(double %337, double %345, double 0x3FE000000000000B)
  %347 = tail call double @llvm.fma.f64(double %337, double %346, double 1.000000e+00)
  %348 = tail call double @llvm.fma.f64(double %337, double %347, double 1.000000e+00)
  %349 = fptosi double %334 to i32
  %350 = tail call double @llvm.ldexp.f64.i32(double %348, i32 %349)
  %351 = fcmp ogt double %329, 1.024000e+03
  %352 = select i1 %351, double 0x7FF0000000000000, double %350
  %353 = fcmp olt double %329, -1.075000e+03
  %354 = select i1 %353, double 0.000000e+00, double %352
  %355 = tail call double @llvm.fma.f64(double %354, double %332, double %354) #9
  %356 = tail call double @llvm.fabs.f64(double %354) #9
  %357 = fcmp oeq double %356, 0x7FF0000000000000
  %358 = select i1 %357, double %354, double %355
  %359 = tail call double @llvm.trunc.f64(double %200) #9
  %360 = fcmp oeq double %359, %200
  %361 = fmul double %200, 5.000000e-01
  %362 = tail call double @llvm.trunc.f64(double %361) #9
  %363 = fcmp une double %362, %361
  %364 = and i1 %360, %363
  %365 = select i1 %364, double %sub1.i.i.i, double 1.000000e+00
  %366 = tail call double @llvm.copysign.f64(double %358, double %365) #9
  %367 = fcmp olt double %sub1.i.i.i, 0.000000e+00
  %368 = select i1 %360, double %366, double 0x7FF8000000000000
  %369 = select i1 %367, double %368, double %366
  %370 = fcmp oeq double %201, 0x7FF0000000000000
  %371 = fcmp oeq double %sub1.i.i.i, 0.000000e+00
  %372 = or i1 %371, %370
  %373 = select i1 %371, double 0.000000e+00, double 0x7FF0000000000000
  %374 = select i1 %364, double %sub1.i.i.i, double 0.000000e+00
  %375 = tail call double @llvm.copysign.f64(double %373, double %374) #9
  %376 = select i1 %372, double %375, double %369
  %377 = fcmp uno double %sub1.i.i.i, 0.000000e+00
  %378 = select i1 %377, double 0x7FF8000000000000, double %376
  %add.i.i.i = fadd double %198, %378
  %sub3.i.i.i = fsub double %add18.i.i, %add18.i.i
  %379 = fcmp oeq double %sub3.i.i.i, 1.000000e+00
  %380 = select i1 %379, double 1.000000e+00, double 2.000000e+00
  %381 = tail call double @llvm.fabs.f64(double %sub3.i.i.i) #9
  %382 = tail call double @llvm.amdgcn.frexp.mant.f64(double %381)
  %383 = fcmp olt double %382, 0x3FE5555555555555
  %.neg.i.i.i2.i.i.i = sext i1 %383 to i32
  %384 = select i1 %383, double 2.000000e+00, double 1.000000e+00
  %385 = fmul double %382, %384
  %386 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %381)
  %387 = add i32 %386, %.neg.i.i.i2.i.i.i
  %388 = fadd double %385, -1.000000e+00
  %389 = fadd double %385, 1.000000e+00
  %390 = fadd double %389, -1.000000e+00
  %391 = fsub double %385, %390
  %392 = tail call double @llvm.amdgcn.rcp.f64(double %389)
  %393 = fneg double %389
  %394 = tail call double @llvm.fma.f64(double %393, double %392, double 1.000000e+00)
  %395 = tail call double @llvm.fma.f64(double %394, double %392, double %392)
  %396 = tail call double @llvm.fma.f64(double %393, double %395, double 1.000000e+00)
  %397 = tail call double @llvm.fma.f64(double %396, double %395, double %395)
  %398 = fmul double %388, %397
  %399 = fmul double %389, %398
  %400 = fneg double %399
  %401 = tail call double @llvm.fma.f64(double %398, double %389, double %400)
  %402 = tail call double @llvm.fma.f64(double %398, double %391, double %401)
  %403 = fadd double %399, %402
  %404 = fsub double %403, %399
  %405 = fsub double %388, %403
  %406 = fsub double %388, %405
  %407 = fsub double %406, %403
  %408 = fsub double %404, %402
  %409 = fadd double %408, %407
  %410 = fadd double %405, %409
  %411 = fmul double %397, %410
  %412 = fadd double %398, %411
  %413 = fsub double %412, %398
  %414 = fsub double %411, %413
  %415 = fmul double %412, %412
  %416 = fneg double %415
  %417 = tail call double @llvm.fma.f64(double %412, double %412, double %416)
  %418 = fmul double %414, 2.000000e+00
  %419 = tail call double @llvm.fma.f64(double %412, double %418, double %417)
  %420 = fadd double %415, %419
  %421 = fsub double %420, %415
  %422 = fsub double %419, %421
  %423 = tail call double @llvm.fma.f64(double %420, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %424 = tail call double @llvm.fma.f64(double %420, double %423, double 0x3FBE25E43ABE935A)
  %425 = tail call double @llvm.fma.f64(double %420, double %424, double 0x3FC110EF47E6C9C2)
  %426 = tail call double @llvm.fma.f64(double %420, double %425, double 0x3FC3B13BCFA74449)
  %427 = tail call double @llvm.fma.f64(double %420, double %426, double 0x3FC745D171BF3C30)
  %428 = tail call double @llvm.fma.f64(double %420, double %427, double 0x3FCC71C71C7792CE)
  %429 = tail call double @llvm.fma.f64(double %420, double %428, double 0x3FD24924924920DA)
  %430 = tail call double @llvm.fma.f64(double %420, double %429, double 0x3FD999999999999C)
  %431 = sitofp i32 %387 to double
  %432 = fmul double %431, 0x3FE62E42FEFA39EF
  %433 = fneg double %432
  %434 = tail call double @llvm.fma.f64(double %431, double 0x3FE62E42FEFA39EF, double %433)
  %435 = tail call double @llvm.fma.f64(double %431, double 0x3C7ABC9E3B39803F, double %434)
  %436 = fadd double %432, %435
  %437 = fsub double %436, %432
  %438 = fsub double %435, %437
  %439 = tail call double @llvm.ldexp.f64.i32(double %412, i32 1)
  %440 = tail call double @llvm.ldexp.f64.i32(double %414, i32 1)
  %441 = fmul double %412, %420
  %442 = fneg double %441
  %443 = tail call double @llvm.fma.f64(double %420, double %412, double %442)
  %444 = tail call double @llvm.fma.f64(double %420, double %414, double %443)
  %445 = tail call double @llvm.fma.f64(double %422, double %412, double %444)
  %446 = fadd double %441, %445
  %447 = fsub double %446, %441
  %448 = fsub double %445, %447
  %449 = fmul double %420, %430
  %450 = fneg double %449
  %451 = tail call double @llvm.fma.f64(double %420, double %430, double %450)
  %452 = tail call double @llvm.fma.f64(double %422, double %430, double %451)
  %453 = fadd double %449, %452
  %454 = fsub double %453, %449
  %455 = fsub double %452, %454
  %456 = fadd double %453, 0x3FE5555555555555
  %457 = fadd double %456, 0xBFE5555555555555
  %458 = fsub double %453, %457
  %459 = fadd double %455, 0x3C8543B0D5DF274D
  %460 = fadd double %459, %458
  %461 = fadd double %456, %460
  %462 = fsub double %456, %461
  %463 = fadd double %460, %462
  %464 = fmul double %446, %461
  %465 = fneg double %464
  %466 = tail call double @llvm.fma.f64(double %446, double %461, double %465)
  %467 = tail call double @llvm.fma.f64(double %446, double %463, double %466)
  %468 = tail call double @llvm.fma.f64(double %448, double %461, double %467)
  %469 = fadd double %464, %468
  %470 = fsub double %469, %464
  %471 = fsub double %468, %470
  %472 = fadd double %439, %469
  %473 = fsub double %472, %439
  %474 = fsub double %469, %473
  %475 = fadd double %440, %471
  %476 = fadd double %475, %474
  %477 = fadd double %472, %476
  %478 = fsub double %477, %472
  %479 = fsub double %476, %478
  %480 = fadd double %436, %477
  %481 = fsub double %480, %436
  %482 = fsub double %480, %481
  %483 = fsub double %436, %482
  %484 = fsub double %477, %481
  %485 = fadd double %484, %483
  %486 = fadd double %438, %479
  %487 = fsub double %486, %438
  %488 = fsub double %486, %487
  %489 = fsub double %438, %488
  %490 = fsub double %479, %487
  %491 = fadd double %490, %489
  %492 = fadd double %486, %485
  %493 = fadd double %480, %492
  %494 = fsub double %493, %480
  %495 = fsub double %492, %494
  %496 = fadd double %491, %495
  %497 = fadd double %493, %496
  %498 = fsub double %497, %493
  %499 = fsub double %496, %498
  %500 = fmul double %380, %497
  %501 = fneg double %500
  %502 = tail call double @llvm.fma.f64(double %380, double %497, double %501) #9
  %503 = tail call double @llvm.fma.f64(double %380, double %499, double %502) #9
  %504 = fadd double %500, %503
  %505 = fsub double %504, %500
  %506 = fsub double %503, %505
  %507 = tail call double @llvm.fabs.f64(double %500) #9
  %508 = fcmp oeq double %507, 0x7FF0000000000000
  %509 = select i1 %508, double %500, double %504
  %510 = tail call double @llvm.fabs.f64(double %509) #9
  %511 = fcmp oeq double %510, 0x7FF0000000000000
  %512 = select i1 %511, double 0.000000e+00, double %506
  %513 = fmul double %509, 0x3FF71547652B82FE
  %514 = tail call double @llvm.rint.f64(double %513)
  %515 = fneg double %514
  %516 = tail call double @llvm.fma.f64(double %515, double 0x3FE62E42FEFA39EF, double %509)
  %517 = tail call double @llvm.fma.f64(double %515, double 0x3C7ABC9E3B39803F, double %516)
  %518 = tail call double @llvm.fma.f64(double %517, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %519 = tail call double @llvm.fma.f64(double %517, double %518, double 0x3EC71DEE623FDE64)
  %520 = tail call double @llvm.fma.f64(double %517, double %519, double 0x3EFA01997C89E6B0)
  %521 = tail call double @llvm.fma.f64(double %517, double %520, double 0x3F2A01A014761F6E)
  %522 = tail call double @llvm.fma.f64(double %517, double %521, double 0x3F56C16C1852B7B0)
  %523 = tail call double @llvm.fma.f64(double %517, double %522, double 0x3F81111111122322)
  %524 = tail call double @llvm.fma.f64(double %517, double %523, double 0x3FA55555555502A1)
  %525 = tail call double @llvm.fma.f64(double %517, double %524, double 0x3FC5555555555511)
  %526 = tail call double @llvm.fma.f64(double %517, double %525, double 0x3FE000000000000B)
  %527 = tail call double @llvm.fma.f64(double %517, double %526, double 1.000000e+00)
  %528 = tail call double @llvm.fma.f64(double %517, double %527, double 1.000000e+00)
  %529 = fptosi double %514 to i32
  %530 = tail call double @llvm.ldexp.f64.i32(double %528, i32 %529)
  %531 = fcmp ogt double %509, 1.024000e+03
  %532 = select i1 %531, double 0x7FF0000000000000, double %530
  %533 = fcmp olt double %509, -1.075000e+03
  %534 = select i1 %533, double 0.000000e+00, double %532
  %535 = tail call double @llvm.fma.f64(double %534, double %512, double %534) #9
  %536 = tail call double @llvm.fabs.f64(double %534) #9
  %537 = fcmp oeq double %536, 0x7FF0000000000000
  %538 = select i1 %537, double %534, double %535
  %539 = tail call double @llvm.trunc.f64(double %380) #9
  %540 = fcmp oeq double %539, %380
  %541 = fmul double %380, 5.000000e-01
  %542 = tail call double @llvm.trunc.f64(double %541) #9
  %543 = fcmp une double %542, %541
  %544 = and i1 %540, %543
  %545 = select i1 %544, double %sub3.i.i.i, double 1.000000e+00
  %546 = tail call double @llvm.copysign.f64(double %538, double %545) #9
  %547 = fcmp olt double %sub3.i.i.i, 0.000000e+00
  %548 = select i1 %540, double %546, double 0x7FF8000000000000
  %549 = select i1 %547, double %548, double %546
  %550 = fcmp oeq double %381, 0x7FF0000000000000
  %551 = fcmp oeq double %sub3.i.i.i, 0.000000e+00
  %552 = or i1 %551, %550
  %553 = select i1 %551, double 0.000000e+00, double 0x7FF0000000000000
  %554 = select i1 %544, double %sub3.i.i.i, double 0.000000e+00
  %555 = tail call double @llvm.copysign.f64(double %553, double %554) #9
  %556 = select i1 %552, double %555, double %549
  %557 = fcmp uno double %sub3.i.i.i, 0.000000e+00
  %558 = select i1 %557, double 0x7FF8000000000000, double %556
  %add5.i.i.i = fadd double %558, %add.i.i.i
  %cmp.i.i.i = fcmp olt double %add5.i.i.i, 0x7FEFFFFFFFFFFFFF
  %min_dist.2.i.i = select i1 %cmp.i.i.i, double %add5.i.i.i, double 0x7FEFFFFFFFFFFFFF
  br label %if.end21.i.i

if.end21.i.i:                                     ; preds = %if.then.i.i, %lor.lhs.false.i.i
  %min_dist.0.i.i = phi double [ 0x7FEFFFFFFFFFFFFF, %lor.lhs.false.i.i ], [ %min_dist.2.i.i, %if.then.i.i ]
  %cmp22.i.i = fcmp olt double %agg.tmp.sroa.0.0.copyload, %18
  %cmp24.i.i = fcmp ogt double %r1.sroa.0.0.copyload, %18
  %or.cond4.i.i = select i1 %cmp22.i.i, i1 %cmp24.i.i, i1 false
  br i1 %or.cond4.i.i, label %if.then29.i.i, label %lor.lhs.false25.i.i

lor.lhs.false25.i.i:                              ; preds = %if.end21.i.i
  %cmp26.i.i = fcmp ogt double %agg.tmp.sroa.0.0.copyload, %18
  %cmp28.i.i = fcmp olt double %r1.sroa.0.0.copyload, %18
  %or.cond5.i.i = select i1 %cmp26.i.i, i1 %cmp28.i.i, i1 false
  br i1 %or.cond5.i.i, label %if.then29.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then29.i.i:                                    ; preds = %lor.lhs.false25.i.i, %if.end21.i.i
  %sub31.i.i = fsub double %18, %agg.tmp.sroa.0.0.copyload
  %sub32.i.i = fsub double %r1.sroa.5.0.copyload, %agg.tmp.sroa.2.0.copyload
  %mul33.i.i = fmul double %sub32.i.i, %sub31.i.i
  %sub34.i.i = fsub double %r1.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %div35.i.i = fdiv double %mul33.i.i, %sub34.i.i
  %add36.i.i = fadd double %agg.tmp.sroa.2.0.copyload, %div35.i.i
  %sub39.i.i = fsub double %r1.sroa.7.0.copyload, %agg.tmp.sroa.3.0.copyload
  %mul40.i.i = fmul double %sub39.i.i, %sub31.i.i
  %div42.i.i = fdiv double %mul40.i.i, %sub34.i.i
  %add43.i.i = fadd double %agg.tmp.sroa.3.0.copyload, %div42.i.i
  %559 = fcmp oeq double %sub31.i.i, 1.000000e+00
  %560 = select i1 %559, double 1.000000e+00, double 2.000000e+00
  %561 = tail call double @llvm.fabs.f64(double %sub31.i.i) #9
  %562 = tail call double @llvm.amdgcn.frexp.mant.f64(double %561)
  %563 = fcmp olt double %562, 0x3FE5555555555555
  %.neg.i.i.i.i7.i.i = sext i1 %563 to i32
  %564 = select i1 %563, double 2.000000e+00, double 1.000000e+00
  %565 = fmul double %562, %564
  %566 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %561)
  %567 = add i32 %566, %.neg.i.i.i.i7.i.i
  %568 = fadd double %565, -1.000000e+00
  %569 = fadd double %565, 1.000000e+00
  %570 = fadd double %569, -1.000000e+00
  %571 = fsub double %565, %570
  %572 = tail call double @llvm.amdgcn.rcp.f64(double %569)
  %573 = fneg double %569
  %574 = tail call double @llvm.fma.f64(double %573, double %572, double 1.000000e+00)
  %575 = tail call double @llvm.fma.f64(double %574, double %572, double %572)
  %576 = tail call double @llvm.fma.f64(double %573, double %575, double 1.000000e+00)
  %577 = tail call double @llvm.fma.f64(double %576, double %575, double %575)
  %578 = fmul double %568, %577
  %579 = fmul double %569, %578
  %580 = fneg double %579
  %581 = tail call double @llvm.fma.f64(double %578, double %569, double %580)
  %582 = tail call double @llvm.fma.f64(double %578, double %571, double %581)
  %583 = fadd double %579, %582
  %584 = fsub double %583, %579
  %585 = fsub double %568, %583
  %586 = fsub double %568, %585
  %587 = fsub double %586, %583
  %588 = fsub double %584, %582
  %589 = fadd double %588, %587
  %590 = fadd double %585, %589
  %591 = fmul double %577, %590
  %592 = fadd double %578, %591
  %593 = fsub double %592, %578
  %594 = fsub double %591, %593
  %595 = fmul double %592, %592
  %596 = fneg double %595
  %597 = tail call double @llvm.fma.f64(double %592, double %592, double %596)
  %598 = fmul double %594, 2.000000e+00
  %599 = tail call double @llvm.fma.f64(double %592, double %598, double %597)
  %600 = fadd double %595, %599
  %601 = fsub double %600, %595
  %602 = fsub double %599, %601
  %603 = tail call double @llvm.fma.f64(double %600, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %604 = tail call double @llvm.fma.f64(double %600, double %603, double 0x3FBE25E43ABE935A)
  %605 = tail call double @llvm.fma.f64(double %600, double %604, double 0x3FC110EF47E6C9C2)
  %606 = tail call double @llvm.fma.f64(double %600, double %605, double 0x3FC3B13BCFA74449)
  %607 = tail call double @llvm.fma.f64(double %600, double %606, double 0x3FC745D171BF3C30)
  %608 = tail call double @llvm.fma.f64(double %600, double %607, double 0x3FCC71C71C7792CE)
  %609 = tail call double @llvm.fma.f64(double %600, double %608, double 0x3FD24924924920DA)
  %610 = tail call double @llvm.fma.f64(double %600, double %609, double 0x3FD999999999999C)
  %611 = sitofp i32 %567 to double
  %612 = fmul double %611, 0x3FE62E42FEFA39EF
  %613 = fneg double %612
  %614 = tail call double @llvm.fma.f64(double %611, double 0x3FE62E42FEFA39EF, double %613)
  %615 = tail call double @llvm.fma.f64(double %611, double 0x3C7ABC9E3B39803F, double %614)
  %616 = fadd double %612, %615
  %617 = fsub double %616, %612
  %618 = fsub double %615, %617
  %619 = tail call double @llvm.ldexp.f64.i32(double %592, i32 1)
  %620 = tail call double @llvm.ldexp.f64.i32(double %594, i32 1)
  %621 = fmul double %592, %600
  %622 = fneg double %621
  %623 = tail call double @llvm.fma.f64(double %600, double %592, double %622)
  %624 = tail call double @llvm.fma.f64(double %600, double %594, double %623)
  %625 = tail call double @llvm.fma.f64(double %602, double %592, double %624)
  %626 = fadd double %621, %625
  %627 = fsub double %626, %621
  %628 = fsub double %625, %627
  %629 = fmul double %600, %610
  %630 = fneg double %629
  %631 = tail call double @llvm.fma.f64(double %600, double %610, double %630)
  %632 = tail call double @llvm.fma.f64(double %602, double %610, double %631)
  %633 = fadd double %629, %632
  %634 = fsub double %633, %629
  %635 = fsub double %632, %634
  %636 = fadd double %633, 0x3FE5555555555555
  %637 = fadd double %636, 0xBFE5555555555555
  %638 = fsub double %633, %637
  %639 = fadd double %635, 0x3C8543B0D5DF274D
  %640 = fadd double %639, %638
  %641 = fadd double %636, %640
  %642 = fsub double %636, %641
  %643 = fadd double %640, %642
  %644 = fmul double %626, %641
  %645 = fneg double %644
  %646 = tail call double @llvm.fma.f64(double %626, double %641, double %645)
  %647 = tail call double @llvm.fma.f64(double %626, double %643, double %646)
  %648 = tail call double @llvm.fma.f64(double %628, double %641, double %647)
  %649 = fadd double %644, %648
  %650 = fsub double %649, %644
  %651 = fsub double %648, %650
  %652 = fadd double %619, %649
  %653 = fsub double %652, %619
  %654 = fsub double %649, %653
  %655 = fadd double %620, %651
  %656 = fadd double %655, %654
  %657 = fadd double %652, %656
  %658 = fsub double %657, %652
  %659 = fsub double %656, %658
  %660 = fadd double %616, %657
  %661 = fsub double %660, %616
  %662 = fsub double %660, %661
  %663 = fsub double %616, %662
  %664 = fsub double %657, %661
  %665 = fadd double %664, %663
  %666 = fadd double %618, %659
  %667 = fsub double %666, %618
  %668 = fsub double %666, %667
  %669 = fsub double %618, %668
  %670 = fsub double %659, %667
  %671 = fadd double %670, %669
  %672 = fadd double %666, %665
  %673 = fadd double %660, %672
  %674 = fsub double %673, %660
  %675 = fsub double %672, %674
  %676 = fadd double %671, %675
  %677 = fadd double %673, %676
  %678 = fsub double %677, %673
  %679 = fsub double %676, %678
  %680 = fmul double %560, %677
  %681 = fneg double %680
  %682 = tail call double @llvm.fma.f64(double %560, double %677, double %681) #9
  %683 = tail call double @llvm.fma.f64(double %560, double %679, double %682) #9
  %684 = fadd double %680, %683
  %685 = fsub double %684, %680
  %686 = fsub double %683, %685
  %687 = tail call double @llvm.fabs.f64(double %680) #9
  %688 = fcmp oeq double %687, 0x7FF0000000000000
  %689 = select i1 %688, double %680, double %684
  %690 = tail call double @llvm.fabs.f64(double %689) #9
  %691 = fcmp oeq double %690, 0x7FF0000000000000
  %692 = select i1 %691, double 0.000000e+00, double %686
  %693 = fmul double %689, 0x3FF71547652B82FE
  %694 = tail call double @llvm.rint.f64(double %693)
  %695 = fneg double %694
  %696 = tail call double @llvm.fma.f64(double %695, double 0x3FE62E42FEFA39EF, double %689)
  %697 = tail call double @llvm.fma.f64(double %695, double 0x3C7ABC9E3B39803F, double %696)
  %698 = tail call double @llvm.fma.f64(double %697, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %699 = tail call double @llvm.fma.f64(double %697, double %698, double 0x3EC71DEE623FDE64)
  %700 = tail call double @llvm.fma.f64(double %697, double %699, double 0x3EFA01997C89E6B0)
  %701 = tail call double @llvm.fma.f64(double %697, double %700, double 0x3F2A01A014761F6E)
  %702 = tail call double @llvm.fma.f64(double %697, double %701, double 0x3F56C16C1852B7B0)
  %703 = tail call double @llvm.fma.f64(double %697, double %702, double 0x3F81111111122322)
  %704 = tail call double @llvm.fma.f64(double %697, double %703, double 0x3FA55555555502A1)
  %705 = tail call double @llvm.fma.f64(double %697, double %704, double 0x3FC5555555555511)
  %706 = tail call double @llvm.fma.f64(double %697, double %705, double 0x3FE000000000000B)
  %707 = tail call double @llvm.fma.f64(double %697, double %706, double 1.000000e+00)
  %708 = tail call double @llvm.fma.f64(double %697, double %707, double 1.000000e+00)
  %709 = fptosi double %694 to i32
  %710 = tail call double @llvm.ldexp.f64.i32(double %708, i32 %709)
  %711 = fcmp ogt double %689, 1.024000e+03
  %712 = select i1 %711, double 0x7FF0000000000000, double %710
  %713 = fcmp olt double %689, -1.075000e+03
  %714 = select i1 %713, double 0.000000e+00, double %712
  %715 = tail call double @llvm.fma.f64(double %714, double %692, double %714) #9
  %716 = tail call double @llvm.fabs.f64(double %714) #9
  %717 = fcmp oeq double %716, 0x7FF0000000000000
  %718 = select i1 %717, double %714, double %715
  %719 = tail call double @llvm.trunc.f64(double %560) #9
  %720 = fcmp oeq double %719, %560
  %721 = fmul double %560, 5.000000e-01
  %722 = tail call double @llvm.trunc.f64(double %721) #9
  %723 = fcmp une double %722, %721
  %724 = and i1 %720, %723
  %725 = select i1 %724, double %sub31.i.i, double 1.000000e+00
  %726 = tail call double @llvm.copysign.f64(double %718, double %725) #9
  %727 = fcmp olt double %sub31.i.i, 0.000000e+00
  %728 = select i1 %720, double %726, double 0x7FF8000000000000
  %729 = select i1 %727, double %728, double %726
  %730 = fcmp oeq double %561, 0x7FF0000000000000
  %731 = fcmp oeq double %sub31.i.i, 0.000000e+00
  %732 = or i1 %731, %730
  %733 = select i1 %731, double 0.000000e+00, double 0x7FF0000000000000
  %734 = select i1 %724, double %sub31.i.i, double 0.000000e+00
  %735 = tail call double @llvm.copysign.f64(double %733, double %734) #9
  %736 = select i1 %732, double %735, double %729
  %737 = fcmp uno double %sub31.i.i, 0.000000e+00
  %738 = select i1 %737, double 0x7FF8000000000000, double %736
  %sub1.i8.i.i = fsub double %add36.i.i, %add36.i.i
  %739 = fcmp oeq double %sub1.i8.i.i, 1.000000e+00
  %740 = select i1 %739, double 1.000000e+00, double 2.000000e+00
  %741 = tail call double @llvm.fabs.f64(double %sub1.i8.i.i) #9
  %742 = tail call double @llvm.amdgcn.frexp.mant.f64(double %741)
  %743 = fcmp olt double %742, 0x3FE5555555555555
  %.neg.i.i.i1.i9.i.i = sext i1 %743 to i32
  %744 = select i1 %743, double 2.000000e+00, double 1.000000e+00
  %745 = fmul double %742, %744
  %746 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %741)
  %747 = add i32 %746, %.neg.i.i.i1.i9.i.i
  %748 = fadd double %745, -1.000000e+00
  %749 = fadd double %745, 1.000000e+00
  %750 = fadd double %749, -1.000000e+00
  %751 = fsub double %745, %750
  %752 = tail call double @llvm.amdgcn.rcp.f64(double %749)
  %753 = fneg double %749
  %754 = tail call double @llvm.fma.f64(double %753, double %752, double 1.000000e+00)
  %755 = tail call double @llvm.fma.f64(double %754, double %752, double %752)
  %756 = tail call double @llvm.fma.f64(double %753, double %755, double 1.000000e+00)
  %757 = tail call double @llvm.fma.f64(double %756, double %755, double %755)
  %758 = fmul double %748, %757
  %759 = fmul double %749, %758
  %760 = fneg double %759
  %761 = tail call double @llvm.fma.f64(double %758, double %749, double %760)
  %762 = tail call double @llvm.fma.f64(double %758, double %751, double %761)
  %763 = fadd double %759, %762
  %764 = fsub double %763, %759
  %765 = fsub double %748, %763
  %766 = fsub double %748, %765
  %767 = fsub double %766, %763
  %768 = fsub double %764, %762
  %769 = fadd double %768, %767
  %770 = fadd double %765, %769
  %771 = fmul double %757, %770
  %772 = fadd double %758, %771
  %773 = fsub double %772, %758
  %774 = fsub double %771, %773
  %775 = fmul double %772, %772
  %776 = fneg double %775
  %777 = tail call double @llvm.fma.f64(double %772, double %772, double %776)
  %778 = fmul double %774, 2.000000e+00
  %779 = tail call double @llvm.fma.f64(double %772, double %778, double %777)
  %780 = fadd double %775, %779
  %781 = fsub double %780, %775
  %782 = fsub double %779, %781
  %783 = tail call double @llvm.fma.f64(double %780, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %784 = tail call double @llvm.fma.f64(double %780, double %783, double 0x3FBE25E43ABE935A)
  %785 = tail call double @llvm.fma.f64(double %780, double %784, double 0x3FC110EF47E6C9C2)
  %786 = tail call double @llvm.fma.f64(double %780, double %785, double 0x3FC3B13BCFA74449)
  %787 = tail call double @llvm.fma.f64(double %780, double %786, double 0x3FC745D171BF3C30)
  %788 = tail call double @llvm.fma.f64(double %780, double %787, double 0x3FCC71C71C7792CE)
  %789 = tail call double @llvm.fma.f64(double %780, double %788, double 0x3FD24924924920DA)
  %790 = tail call double @llvm.fma.f64(double %780, double %789, double 0x3FD999999999999C)
  %791 = sitofp i32 %747 to double
  %792 = fmul double %791, 0x3FE62E42FEFA39EF
  %793 = fneg double %792
  %794 = tail call double @llvm.fma.f64(double %791, double 0x3FE62E42FEFA39EF, double %793)
  %795 = tail call double @llvm.fma.f64(double %791, double 0x3C7ABC9E3B39803F, double %794)
  %796 = fadd double %792, %795
  %797 = fsub double %796, %792
  %798 = fsub double %795, %797
  %799 = tail call double @llvm.ldexp.f64.i32(double %772, i32 1)
  %800 = tail call double @llvm.ldexp.f64.i32(double %774, i32 1)
  %801 = fmul double %772, %780
  %802 = fneg double %801
  %803 = tail call double @llvm.fma.f64(double %780, double %772, double %802)
  %804 = tail call double @llvm.fma.f64(double %780, double %774, double %803)
  %805 = tail call double @llvm.fma.f64(double %782, double %772, double %804)
  %806 = fadd double %801, %805
  %807 = fsub double %806, %801
  %808 = fsub double %805, %807
  %809 = fmul double %780, %790
  %810 = fneg double %809
  %811 = tail call double @llvm.fma.f64(double %780, double %790, double %810)
  %812 = tail call double @llvm.fma.f64(double %782, double %790, double %811)
  %813 = fadd double %809, %812
  %814 = fsub double %813, %809
  %815 = fsub double %812, %814
  %816 = fadd double %813, 0x3FE5555555555555
  %817 = fadd double %816, 0xBFE5555555555555
  %818 = fsub double %813, %817
  %819 = fadd double %815, 0x3C8543B0D5DF274D
  %820 = fadd double %819, %818
  %821 = fadd double %816, %820
  %822 = fsub double %816, %821
  %823 = fadd double %820, %822
  %824 = fmul double %806, %821
  %825 = fneg double %824
  %826 = tail call double @llvm.fma.f64(double %806, double %821, double %825)
  %827 = tail call double @llvm.fma.f64(double %806, double %823, double %826)
  %828 = tail call double @llvm.fma.f64(double %808, double %821, double %827)
  %829 = fadd double %824, %828
  %830 = fsub double %829, %824
  %831 = fsub double %828, %830
  %832 = fadd double %799, %829
  %833 = fsub double %832, %799
  %834 = fsub double %829, %833
  %835 = fadd double %800, %831
  %836 = fadd double %835, %834
  %837 = fadd double %832, %836
  %838 = fsub double %837, %832
  %839 = fsub double %836, %838
  %840 = fadd double %796, %837
  %841 = fsub double %840, %796
  %842 = fsub double %840, %841
  %843 = fsub double %796, %842
  %844 = fsub double %837, %841
  %845 = fadd double %844, %843
  %846 = fadd double %798, %839
  %847 = fsub double %846, %798
  %848 = fsub double %846, %847
  %849 = fsub double %798, %848
  %850 = fsub double %839, %847
  %851 = fadd double %850, %849
  %852 = fadd double %846, %845
  %853 = fadd double %840, %852
  %854 = fsub double %853, %840
  %855 = fsub double %852, %854
  %856 = fadd double %851, %855
  %857 = fadd double %853, %856
  %858 = fsub double %857, %853
  %859 = fsub double %856, %858
  %860 = fmul double %740, %857
  %861 = fneg double %860
  %862 = tail call double @llvm.fma.f64(double %740, double %857, double %861) #9
  %863 = tail call double @llvm.fma.f64(double %740, double %859, double %862) #9
  %864 = fadd double %860, %863
  %865 = fsub double %864, %860
  %866 = fsub double %863, %865
  %867 = tail call double @llvm.fabs.f64(double %860) #9
  %868 = fcmp oeq double %867, 0x7FF0000000000000
  %869 = select i1 %868, double %860, double %864
  %870 = tail call double @llvm.fabs.f64(double %869) #9
  %871 = fcmp oeq double %870, 0x7FF0000000000000
  %872 = select i1 %871, double 0.000000e+00, double %866
  %873 = fmul double %869, 0x3FF71547652B82FE
  %874 = tail call double @llvm.rint.f64(double %873)
  %875 = fneg double %874
  %876 = tail call double @llvm.fma.f64(double %875, double 0x3FE62E42FEFA39EF, double %869)
  %877 = tail call double @llvm.fma.f64(double %875, double 0x3C7ABC9E3B39803F, double %876)
  %878 = tail call double @llvm.fma.f64(double %877, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %879 = tail call double @llvm.fma.f64(double %877, double %878, double 0x3EC71DEE623FDE64)
  %880 = tail call double @llvm.fma.f64(double %877, double %879, double 0x3EFA01997C89E6B0)
  %881 = tail call double @llvm.fma.f64(double %877, double %880, double 0x3F2A01A014761F6E)
  %882 = tail call double @llvm.fma.f64(double %877, double %881, double 0x3F56C16C1852B7B0)
  %883 = tail call double @llvm.fma.f64(double %877, double %882, double 0x3F81111111122322)
  %884 = tail call double @llvm.fma.f64(double %877, double %883, double 0x3FA55555555502A1)
  %885 = tail call double @llvm.fma.f64(double %877, double %884, double 0x3FC5555555555511)
  %886 = tail call double @llvm.fma.f64(double %877, double %885, double 0x3FE000000000000B)
  %887 = tail call double @llvm.fma.f64(double %877, double %886, double 1.000000e+00)
  %888 = tail call double @llvm.fma.f64(double %877, double %887, double 1.000000e+00)
  %889 = fptosi double %874 to i32
  %890 = tail call double @llvm.ldexp.f64.i32(double %888, i32 %889)
  %891 = fcmp ogt double %869, 1.024000e+03
  %892 = select i1 %891, double 0x7FF0000000000000, double %890
  %893 = fcmp olt double %869, -1.075000e+03
  %894 = select i1 %893, double 0.000000e+00, double %892
  %895 = tail call double @llvm.fma.f64(double %894, double %872, double %894) #9
  %896 = tail call double @llvm.fabs.f64(double %894) #9
  %897 = fcmp oeq double %896, 0x7FF0000000000000
  %898 = select i1 %897, double %894, double %895
  %899 = tail call double @llvm.trunc.f64(double %740) #9
  %900 = fcmp oeq double %899, %740
  %901 = fmul double %740, 5.000000e-01
  %902 = tail call double @llvm.trunc.f64(double %901) #9
  %903 = fcmp une double %902, %901
  %904 = and i1 %900, %903
  %905 = select i1 %904, double %sub1.i8.i.i, double 1.000000e+00
  %906 = tail call double @llvm.copysign.f64(double %898, double %905) #9
  %907 = fcmp olt double %sub1.i8.i.i, 0.000000e+00
  %908 = select i1 %900, double %906, double 0x7FF8000000000000
  %909 = select i1 %907, double %908, double %906
  %910 = fcmp oeq double %741, 0x7FF0000000000000
  %911 = fcmp oeq double %sub1.i8.i.i, 0.000000e+00
  %912 = or i1 %911, %910
  %913 = select i1 %911, double 0.000000e+00, double 0x7FF0000000000000
  %914 = select i1 %904, double %sub1.i8.i.i, double 0.000000e+00
  %915 = tail call double @llvm.copysign.f64(double %913, double %914) #9
  %916 = select i1 %912, double %915, double %909
  %917 = fcmp uno double %sub1.i8.i.i, 0.000000e+00
  %918 = select i1 %917, double 0x7FF8000000000000, double %916
  %add.i10.i.i = fadd double %738, %918
  %sub3.i11.i.i = fsub double %add43.i.i, %add43.i.i
  %919 = fcmp oeq double %sub3.i11.i.i, 1.000000e+00
  %920 = select i1 %919, double 1.000000e+00, double 2.000000e+00
  %921 = tail call double @llvm.fabs.f64(double %sub3.i11.i.i) #9
  %922 = tail call double @llvm.amdgcn.frexp.mant.f64(double %921)
  %923 = fcmp olt double %922, 0x3FE5555555555555
  %.neg.i.i.i2.i12.i.i = sext i1 %923 to i32
  %924 = select i1 %923, double 2.000000e+00, double 1.000000e+00
  %925 = fmul double %922, %924
  %926 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %921)
  %927 = add i32 %926, %.neg.i.i.i2.i12.i.i
  %928 = fadd double %925, -1.000000e+00
  %929 = fadd double %925, 1.000000e+00
  %930 = fadd double %929, -1.000000e+00
  %931 = fsub double %925, %930
  %932 = tail call double @llvm.amdgcn.rcp.f64(double %929)
  %933 = fneg double %929
  %934 = tail call double @llvm.fma.f64(double %933, double %932, double 1.000000e+00)
  %935 = tail call double @llvm.fma.f64(double %934, double %932, double %932)
  %936 = tail call double @llvm.fma.f64(double %933, double %935, double 1.000000e+00)
  %937 = tail call double @llvm.fma.f64(double %936, double %935, double %935)
  %938 = fmul double %928, %937
  %939 = fmul double %929, %938
  %940 = fneg double %939
  %941 = tail call double @llvm.fma.f64(double %938, double %929, double %940)
  %942 = tail call double @llvm.fma.f64(double %938, double %931, double %941)
  %943 = fadd double %939, %942
  %944 = fsub double %943, %939
  %945 = fsub double %928, %943
  %946 = fsub double %928, %945
  %947 = fsub double %946, %943
  %948 = fsub double %944, %942
  %949 = fadd double %948, %947
  %950 = fadd double %945, %949
  %951 = fmul double %937, %950
  %952 = fadd double %938, %951
  %953 = fsub double %952, %938
  %954 = fsub double %951, %953
  %955 = fmul double %952, %952
  %956 = fneg double %955
  %957 = tail call double @llvm.fma.f64(double %952, double %952, double %956)
  %958 = fmul double %954, 2.000000e+00
  %959 = tail call double @llvm.fma.f64(double %952, double %958, double %957)
  %960 = fadd double %955, %959
  %961 = fsub double %960, %955
  %962 = fsub double %959, %961
  %963 = tail call double @llvm.fma.f64(double %960, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %964 = tail call double @llvm.fma.f64(double %960, double %963, double 0x3FBE25E43ABE935A)
  %965 = tail call double @llvm.fma.f64(double %960, double %964, double 0x3FC110EF47E6C9C2)
  %966 = tail call double @llvm.fma.f64(double %960, double %965, double 0x3FC3B13BCFA74449)
  %967 = tail call double @llvm.fma.f64(double %960, double %966, double 0x3FC745D171BF3C30)
  %968 = tail call double @llvm.fma.f64(double %960, double %967, double 0x3FCC71C71C7792CE)
  %969 = tail call double @llvm.fma.f64(double %960, double %968, double 0x3FD24924924920DA)
  %970 = tail call double @llvm.fma.f64(double %960, double %969, double 0x3FD999999999999C)
  %971 = sitofp i32 %927 to double
  %972 = fmul double %971, 0x3FE62E42FEFA39EF
  %973 = fneg double %972
  %974 = tail call double @llvm.fma.f64(double %971, double 0x3FE62E42FEFA39EF, double %973)
  %975 = tail call double @llvm.fma.f64(double %971, double 0x3C7ABC9E3B39803F, double %974)
  %976 = fadd double %972, %975
  %977 = fsub double %976, %972
  %978 = fsub double %975, %977
  %979 = tail call double @llvm.ldexp.f64.i32(double %952, i32 1)
  %980 = tail call double @llvm.ldexp.f64.i32(double %954, i32 1)
  %981 = fmul double %952, %960
  %982 = fneg double %981
  %983 = tail call double @llvm.fma.f64(double %960, double %952, double %982)
  %984 = tail call double @llvm.fma.f64(double %960, double %954, double %983)
  %985 = tail call double @llvm.fma.f64(double %962, double %952, double %984)
  %986 = fadd double %981, %985
  %987 = fsub double %986, %981
  %988 = fsub double %985, %987
  %989 = fmul double %960, %970
  %990 = fneg double %989
  %991 = tail call double @llvm.fma.f64(double %960, double %970, double %990)
  %992 = tail call double @llvm.fma.f64(double %962, double %970, double %991)
  %993 = fadd double %989, %992
  %994 = fsub double %993, %989
  %995 = fsub double %992, %994
  %996 = fadd double %993, 0x3FE5555555555555
  %997 = fadd double %996, 0xBFE5555555555555
  %998 = fsub double %993, %997
  %999 = fadd double %995, 0x3C8543B0D5DF274D
  %1000 = fadd double %999, %998
  %1001 = fadd double %996, %1000
  %1002 = fsub double %996, %1001
  %1003 = fadd double %1000, %1002
  %1004 = fmul double %986, %1001
  %1005 = fneg double %1004
  %1006 = tail call double @llvm.fma.f64(double %986, double %1001, double %1005)
  %1007 = tail call double @llvm.fma.f64(double %986, double %1003, double %1006)
  %1008 = tail call double @llvm.fma.f64(double %988, double %1001, double %1007)
  %1009 = fadd double %1004, %1008
  %1010 = fsub double %1009, %1004
  %1011 = fsub double %1008, %1010
  %1012 = fadd double %979, %1009
  %1013 = fsub double %1012, %979
  %1014 = fsub double %1009, %1013
  %1015 = fadd double %980, %1011
  %1016 = fadd double %1015, %1014
  %1017 = fadd double %1012, %1016
  %1018 = fsub double %1017, %1012
  %1019 = fsub double %1016, %1018
  %1020 = fadd double %976, %1017
  %1021 = fsub double %1020, %976
  %1022 = fsub double %1020, %1021
  %1023 = fsub double %976, %1022
  %1024 = fsub double %1017, %1021
  %1025 = fadd double %1024, %1023
  %1026 = fadd double %978, %1019
  %1027 = fsub double %1026, %978
  %1028 = fsub double %1026, %1027
  %1029 = fsub double %978, %1028
  %1030 = fsub double %1019, %1027
  %1031 = fadd double %1030, %1029
  %1032 = fadd double %1026, %1025
  %1033 = fadd double %1020, %1032
  %1034 = fsub double %1033, %1020
  %1035 = fsub double %1032, %1034
  %1036 = fadd double %1031, %1035
  %1037 = fadd double %1033, %1036
  %1038 = fsub double %1037, %1033
  %1039 = fsub double %1036, %1038
  %1040 = fmul double %920, %1037
  %1041 = fneg double %1040
  %1042 = tail call double @llvm.fma.f64(double %920, double %1037, double %1041) #9
  %1043 = tail call double @llvm.fma.f64(double %920, double %1039, double %1042) #9
  %1044 = fadd double %1040, %1043
  %1045 = fsub double %1044, %1040
  %1046 = fsub double %1043, %1045
  %1047 = tail call double @llvm.fabs.f64(double %1040) #9
  %1048 = fcmp oeq double %1047, 0x7FF0000000000000
  %1049 = select i1 %1048, double %1040, double %1044
  %1050 = tail call double @llvm.fabs.f64(double %1049) #9
  %1051 = fcmp oeq double %1050, 0x7FF0000000000000
  %1052 = select i1 %1051, double 0.000000e+00, double %1046
  %1053 = fmul double %1049, 0x3FF71547652B82FE
  %1054 = tail call double @llvm.rint.f64(double %1053)
  %1055 = fneg double %1054
  %1056 = tail call double @llvm.fma.f64(double %1055, double 0x3FE62E42FEFA39EF, double %1049)
  %1057 = tail call double @llvm.fma.f64(double %1055, double 0x3C7ABC9E3B39803F, double %1056)
  %1058 = tail call double @llvm.fma.f64(double %1057, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1059 = tail call double @llvm.fma.f64(double %1057, double %1058, double 0x3EC71DEE623FDE64)
  %1060 = tail call double @llvm.fma.f64(double %1057, double %1059, double 0x3EFA01997C89E6B0)
  %1061 = tail call double @llvm.fma.f64(double %1057, double %1060, double 0x3F2A01A014761F6E)
  %1062 = tail call double @llvm.fma.f64(double %1057, double %1061, double 0x3F56C16C1852B7B0)
  %1063 = tail call double @llvm.fma.f64(double %1057, double %1062, double 0x3F81111111122322)
  %1064 = tail call double @llvm.fma.f64(double %1057, double %1063, double 0x3FA55555555502A1)
  %1065 = tail call double @llvm.fma.f64(double %1057, double %1064, double 0x3FC5555555555511)
  %1066 = tail call double @llvm.fma.f64(double %1057, double %1065, double 0x3FE000000000000B)
  %1067 = tail call double @llvm.fma.f64(double %1057, double %1066, double 1.000000e+00)
  %1068 = tail call double @llvm.fma.f64(double %1057, double %1067, double 1.000000e+00)
  %1069 = fptosi double %1054 to i32
  %1070 = tail call double @llvm.ldexp.f64.i32(double %1068, i32 %1069)
  %1071 = fcmp ogt double %1049, 1.024000e+03
  %1072 = select i1 %1071, double 0x7FF0000000000000, double %1070
  %1073 = fcmp olt double %1049, -1.075000e+03
  %1074 = select i1 %1073, double 0.000000e+00, double %1072
  %1075 = tail call double @llvm.fma.f64(double %1074, double %1052, double %1074) #9
  %1076 = tail call double @llvm.fabs.f64(double %1074) #9
  %1077 = fcmp oeq double %1076, 0x7FF0000000000000
  %1078 = select i1 %1077, double %1074, double %1075
  %1079 = tail call double @llvm.trunc.f64(double %920) #9
  %1080 = fcmp oeq double %1079, %920
  %1081 = fmul double %920, 5.000000e-01
  %1082 = tail call double @llvm.trunc.f64(double %1081) #9
  %1083 = fcmp une double %1082, %1081
  %1084 = and i1 %1080, %1083
  %1085 = select i1 %1084, double %sub3.i11.i.i, double 1.000000e+00
  %1086 = tail call double @llvm.copysign.f64(double %1078, double %1085) #9
  %1087 = fcmp olt double %sub3.i11.i.i, 0.000000e+00
  %1088 = select i1 %1080, double %1086, double 0x7FF8000000000000
  %1089 = select i1 %1087, double %1088, double %1086
  %1090 = fcmp oeq double %921, 0x7FF0000000000000
  %1091 = fcmp oeq double %sub3.i11.i.i, 0.000000e+00
  %1092 = or i1 %1091, %1090
  %1093 = select i1 %1091, double 0.000000e+00, double 0x7FF0000000000000
  %1094 = select i1 %1084, double %sub3.i11.i.i, double 0.000000e+00
  %1095 = tail call double @llvm.copysign.f64(double %1093, double %1094) #9
  %1096 = select i1 %1092, double %1095, double %1089
  %1097 = fcmp uno double %sub3.i11.i.i, 0.000000e+00
  %1098 = select i1 %1097, double 0x7FF8000000000000, double %1096
  %add5.i13.i.i = fadd double %1098, %add.i10.i.i
  %cmp.i14.i.i = fcmp olt double %add5.i13.i.i, %min_dist.0.i.i
  %min_dist.3.i.i = select i1 %cmp.i14.i.i, double %add5.i13.i.i, double %min_dist.0.i.i
  br label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

sw.bb3.i:                                         ; preds = %if.then
  %arrayidx.i.i.i107 = getelementptr inbounds nuw i8, ptr %lower_left_.val.i.i, i64 8
  %1099 = load double, ptr %arrayidx.i.i.i107, align 8, !tbaa !30
  %upper_right_.i5.i = getelementptr inbounds nuw i8, ptr %this, i64 32
  %upper_right_.val.i6.i = load ptr, ptr %upper_right_.i5.i, align 8, !tbaa !29
  %1100 = load double, ptr %upper_right_.val.i6.i, align 8, !tbaa !30
  %arrayidx.i28.i.i = getelementptr inbounds nuw i8, ptr %upper_right_.val.i6.i, i64 8
  %1101 = load double, ptr %arrayidx.i28.i.i, align 8, !tbaa !30
  %cmp.i7.i = fcmp olt double %agg.tmp.sroa.0.0.copyload, %17
  %cmp11.i.i = fcmp ogt double %r1.sroa.0.0.copyload, %17
  %or.cond.i8.i = select i1 %cmp.i7.i, i1 %cmp11.i.i, i1 false
  br i1 %or.cond.i8.i, label %if.then.i16.i, label %lor.lhs.false.i9.i

lor.lhs.false.i9.i:                               ; preds = %sw.bb3.i
  %cmp12.i.i = fcmp ogt double %agg.tmp.sroa.0.0.copyload, %17
  %cmp14.i.i = fcmp olt double %r1.sroa.0.0.copyload, %17
  %or.cond7.i.i = select i1 %cmp12.i.i, i1 %cmp14.i.i, i1 false
  br i1 %or.cond7.i.i, label %if.then.i16.i, label %if.end32.i.i

if.then.i16.i:                                    ; preds = %lor.lhs.false.i9.i, %sw.bb3.i
  %sub.i17.i = fsub double %17, %agg.tmp.sroa.0.0.copyload
  %sub15.i.i = fsub double %r1.sroa.5.0.copyload, %agg.tmp.sroa.2.0.copyload
  %mul.i18.i = fmul double %sub15.i.i, %sub.i17.i
  %sub16.i.i = fsub double %r1.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %div.i19.i = fdiv double %mul.i18.i, %sub16.i.i
  %add.i20.i = fadd double %agg.tmp.sroa.2.0.copyload, %div.i19.i
  %cmp23.i.i = fcmp oge double %add.i20.i, %1099
  %cmp25.i.i = fcmp olt double %add.i20.i, %1101
  %or.cond8.i.i = select i1 %cmp23.i.i, i1 %cmp25.i.i, i1 false
  br i1 %or.cond8.i.i, label %if.then26.i.i, label %if.end32.i.i

if.then26.i.i:                                    ; preds = %if.then.i16.i
  %sub18.i.i = fsub double %r1.sroa.7.0.copyload, %agg.tmp.sroa.3.0.copyload
  %mul19.i.i = fmul double %sub18.i.i, %sub.i17.i
  %div21.i.i = fdiv double %mul19.i.i, %sub16.i.i
  %add22.i.i = fadd double %agg.tmp.sroa.3.0.copyload, %div21.i.i
  %1102 = fcmp oeq double %sub.i17.i, 1.000000e+00
  %1103 = select i1 %1102, double 1.000000e+00, double 2.000000e+00
  %1104 = tail call double @llvm.fabs.f64(double %sub.i17.i) #9
  %1105 = tail call double @llvm.amdgcn.frexp.mant.f64(double %1104)
  %1106 = fcmp olt double %1105, 0x3FE5555555555555
  %.neg.i.i.i.i.i21.i = sext i1 %1106 to i32
  %1107 = select i1 %1106, double 2.000000e+00, double 1.000000e+00
  %1108 = fmul double %1105, %1107
  %1109 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %1104)
  %1110 = add i32 %1109, %.neg.i.i.i.i.i21.i
  %1111 = fadd double %1108, -1.000000e+00
  %1112 = fadd double %1108, 1.000000e+00
  %1113 = fadd double %1112, -1.000000e+00
  %1114 = fsub double %1108, %1113
  %1115 = tail call double @llvm.amdgcn.rcp.f64(double %1112)
  %1116 = fneg double %1112
  %1117 = tail call double @llvm.fma.f64(double %1116, double %1115, double 1.000000e+00)
  %1118 = tail call double @llvm.fma.f64(double %1117, double %1115, double %1115)
  %1119 = tail call double @llvm.fma.f64(double %1116, double %1118, double 1.000000e+00)
  %1120 = tail call double @llvm.fma.f64(double %1119, double %1118, double %1118)
  %1121 = fmul double %1111, %1120
  %1122 = fmul double %1112, %1121
  %1123 = fneg double %1122
  %1124 = tail call double @llvm.fma.f64(double %1121, double %1112, double %1123)
  %1125 = tail call double @llvm.fma.f64(double %1121, double %1114, double %1124)
  %1126 = fadd double %1122, %1125
  %1127 = fsub double %1126, %1122
  %1128 = fsub double %1111, %1126
  %1129 = fsub double %1111, %1128
  %1130 = fsub double %1129, %1126
  %1131 = fsub double %1127, %1125
  %1132 = fadd double %1131, %1130
  %1133 = fadd double %1128, %1132
  %1134 = fmul double %1120, %1133
  %1135 = fadd double %1121, %1134
  %1136 = fsub double %1135, %1121
  %1137 = fsub double %1134, %1136
  %1138 = fmul double %1135, %1135
  %1139 = fneg double %1138
  %1140 = tail call double @llvm.fma.f64(double %1135, double %1135, double %1139)
  %1141 = fmul double %1137, 2.000000e+00
  %1142 = tail call double @llvm.fma.f64(double %1135, double %1141, double %1140)
  %1143 = fadd double %1138, %1142
  %1144 = fsub double %1143, %1138
  %1145 = fsub double %1142, %1144
  %1146 = tail call double @llvm.fma.f64(double %1143, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1147 = tail call double @llvm.fma.f64(double %1143, double %1146, double 0x3FBE25E43ABE935A)
  %1148 = tail call double @llvm.fma.f64(double %1143, double %1147, double 0x3FC110EF47E6C9C2)
  %1149 = tail call double @llvm.fma.f64(double %1143, double %1148, double 0x3FC3B13BCFA74449)
  %1150 = tail call double @llvm.fma.f64(double %1143, double %1149, double 0x3FC745D171BF3C30)
  %1151 = tail call double @llvm.fma.f64(double %1143, double %1150, double 0x3FCC71C71C7792CE)
  %1152 = tail call double @llvm.fma.f64(double %1143, double %1151, double 0x3FD24924924920DA)
  %1153 = tail call double @llvm.fma.f64(double %1143, double %1152, double 0x3FD999999999999C)
  %1154 = sitofp i32 %1110 to double
  %1155 = fmul double %1154, 0x3FE62E42FEFA39EF
  %1156 = fneg double %1155
  %1157 = tail call double @llvm.fma.f64(double %1154, double 0x3FE62E42FEFA39EF, double %1156)
  %1158 = tail call double @llvm.fma.f64(double %1154, double 0x3C7ABC9E3B39803F, double %1157)
  %1159 = fadd double %1155, %1158
  %1160 = fsub double %1159, %1155
  %1161 = fsub double %1158, %1160
  %1162 = tail call double @llvm.ldexp.f64.i32(double %1135, i32 1)
  %1163 = tail call double @llvm.ldexp.f64.i32(double %1137, i32 1)
  %1164 = fmul double %1135, %1143
  %1165 = fneg double %1164
  %1166 = tail call double @llvm.fma.f64(double %1143, double %1135, double %1165)
  %1167 = tail call double @llvm.fma.f64(double %1143, double %1137, double %1166)
  %1168 = tail call double @llvm.fma.f64(double %1145, double %1135, double %1167)
  %1169 = fadd double %1164, %1168
  %1170 = fsub double %1169, %1164
  %1171 = fsub double %1168, %1170
  %1172 = fmul double %1143, %1153
  %1173 = fneg double %1172
  %1174 = tail call double @llvm.fma.f64(double %1143, double %1153, double %1173)
  %1175 = tail call double @llvm.fma.f64(double %1145, double %1153, double %1174)
  %1176 = fadd double %1172, %1175
  %1177 = fsub double %1176, %1172
  %1178 = fsub double %1175, %1177
  %1179 = fadd double %1176, 0x3FE5555555555555
  %1180 = fadd double %1179, 0xBFE5555555555555
  %1181 = fsub double %1176, %1180
  %1182 = fadd double %1178, 0x3C8543B0D5DF274D
  %1183 = fadd double %1182, %1181
  %1184 = fadd double %1179, %1183
  %1185 = fsub double %1179, %1184
  %1186 = fadd double %1183, %1185
  %1187 = fmul double %1169, %1184
  %1188 = fneg double %1187
  %1189 = tail call double @llvm.fma.f64(double %1169, double %1184, double %1188)
  %1190 = tail call double @llvm.fma.f64(double %1169, double %1186, double %1189)
  %1191 = tail call double @llvm.fma.f64(double %1171, double %1184, double %1190)
  %1192 = fadd double %1187, %1191
  %1193 = fsub double %1192, %1187
  %1194 = fsub double %1191, %1193
  %1195 = fadd double %1162, %1192
  %1196 = fsub double %1195, %1162
  %1197 = fsub double %1192, %1196
  %1198 = fadd double %1163, %1194
  %1199 = fadd double %1198, %1197
  %1200 = fadd double %1195, %1199
  %1201 = fsub double %1200, %1195
  %1202 = fsub double %1199, %1201
  %1203 = fadd double %1159, %1200
  %1204 = fsub double %1203, %1159
  %1205 = fsub double %1203, %1204
  %1206 = fsub double %1159, %1205
  %1207 = fsub double %1200, %1204
  %1208 = fadd double %1207, %1206
  %1209 = fadd double %1161, %1202
  %1210 = fsub double %1209, %1161
  %1211 = fsub double %1209, %1210
  %1212 = fsub double %1161, %1211
  %1213 = fsub double %1202, %1210
  %1214 = fadd double %1213, %1212
  %1215 = fadd double %1209, %1208
  %1216 = fadd double %1203, %1215
  %1217 = fsub double %1216, %1203
  %1218 = fsub double %1215, %1217
  %1219 = fadd double %1214, %1218
  %1220 = fadd double %1216, %1219
  %1221 = fsub double %1220, %1216
  %1222 = fsub double %1219, %1221
  %1223 = fmul double %1103, %1220
  %1224 = fneg double %1223
  %1225 = tail call double @llvm.fma.f64(double %1103, double %1220, double %1224) #9
  %1226 = tail call double @llvm.fma.f64(double %1103, double %1222, double %1225) #9
  %1227 = fadd double %1223, %1226
  %1228 = fsub double %1227, %1223
  %1229 = fsub double %1226, %1228
  %1230 = tail call double @llvm.fabs.f64(double %1223) #9
  %1231 = fcmp oeq double %1230, 0x7FF0000000000000
  %1232 = select i1 %1231, double %1223, double %1227
  %1233 = tail call double @llvm.fabs.f64(double %1232) #9
  %1234 = fcmp oeq double %1233, 0x7FF0000000000000
  %1235 = select i1 %1234, double 0.000000e+00, double %1229
  %1236 = fmul double %1232, 0x3FF71547652B82FE
  %1237 = tail call double @llvm.rint.f64(double %1236)
  %1238 = fneg double %1237
  %1239 = tail call double @llvm.fma.f64(double %1238, double 0x3FE62E42FEFA39EF, double %1232)
  %1240 = tail call double @llvm.fma.f64(double %1238, double 0x3C7ABC9E3B39803F, double %1239)
  %1241 = tail call double @llvm.fma.f64(double %1240, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1242 = tail call double @llvm.fma.f64(double %1240, double %1241, double 0x3EC71DEE623FDE64)
  %1243 = tail call double @llvm.fma.f64(double %1240, double %1242, double 0x3EFA01997C89E6B0)
  %1244 = tail call double @llvm.fma.f64(double %1240, double %1243, double 0x3F2A01A014761F6E)
  %1245 = tail call double @llvm.fma.f64(double %1240, double %1244, double 0x3F56C16C1852B7B0)
  %1246 = tail call double @llvm.fma.f64(double %1240, double %1245, double 0x3F81111111122322)
  %1247 = tail call double @llvm.fma.f64(double %1240, double %1246, double 0x3FA55555555502A1)
  %1248 = tail call double @llvm.fma.f64(double %1240, double %1247, double 0x3FC5555555555511)
  %1249 = tail call double @llvm.fma.f64(double %1240, double %1248, double 0x3FE000000000000B)
  %1250 = tail call double @llvm.fma.f64(double %1240, double %1249, double 1.000000e+00)
  %1251 = tail call double @llvm.fma.f64(double %1240, double %1250, double 1.000000e+00)
  %1252 = fptosi double %1237 to i32
  %1253 = tail call double @llvm.ldexp.f64.i32(double %1251, i32 %1252)
  %1254 = fcmp ogt double %1232, 1.024000e+03
  %1255 = select i1 %1254, double 0x7FF0000000000000, double %1253
  %1256 = fcmp olt double %1232, -1.075000e+03
  %1257 = select i1 %1256, double 0.000000e+00, double %1255
  %1258 = tail call double @llvm.fma.f64(double %1257, double %1235, double %1257) #9
  %1259 = tail call double @llvm.fabs.f64(double %1257) #9
  %1260 = fcmp oeq double %1259, 0x7FF0000000000000
  %1261 = select i1 %1260, double %1257, double %1258
  %1262 = tail call double @llvm.trunc.f64(double %1103) #9
  %1263 = fcmp oeq double %1262, %1103
  %1264 = fmul double %1103, 5.000000e-01
  %1265 = tail call double @llvm.trunc.f64(double %1264) #9
  %1266 = fcmp une double %1265, %1264
  %1267 = and i1 %1263, %1266
  %1268 = select i1 %1267, double %sub.i17.i, double 1.000000e+00
  %1269 = tail call double @llvm.copysign.f64(double %1261, double %1268) #9
  %1270 = fcmp olt double %sub.i17.i, 0.000000e+00
  %1271 = select i1 %1263, double %1269, double 0x7FF8000000000000
  %1272 = select i1 %1270, double %1271, double %1269
  %1273 = fcmp oeq double %1104, 0x7FF0000000000000
  %1274 = fcmp oeq double %sub.i17.i, 0.000000e+00
  %1275 = or i1 %1274, %1273
  %1276 = select i1 %1274, double 0.000000e+00, double 0x7FF0000000000000
  %1277 = select i1 %1267, double %sub.i17.i, double 0.000000e+00
  %1278 = tail call double @llvm.copysign.f64(double %1276, double %1277) #9
  %1279 = select i1 %1275, double %1278, double %1272
  %1280 = fcmp uno double %sub.i17.i, 0.000000e+00
  %1281 = select i1 %1280, double 0x7FF8000000000000, double %1279
  %sub1.i.i22.i = fsub double %add.i20.i, %agg.tmp.sroa.2.0.copyload
  %1282 = fcmp oeq double %sub1.i.i22.i, 1.000000e+00
  %1283 = select i1 %1282, double 1.000000e+00, double 2.000000e+00
  %1284 = tail call double @llvm.fabs.f64(double %sub1.i.i22.i) #9
  %1285 = tail call double @llvm.amdgcn.frexp.mant.f64(double %1284)
  %1286 = fcmp olt double %1285, 0x3FE5555555555555
  %.neg.i.i.i1.i.i23.i = sext i1 %1286 to i32
  %1287 = select i1 %1286, double 2.000000e+00, double 1.000000e+00
  %1288 = fmul double %1285, %1287
  %1289 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %1284)
  %1290 = add i32 %1289, %.neg.i.i.i1.i.i23.i
  %1291 = fadd double %1288, -1.000000e+00
  %1292 = fadd double %1288, 1.000000e+00
  %1293 = fadd double %1292, -1.000000e+00
  %1294 = fsub double %1288, %1293
  %1295 = tail call double @llvm.amdgcn.rcp.f64(double %1292)
  %1296 = fneg double %1292
  %1297 = tail call double @llvm.fma.f64(double %1296, double %1295, double 1.000000e+00)
  %1298 = tail call double @llvm.fma.f64(double %1297, double %1295, double %1295)
  %1299 = tail call double @llvm.fma.f64(double %1296, double %1298, double 1.000000e+00)
  %1300 = tail call double @llvm.fma.f64(double %1299, double %1298, double %1298)
  %1301 = fmul double %1291, %1300
  %1302 = fmul double %1292, %1301
  %1303 = fneg double %1302
  %1304 = tail call double @llvm.fma.f64(double %1301, double %1292, double %1303)
  %1305 = tail call double @llvm.fma.f64(double %1301, double %1294, double %1304)
  %1306 = fadd double %1302, %1305
  %1307 = fsub double %1306, %1302
  %1308 = fsub double %1291, %1306
  %1309 = fsub double %1291, %1308
  %1310 = fsub double %1309, %1306
  %1311 = fsub double %1307, %1305
  %1312 = fadd double %1311, %1310
  %1313 = fadd double %1308, %1312
  %1314 = fmul double %1300, %1313
  %1315 = fadd double %1301, %1314
  %1316 = fsub double %1315, %1301
  %1317 = fsub double %1314, %1316
  %1318 = fmul double %1315, %1315
  %1319 = fneg double %1318
  %1320 = tail call double @llvm.fma.f64(double %1315, double %1315, double %1319)
  %1321 = fmul double %1317, 2.000000e+00
  %1322 = tail call double @llvm.fma.f64(double %1315, double %1321, double %1320)
  %1323 = fadd double %1318, %1322
  %1324 = fsub double %1323, %1318
  %1325 = fsub double %1322, %1324
  %1326 = tail call double @llvm.fma.f64(double %1323, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1327 = tail call double @llvm.fma.f64(double %1323, double %1326, double 0x3FBE25E43ABE935A)
  %1328 = tail call double @llvm.fma.f64(double %1323, double %1327, double 0x3FC110EF47E6C9C2)
  %1329 = tail call double @llvm.fma.f64(double %1323, double %1328, double 0x3FC3B13BCFA74449)
  %1330 = tail call double @llvm.fma.f64(double %1323, double %1329, double 0x3FC745D171BF3C30)
  %1331 = tail call double @llvm.fma.f64(double %1323, double %1330, double 0x3FCC71C71C7792CE)
  %1332 = tail call double @llvm.fma.f64(double %1323, double %1331, double 0x3FD24924924920DA)
  %1333 = tail call double @llvm.fma.f64(double %1323, double %1332, double 0x3FD999999999999C)
  %1334 = sitofp i32 %1290 to double
  %1335 = fmul double %1334, 0x3FE62E42FEFA39EF
  %1336 = fneg double %1335
  %1337 = tail call double @llvm.fma.f64(double %1334, double 0x3FE62E42FEFA39EF, double %1336)
  %1338 = tail call double @llvm.fma.f64(double %1334, double 0x3C7ABC9E3B39803F, double %1337)
  %1339 = fadd double %1335, %1338
  %1340 = fsub double %1339, %1335
  %1341 = fsub double %1338, %1340
  %1342 = tail call double @llvm.ldexp.f64.i32(double %1315, i32 1)
  %1343 = tail call double @llvm.ldexp.f64.i32(double %1317, i32 1)
  %1344 = fmul double %1315, %1323
  %1345 = fneg double %1344
  %1346 = tail call double @llvm.fma.f64(double %1323, double %1315, double %1345)
  %1347 = tail call double @llvm.fma.f64(double %1323, double %1317, double %1346)
  %1348 = tail call double @llvm.fma.f64(double %1325, double %1315, double %1347)
  %1349 = fadd double %1344, %1348
  %1350 = fsub double %1349, %1344
  %1351 = fsub double %1348, %1350
  %1352 = fmul double %1323, %1333
  %1353 = fneg double %1352
  %1354 = tail call double @llvm.fma.f64(double %1323, double %1333, double %1353)
  %1355 = tail call double @llvm.fma.f64(double %1325, double %1333, double %1354)
  %1356 = fadd double %1352, %1355
  %1357 = fsub double %1356, %1352
  %1358 = fsub double %1355, %1357
  %1359 = fadd double %1356, 0x3FE5555555555555
  %1360 = fadd double %1359, 0xBFE5555555555555
  %1361 = fsub double %1356, %1360
  %1362 = fadd double %1358, 0x3C8543B0D5DF274D
  %1363 = fadd double %1362, %1361
  %1364 = fadd double %1359, %1363
  %1365 = fsub double %1359, %1364
  %1366 = fadd double %1363, %1365
  %1367 = fmul double %1349, %1364
  %1368 = fneg double %1367
  %1369 = tail call double @llvm.fma.f64(double %1349, double %1364, double %1368)
  %1370 = tail call double @llvm.fma.f64(double %1349, double %1366, double %1369)
  %1371 = tail call double @llvm.fma.f64(double %1351, double %1364, double %1370)
  %1372 = fadd double %1367, %1371
  %1373 = fsub double %1372, %1367
  %1374 = fsub double %1371, %1373
  %1375 = fadd double %1342, %1372
  %1376 = fsub double %1375, %1342
  %1377 = fsub double %1372, %1376
  %1378 = fadd double %1343, %1374
  %1379 = fadd double %1378, %1377
  %1380 = fadd double %1375, %1379
  %1381 = fsub double %1380, %1375
  %1382 = fsub double %1379, %1381
  %1383 = fadd double %1339, %1380
  %1384 = fsub double %1383, %1339
  %1385 = fsub double %1383, %1384
  %1386 = fsub double %1339, %1385
  %1387 = fsub double %1380, %1384
  %1388 = fadd double %1387, %1386
  %1389 = fadd double %1341, %1382
  %1390 = fsub double %1389, %1341
  %1391 = fsub double %1389, %1390
  %1392 = fsub double %1341, %1391
  %1393 = fsub double %1382, %1390
  %1394 = fadd double %1393, %1392
  %1395 = fadd double %1389, %1388
  %1396 = fadd double %1383, %1395
  %1397 = fsub double %1396, %1383
  %1398 = fsub double %1395, %1397
  %1399 = fadd double %1394, %1398
  %1400 = fadd double %1396, %1399
  %1401 = fsub double %1400, %1396
  %1402 = fsub double %1399, %1401
  %1403 = fmul double %1283, %1400
  %1404 = fneg double %1403
  %1405 = tail call double @llvm.fma.f64(double %1283, double %1400, double %1404) #9
  %1406 = tail call double @llvm.fma.f64(double %1283, double %1402, double %1405) #9
  %1407 = fadd double %1403, %1406
  %1408 = fsub double %1407, %1403
  %1409 = fsub double %1406, %1408
  %1410 = tail call double @llvm.fabs.f64(double %1403) #9
  %1411 = fcmp oeq double %1410, 0x7FF0000000000000
  %1412 = select i1 %1411, double %1403, double %1407
  %1413 = tail call double @llvm.fabs.f64(double %1412) #9
  %1414 = fcmp oeq double %1413, 0x7FF0000000000000
  %1415 = select i1 %1414, double 0.000000e+00, double %1409
  %1416 = fmul double %1412, 0x3FF71547652B82FE
  %1417 = tail call double @llvm.rint.f64(double %1416)
  %1418 = fneg double %1417
  %1419 = tail call double @llvm.fma.f64(double %1418, double 0x3FE62E42FEFA39EF, double %1412)
  %1420 = tail call double @llvm.fma.f64(double %1418, double 0x3C7ABC9E3B39803F, double %1419)
  %1421 = tail call double @llvm.fma.f64(double %1420, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1422 = tail call double @llvm.fma.f64(double %1420, double %1421, double 0x3EC71DEE623FDE64)
  %1423 = tail call double @llvm.fma.f64(double %1420, double %1422, double 0x3EFA01997C89E6B0)
  %1424 = tail call double @llvm.fma.f64(double %1420, double %1423, double 0x3F2A01A014761F6E)
  %1425 = tail call double @llvm.fma.f64(double %1420, double %1424, double 0x3F56C16C1852B7B0)
  %1426 = tail call double @llvm.fma.f64(double %1420, double %1425, double 0x3F81111111122322)
  %1427 = tail call double @llvm.fma.f64(double %1420, double %1426, double 0x3FA55555555502A1)
  %1428 = tail call double @llvm.fma.f64(double %1420, double %1427, double 0x3FC5555555555511)
  %1429 = tail call double @llvm.fma.f64(double %1420, double %1428, double 0x3FE000000000000B)
  %1430 = tail call double @llvm.fma.f64(double %1420, double %1429, double 1.000000e+00)
  %1431 = tail call double @llvm.fma.f64(double %1420, double %1430, double 1.000000e+00)
  %1432 = fptosi double %1417 to i32
  %1433 = tail call double @llvm.ldexp.f64.i32(double %1431, i32 %1432)
  %1434 = fcmp ogt double %1412, 1.024000e+03
  %1435 = select i1 %1434, double 0x7FF0000000000000, double %1433
  %1436 = fcmp olt double %1412, -1.075000e+03
  %1437 = select i1 %1436, double 0.000000e+00, double %1435
  %1438 = tail call double @llvm.fma.f64(double %1437, double %1415, double %1437) #9
  %1439 = tail call double @llvm.fabs.f64(double %1437) #9
  %1440 = fcmp oeq double %1439, 0x7FF0000000000000
  %1441 = select i1 %1440, double %1437, double %1438
  %1442 = tail call double @llvm.trunc.f64(double %1283) #9
  %1443 = fcmp oeq double %1442, %1283
  %1444 = fmul double %1283, 5.000000e-01
  %1445 = tail call double @llvm.trunc.f64(double %1444) #9
  %1446 = fcmp une double %1445, %1444
  %1447 = and i1 %1443, %1446
  %1448 = select i1 %1447, double %sub1.i.i22.i, double 1.000000e+00
  %1449 = tail call double @llvm.copysign.f64(double %1441, double %1448) #9
  %1450 = fcmp olt double %sub1.i.i22.i, 0.000000e+00
  %1451 = select i1 %1443, double %1449, double 0x7FF8000000000000
  %1452 = select i1 %1450, double %1451, double %1449
  %1453 = fcmp oeq double %1284, 0x7FF0000000000000
  %1454 = fcmp oeq double %sub1.i.i22.i, 0.000000e+00
  %1455 = or i1 %1454, %1453
  %1456 = select i1 %1454, double 0.000000e+00, double 0x7FF0000000000000
  %1457 = select i1 %1447, double %sub1.i.i22.i, double 0.000000e+00
  %1458 = tail call double @llvm.copysign.f64(double %1456, double %1457) #9
  %1459 = select i1 %1455, double %1458, double %1452
  %1460 = fcmp uno double %sub1.i.i22.i, 0.000000e+00
  %1461 = select i1 %1460, double 0x7FF8000000000000, double %1459
  %add.i.i24.i = fadd double %1281, %1461
  %sub3.i.i25.i = fsub double %add22.i.i, %add22.i.i
  %1462 = fcmp oeq double %sub3.i.i25.i, 1.000000e+00
  %1463 = select i1 %1462, double 1.000000e+00, double 2.000000e+00
  %1464 = tail call double @llvm.fabs.f64(double %sub3.i.i25.i) #9
  %1465 = tail call double @llvm.amdgcn.frexp.mant.f64(double %1464)
  %1466 = fcmp olt double %1465, 0x3FE5555555555555
  %.neg.i.i.i2.i.i26.i = sext i1 %1466 to i32
  %1467 = select i1 %1466, double 2.000000e+00, double 1.000000e+00
  %1468 = fmul double %1465, %1467
  %1469 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %1464)
  %1470 = add i32 %1469, %.neg.i.i.i2.i.i26.i
  %1471 = fadd double %1468, -1.000000e+00
  %1472 = fadd double %1468, 1.000000e+00
  %1473 = fadd double %1472, -1.000000e+00
  %1474 = fsub double %1468, %1473
  %1475 = tail call double @llvm.amdgcn.rcp.f64(double %1472)
  %1476 = fneg double %1472
  %1477 = tail call double @llvm.fma.f64(double %1476, double %1475, double 1.000000e+00)
  %1478 = tail call double @llvm.fma.f64(double %1477, double %1475, double %1475)
  %1479 = tail call double @llvm.fma.f64(double %1476, double %1478, double 1.000000e+00)
  %1480 = tail call double @llvm.fma.f64(double %1479, double %1478, double %1478)
  %1481 = fmul double %1471, %1480
  %1482 = fmul double %1472, %1481
  %1483 = fneg double %1482
  %1484 = tail call double @llvm.fma.f64(double %1481, double %1472, double %1483)
  %1485 = tail call double @llvm.fma.f64(double %1481, double %1474, double %1484)
  %1486 = fadd double %1482, %1485
  %1487 = fsub double %1486, %1482
  %1488 = fsub double %1471, %1486
  %1489 = fsub double %1471, %1488
  %1490 = fsub double %1489, %1486
  %1491 = fsub double %1487, %1485
  %1492 = fadd double %1491, %1490
  %1493 = fadd double %1488, %1492
  %1494 = fmul double %1480, %1493
  %1495 = fadd double %1481, %1494
  %1496 = fsub double %1495, %1481
  %1497 = fsub double %1494, %1496
  %1498 = fmul double %1495, %1495
  %1499 = fneg double %1498
  %1500 = tail call double @llvm.fma.f64(double %1495, double %1495, double %1499)
  %1501 = fmul double %1497, 2.000000e+00
  %1502 = tail call double @llvm.fma.f64(double %1495, double %1501, double %1500)
  %1503 = fadd double %1498, %1502
  %1504 = fsub double %1503, %1498
  %1505 = fsub double %1502, %1504
  %1506 = tail call double @llvm.fma.f64(double %1503, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1507 = tail call double @llvm.fma.f64(double %1503, double %1506, double 0x3FBE25E43ABE935A)
  %1508 = tail call double @llvm.fma.f64(double %1503, double %1507, double 0x3FC110EF47E6C9C2)
  %1509 = tail call double @llvm.fma.f64(double %1503, double %1508, double 0x3FC3B13BCFA74449)
  %1510 = tail call double @llvm.fma.f64(double %1503, double %1509, double 0x3FC745D171BF3C30)
  %1511 = tail call double @llvm.fma.f64(double %1503, double %1510, double 0x3FCC71C71C7792CE)
  %1512 = tail call double @llvm.fma.f64(double %1503, double %1511, double 0x3FD24924924920DA)
  %1513 = tail call double @llvm.fma.f64(double %1503, double %1512, double 0x3FD999999999999C)
  %1514 = sitofp i32 %1470 to double
  %1515 = fmul double %1514, 0x3FE62E42FEFA39EF
  %1516 = fneg double %1515
  %1517 = tail call double @llvm.fma.f64(double %1514, double 0x3FE62E42FEFA39EF, double %1516)
  %1518 = tail call double @llvm.fma.f64(double %1514, double 0x3C7ABC9E3B39803F, double %1517)
  %1519 = fadd double %1515, %1518
  %1520 = fsub double %1519, %1515
  %1521 = fsub double %1518, %1520
  %1522 = tail call double @llvm.ldexp.f64.i32(double %1495, i32 1)
  %1523 = tail call double @llvm.ldexp.f64.i32(double %1497, i32 1)
  %1524 = fmul double %1495, %1503
  %1525 = fneg double %1524
  %1526 = tail call double @llvm.fma.f64(double %1503, double %1495, double %1525)
  %1527 = tail call double @llvm.fma.f64(double %1503, double %1497, double %1526)
  %1528 = tail call double @llvm.fma.f64(double %1505, double %1495, double %1527)
  %1529 = fadd double %1524, %1528
  %1530 = fsub double %1529, %1524
  %1531 = fsub double %1528, %1530
  %1532 = fmul double %1503, %1513
  %1533 = fneg double %1532
  %1534 = tail call double @llvm.fma.f64(double %1503, double %1513, double %1533)
  %1535 = tail call double @llvm.fma.f64(double %1505, double %1513, double %1534)
  %1536 = fadd double %1532, %1535
  %1537 = fsub double %1536, %1532
  %1538 = fsub double %1535, %1537
  %1539 = fadd double %1536, 0x3FE5555555555555
  %1540 = fadd double %1539, 0xBFE5555555555555
  %1541 = fsub double %1536, %1540
  %1542 = fadd double %1538, 0x3C8543B0D5DF274D
  %1543 = fadd double %1542, %1541
  %1544 = fadd double %1539, %1543
  %1545 = fsub double %1539, %1544
  %1546 = fadd double %1543, %1545
  %1547 = fmul double %1529, %1544
  %1548 = fneg double %1547
  %1549 = tail call double @llvm.fma.f64(double %1529, double %1544, double %1548)
  %1550 = tail call double @llvm.fma.f64(double %1529, double %1546, double %1549)
  %1551 = tail call double @llvm.fma.f64(double %1531, double %1544, double %1550)
  %1552 = fadd double %1547, %1551
  %1553 = fsub double %1552, %1547
  %1554 = fsub double %1551, %1553
  %1555 = fadd double %1522, %1552
  %1556 = fsub double %1555, %1522
  %1557 = fsub double %1552, %1556
  %1558 = fadd double %1523, %1554
  %1559 = fadd double %1558, %1557
  %1560 = fadd double %1555, %1559
  %1561 = fsub double %1560, %1555
  %1562 = fsub double %1559, %1561
  %1563 = fadd double %1519, %1560
  %1564 = fsub double %1563, %1519
  %1565 = fsub double %1563, %1564
  %1566 = fsub double %1519, %1565
  %1567 = fsub double %1560, %1564
  %1568 = fadd double %1567, %1566
  %1569 = fadd double %1521, %1562
  %1570 = fsub double %1569, %1521
  %1571 = fsub double %1569, %1570
  %1572 = fsub double %1521, %1571
  %1573 = fsub double %1562, %1570
  %1574 = fadd double %1573, %1572
  %1575 = fadd double %1569, %1568
  %1576 = fadd double %1563, %1575
  %1577 = fsub double %1576, %1563
  %1578 = fsub double %1575, %1577
  %1579 = fadd double %1574, %1578
  %1580 = fadd double %1576, %1579
  %1581 = fsub double %1580, %1576
  %1582 = fsub double %1579, %1581
  %1583 = fmul double %1463, %1580
  %1584 = fneg double %1583
  %1585 = tail call double @llvm.fma.f64(double %1463, double %1580, double %1584) #9
  %1586 = tail call double @llvm.fma.f64(double %1463, double %1582, double %1585) #9
  %1587 = fadd double %1583, %1586
  %1588 = fsub double %1587, %1583
  %1589 = fsub double %1586, %1588
  %1590 = tail call double @llvm.fabs.f64(double %1583) #9
  %1591 = fcmp oeq double %1590, 0x7FF0000000000000
  %1592 = select i1 %1591, double %1583, double %1587
  %1593 = tail call double @llvm.fabs.f64(double %1592) #9
  %1594 = fcmp oeq double %1593, 0x7FF0000000000000
  %1595 = select i1 %1594, double 0.000000e+00, double %1589
  %1596 = fmul double %1592, 0x3FF71547652B82FE
  %1597 = tail call double @llvm.rint.f64(double %1596)
  %1598 = fneg double %1597
  %1599 = tail call double @llvm.fma.f64(double %1598, double 0x3FE62E42FEFA39EF, double %1592)
  %1600 = tail call double @llvm.fma.f64(double %1598, double 0x3C7ABC9E3B39803F, double %1599)
  %1601 = tail call double @llvm.fma.f64(double %1600, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1602 = tail call double @llvm.fma.f64(double %1600, double %1601, double 0x3EC71DEE623FDE64)
  %1603 = tail call double @llvm.fma.f64(double %1600, double %1602, double 0x3EFA01997C89E6B0)
  %1604 = tail call double @llvm.fma.f64(double %1600, double %1603, double 0x3F2A01A014761F6E)
  %1605 = tail call double @llvm.fma.f64(double %1600, double %1604, double 0x3F56C16C1852B7B0)
  %1606 = tail call double @llvm.fma.f64(double %1600, double %1605, double 0x3F81111111122322)
  %1607 = tail call double @llvm.fma.f64(double %1600, double %1606, double 0x3FA55555555502A1)
  %1608 = tail call double @llvm.fma.f64(double %1600, double %1607, double 0x3FC5555555555511)
  %1609 = tail call double @llvm.fma.f64(double %1600, double %1608, double 0x3FE000000000000B)
  %1610 = tail call double @llvm.fma.f64(double %1600, double %1609, double 1.000000e+00)
  %1611 = tail call double @llvm.fma.f64(double %1600, double %1610, double 1.000000e+00)
  %1612 = fptosi double %1597 to i32
  %1613 = tail call double @llvm.ldexp.f64.i32(double %1611, i32 %1612)
  %1614 = fcmp ogt double %1592, 1.024000e+03
  %1615 = select i1 %1614, double 0x7FF0000000000000, double %1613
  %1616 = fcmp olt double %1592, -1.075000e+03
  %1617 = select i1 %1616, double 0.000000e+00, double %1615
  %1618 = tail call double @llvm.fma.f64(double %1617, double %1595, double %1617) #9
  %1619 = tail call double @llvm.fabs.f64(double %1617) #9
  %1620 = fcmp oeq double %1619, 0x7FF0000000000000
  %1621 = select i1 %1620, double %1617, double %1618
  %1622 = tail call double @llvm.trunc.f64(double %1463) #9
  %1623 = fcmp oeq double %1622, %1463
  %1624 = fmul double %1463, 5.000000e-01
  %1625 = tail call double @llvm.trunc.f64(double %1624) #9
  %1626 = fcmp une double %1625, %1624
  %1627 = and i1 %1623, %1626
  %1628 = select i1 %1627, double %sub3.i.i25.i, double 1.000000e+00
  %1629 = tail call double @llvm.copysign.f64(double %1621, double %1628) #9
  %1630 = fcmp olt double %sub3.i.i25.i, 0.000000e+00
  %1631 = select i1 %1623, double %1629, double 0x7FF8000000000000
  %1632 = select i1 %1630, double %1631, double %1629
  %1633 = fcmp oeq double %1464, 0x7FF0000000000000
  %1634 = fcmp oeq double %sub3.i.i25.i, 0.000000e+00
  %1635 = or i1 %1634, %1633
  %1636 = select i1 %1634, double 0.000000e+00, double 0x7FF0000000000000
  %1637 = select i1 %1627, double %sub3.i.i25.i, double 0.000000e+00
  %1638 = tail call double @llvm.copysign.f64(double %1636, double %1637) #9
  %1639 = select i1 %1635, double %1638, double %1632
  %1640 = fcmp uno double %sub3.i.i25.i, 0.000000e+00
  %1641 = select i1 %1640, double 0x7FF8000000000000, double %1639
  %add5.i.i27.i = fadd double %1641, %add.i.i24.i
  %cmp.i.i28.i = fcmp olt double %add5.i.i27.i, 0x7FEFFFFFFFFFFFFF
  %min_dist.4.i.i = select i1 %cmp.i.i28.i, double %add5.i.i27.i, double 0x7FEFFFFFFFFFFFFF
  br label %if.end32.i.i

if.end32.i.i:                                     ; preds = %if.then26.i.i, %if.then.i16.i, %lor.lhs.false.i9.i
  %min_dist.0.i10.i = phi double [ 0x7FEFFFFFFFFFFFFF, %if.then.i16.i ], [ 0x7FEFFFFFFFFFFFFF, %lor.lhs.false.i9.i ], [ %min_dist.4.i.i, %if.then26.i.i ]
  %cmp33.i.i = fcmp olt double %agg.tmp.sroa.2.0.copyload, %1099
  %cmp35.i.i = fcmp ogt double %r1.sroa.5.0.copyload, %1099
  %or.cond9.i.i = select i1 %cmp33.i.i, i1 %cmp35.i.i, i1 false
  br i1 %or.cond9.i.i, label %if.then40.i.i, label %lor.lhs.false36.i.i

lor.lhs.false36.i.i:                              ; preds = %if.end32.i.i
  %cmp37.i.i = fcmp ogt double %agg.tmp.sroa.2.0.copyload, %1099
  %cmp39.i.i = fcmp olt double %r1.sroa.5.0.copyload, %1099
  %or.cond10.i.i = select i1 %cmp37.i.i, i1 %cmp39.i.i, i1 false
  br i1 %or.cond10.i.i, label %if.then40.i.i, label %if.end65.i.i

if.then40.i.i:                                    ; preds = %lor.lhs.false36.i.i, %if.end32.i.i
  %sub41.i.i = fsub double %1099, %agg.tmp.sroa.2.0.copyload
  %sub42.i.i = fsub double %r1.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %mul43.i.i = fmul double %sub42.i.i, %sub41.i.i
  %sub44.i.i = fsub double %r1.sroa.5.0.copyload, %agg.tmp.sroa.2.0.copyload
  %div45.i.i = fdiv double %mul43.i.i, %sub44.i.i
  %add46.i.i = fadd double %agg.tmp.sroa.0.0.copyload, %div45.i.i
  %cmp54.i.i = fcmp oge double %add46.i.i, %17
  %cmp56.i.i = fcmp olt double %add46.i.i, %1100
  %or.cond11.i.i = select i1 %cmp54.i.i, i1 %cmp56.i.i, i1 false
  br i1 %or.cond11.i.i, label %if.then57.i.i, label %if.end65.i.i

if.then57.i.i:                                    ; preds = %if.then40.i.i
  %sub49.i.i = fsub double %r1.sroa.7.0.copyload, %agg.tmp.sroa.3.0.copyload
  %mul50.i.i = fmul double %sub49.i.i, %sub41.i.i
  %div52.i.i = fdiv double %mul50.i.i, %sub44.i.i
  %add53.i.i = fadd double %agg.tmp.sroa.3.0.copyload, %div52.i.i
  %sub.i30.i.i = fsub double %add46.i.i, %agg.tmp.sroa.0.0.copyload
  %1642 = fcmp oeq double %sub.i30.i.i, 1.000000e+00
  %1643 = select i1 %1642, double 1.000000e+00, double 2.000000e+00
  %1644 = tail call double @llvm.fabs.f64(double %sub.i30.i.i) #9
  %1645 = tail call double @llvm.amdgcn.frexp.mant.f64(double %1644)
  %1646 = fcmp olt double %1645, 0x3FE5555555555555
  %.neg.i.i.i.i31.i.i = sext i1 %1646 to i32
  %1647 = select i1 %1646, double 2.000000e+00, double 1.000000e+00
  %1648 = fmul double %1645, %1647
  %1649 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %1644)
  %1650 = add i32 %1649, %.neg.i.i.i.i31.i.i
  %1651 = fadd double %1648, -1.000000e+00
  %1652 = fadd double %1648, 1.000000e+00
  %1653 = fadd double %1652, -1.000000e+00
  %1654 = fsub double %1648, %1653
  %1655 = tail call double @llvm.amdgcn.rcp.f64(double %1652)
  %1656 = fneg double %1652
  %1657 = tail call double @llvm.fma.f64(double %1656, double %1655, double 1.000000e+00)
  %1658 = tail call double @llvm.fma.f64(double %1657, double %1655, double %1655)
  %1659 = tail call double @llvm.fma.f64(double %1656, double %1658, double 1.000000e+00)
  %1660 = tail call double @llvm.fma.f64(double %1659, double %1658, double %1658)
  %1661 = fmul double %1651, %1660
  %1662 = fmul double %1652, %1661
  %1663 = fneg double %1662
  %1664 = tail call double @llvm.fma.f64(double %1661, double %1652, double %1663)
  %1665 = tail call double @llvm.fma.f64(double %1661, double %1654, double %1664)
  %1666 = fadd double %1662, %1665
  %1667 = fsub double %1666, %1662
  %1668 = fsub double %1651, %1666
  %1669 = fsub double %1651, %1668
  %1670 = fsub double %1669, %1666
  %1671 = fsub double %1667, %1665
  %1672 = fadd double %1671, %1670
  %1673 = fadd double %1668, %1672
  %1674 = fmul double %1660, %1673
  %1675 = fadd double %1661, %1674
  %1676 = fsub double %1675, %1661
  %1677 = fsub double %1674, %1676
  %1678 = fmul double %1675, %1675
  %1679 = fneg double %1678
  %1680 = tail call double @llvm.fma.f64(double %1675, double %1675, double %1679)
  %1681 = fmul double %1677, 2.000000e+00
  %1682 = tail call double @llvm.fma.f64(double %1675, double %1681, double %1680)
  %1683 = fadd double %1678, %1682
  %1684 = fsub double %1683, %1678
  %1685 = fsub double %1682, %1684
  %1686 = tail call double @llvm.fma.f64(double %1683, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1687 = tail call double @llvm.fma.f64(double %1683, double %1686, double 0x3FBE25E43ABE935A)
  %1688 = tail call double @llvm.fma.f64(double %1683, double %1687, double 0x3FC110EF47E6C9C2)
  %1689 = tail call double @llvm.fma.f64(double %1683, double %1688, double 0x3FC3B13BCFA74449)
  %1690 = tail call double @llvm.fma.f64(double %1683, double %1689, double 0x3FC745D171BF3C30)
  %1691 = tail call double @llvm.fma.f64(double %1683, double %1690, double 0x3FCC71C71C7792CE)
  %1692 = tail call double @llvm.fma.f64(double %1683, double %1691, double 0x3FD24924924920DA)
  %1693 = tail call double @llvm.fma.f64(double %1683, double %1692, double 0x3FD999999999999C)
  %1694 = sitofp i32 %1650 to double
  %1695 = fmul double %1694, 0x3FE62E42FEFA39EF
  %1696 = fneg double %1695
  %1697 = tail call double @llvm.fma.f64(double %1694, double 0x3FE62E42FEFA39EF, double %1696)
  %1698 = tail call double @llvm.fma.f64(double %1694, double 0x3C7ABC9E3B39803F, double %1697)
  %1699 = fadd double %1695, %1698
  %1700 = fsub double %1699, %1695
  %1701 = fsub double %1698, %1700
  %1702 = tail call double @llvm.ldexp.f64.i32(double %1675, i32 1)
  %1703 = tail call double @llvm.ldexp.f64.i32(double %1677, i32 1)
  %1704 = fmul double %1675, %1683
  %1705 = fneg double %1704
  %1706 = tail call double @llvm.fma.f64(double %1683, double %1675, double %1705)
  %1707 = tail call double @llvm.fma.f64(double %1683, double %1677, double %1706)
  %1708 = tail call double @llvm.fma.f64(double %1685, double %1675, double %1707)
  %1709 = fadd double %1704, %1708
  %1710 = fsub double %1709, %1704
  %1711 = fsub double %1708, %1710
  %1712 = fmul double %1683, %1693
  %1713 = fneg double %1712
  %1714 = tail call double @llvm.fma.f64(double %1683, double %1693, double %1713)
  %1715 = tail call double @llvm.fma.f64(double %1685, double %1693, double %1714)
  %1716 = fadd double %1712, %1715
  %1717 = fsub double %1716, %1712
  %1718 = fsub double %1715, %1717
  %1719 = fadd double %1716, 0x3FE5555555555555
  %1720 = fadd double %1719, 0xBFE5555555555555
  %1721 = fsub double %1716, %1720
  %1722 = fadd double %1718, 0x3C8543B0D5DF274D
  %1723 = fadd double %1722, %1721
  %1724 = fadd double %1719, %1723
  %1725 = fsub double %1719, %1724
  %1726 = fadd double %1723, %1725
  %1727 = fmul double %1709, %1724
  %1728 = fneg double %1727
  %1729 = tail call double @llvm.fma.f64(double %1709, double %1724, double %1728)
  %1730 = tail call double @llvm.fma.f64(double %1709, double %1726, double %1729)
  %1731 = tail call double @llvm.fma.f64(double %1711, double %1724, double %1730)
  %1732 = fadd double %1727, %1731
  %1733 = fsub double %1732, %1727
  %1734 = fsub double %1731, %1733
  %1735 = fadd double %1702, %1732
  %1736 = fsub double %1735, %1702
  %1737 = fsub double %1732, %1736
  %1738 = fadd double %1703, %1734
  %1739 = fadd double %1738, %1737
  %1740 = fadd double %1735, %1739
  %1741 = fsub double %1740, %1735
  %1742 = fsub double %1739, %1741
  %1743 = fadd double %1699, %1740
  %1744 = fsub double %1743, %1699
  %1745 = fsub double %1743, %1744
  %1746 = fsub double %1699, %1745
  %1747 = fsub double %1740, %1744
  %1748 = fadd double %1747, %1746
  %1749 = fadd double %1701, %1742
  %1750 = fsub double %1749, %1701
  %1751 = fsub double %1749, %1750
  %1752 = fsub double %1701, %1751
  %1753 = fsub double %1742, %1750
  %1754 = fadd double %1753, %1752
  %1755 = fadd double %1749, %1748
  %1756 = fadd double %1743, %1755
  %1757 = fsub double %1756, %1743
  %1758 = fsub double %1755, %1757
  %1759 = fadd double %1754, %1758
  %1760 = fadd double %1756, %1759
  %1761 = fsub double %1760, %1756
  %1762 = fsub double %1759, %1761
  %1763 = fmul double %1643, %1760
  %1764 = fneg double %1763
  %1765 = tail call double @llvm.fma.f64(double %1643, double %1760, double %1764) #9
  %1766 = tail call double @llvm.fma.f64(double %1643, double %1762, double %1765) #9
  %1767 = fadd double %1763, %1766
  %1768 = fsub double %1767, %1763
  %1769 = fsub double %1766, %1768
  %1770 = tail call double @llvm.fabs.f64(double %1763) #9
  %1771 = fcmp oeq double %1770, 0x7FF0000000000000
  %1772 = select i1 %1771, double %1763, double %1767
  %1773 = tail call double @llvm.fabs.f64(double %1772) #9
  %1774 = fcmp oeq double %1773, 0x7FF0000000000000
  %1775 = select i1 %1774, double 0.000000e+00, double %1769
  %1776 = fmul double %1772, 0x3FF71547652B82FE
  %1777 = tail call double @llvm.rint.f64(double %1776)
  %1778 = fneg double %1777
  %1779 = tail call double @llvm.fma.f64(double %1778, double 0x3FE62E42FEFA39EF, double %1772)
  %1780 = tail call double @llvm.fma.f64(double %1778, double 0x3C7ABC9E3B39803F, double %1779)
  %1781 = tail call double @llvm.fma.f64(double %1780, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1782 = tail call double @llvm.fma.f64(double %1780, double %1781, double 0x3EC71DEE623FDE64)
  %1783 = tail call double @llvm.fma.f64(double %1780, double %1782, double 0x3EFA01997C89E6B0)
  %1784 = tail call double @llvm.fma.f64(double %1780, double %1783, double 0x3F2A01A014761F6E)
  %1785 = tail call double @llvm.fma.f64(double %1780, double %1784, double 0x3F56C16C1852B7B0)
  %1786 = tail call double @llvm.fma.f64(double %1780, double %1785, double 0x3F81111111122322)
  %1787 = tail call double @llvm.fma.f64(double %1780, double %1786, double 0x3FA55555555502A1)
  %1788 = tail call double @llvm.fma.f64(double %1780, double %1787, double 0x3FC5555555555511)
  %1789 = tail call double @llvm.fma.f64(double %1780, double %1788, double 0x3FE000000000000B)
  %1790 = tail call double @llvm.fma.f64(double %1780, double %1789, double 1.000000e+00)
  %1791 = tail call double @llvm.fma.f64(double %1780, double %1790, double 1.000000e+00)
  %1792 = fptosi double %1777 to i32
  %1793 = tail call double @llvm.ldexp.f64.i32(double %1791, i32 %1792)
  %1794 = fcmp ogt double %1772, 1.024000e+03
  %1795 = select i1 %1794, double 0x7FF0000000000000, double %1793
  %1796 = fcmp olt double %1772, -1.075000e+03
  %1797 = select i1 %1796, double 0.000000e+00, double %1795
  %1798 = tail call double @llvm.fma.f64(double %1797, double %1775, double %1797) #9
  %1799 = tail call double @llvm.fabs.f64(double %1797) #9
  %1800 = fcmp oeq double %1799, 0x7FF0000000000000
  %1801 = select i1 %1800, double %1797, double %1798
  %1802 = tail call double @llvm.trunc.f64(double %1643) #9
  %1803 = fcmp oeq double %1802, %1643
  %1804 = fmul double %1643, 5.000000e-01
  %1805 = tail call double @llvm.trunc.f64(double %1804) #9
  %1806 = fcmp une double %1805, %1804
  %1807 = and i1 %1803, %1806
  %1808 = select i1 %1807, double %sub.i30.i.i, double 1.000000e+00
  %1809 = tail call double @llvm.copysign.f64(double %1801, double %1808) #9
  %1810 = fcmp olt double %sub.i30.i.i, 0.000000e+00
  %1811 = select i1 %1803, double %1809, double 0x7FF8000000000000
  %1812 = select i1 %1810, double %1811, double %1809
  %1813 = fcmp oeq double %1644, 0x7FF0000000000000
  %1814 = fcmp oeq double %sub.i30.i.i, 0.000000e+00
  %1815 = or i1 %1814, %1813
  %1816 = select i1 %1814, double 0.000000e+00, double 0x7FF0000000000000
  %1817 = select i1 %1807, double %sub.i30.i.i, double 0.000000e+00
  %1818 = tail call double @llvm.copysign.f64(double %1816, double %1817) #9
  %1819 = select i1 %1815, double %1818, double %1812
  %1820 = fcmp uno double %sub.i30.i.i, 0.000000e+00
  %1821 = select i1 %1820, double 0x7FF8000000000000, double %1819
  %1822 = fcmp oeq double %sub41.i.i, 1.000000e+00
  %1823 = select i1 %1822, double 1.000000e+00, double 2.000000e+00
  %1824 = tail call double @llvm.fabs.f64(double %sub41.i.i) #9
  %1825 = tail call double @llvm.amdgcn.frexp.mant.f64(double %1824)
  %1826 = fcmp olt double %1825, 0x3FE5555555555555
  %.neg.i.i.i1.i33.i.i = sext i1 %1826 to i32
  %1827 = select i1 %1826, double 2.000000e+00, double 1.000000e+00
  %1828 = fmul double %1825, %1827
  %1829 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %1824)
  %1830 = add i32 %1829, %.neg.i.i.i1.i33.i.i
  %1831 = fadd double %1828, -1.000000e+00
  %1832 = fadd double %1828, 1.000000e+00
  %1833 = fadd double %1832, -1.000000e+00
  %1834 = fsub double %1828, %1833
  %1835 = tail call double @llvm.amdgcn.rcp.f64(double %1832)
  %1836 = fneg double %1832
  %1837 = tail call double @llvm.fma.f64(double %1836, double %1835, double 1.000000e+00)
  %1838 = tail call double @llvm.fma.f64(double %1837, double %1835, double %1835)
  %1839 = tail call double @llvm.fma.f64(double %1836, double %1838, double 1.000000e+00)
  %1840 = tail call double @llvm.fma.f64(double %1839, double %1838, double %1838)
  %1841 = fmul double %1831, %1840
  %1842 = fmul double %1832, %1841
  %1843 = fneg double %1842
  %1844 = tail call double @llvm.fma.f64(double %1841, double %1832, double %1843)
  %1845 = tail call double @llvm.fma.f64(double %1841, double %1834, double %1844)
  %1846 = fadd double %1842, %1845
  %1847 = fsub double %1846, %1842
  %1848 = fsub double %1831, %1846
  %1849 = fsub double %1831, %1848
  %1850 = fsub double %1849, %1846
  %1851 = fsub double %1847, %1845
  %1852 = fadd double %1851, %1850
  %1853 = fadd double %1848, %1852
  %1854 = fmul double %1840, %1853
  %1855 = fadd double %1841, %1854
  %1856 = fsub double %1855, %1841
  %1857 = fsub double %1854, %1856
  %1858 = fmul double %1855, %1855
  %1859 = fneg double %1858
  %1860 = tail call double @llvm.fma.f64(double %1855, double %1855, double %1859)
  %1861 = fmul double %1857, 2.000000e+00
  %1862 = tail call double @llvm.fma.f64(double %1855, double %1861, double %1860)
  %1863 = fadd double %1858, %1862
  %1864 = fsub double %1863, %1858
  %1865 = fsub double %1862, %1864
  %1866 = tail call double @llvm.fma.f64(double %1863, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1867 = tail call double @llvm.fma.f64(double %1863, double %1866, double 0x3FBE25E43ABE935A)
  %1868 = tail call double @llvm.fma.f64(double %1863, double %1867, double 0x3FC110EF47E6C9C2)
  %1869 = tail call double @llvm.fma.f64(double %1863, double %1868, double 0x3FC3B13BCFA74449)
  %1870 = tail call double @llvm.fma.f64(double %1863, double %1869, double 0x3FC745D171BF3C30)
  %1871 = tail call double @llvm.fma.f64(double %1863, double %1870, double 0x3FCC71C71C7792CE)
  %1872 = tail call double @llvm.fma.f64(double %1863, double %1871, double 0x3FD24924924920DA)
  %1873 = tail call double @llvm.fma.f64(double %1863, double %1872, double 0x3FD999999999999C)
  %1874 = sitofp i32 %1830 to double
  %1875 = fmul double %1874, 0x3FE62E42FEFA39EF
  %1876 = fneg double %1875
  %1877 = tail call double @llvm.fma.f64(double %1874, double 0x3FE62E42FEFA39EF, double %1876)
  %1878 = tail call double @llvm.fma.f64(double %1874, double 0x3C7ABC9E3B39803F, double %1877)
  %1879 = fadd double %1875, %1878
  %1880 = fsub double %1879, %1875
  %1881 = fsub double %1878, %1880
  %1882 = tail call double @llvm.ldexp.f64.i32(double %1855, i32 1)
  %1883 = tail call double @llvm.ldexp.f64.i32(double %1857, i32 1)
  %1884 = fmul double %1855, %1863
  %1885 = fneg double %1884
  %1886 = tail call double @llvm.fma.f64(double %1863, double %1855, double %1885)
  %1887 = tail call double @llvm.fma.f64(double %1863, double %1857, double %1886)
  %1888 = tail call double @llvm.fma.f64(double %1865, double %1855, double %1887)
  %1889 = fadd double %1884, %1888
  %1890 = fsub double %1889, %1884
  %1891 = fsub double %1888, %1890
  %1892 = fmul double %1863, %1873
  %1893 = fneg double %1892
  %1894 = tail call double @llvm.fma.f64(double %1863, double %1873, double %1893)
  %1895 = tail call double @llvm.fma.f64(double %1865, double %1873, double %1894)
  %1896 = fadd double %1892, %1895
  %1897 = fsub double %1896, %1892
  %1898 = fsub double %1895, %1897
  %1899 = fadd double %1896, 0x3FE5555555555555
  %1900 = fadd double %1899, 0xBFE5555555555555
  %1901 = fsub double %1896, %1900
  %1902 = fadd double %1898, 0x3C8543B0D5DF274D
  %1903 = fadd double %1902, %1901
  %1904 = fadd double %1899, %1903
  %1905 = fsub double %1899, %1904
  %1906 = fadd double %1903, %1905
  %1907 = fmul double %1889, %1904
  %1908 = fneg double %1907
  %1909 = tail call double @llvm.fma.f64(double %1889, double %1904, double %1908)
  %1910 = tail call double @llvm.fma.f64(double %1889, double %1906, double %1909)
  %1911 = tail call double @llvm.fma.f64(double %1891, double %1904, double %1910)
  %1912 = fadd double %1907, %1911
  %1913 = fsub double %1912, %1907
  %1914 = fsub double %1911, %1913
  %1915 = fadd double %1882, %1912
  %1916 = fsub double %1915, %1882
  %1917 = fsub double %1912, %1916
  %1918 = fadd double %1883, %1914
  %1919 = fadd double %1918, %1917
  %1920 = fadd double %1915, %1919
  %1921 = fsub double %1920, %1915
  %1922 = fsub double %1919, %1921
  %1923 = fadd double %1879, %1920
  %1924 = fsub double %1923, %1879
  %1925 = fsub double %1923, %1924
  %1926 = fsub double %1879, %1925
  %1927 = fsub double %1920, %1924
  %1928 = fadd double %1927, %1926
  %1929 = fadd double %1881, %1922
  %1930 = fsub double %1929, %1881
  %1931 = fsub double %1929, %1930
  %1932 = fsub double %1881, %1931
  %1933 = fsub double %1922, %1930
  %1934 = fadd double %1933, %1932
  %1935 = fadd double %1929, %1928
  %1936 = fadd double %1923, %1935
  %1937 = fsub double %1936, %1923
  %1938 = fsub double %1935, %1937
  %1939 = fadd double %1934, %1938
  %1940 = fadd double %1936, %1939
  %1941 = fsub double %1940, %1936
  %1942 = fsub double %1939, %1941
  %1943 = fmul double %1823, %1940
  %1944 = fneg double %1943
  %1945 = tail call double @llvm.fma.f64(double %1823, double %1940, double %1944) #9
  %1946 = tail call double @llvm.fma.f64(double %1823, double %1942, double %1945) #9
  %1947 = fadd double %1943, %1946
  %1948 = fsub double %1947, %1943
  %1949 = fsub double %1946, %1948
  %1950 = tail call double @llvm.fabs.f64(double %1943) #9
  %1951 = fcmp oeq double %1950, 0x7FF0000000000000
  %1952 = select i1 %1951, double %1943, double %1947
  %1953 = tail call double @llvm.fabs.f64(double %1952) #9
  %1954 = fcmp oeq double %1953, 0x7FF0000000000000
  %1955 = select i1 %1954, double 0.000000e+00, double %1949
  %1956 = fmul double %1952, 0x3FF71547652B82FE
  %1957 = tail call double @llvm.rint.f64(double %1956)
  %1958 = fneg double %1957
  %1959 = tail call double @llvm.fma.f64(double %1958, double 0x3FE62E42FEFA39EF, double %1952)
  %1960 = tail call double @llvm.fma.f64(double %1958, double 0x3C7ABC9E3B39803F, double %1959)
  %1961 = tail call double @llvm.fma.f64(double %1960, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1962 = tail call double @llvm.fma.f64(double %1960, double %1961, double 0x3EC71DEE623FDE64)
  %1963 = tail call double @llvm.fma.f64(double %1960, double %1962, double 0x3EFA01997C89E6B0)
  %1964 = tail call double @llvm.fma.f64(double %1960, double %1963, double 0x3F2A01A014761F6E)
  %1965 = tail call double @llvm.fma.f64(double %1960, double %1964, double 0x3F56C16C1852B7B0)
  %1966 = tail call double @llvm.fma.f64(double %1960, double %1965, double 0x3F81111111122322)
  %1967 = tail call double @llvm.fma.f64(double %1960, double %1966, double 0x3FA55555555502A1)
  %1968 = tail call double @llvm.fma.f64(double %1960, double %1967, double 0x3FC5555555555511)
  %1969 = tail call double @llvm.fma.f64(double %1960, double %1968, double 0x3FE000000000000B)
  %1970 = tail call double @llvm.fma.f64(double %1960, double %1969, double 1.000000e+00)
  %1971 = tail call double @llvm.fma.f64(double %1960, double %1970, double 1.000000e+00)
  %1972 = fptosi double %1957 to i32
  %1973 = tail call double @llvm.ldexp.f64.i32(double %1971, i32 %1972)
  %1974 = fcmp ogt double %1952, 1.024000e+03
  %1975 = select i1 %1974, double 0x7FF0000000000000, double %1973
  %1976 = fcmp olt double %1952, -1.075000e+03
  %1977 = select i1 %1976, double 0.000000e+00, double %1975
  %1978 = tail call double @llvm.fma.f64(double %1977, double %1955, double %1977) #9
  %1979 = tail call double @llvm.fabs.f64(double %1977) #9
  %1980 = fcmp oeq double %1979, 0x7FF0000000000000
  %1981 = select i1 %1980, double %1977, double %1978
  %1982 = tail call double @llvm.trunc.f64(double %1823) #9
  %1983 = fcmp oeq double %1982, %1823
  %1984 = fmul double %1823, 5.000000e-01
  %1985 = tail call double @llvm.trunc.f64(double %1984) #9
  %1986 = fcmp une double %1985, %1984
  %1987 = and i1 %1983, %1986
  %1988 = select i1 %1987, double %sub41.i.i, double 1.000000e+00
  %1989 = tail call double @llvm.copysign.f64(double %1981, double %1988) #9
  %1990 = fcmp olt double %sub41.i.i, 0.000000e+00
  %1991 = select i1 %1983, double %1989, double 0x7FF8000000000000
  %1992 = select i1 %1990, double %1991, double %1989
  %1993 = fcmp oeq double %1824, 0x7FF0000000000000
  %1994 = fcmp oeq double %sub41.i.i, 0.000000e+00
  %1995 = or i1 %1994, %1993
  %1996 = select i1 %1994, double 0.000000e+00, double 0x7FF0000000000000
  %1997 = select i1 %1987, double %sub41.i.i, double 0.000000e+00
  %1998 = tail call double @llvm.copysign.f64(double %1996, double %1997) #9
  %1999 = select i1 %1995, double %1998, double %1992
  %2000 = fcmp uno double %sub41.i.i, 0.000000e+00
  %2001 = select i1 %2000, double 0x7FF8000000000000, double %1999
  %add.i34.i.i = fadd double %2001, %1821
  %sub3.i35.i.i = fsub double %add53.i.i, %add53.i.i
  %2002 = fcmp oeq double %sub3.i35.i.i, 1.000000e+00
  %2003 = select i1 %2002, double 1.000000e+00, double 2.000000e+00
  %2004 = tail call double @llvm.fabs.f64(double %sub3.i35.i.i) #9
  %2005 = tail call double @llvm.amdgcn.frexp.mant.f64(double %2004)
  %2006 = fcmp olt double %2005, 0x3FE5555555555555
  %.neg.i.i.i2.i36.i.i = sext i1 %2006 to i32
  %2007 = select i1 %2006, double 2.000000e+00, double 1.000000e+00
  %2008 = fmul double %2005, %2007
  %2009 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %2004)
  %2010 = add i32 %2009, %.neg.i.i.i2.i36.i.i
  %2011 = fadd double %2008, -1.000000e+00
  %2012 = fadd double %2008, 1.000000e+00
  %2013 = fadd double %2012, -1.000000e+00
  %2014 = fsub double %2008, %2013
  %2015 = tail call double @llvm.amdgcn.rcp.f64(double %2012)
  %2016 = fneg double %2012
  %2017 = tail call double @llvm.fma.f64(double %2016, double %2015, double 1.000000e+00)
  %2018 = tail call double @llvm.fma.f64(double %2017, double %2015, double %2015)
  %2019 = tail call double @llvm.fma.f64(double %2016, double %2018, double 1.000000e+00)
  %2020 = tail call double @llvm.fma.f64(double %2019, double %2018, double %2018)
  %2021 = fmul double %2011, %2020
  %2022 = fmul double %2012, %2021
  %2023 = fneg double %2022
  %2024 = tail call double @llvm.fma.f64(double %2021, double %2012, double %2023)
  %2025 = tail call double @llvm.fma.f64(double %2021, double %2014, double %2024)
  %2026 = fadd double %2022, %2025
  %2027 = fsub double %2026, %2022
  %2028 = fsub double %2011, %2026
  %2029 = fsub double %2011, %2028
  %2030 = fsub double %2029, %2026
  %2031 = fsub double %2027, %2025
  %2032 = fadd double %2031, %2030
  %2033 = fadd double %2028, %2032
  %2034 = fmul double %2020, %2033
  %2035 = fadd double %2021, %2034
  %2036 = fsub double %2035, %2021
  %2037 = fsub double %2034, %2036
  %2038 = fmul double %2035, %2035
  %2039 = fneg double %2038
  %2040 = tail call double @llvm.fma.f64(double %2035, double %2035, double %2039)
  %2041 = fmul double %2037, 2.000000e+00
  %2042 = tail call double @llvm.fma.f64(double %2035, double %2041, double %2040)
  %2043 = fadd double %2038, %2042
  %2044 = fsub double %2043, %2038
  %2045 = fsub double %2042, %2044
  %2046 = tail call double @llvm.fma.f64(double %2043, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %2047 = tail call double @llvm.fma.f64(double %2043, double %2046, double 0x3FBE25E43ABE935A)
  %2048 = tail call double @llvm.fma.f64(double %2043, double %2047, double 0x3FC110EF47E6C9C2)
  %2049 = tail call double @llvm.fma.f64(double %2043, double %2048, double 0x3FC3B13BCFA74449)
  %2050 = tail call double @llvm.fma.f64(double %2043, double %2049, double 0x3FC745D171BF3C30)
  %2051 = tail call double @llvm.fma.f64(double %2043, double %2050, double 0x3FCC71C71C7792CE)
  %2052 = tail call double @llvm.fma.f64(double %2043, double %2051, double 0x3FD24924924920DA)
  %2053 = tail call double @llvm.fma.f64(double %2043, double %2052, double 0x3FD999999999999C)
  %2054 = sitofp i32 %2010 to double
  %2055 = fmul double %2054, 0x3FE62E42FEFA39EF
  %2056 = fneg double %2055
  %2057 = tail call double @llvm.fma.f64(double %2054, double 0x3FE62E42FEFA39EF, double %2056)
  %2058 = tail call double @llvm.fma.f64(double %2054, double 0x3C7ABC9E3B39803F, double %2057)
  %2059 = fadd double %2055, %2058
  %2060 = fsub double %2059, %2055
  %2061 = fsub double %2058, %2060
  %2062 = tail call double @llvm.ldexp.f64.i32(double %2035, i32 1)
  %2063 = tail call double @llvm.ldexp.f64.i32(double %2037, i32 1)
  %2064 = fmul double %2035, %2043
  %2065 = fneg double %2064
  %2066 = tail call double @llvm.fma.f64(double %2043, double %2035, double %2065)
  %2067 = tail call double @llvm.fma.f64(double %2043, double %2037, double %2066)
  %2068 = tail call double @llvm.fma.f64(double %2045, double %2035, double %2067)
  %2069 = fadd double %2064, %2068
  %2070 = fsub double %2069, %2064
  %2071 = fsub double %2068, %2070
  %2072 = fmul double %2043, %2053
  %2073 = fneg double %2072
  %2074 = tail call double @llvm.fma.f64(double %2043, double %2053, double %2073)
  %2075 = tail call double @llvm.fma.f64(double %2045, double %2053, double %2074)
  %2076 = fadd double %2072, %2075
  %2077 = fsub double %2076, %2072
  %2078 = fsub double %2075, %2077
  %2079 = fadd double %2076, 0x3FE5555555555555
  %2080 = fadd double %2079, 0xBFE5555555555555
  %2081 = fsub double %2076, %2080
  %2082 = fadd double %2078, 0x3C8543B0D5DF274D
  %2083 = fadd double %2082, %2081
  %2084 = fadd double %2079, %2083
  %2085 = fsub double %2079, %2084
  %2086 = fadd double %2083, %2085
  %2087 = fmul double %2069, %2084
  %2088 = fneg double %2087
  %2089 = tail call double @llvm.fma.f64(double %2069, double %2084, double %2088)
  %2090 = tail call double @llvm.fma.f64(double %2069, double %2086, double %2089)
  %2091 = tail call double @llvm.fma.f64(double %2071, double %2084, double %2090)
  %2092 = fadd double %2087, %2091
  %2093 = fsub double %2092, %2087
  %2094 = fsub double %2091, %2093
  %2095 = fadd double %2062, %2092
  %2096 = fsub double %2095, %2062
  %2097 = fsub double %2092, %2096
  %2098 = fadd double %2063, %2094
  %2099 = fadd double %2098, %2097
  %2100 = fadd double %2095, %2099
  %2101 = fsub double %2100, %2095
  %2102 = fsub double %2099, %2101
  %2103 = fadd double %2059, %2100
  %2104 = fsub double %2103, %2059
  %2105 = fsub double %2103, %2104
  %2106 = fsub double %2059, %2105
  %2107 = fsub double %2100, %2104
  %2108 = fadd double %2107, %2106
  %2109 = fadd double %2061, %2102
  %2110 = fsub double %2109, %2061
  %2111 = fsub double %2109, %2110
  %2112 = fsub double %2061, %2111
  %2113 = fsub double %2102, %2110
  %2114 = fadd double %2113, %2112
  %2115 = fadd double %2109, %2108
  %2116 = fadd double %2103, %2115
  %2117 = fsub double %2116, %2103
  %2118 = fsub double %2115, %2117
  %2119 = fadd double %2114, %2118
  %2120 = fadd double %2116, %2119
  %2121 = fsub double %2120, %2116
  %2122 = fsub double %2119, %2121
  %2123 = fmul double %2003, %2120
  %2124 = fneg double %2123
  %2125 = tail call double @llvm.fma.f64(double %2003, double %2120, double %2124) #9
  %2126 = tail call double @llvm.fma.f64(double %2003, double %2122, double %2125) #9
  %2127 = fadd double %2123, %2126
  %2128 = fsub double %2127, %2123
  %2129 = fsub double %2126, %2128
  %2130 = tail call double @llvm.fabs.f64(double %2123) #9
  %2131 = fcmp oeq double %2130, 0x7FF0000000000000
  %2132 = select i1 %2131, double %2123, double %2127
  %2133 = tail call double @llvm.fabs.f64(double %2132) #9
  %2134 = fcmp oeq double %2133, 0x7FF0000000000000
  %2135 = select i1 %2134, double 0.000000e+00, double %2129
  %2136 = fmul double %2132, 0x3FF71547652B82FE
  %2137 = tail call double @llvm.rint.f64(double %2136)
  %2138 = fneg double %2137
  %2139 = tail call double @llvm.fma.f64(double %2138, double 0x3FE62E42FEFA39EF, double %2132)
  %2140 = tail call double @llvm.fma.f64(double %2138, double 0x3C7ABC9E3B39803F, double %2139)
  %2141 = tail call double @llvm.fma.f64(double %2140, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2142 = tail call double @llvm.fma.f64(double %2140, double %2141, double 0x3EC71DEE623FDE64)
  %2143 = tail call double @llvm.fma.f64(double %2140, double %2142, double 0x3EFA01997C89E6B0)
  %2144 = tail call double @llvm.fma.f64(double %2140, double %2143, double 0x3F2A01A014761F6E)
  %2145 = tail call double @llvm.fma.f64(double %2140, double %2144, double 0x3F56C16C1852B7B0)
  %2146 = tail call double @llvm.fma.f64(double %2140, double %2145, double 0x3F81111111122322)
  %2147 = tail call double @llvm.fma.f64(double %2140, double %2146, double 0x3FA55555555502A1)
  %2148 = tail call double @llvm.fma.f64(double %2140, double %2147, double 0x3FC5555555555511)
  %2149 = tail call double @llvm.fma.f64(double %2140, double %2148, double 0x3FE000000000000B)
  %2150 = tail call double @llvm.fma.f64(double %2140, double %2149, double 1.000000e+00)
  %2151 = tail call double @llvm.fma.f64(double %2140, double %2150, double 1.000000e+00)
  %2152 = fptosi double %2137 to i32
  %2153 = tail call double @llvm.ldexp.f64.i32(double %2151, i32 %2152)
  %2154 = fcmp ogt double %2132, 1.024000e+03
  %2155 = select i1 %2154, double 0x7FF0000000000000, double %2153
  %2156 = fcmp olt double %2132, -1.075000e+03
  %2157 = select i1 %2156, double 0.000000e+00, double %2155
  %2158 = tail call double @llvm.fma.f64(double %2157, double %2135, double %2157) #9
  %2159 = tail call double @llvm.fabs.f64(double %2157) #9
  %2160 = fcmp oeq double %2159, 0x7FF0000000000000
  %2161 = select i1 %2160, double %2157, double %2158
  %2162 = tail call double @llvm.trunc.f64(double %2003) #9
  %2163 = fcmp oeq double %2162, %2003
  %2164 = fmul double %2003, 5.000000e-01
  %2165 = tail call double @llvm.trunc.f64(double %2164) #9
  %2166 = fcmp une double %2165, %2164
  %2167 = and i1 %2163, %2166
  %2168 = select i1 %2167, double %sub3.i35.i.i, double 1.000000e+00
  %2169 = tail call double @llvm.copysign.f64(double %2161, double %2168) #9
  %2170 = fcmp olt double %sub3.i35.i.i, 0.000000e+00
  %2171 = select i1 %2163, double %2169, double 0x7FF8000000000000
  %2172 = select i1 %2170, double %2171, double %2169
  %2173 = fcmp oeq double %2004, 0x7FF0000000000000
  %2174 = fcmp oeq double %sub3.i35.i.i, 0.000000e+00
  %2175 = or i1 %2174, %2173
  %2176 = select i1 %2174, double 0.000000e+00, double 0x7FF0000000000000
  %2177 = select i1 %2167, double %sub3.i35.i.i, double 0.000000e+00
  %2178 = tail call double @llvm.copysign.f64(double %2176, double %2177) #9
  %2179 = select i1 %2175, double %2178, double %2172
  %2180 = fcmp uno double %sub3.i35.i.i, 0.000000e+00
  %2181 = select i1 %2180, double 0x7FF8000000000000, double %2179
  %add5.i37.i.i = fadd double %2181, %add.i34.i.i
  %cmp.i38.i.i = fcmp olt double %add5.i37.i.i, %min_dist.0.i10.i
  %min_dist.5.i.i = select i1 %cmp.i38.i.i, double %add5.i37.i.i, double %min_dist.0.i10.i
  br label %if.end65.i.i

if.end65.i.i:                                     ; preds = %if.then57.i.i, %if.then40.i.i, %lor.lhs.false36.i.i
  %min_dist.1.i11.i = phi double [ %min_dist.0.i10.i, %if.then40.i.i ], [ %min_dist.0.i10.i, %lor.lhs.false36.i.i ], [ %min_dist.5.i.i, %if.then57.i.i ]
  %cmp66.i.i = fcmp olt double %agg.tmp.sroa.0.0.copyload, %1100
  %cmp68.i.i = fcmp ogt double %r1.sroa.0.0.copyload, %1100
  %or.cond12.i.i = select i1 %cmp66.i.i, i1 %cmp68.i.i, i1 false
  br i1 %or.cond12.i.i, label %if.then73.i.i, label %lor.lhs.false69.i.i

lor.lhs.false69.i.i:                              ; preds = %if.end65.i.i
  %cmp70.i.i = fcmp ogt double %agg.tmp.sroa.0.0.copyload, %1100
  %cmp72.i.i = fcmp olt double %r1.sroa.0.0.copyload, %1100
  %or.cond13.i.i = select i1 %cmp70.i.i, i1 %cmp72.i.i, i1 false
  br i1 %or.cond13.i.i, label %if.then73.i.i, label %if.end100.i.i

if.then73.i.i:                                    ; preds = %lor.lhs.false69.i.i, %if.end65.i.i
  %sub75.i.i = fsub double %1100, %agg.tmp.sroa.0.0.copyload
  %sub76.i.i = fsub double %r1.sroa.5.0.copyload, %agg.tmp.sroa.2.0.copyload
  %mul77.i.i = fmul double %sub76.i.i, %sub75.i.i
  %sub78.i.i = fsub double %r1.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %div79.i.i = fdiv double %mul77.i.i, %sub78.i.i
  %add80.i.i = fadd double %agg.tmp.sroa.2.0.copyload, %div79.i.i
  %cmp88.i.i = fcmp oge double %add80.i.i, %1099
  %cmp90.i.i = fcmp olt double %add80.i.i, %1101
  %or.cond14.i.i = select i1 %cmp88.i.i, i1 %cmp90.i.i, i1 false
  br i1 %or.cond14.i.i, label %if.then91.i.i, label %if.end100.i.i

if.then91.i.i:                                    ; preds = %if.then73.i.i
  %sub83.i.i = fsub double %r1.sroa.7.0.copyload, %agg.tmp.sroa.3.0.copyload
  %mul84.i.i = fmul double %sub83.i.i, %sub75.i.i
  %div86.i.i = fdiv double %mul84.i.i, %sub78.i.i
  %add87.i.i = fadd double %agg.tmp.sroa.3.0.copyload, %div86.i.i
  %2182 = fcmp oeq double %sub75.i.i, 1.000000e+00
  %2183 = select i1 %2182, double 1.000000e+00, double 2.000000e+00
  %2184 = tail call double @llvm.fabs.f64(double %sub75.i.i) #9
  %2185 = tail call double @llvm.amdgcn.frexp.mant.f64(double %2184)
  %2186 = fcmp olt double %2185, 0x3FE5555555555555
  %.neg.i.i.i.i49.i.i = sext i1 %2186 to i32
  %2187 = select i1 %2186, double 2.000000e+00, double 1.000000e+00
  %2188 = fmul double %2185, %2187
  %2189 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %2184)
  %2190 = add i32 %2189, %.neg.i.i.i.i49.i.i
  %2191 = fadd double %2188, -1.000000e+00
  %2192 = fadd double %2188, 1.000000e+00
  %2193 = fadd double %2192, -1.000000e+00
  %2194 = fsub double %2188, %2193
  %2195 = tail call double @llvm.amdgcn.rcp.f64(double %2192)
  %2196 = fneg double %2192
  %2197 = tail call double @llvm.fma.f64(double %2196, double %2195, double 1.000000e+00)
  %2198 = tail call double @llvm.fma.f64(double %2197, double %2195, double %2195)
  %2199 = tail call double @llvm.fma.f64(double %2196, double %2198, double 1.000000e+00)
  %2200 = tail call double @llvm.fma.f64(double %2199, double %2198, double %2198)
  %2201 = fmul double %2191, %2200
  %2202 = fmul double %2192, %2201
  %2203 = fneg double %2202
  %2204 = tail call double @llvm.fma.f64(double %2201, double %2192, double %2203)
  %2205 = tail call double @llvm.fma.f64(double %2201, double %2194, double %2204)
  %2206 = fadd double %2202, %2205
  %2207 = fsub double %2206, %2202
  %2208 = fsub double %2191, %2206
  %2209 = fsub double %2191, %2208
  %2210 = fsub double %2209, %2206
  %2211 = fsub double %2207, %2205
  %2212 = fadd double %2211, %2210
  %2213 = fadd double %2208, %2212
  %2214 = fmul double %2200, %2213
  %2215 = fadd double %2201, %2214
  %2216 = fsub double %2215, %2201
  %2217 = fsub double %2214, %2216
  %2218 = fmul double %2215, %2215
  %2219 = fneg double %2218
  %2220 = tail call double @llvm.fma.f64(double %2215, double %2215, double %2219)
  %2221 = fmul double %2217, 2.000000e+00
  %2222 = tail call double @llvm.fma.f64(double %2215, double %2221, double %2220)
  %2223 = fadd double %2218, %2222
  %2224 = fsub double %2223, %2218
  %2225 = fsub double %2222, %2224
  %2226 = tail call double @llvm.fma.f64(double %2223, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %2227 = tail call double @llvm.fma.f64(double %2223, double %2226, double 0x3FBE25E43ABE935A)
  %2228 = tail call double @llvm.fma.f64(double %2223, double %2227, double 0x3FC110EF47E6C9C2)
  %2229 = tail call double @llvm.fma.f64(double %2223, double %2228, double 0x3FC3B13BCFA74449)
  %2230 = tail call double @llvm.fma.f64(double %2223, double %2229, double 0x3FC745D171BF3C30)
  %2231 = tail call double @llvm.fma.f64(double %2223, double %2230, double 0x3FCC71C71C7792CE)
  %2232 = tail call double @llvm.fma.f64(double %2223, double %2231, double 0x3FD24924924920DA)
  %2233 = tail call double @llvm.fma.f64(double %2223, double %2232, double 0x3FD999999999999C)
  %2234 = sitofp i32 %2190 to double
  %2235 = fmul double %2234, 0x3FE62E42FEFA39EF
  %2236 = fneg double %2235
  %2237 = tail call double @llvm.fma.f64(double %2234, double 0x3FE62E42FEFA39EF, double %2236)
  %2238 = tail call double @llvm.fma.f64(double %2234, double 0x3C7ABC9E3B39803F, double %2237)
  %2239 = fadd double %2235, %2238
  %2240 = fsub double %2239, %2235
  %2241 = fsub double %2238, %2240
  %2242 = tail call double @llvm.ldexp.f64.i32(double %2215, i32 1)
  %2243 = tail call double @llvm.ldexp.f64.i32(double %2217, i32 1)
  %2244 = fmul double %2215, %2223
  %2245 = fneg double %2244
  %2246 = tail call double @llvm.fma.f64(double %2223, double %2215, double %2245)
  %2247 = tail call double @llvm.fma.f64(double %2223, double %2217, double %2246)
  %2248 = tail call double @llvm.fma.f64(double %2225, double %2215, double %2247)
  %2249 = fadd double %2244, %2248
  %2250 = fsub double %2249, %2244
  %2251 = fsub double %2248, %2250
  %2252 = fmul double %2223, %2233
  %2253 = fneg double %2252
  %2254 = tail call double @llvm.fma.f64(double %2223, double %2233, double %2253)
  %2255 = tail call double @llvm.fma.f64(double %2225, double %2233, double %2254)
  %2256 = fadd double %2252, %2255
  %2257 = fsub double %2256, %2252
  %2258 = fsub double %2255, %2257
  %2259 = fadd double %2256, 0x3FE5555555555555
  %2260 = fadd double %2259, 0xBFE5555555555555
  %2261 = fsub double %2256, %2260
  %2262 = fadd double %2258, 0x3C8543B0D5DF274D
  %2263 = fadd double %2262, %2261
  %2264 = fadd double %2259, %2263
  %2265 = fsub double %2259, %2264
  %2266 = fadd double %2263, %2265
  %2267 = fmul double %2249, %2264
  %2268 = fneg double %2267
  %2269 = tail call double @llvm.fma.f64(double %2249, double %2264, double %2268)
  %2270 = tail call double @llvm.fma.f64(double %2249, double %2266, double %2269)
  %2271 = tail call double @llvm.fma.f64(double %2251, double %2264, double %2270)
  %2272 = fadd double %2267, %2271
  %2273 = fsub double %2272, %2267
  %2274 = fsub double %2271, %2273
  %2275 = fadd double %2242, %2272
  %2276 = fsub double %2275, %2242
  %2277 = fsub double %2272, %2276
  %2278 = fadd double %2243, %2274
  %2279 = fadd double %2278, %2277
  %2280 = fadd double %2275, %2279
  %2281 = fsub double %2280, %2275
  %2282 = fsub double %2279, %2281
  %2283 = fadd double %2239, %2280
  %2284 = fsub double %2283, %2239
  %2285 = fsub double %2283, %2284
  %2286 = fsub double %2239, %2285
  %2287 = fsub double %2280, %2284
  %2288 = fadd double %2287, %2286
  %2289 = fadd double %2241, %2282
  %2290 = fsub double %2289, %2241
  %2291 = fsub double %2289, %2290
  %2292 = fsub double %2241, %2291
  %2293 = fsub double %2282, %2290
  %2294 = fadd double %2293, %2292
  %2295 = fadd double %2289, %2288
  %2296 = fadd double %2283, %2295
  %2297 = fsub double %2296, %2283
  %2298 = fsub double %2295, %2297
  %2299 = fadd double %2294, %2298
  %2300 = fadd double %2296, %2299
  %2301 = fsub double %2300, %2296
  %2302 = fsub double %2299, %2301
  %2303 = fmul double %2183, %2300
  %2304 = fneg double %2303
  %2305 = tail call double @llvm.fma.f64(double %2183, double %2300, double %2304) #9
  %2306 = tail call double @llvm.fma.f64(double %2183, double %2302, double %2305) #9
  %2307 = fadd double %2303, %2306
  %2308 = fsub double %2307, %2303
  %2309 = fsub double %2306, %2308
  %2310 = tail call double @llvm.fabs.f64(double %2303) #9
  %2311 = fcmp oeq double %2310, 0x7FF0000000000000
  %2312 = select i1 %2311, double %2303, double %2307
  %2313 = tail call double @llvm.fabs.f64(double %2312) #9
  %2314 = fcmp oeq double %2313, 0x7FF0000000000000
  %2315 = select i1 %2314, double 0.000000e+00, double %2309
  %2316 = fmul double %2312, 0x3FF71547652B82FE
  %2317 = tail call double @llvm.rint.f64(double %2316)
  %2318 = fneg double %2317
  %2319 = tail call double @llvm.fma.f64(double %2318, double 0x3FE62E42FEFA39EF, double %2312)
  %2320 = tail call double @llvm.fma.f64(double %2318, double 0x3C7ABC9E3B39803F, double %2319)
  %2321 = tail call double @llvm.fma.f64(double %2320, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2322 = tail call double @llvm.fma.f64(double %2320, double %2321, double 0x3EC71DEE623FDE64)
  %2323 = tail call double @llvm.fma.f64(double %2320, double %2322, double 0x3EFA01997C89E6B0)
  %2324 = tail call double @llvm.fma.f64(double %2320, double %2323, double 0x3F2A01A014761F6E)
  %2325 = tail call double @llvm.fma.f64(double %2320, double %2324, double 0x3F56C16C1852B7B0)
  %2326 = tail call double @llvm.fma.f64(double %2320, double %2325, double 0x3F81111111122322)
  %2327 = tail call double @llvm.fma.f64(double %2320, double %2326, double 0x3FA55555555502A1)
  %2328 = tail call double @llvm.fma.f64(double %2320, double %2327, double 0x3FC5555555555511)
  %2329 = tail call double @llvm.fma.f64(double %2320, double %2328, double 0x3FE000000000000B)
  %2330 = tail call double @llvm.fma.f64(double %2320, double %2329, double 1.000000e+00)
  %2331 = tail call double @llvm.fma.f64(double %2320, double %2330, double 1.000000e+00)
  %2332 = fptosi double %2317 to i32
  %2333 = tail call double @llvm.ldexp.f64.i32(double %2331, i32 %2332)
  %2334 = fcmp ogt double %2312, 1.024000e+03
  %2335 = select i1 %2334, double 0x7FF0000000000000, double %2333
  %2336 = fcmp olt double %2312, -1.075000e+03
  %2337 = select i1 %2336, double 0.000000e+00, double %2335
  %2338 = tail call double @llvm.fma.f64(double %2337, double %2315, double %2337) #9
  %2339 = tail call double @llvm.fabs.f64(double %2337) #9
  %2340 = fcmp oeq double %2339, 0x7FF0000000000000
  %2341 = select i1 %2340, double %2337, double %2338
  %2342 = tail call double @llvm.trunc.f64(double %2183) #9
  %2343 = fcmp oeq double %2342, %2183
  %2344 = fmul double %2183, 5.000000e-01
  %2345 = tail call double @llvm.trunc.f64(double %2344) #9
  %2346 = fcmp une double %2345, %2344
  %2347 = and i1 %2343, %2346
  %2348 = select i1 %2347, double %sub75.i.i, double 1.000000e+00
  %2349 = tail call double @llvm.copysign.f64(double %2341, double %2348) #9
  %2350 = fcmp olt double %sub75.i.i, 0.000000e+00
  %2351 = select i1 %2343, double %2349, double 0x7FF8000000000000
  %2352 = select i1 %2350, double %2351, double %2349
  %2353 = fcmp oeq double %2184, 0x7FF0000000000000
  %2354 = fcmp oeq double %sub75.i.i, 0.000000e+00
  %2355 = or i1 %2354, %2353
  %2356 = select i1 %2354, double 0.000000e+00, double 0x7FF0000000000000
  %2357 = select i1 %2347, double %sub75.i.i, double 0.000000e+00
  %2358 = tail call double @llvm.copysign.f64(double %2356, double %2357) #9
  %2359 = select i1 %2355, double %2358, double %2352
  %2360 = fcmp uno double %sub75.i.i, 0.000000e+00
  %2361 = select i1 %2360, double 0x7FF8000000000000, double %2359
  %sub1.i50.i.i = fsub double %add80.i.i, %agg.tmp.sroa.2.0.copyload
  %2362 = fcmp oeq double %sub1.i50.i.i, 1.000000e+00
  %2363 = select i1 %2362, double 1.000000e+00, double 2.000000e+00
  %2364 = tail call double @llvm.fabs.f64(double %sub1.i50.i.i) #9
  %2365 = tail call double @llvm.amdgcn.frexp.mant.f64(double %2364)
  %2366 = fcmp olt double %2365, 0x3FE5555555555555
  %.neg.i.i.i1.i51.i.i = sext i1 %2366 to i32
  %2367 = select i1 %2366, double 2.000000e+00, double 1.000000e+00
  %2368 = fmul double %2365, %2367
  %2369 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %2364)
  %2370 = add i32 %2369, %.neg.i.i.i1.i51.i.i
  %2371 = fadd double %2368, -1.000000e+00
  %2372 = fadd double %2368, 1.000000e+00
  %2373 = fadd double %2372, -1.000000e+00
  %2374 = fsub double %2368, %2373
  %2375 = tail call double @llvm.amdgcn.rcp.f64(double %2372)
  %2376 = fneg double %2372
  %2377 = tail call double @llvm.fma.f64(double %2376, double %2375, double 1.000000e+00)
  %2378 = tail call double @llvm.fma.f64(double %2377, double %2375, double %2375)
  %2379 = tail call double @llvm.fma.f64(double %2376, double %2378, double 1.000000e+00)
  %2380 = tail call double @llvm.fma.f64(double %2379, double %2378, double %2378)
  %2381 = fmul double %2371, %2380
  %2382 = fmul double %2372, %2381
  %2383 = fneg double %2382
  %2384 = tail call double @llvm.fma.f64(double %2381, double %2372, double %2383)
  %2385 = tail call double @llvm.fma.f64(double %2381, double %2374, double %2384)
  %2386 = fadd double %2382, %2385
  %2387 = fsub double %2386, %2382
  %2388 = fsub double %2371, %2386
  %2389 = fsub double %2371, %2388
  %2390 = fsub double %2389, %2386
  %2391 = fsub double %2387, %2385
  %2392 = fadd double %2391, %2390
  %2393 = fadd double %2388, %2392
  %2394 = fmul double %2380, %2393
  %2395 = fadd double %2381, %2394
  %2396 = fsub double %2395, %2381
  %2397 = fsub double %2394, %2396
  %2398 = fmul double %2395, %2395
  %2399 = fneg double %2398
  %2400 = tail call double @llvm.fma.f64(double %2395, double %2395, double %2399)
  %2401 = fmul double %2397, 2.000000e+00
  %2402 = tail call double @llvm.fma.f64(double %2395, double %2401, double %2400)
  %2403 = fadd double %2398, %2402
  %2404 = fsub double %2403, %2398
  %2405 = fsub double %2402, %2404
  %2406 = tail call double @llvm.fma.f64(double %2403, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %2407 = tail call double @llvm.fma.f64(double %2403, double %2406, double 0x3FBE25E43ABE935A)
  %2408 = tail call double @llvm.fma.f64(double %2403, double %2407, double 0x3FC110EF47E6C9C2)
  %2409 = tail call double @llvm.fma.f64(double %2403, double %2408, double 0x3FC3B13BCFA74449)
  %2410 = tail call double @llvm.fma.f64(double %2403, double %2409, double 0x3FC745D171BF3C30)
  %2411 = tail call double @llvm.fma.f64(double %2403, double %2410, double 0x3FCC71C71C7792CE)
  %2412 = tail call double @llvm.fma.f64(double %2403, double %2411, double 0x3FD24924924920DA)
  %2413 = tail call double @llvm.fma.f64(double %2403, double %2412, double 0x3FD999999999999C)
  %2414 = sitofp i32 %2370 to double
  %2415 = fmul double %2414, 0x3FE62E42FEFA39EF
  %2416 = fneg double %2415
  %2417 = tail call double @llvm.fma.f64(double %2414, double 0x3FE62E42FEFA39EF, double %2416)
  %2418 = tail call double @llvm.fma.f64(double %2414, double 0x3C7ABC9E3B39803F, double %2417)
  %2419 = fadd double %2415, %2418
  %2420 = fsub double %2419, %2415
  %2421 = fsub double %2418, %2420
  %2422 = tail call double @llvm.ldexp.f64.i32(double %2395, i32 1)
  %2423 = tail call double @llvm.ldexp.f64.i32(double %2397, i32 1)
  %2424 = fmul double %2395, %2403
  %2425 = fneg double %2424
  %2426 = tail call double @llvm.fma.f64(double %2403, double %2395, double %2425)
  %2427 = tail call double @llvm.fma.f64(double %2403, double %2397, double %2426)
  %2428 = tail call double @llvm.fma.f64(double %2405, double %2395, double %2427)
  %2429 = fadd double %2424, %2428
  %2430 = fsub double %2429, %2424
  %2431 = fsub double %2428, %2430
  %2432 = fmul double %2403, %2413
  %2433 = fneg double %2432
  %2434 = tail call double @llvm.fma.f64(double %2403, double %2413, double %2433)
  %2435 = tail call double @llvm.fma.f64(double %2405, double %2413, double %2434)
  %2436 = fadd double %2432, %2435
  %2437 = fsub double %2436, %2432
  %2438 = fsub double %2435, %2437
  %2439 = fadd double %2436, 0x3FE5555555555555
  %2440 = fadd double %2439, 0xBFE5555555555555
  %2441 = fsub double %2436, %2440
  %2442 = fadd double %2438, 0x3C8543B0D5DF274D
  %2443 = fadd double %2442, %2441
  %2444 = fadd double %2439, %2443
  %2445 = fsub double %2439, %2444
  %2446 = fadd double %2443, %2445
  %2447 = fmul double %2429, %2444
  %2448 = fneg double %2447
  %2449 = tail call double @llvm.fma.f64(double %2429, double %2444, double %2448)
  %2450 = tail call double @llvm.fma.f64(double %2429, double %2446, double %2449)
  %2451 = tail call double @llvm.fma.f64(double %2431, double %2444, double %2450)
  %2452 = fadd double %2447, %2451
  %2453 = fsub double %2452, %2447
  %2454 = fsub double %2451, %2453
  %2455 = fadd double %2422, %2452
  %2456 = fsub double %2455, %2422
  %2457 = fsub double %2452, %2456
  %2458 = fadd double %2423, %2454
  %2459 = fadd double %2458, %2457
  %2460 = fadd double %2455, %2459
  %2461 = fsub double %2460, %2455
  %2462 = fsub double %2459, %2461
  %2463 = fadd double %2419, %2460
  %2464 = fsub double %2463, %2419
  %2465 = fsub double %2463, %2464
  %2466 = fsub double %2419, %2465
  %2467 = fsub double %2460, %2464
  %2468 = fadd double %2467, %2466
  %2469 = fadd double %2421, %2462
  %2470 = fsub double %2469, %2421
  %2471 = fsub double %2469, %2470
  %2472 = fsub double %2421, %2471
  %2473 = fsub double %2462, %2470
  %2474 = fadd double %2473, %2472
  %2475 = fadd double %2469, %2468
  %2476 = fadd double %2463, %2475
  %2477 = fsub double %2476, %2463
  %2478 = fsub double %2475, %2477
  %2479 = fadd double %2474, %2478
  %2480 = fadd double %2476, %2479
  %2481 = fsub double %2480, %2476
  %2482 = fsub double %2479, %2481
  %2483 = fmul double %2363, %2480
  %2484 = fneg double %2483
  %2485 = tail call double @llvm.fma.f64(double %2363, double %2480, double %2484) #9
  %2486 = tail call double @llvm.fma.f64(double %2363, double %2482, double %2485) #9
  %2487 = fadd double %2483, %2486
  %2488 = fsub double %2487, %2483
  %2489 = fsub double %2486, %2488
  %2490 = tail call double @llvm.fabs.f64(double %2483) #9
  %2491 = fcmp oeq double %2490, 0x7FF0000000000000
  %2492 = select i1 %2491, double %2483, double %2487
  %2493 = tail call double @llvm.fabs.f64(double %2492) #9
  %2494 = fcmp oeq double %2493, 0x7FF0000000000000
  %2495 = select i1 %2494, double 0.000000e+00, double %2489
  %2496 = fmul double %2492, 0x3FF71547652B82FE
  %2497 = tail call double @llvm.rint.f64(double %2496)
  %2498 = fneg double %2497
  %2499 = tail call double @llvm.fma.f64(double %2498, double 0x3FE62E42FEFA39EF, double %2492)
  %2500 = tail call double @llvm.fma.f64(double %2498, double 0x3C7ABC9E3B39803F, double %2499)
  %2501 = tail call double @llvm.fma.f64(double %2500, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2502 = tail call double @llvm.fma.f64(double %2500, double %2501, double 0x3EC71DEE623FDE64)
  %2503 = tail call double @llvm.fma.f64(double %2500, double %2502, double 0x3EFA01997C89E6B0)
  %2504 = tail call double @llvm.fma.f64(double %2500, double %2503, double 0x3F2A01A014761F6E)
  %2505 = tail call double @llvm.fma.f64(double %2500, double %2504, double 0x3F56C16C1852B7B0)
  %2506 = tail call double @llvm.fma.f64(double %2500, double %2505, double 0x3F81111111122322)
  %2507 = tail call double @llvm.fma.f64(double %2500, double %2506, double 0x3FA55555555502A1)
  %2508 = tail call double @llvm.fma.f64(double %2500, double %2507, double 0x3FC5555555555511)
  %2509 = tail call double @llvm.fma.f64(double %2500, double %2508, double 0x3FE000000000000B)
  %2510 = tail call double @llvm.fma.f64(double %2500, double %2509, double 1.000000e+00)
  %2511 = tail call double @llvm.fma.f64(double %2500, double %2510, double 1.000000e+00)
  %2512 = fptosi double %2497 to i32
  %2513 = tail call double @llvm.ldexp.f64.i32(double %2511, i32 %2512)
  %2514 = fcmp ogt double %2492, 1.024000e+03
  %2515 = select i1 %2514, double 0x7FF0000000000000, double %2513
  %2516 = fcmp olt double %2492, -1.075000e+03
  %2517 = select i1 %2516, double 0.000000e+00, double %2515
  %2518 = tail call double @llvm.fma.f64(double %2517, double %2495, double %2517) #9
  %2519 = tail call double @llvm.fabs.f64(double %2517) #9
  %2520 = fcmp oeq double %2519, 0x7FF0000000000000
  %2521 = select i1 %2520, double %2517, double %2518
  %2522 = tail call double @llvm.trunc.f64(double %2363) #9
  %2523 = fcmp oeq double %2522, %2363
  %2524 = fmul double %2363, 5.000000e-01
  %2525 = tail call double @llvm.trunc.f64(double %2524) #9
  %2526 = fcmp une double %2525, %2524
  %2527 = and i1 %2523, %2526
  %2528 = select i1 %2527, double %sub1.i50.i.i, double 1.000000e+00
  %2529 = tail call double @llvm.copysign.f64(double %2521, double %2528) #9
  %2530 = fcmp olt double %sub1.i50.i.i, 0.000000e+00
  %2531 = select i1 %2523, double %2529, double 0x7FF8000000000000
  %2532 = select i1 %2530, double %2531, double %2529
  %2533 = fcmp oeq double %2364, 0x7FF0000000000000
  %2534 = fcmp oeq double %sub1.i50.i.i, 0.000000e+00
  %2535 = or i1 %2534, %2533
  %2536 = select i1 %2534, double 0.000000e+00, double 0x7FF0000000000000
  %2537 = select i1 %2527, double %sub1.i50.i.i, double 0.000000e+00
  %2538 = tail call double @llvm.copysign.f64(double %2536, double %2537) #9
  %2539 = select i1 %2535, double %2538, double %2532
  %2540 = fcmp uno double %sub1.i50.i.i, 0.000000e+00
  %2541 = select i1 %2540, double 0x7FF8000000000000, double %2539
  %add.i52.i.i = fadd double %2361, %2541
  %sub3.i53.i.i = fsub double %add87.i.i, %add87.i.i
  %2542 = fcmp oeq double %sub3.i53.i.i, 1.000000e+00
  %2543 = select i1 %2542, double 1.000000e+00, double 2.000000e+00
  %2544 = tail call double @llvm.fabs.f64(double %sub3.i53.i.i) #9
  %2545 = tail call double @llvm.amdgcn.frexp.mant.f64(double %2544)
  %2546 = fcmp olt double %2545, 0x3FE5555555555555
  %.neg.i.i.i2.i54.i.i = sext i1 %2546 to i32
  %2547 = select i1 %2546, double 2.000000e+00, double 1.000000e+00
  %2548 = fmul double %2545, %2547
  %2549 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %2544)
  %2550 = add i32 %2549, %.neg.i.i.i2.i54.i.i
  %2551 = fadd double %2548, -1.000000e+00
  %2552 = fadd double %2548, 1.000000e+00
  %2553 = fadd double %2552, -1.000000e+00
  %2554 = fsub double %2548, %2553
  %2555 = tail call double @llvm.amdgcn.rcp.f64(double %2552)
  %2556 = fneg double %2552
  %2557 = tail call double @llvm.fma.f64(double %2556, double %2555, double 1.000000e+00)
  %2558 = tail call double @llvm.fma.f64(double %2557, double %2555, double %2555)
  %2559 = tail call double @llvm.fma.f64(double %2556, double %2558, double 1.000000e+00)
  %2560 = tail call double @llvm.fma.f64(double %2559, double %2558, double %2558)
  %2561 = fmul double %2551, %2560
  %2562 = fmul double %2552, %2561
  %2563 = fneg double %2562
  %2564 = tail call double @llvm.fma.f64(double %2561, double %2552, double %2563)
  %2565 = tail call double @llvm.fma.f64(double %2561, double %2554, double %2564)
  %2566 = fadd double %2562, %2565
  %2567 = fsub double %2566, %2562
  %2568 = fsub double %2551, %2566
  %2569 = fsub double %2551, %2568
  %2570 = fsub double %2569, %2566
  %2571 = fsub double %2567, %2565
  %2572 = fadd double %2571, %2570
  %2573 = fadd double %2568, %2572
  %2574 = fmul double %2560, %2573
  %2575 = fadd double %2561, %2574
  %2576 = fsub double %2575, %2561
  %2577 = fsub double %2574, %2576
  %2578 = fmul double %2575, %2575
  %2579 = fneg double %2578
  %2580 = tail call double @llvm.fma.f64(double %2575, double %2575, double %2579)
  %2581 = fmul double %2577, 2.000000e+00
  %2582 = tail call double @llvm.fma.f64(double %2575, double %2581, double %2580)
  %2583 = fadd double %2578, %2582
  %2584 = fsub double %2583, %2578
  %2585 = fsub double %2582, %2584
  %2586 = tail call double @llvm.fma.f64(double %2583, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %2587 = tail call double @llvm.fma.f64(double %2583, double %2586, double 0x3FBE25E43ABE935A)
  %2588 = tail call double @llvm.fma.f64(double %2583, double %2587, double 0x3FC110EF47E6C9C2)
  %2589 = tail call double @llvm.fma.f64(double %2583, double %2588, double 0x3FC3B13BCFA74449)
  %2590 = tail call double @llvm.fma.f64(double %2583, double %2589, double 0x3FC745D171BF3C30)
  %2591 = tail call double @llvm.fma.f64(double %2583, double %2590, double 0x3FCC71C71C7792CE)
  %2592 = tail call double @llvm.fma.f64(double %2583, double %2591, double 0x3FD24924924920DA)
  %2593 = tail call double @llvm.fma.f64(double %2583, double %2592, double 0x3FD999999999999C)
  %2594 = sitofp i32 %2550 to double
  %2595 = fmul double %2594, 0x3FE62E42FEFA39EF
  %2596 = fneg double %2595
  %2597 = tail call double @llvm.fma.f64(double %2594, double 0x3FE62E42FEFA39EF, double %2596)
  %2598 = tail call double @llvm.fma.f64(double %2594, double 0x3C7ABC9E3B39803F, double %2597)
  %2599 = fadd double %2595, %2598
  %2600 = fsub double %2599, %2595
  %2601 = fsub double %2598, %2600
  %2602 = tail call double @llvm.ldexp.f64.i32(double %2575, i32 1)
  %2603 = tail call double @llvm.ldexp.f64.i32(double %2577, i32 1)
  %2604 = fmul double %2575, %2583
  %2605 = fneg double %2604
  %2606 = tail call double @llvm.fma.f64(double %2583, double %2575, double %2605)
  %2607 = tail call double @llvm.fma.f64(double %2583, double %2577, double %2606)
  %2608 = tail call double @llvm.fma.f64(double %2585, double %2575, double %2607)
  %2609 = fadd double %2604, %2608
  %2610 = fsub double %2609, %2604
  %2611 = fsub double %2608, %2610
  %2612 = fmul double %2583, %2593
  %2613 = fneg double %2612
  %2614 = tail call double @llvm.fma.f64(double %2583, double %2593, double %2613)
  %2615 = tail call double @llvm.fma.f64(double %2585, double %2593, double %2614)
  %2616 = fadd double %2612, %2615
  %2617 = fsub double %2616, %2612
  %2618 = fsub double %2615, %2617
  %2619 = fadd double %2616, 0x3FE5555555555555
  %2620 = fadd double %2619, 0xBFE5555555555555
  %2621 = fsub double %2616, %2620
  %2622 = fadd double %2618, 0x3C8543B0D5DF274D
  %2623 = fadd double %2622, %2621
  %2624 = fadd double %2619, %2623
  %2625 = fsub double %2619, %2624
  %2626 = fadd double %2623, %2625
  %2627 = fmul double %2609, %2624
  %2628 = fneg double %2627
  %2629 = tail call double @llvm.fma.f64(double %2609, double %2624, double %2628)
  %2630 = tail call double @llvm.fma.f64(double %2609, double %2626, double %2629)
  %2631 = tail call double @llvm.fma.f64(double %2611, double %2624, double %2630)
  %2632 = fadd double %2627, %2631
  %2633 = fsub double %2632, %2627
  %2634 = fsub double %2631, %2633
  %2635 = fadd double %2602, %2632
  %2636 = fsub double %2635, %2602
  %2637 = fsub double %2632, %2636
  %2638 = fadd double %2603, %2634
  %2639 = fadd double %2638, %2637
  %2640 = fadd double %2635, %2639
  %2641 = fsub double %2640, %2635
  %2642 = fsub double %2639, %2641
  %2643 = fadd double %2599, %2640
  %2644 = fsub double %2643, %2599
  %2645 = fsub double %2643, %2644
  %2646 = fsub double %2599, %2645
  %2647 = fsub double %2640, %2644
  %2648 = fadd double %2647, %2646
  %2649 = fadd double %2601, %2642
  %2650 = fsub double %2649, %2601
  %2651 = fsub double %2649, %2650
  %2652 = fsub double %2601, %2651
  %2653 = fsub double %2642, %2650
  %2654 = fadd double %2653, %2652
  %2655 = fadd double %2649, %2648
  %2656 = fadd double %2643, %2655
  %2657 = fsub double %2656, %2643
  %2658 = fsub double %2655, %2657
  %2659 = fadd double %2654, %2658
  %2660 = fadd double %2656, %2659
  %2661 = fsub double %2660, %2656
  %2662 = fsub double %2659, %2661
  %2663 = fmul double %2543, %2660
  %2664 = fneg double %2663
  %2665 = tail call double @llvm.fma.f64(double %2543, double %2660, double %2664) #9
  %2666 = tail call double @llvm.fma.f64(double %2543, double %2662, double %2665) #9
  %2667 = fadd double %2663, %2666
  %2668 = fsub double %2667, %2663
  %2669 = fsub double %2666, %2668
  %2670 = tail call double @llvm.fabs.f64(double %2663) #9
  %2671 = fcmp oeq double %2670, 0x7FF0000000000000
  %2672 = select i1 %2671, double %2663, double %2667
  %2673 = tail call double @llvm.fabs.f64(double %2672) #9
  %2674 = fcmp oeq double %2673, 0x7FF0000000000000
  %2675 = select i1 %2674, double 0.000000e+00, double %2669
  %2676 = fmul double %2672, 0x3FF71547652B82FE
  %2677 = tail call double @llvm.rint.f64(double %2676)
  %2678 = fneg double %2677
  %2679 = tail call double @llvm.fma.f64(double %2678, double 0x3FE62E42FEFA39EF, double %2672)
  %2680 = tail call double @llvm.fma.f64(double %2678, double 0x3C7ABC9E3B39803F, double %2679)
  %2681 = tail call double @llvm.fma.f64(double %2680, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2682 = tail call double @llvm.fma.f64(double %2680, double %2681, double 0x3EC71DEE623FDE64)
  %2683 = tail call double @llvm.fma.f64(double %2680, double %2682, double 0x3EFA01997C89E6B0)
  %2684 = tail call double @llvm.fma.f64(double %2680, double %2683, double 0x3F2A01A014761F6E)
  %2685 = tail call double @llvm.fma.f64(double %2680, double %2684, double 0x3F56C16C1852B7B0)
  %2686 = tail call double @llvm.fma.f64(double %2680, double %2685, double 0x3F81111111122322)
  %2687 = tail call double @llvm.fma.f64(double %2680, double %2686, double 0x3FA55555555502A1)
  %2688 = tail call double @llvm.fma.f64(double %2680, double %2687, double 0x3FC5555555555511)
  %2689 = tail call double @llvm.fma.f64(double %2680, double %2688, double 0x3FE000000000000B)
  %2690 = tail call double @llvm.fma.f64(double %2680, double %2689, double 1.000000e+00)
  %2691 = tail call double @llvm.fma.f64(double %2680, double %2690, double 1.000000e+00)
  %2692 = fptosi double %2677 to i32
  %2693 = tail call double @llvm.ldexp.f64.i32(double %2691, i32 %2692)
  %2694 = fcmp ogt double %2672, 1.024000e+03
  %2695 = select i1 %2694, double 0x7FF0000000000000, double %2693
  %2696 = fcmp olt double %2672, -1.075000e+03
  %2697 = select i1 %2696, double 0.000000e+00, double %2695
  %2698 = tail call double @llvm.fma.f64(double %2697, double %2675, double %2697) #9
  %2699 = tail call double @llvm.fabs.f64(double %2697) #9
  %2700 = fcmp oeq double %2699, 0x7FF0000000000000
  %2701 = select i1 %2700, double %2697, double %2698
  %2702 = tail call double @llvm.trunc.f64(double %2543) #9
  %2703 = fcmp oeq double %2702, %2543
  %2704 = fmul double %2543, 5.000000e-01
  %2705 = tail call double @llvm.trunc.f64(double %2704) #9
  %2706 = fcmp une double %2705, %2704
  %2707 = and i1 %2703, %2706
  %2708 = select i1 %2707, double %sub3.i53.i.i, double 1.000000e+00
  %2709 = tail call double @llvm.copysign.f64(double %2701, double %2708) #9
  %2710 = fcmp olt double %sub3.i53.i.i, 0.000000e+00
  %2711 = select i1 %2703, double %2709, double 0x7FF8000000000000
  %2712 = select i1 %2710, double %2711, double %2709
  %2713 = fcmp oeq double %2544, 0x7FF0000000000000
  %2714 = fcmp oeq double %sub3.i53.i.i, 0.000000e+00
  %2715 = or i1 %2714, %2713
  %2716 = select i1 %2714, double 0.000000e+00, double 0x7FF0000000000000
  %2717 = select i1 %2707, double %sub3.i53.i.i, double 0.000000e+00
  %2718 = tail call double @llvm.copysign.f64(double %2716, double %2717) #9
  %2719 = select i1 %2715, double %2718, double %2712
  %2720 = fcmp uno double %sub3.i53.i.i, 0.000000e+00
  %2721 = select i1 %2720, double 0x7FF8000000000000, double %2719
  %add5.i55.i.i = fadd double %2721, %add.i52.i.i
  %cmp.i56.i.i = fcmp olt double %add5.i55.i.i, %min_dist.1.i11.i
  %min_dist.6.i.i = select i1 %cmp.i56.i.i, double %add5.i55.i.i, double %min_dist.1.i11.i
  br label %if.end100.i.i

if.end100.i.i:                                    ; preds = %if.then91.i.i, %if.then73.i.i, %lor.lhs.false69.i.i
  %min_dist.2.i12.i = phi double [ %min_dist.1.i11.i, %if.then73.i.i ], [ %min_dist.1.i11.i, %lor.lhs.false69.i.i ], [ %min_dist.6.i.i, %if.then91.i.i ]
  %cmp101.i.i = fcmp olt double %agg.tmp.sroa.2.0.copyload, %1101
  %cmp103.i.i = fcmp ogt double %r1.sroa.5.0.copyload, %1101
  %or.cond15.i.i = select i1 %cmp101.i.i, i1 %cmp103.i.i, i1 false
  br i1 %or.cond15.i.i, label %if.then108.i.i, label %lor.lhs.false104.i.i

lor.lhs.false104.i.i:                             ; preds = %if.end100.i.i
  %cmp105.i.i = fcmp ogt double %agg.tmp.sroa.2.0.copyload, %1101
  %cmp107.i.i = fcmp olt double %r1.sroa.5.0.copyload, %1101
  %or.cond16.i.i = select i1 %cmp105.i.i, i1 %cmp107.i.i, i1 false
  br i1 %or.cond16.i.i, label %if.then108.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then108.i.i:                                   ; preds = %lor.lhs.false104.i.i, %if.end100.i.i
  %sub110.i.i = fsub double %1101, %agg.tmp.sroa.2.0.copyload
  %sub111.i.i = fsub double %r1.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %mul112.i.i = fmul double %sub111.i.i, %sub110.i.i
  %sub113.i.i = fsub double %r1.sroa.5.0.copyload, %agg.tmp.sroa.2.0.copyload
  %div114.i.i = fdiv double %mul112.i.i, %sub113.i.i
  %add115.i.i = fadd double %agg.tmp.sroa.0.0.copyload, %div114.i.i
  %cmp123.i.i = fcmp oge double %add115.i.i, %17
  %cmp125.i.i = fcmp olt double %add115.i.i, %1100
  %or.cond17.i.i = select i1 %cmp123.i.i, i1 %cmp125.i.i, i1 false
  br i1 %or.cond17.i.i, label %if.then126.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then126.i.i:                                   ; preds = %if.then108.i.i
  %sub118.i.i = fsub double %r1.sroa.7.0.copyload, %agg.tmp.sroa.3.0.copyload
  %mul119.i.i = fmul double %sub118.i.i, %sub110.i.i
  %div121.i.i = fdiv double %mul119.i.i, %sub113.i.i
  %add122.i.i = fadd double %agg.tmp.sroa.3.0.copyload, %div121.i.i
  %sub.i67.i.i = fsub double %add115.i.i, %agg.tmp.sroa.0.0.copyload
  %2722 = fcmp oeq double %sub.i67.i.i, 1.000000e+00
  %2723 = select i1 %2722, double 1.000000e+00, double 2.000000e+00
  %2724 = tail call double @llvm.fabs.f64(double %sub.i67.i.i) #9
  %2725 = tail call double @llvm.amdgcn.frexp.mant.f64(double %2724)
  %2726 = fcmp olt double %2725, 0x3FE5555555555555
  %.neg.i.i.i.i68.i.i = sext i1 %2726 to i32
  %2727 = select i1 %2726, double 2.000000e+00, double 1.000000e+00
  %2728 = fmul double %2725, %2727
  %2729 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %2724)
  %2730 = add i32 %2729, %.neg.i.i.i.i68.i.i
  %2731 = fadd double %2728, -1.000000e+00
  %2732 = fadd double %2728, 1.000000e+00
  %2733 = fadd double %2732, -1.000000e+00
  %2734 = fsub double %2728, %2733
  %2735 = tail call double @llvm.amdgcn.rcp.f64(double %2732)
  %2736 = fneg double %2732
  %2737 = tail call double @llvm.fma.f64(double %2736, double %2735, double 1.000000e+00)
  %2738 = tail call double @llvm.fma.f64(double %2737, double %2735, double %2735)
  %2739 = tail call double @llvm.fma.f64(double %2736, double %2738, double 1.000000e+00)
  %2740 = tail call double @llvm.fma.f64(double %2739, double %2738, double %2738)
  %2741 = fmul double %2731, %2740
  %2742 = fmul double %2732, %2741
  %2743 = fneg double %2742
  %2744 = tail call double @llvm.fma.f64(double %2741, double %2732, double %2743)
  %2745 = tail call double @llvm.fma.f64(double %2741, double %2734, double %2744)
  %2746 = fadd double %2742, %2745
  %2747 = fsub double %2746, %2742
  %2748 = fsub double %2731, %2746
  %2749 = fsub double %2731, %2748
  %2750 = fsub double %2749, %2746
  %2751 = fsub double %2747, %2745
  %2752 = fadd double %2751, %2750
  %2753 = fadd double %2748, %2752
  %2754 = fmul double %2740, %2753
  %2755 = fadd double %2741, %2754
  %2756 = fsub double %2755, %2741
  %2757 = fsub double %2754, %2756
  %2758 = fmul double %2755, %2755
  %2759 = fneg double %2758
  %2760 = tail call double @llvm.fma.f64(double %2755, double %2755, double %2759)
  %2761 = fmul double %2757, 2.000000e+00
  %2762 = tail call double @llvm.fma.f64(double %2755, double %2761, double %2760)
  %2763 = fadd double %2758, %2762
  %2764 = fsub double %2763, %2758
  %2765 = fsub double %2762, %2764
  %2766 = tail call double @llvm.fma.f64(double %2763, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %2767 = tail call double @llvm.fma.f64(double %2763, double %2766, double 0x3FBE25E43ABE935A)
  %2768 = tail call double @llvm.fma.f64(double %2763, double %2767, double 0x3FC110EF47E6C9C2)
  %2769 = tail call double @llvm.fma.f64(double %2763, double %2768, double 0x3FC3B13BCFA74449)
  %2770 = tail call double @llvm.fma.f64(double %2763, double %2769, double 0x3FC745D171BF3C30)
  %2771 = tail call double @llvm.fma.f64(double %2763, double %2770, double 0x3FCC71C71C7792CE)
  %2772 = tail call double @llvm.fma.f64(double %2763, double %2771, double 0x3FD24924924920DA)
  %2773 = tail call double @llvm.fma.f64(double %2763, double %2772, double 0x3FD999999999999C)
  %2774 = sitofp i32 %2730 to double
  %2775 = fmul double %2774, 0x3FE62E42FEFA39EF
  %2776 = fneg double %2775
  %2777 = tail call double @llvm.fma.f64(double %2774, double 0x3FE62E42FEFA39EF, double %2776)
  %2778 = tail call double @llvm.fma.f64(double %2774, double 0x3C7ABC9E3B39803F, double %2777)
  %2779 = fadd double %2775, %2778
  %2780 = fsub double %2779, %2775
  %2781 = fsub double %2778, %2780
  %2782 = tail call double @llvm.ldexp.f64.i32(double %2755, i32 1)
  %2783 = tail call double @llvm.ldexp.f64.i32(double %2757, i32 1)
  %2784 = fmul double %2755, %2763
  %2785 = fneg double %2784
  %2786 = tail call double @llvm.fma.f64(double %2763, double %2755, double %2785)
  %2787 = tail call double @llvm.fma.f64(double %2763, double %2757, double %2786)
  %2788 = tail call double @llvm.fma.f64(double %2765, double %2755, double %2787)
  %2789 = fadd double %2784, %2788
  %2790 = fsub double %2789, %2784
  %2791 = fsub double %2788, %2790
  %2792 = fmul double %2763, %2773
  %2793 = fneg double %2792
  %2794 = tail call double @llvm.fma.f64(double %2763, double %2773, double %2793)
  %2795 = tail call double @llvm.fma.f64(double %2765, double %2773, double %2794)
  %2796 = fadd double %2792, %2795
  %2797 = fsub double %2796, %2792
  %2798 = fsub double %2795, %2797
  %2799 = fadd double %2796, 0x3FE5555555555555
  %2800 = fadd double %2799, 0xBFE5555555555555
  %2801 = fsub double %2796, %2800
  %2802 = fadd double %2798, 0x3C8543B0D5DF274D
  %2803 = fadd double %2802, %2801
  %2804 = fadd double %2799, %2803
  %2805 = fsub double %2799, %2804
  %2806 = fadd double %2803, %2805
  %2807 = fmul double %2789, %2804
  %2808 = fneg double %2807
  %2809 = tail call double @llvm.fma.f64(double %2789, double %2804, double %2808)
  %2810 = tail call double @llvm.fma.f64(double %2789, double %2806, double %2809)
  %2811 = tail call double @llvm.fma.f64(double %2791, double %2804, double %2810)
  %2812 = fadd double %2807, %2811
  %2813 = fsub double %2812, %2807
  %2814 = fsub double %2811, %2813
  %2815 = fadd double %2782, %2812
  %2816 = fsub double %2815, %2782
  %2817 = fsub double %2812, %2816
  %2818 = fadd double %2783, %2814
  %2819 = fadd double %2818, %2817
  %2820 = fadd double %2815, %2819
  %2821 = fsub double %2820, %2815
  %2822 = fsub double %2819, %2821
  %2823 = fadd double %2779, %2820
  %2824 = fsub double %2823, %2779
  %2825 = fsub double %2823, %2824
  %2826 = fsub double %2779, %2825
  %2827 = fsub double %2820, %2824
  %2828 = fadd double %2827, %2826
  %2829 = fadd double %2781, %2822
  %2830 = fsub double %2829, %2781
  %2831 = fsub double %2829, %2830
  %2832 = fsub double %2781, %2831
  %2833 = fsub double %2822, %2830
  %2834 = fadd double %2833, %2832
  %2835 = fadd double %2829, %2828
  %2836 = fadd double %2823, %2835
  %2837 = fsub double %2836, %2823
  %2838 = fsub double %2835, %2837
  %2839 = fadd double %2834, %2838
  %2840 = fadd double %2836, %2839
  %2841 = fsub double %2840, %2836
  %2842 = fsub double %2839, %2841
  %2843 = fmul double %2723, %2840
  %2844 = fneg double %2843
  %2845 = tail call double @llvm.fma.f64(double %2723, double %2840, double %2844) #9
  %2846 = tail call double @llvm.fma.f64(double %2723, double %2842, double %2845) #9
  %2847 = fadd double %2843, %2846
  %2848 = fsub double %2847, %2843
  %2849 = fsub double %2846, %2848
  %2850 = tail call double @llvm.fabs.f64(double %2843) #9
  %2851 = fcmp oeq double %2850, 0x7FF0000000000000
  %2852 = select i1 %2851, double %2843, double %2847
  %2853 = tail call double @llvm.fabs.f64(double %2852) #9
  %2854 = fcmp oeq double %2853, 0x7FF0000000000000
  %2855 = select i1 %2854, double 0.000000e+00, double %2849
  %2856 = fmul double %2852, 0x3FF71547652B82FE
  %2857 = tail call double @llvm.rint.f64(double %2856)
  %2858 = fneg double %2857
  %2859 = tail call double @llvm.fma.f64(double %2858, double 0x3FE62E42FEFA39EF, double %2852)
  %2860 = tail call double @llvm.fma.f64(double %2858, double 0x3C7ABC9E3B39803F, double %2859)
  %2861 = tail call double @llvm.fma.f64(double %2860, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2862 = tail call double @llvm.fma.f64(double %2860, double %2861, double 0x3EC71DEE623FDE64)
  %2863 = tail call double @llvm.fma.f64(double %2860, double %2862, double 0x3EFA01997C89E6B0)
  %2864 = tail call double @llvm.fma.f64(double %2860, double %2863, double 0x3F2A01A014761F6E)
  %2865 = tail call double @llvm.fma.f64(double %2860, double %2864, double 0x3F56C16C1852B7B0)
  %2866 = tail call double @llvm.fma.f64(double %2860, double %2865, double 0x3F81111111122322)
  %2867 = tail call double @llvm.fma.f64(double %2860, double %2866, double 0x3FA55555555502A1)
  %2868 = tail call double @llvm.fma.f64(double %2860, double %2867, double 0x3FC5555555555511)
  %2869 = tail call double @llvm.fma.f64(double %2860, double %2868, double 0x3FE000000000000B)
  %2870 = tail call double @llvm.fma.f64(double %2860, double %2869, double 1.000000e+00)
  %2871 = tail call double @llvm.fma.f64(double %2860, double %2870, double 1.000000e+00)
  %2872 = fptosi double %2857 to i32
  %2873 = tail call double @llvm.ldexp.f64.i32(double %2871, i32 %2872)
  %2874 = fcmp ogt double %2852, 1.024000e+03
  %2875 = select i1 %2874, double 0x7FF0000000000000, double %2873
  %2876 = fcmp olt double %2852, -1.075000e+03
  %2877 = select i1 %2876, double 0.000000e+00, double %2875
  %2878 = tail call double @llvm.fma.f64(double %2877, double %2855, double %2877) #9
  %2879 = tail call double @llvm.fabs.f64(double %2877) #9
  %2880 = fcmp oeq double %2879, 0x7FF0000000000000
  %2881 = select i1 %2880, double %2877, double %2878
  %2882 = tail call double @llvm.trunc.f64(double %2723) #9
  %2883 = fcmp oeq double %2882, %2723
  %2884 = fmul double %2723, 5.000000e-01
  %2885 = tail call double @llvm.trunc.f64(double %2884) #9
  %2886 = fcmp une double %2885, %2884
  %2887 = and i1 %2883, %2886
  %2888 = select i1 %2887, double %sub.i67.i.i, double 1.000000e+00
  %2889 = tail call double @llvm.copysign.f64(double %2881, double %2888) #9
  %2890 = fcmp olt double %sub.i67.i.i, 0.000000e+00
  %2891 = select i1 %2883, double %2889, double 0x7FF8000000000000
  %2892 = select i1 %2890, double %2891, double %2889
  %2893 = fcmp oeq double %2724, 0x7FF0000000000000
  %2894 = fcmp oeq double %sub.i67.i.i, 0.000000e+00
  %2895 = or i1 %2894, %2893
  %2896 = select i1 %2894, double 0.000000e+00, double 0x7FF0000000000000
  %2897 = select i1 %2887, double %sub.i67.i.i, double 0.000000e+00
  %2898 = tail call double @llvm.copysign.f64(double %2896, double %2897) #9
  %2899 = select i1 %2895, double %2898, double %2892
  %2900 = fcmp uno double %sub.i67.i.i, 0.000000e+00
  %2901 = select i1 %2900, double 0x7FF8000000000000, double %2899
  %2902 = fcmp oeq double %sub110.i.i, 1.000000e+00
  %2903 = select i1 %2902, double 1.000000e+00, double 2.000000e+00
  %2904 = tail call double @llvm.fabs.f64(double %sub110.i.i) #9
  %2905 = tail call double @llvm.amdgcn.frexp.mant.f64(double %2904)
  %2906 = fcmp olt double %2905, 0x3FE5555555555555
  %.neg.i.i.i1.i70.i.i = sext i1 %2906 to i32
  %2907 = select i1 %2906, double 2.000000e+00, double 1.000000e+00
  %2908 = fmul double %2905, %2907
  %2909 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %2904)
  %2910 = add i32 %2909, %.neg.i.i.i1.i70.i.i
  %2911 = fadd double %2908, -1.000000e+00
  %2912 = fadd double %2908, 1.000000e+00
  %2913 = fadd double %2912, -1.000000e+00
  %2914 = fsub double %2908, %2913
  %2915 = tail call double @llvm.amdgcn.rcp.f64(double %2912)
  %2916 = fneg double %2912
  %2917 = tail call double @llvm.fma.f64(double %2916, double %2915, double 1.000000e+00)
  %2918 = tail call double @llvm.fma.f64(double %2917, double %2915, double %2915)
  %2919 = tail call double @llvm.fma.f64(double %2916, double %2918, double 1.000000e+00)
  %2920 = tail call double @llvm.fma.f64(double %2919, double %2918, double %2918)
  %2921 = fmul double %2911, %2920
  %2922 = fmul double %2912, %2921
  %2923 = fneg double %2922
  %2924 = tail call double @llvm.fma.f64(double %2921, double %2912, double %2923)
  %2925 = tail call double @llvm.fma.f64(double %2921, double %2914, double %2924)
  %2926 = fadd double %2922, %2925
  %2927 = fsub double %2926, %2922
  %2928 = fsub double %2911, %2926
  %2929 = fsub double %2911, %2928
  %2930 = fsub double %2929, %2926
  %2931 = fsub double %2927, %2925
  %2932 = fadd double %2931, %2930
  %2933 = fadd double %2928, %2932
  %2934 = fmul double %2920, %2933
  %2935 = fadd double %2921, %2934
  %2936 = fsub double %2935, %2921
  %2937 = fsub double %2934, %2936
  %2938 = fmul double %2935, %2935
  %2939 = fneg double %2938
  %2940 = tail call double @llvm.fma.f64(double %2935, double %2935, double %2939)
  %2941 = fmul double %2937, 2.000000e+00
  %2942 = tail call double @llvm.fma.f64(double %2935, double %2941, double %2940)
  %2943 = fadd double %2938, %2942
  %2944 = fsub double %2943, %2938
  %2945 = fsub double %2942, %2944
  %2946 = tail call double @llvm.fma.f64(double %2943, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %2947 = tail call double @llvm.fma.f64(double %2943, double %2946, double 0x3FBE25E43ABE935A)
  %2948 = tail call double @llvm.fma.f64(double %2943, double %2947, double 0x3FC110EF47E6C9C2)
  %2949 = tail call double @llvm.fma.f64(double %2943, double %2948, double 0x3FC3B13BCFA74449)
  %2950 = tail call double @llvm.fma.f64(double %2943, double %2949, double 0x3FC745D171BF3C30)
  %2951 = tail call double @llvm.fma.f64(double %2943, double %2950, double 0x3FCC71C71C7792CE)
  %2952 = tail call double @llvm.fma.f64(double %2943, double %2951, double 0x3FD24924924920DA)
  %2953 = tail call double @llvm.fma.f64(double %2943, double %2952, double 0x3FD999999999999C)
  %2954 = sitofp i32 %2910 to double
  %2955 = fmul double %2954, 0x3FE62E42FEFA39EF
  %2956 = fneg double %2955
  %2957 = tail call double @llvm.fma.f64(double %2954, double 0x3FE62E42FEFA39EF, double %2956)
  %2958 = tail call double @llvm.fma.f64(double %2954, double 0x3C7ABC9E3B39803F, double %2957)
  %2959 = fadd double %2955, %2958
  %2960 = fsub double %2959, %2955
  %2961 = fsub double %2958, %2960
  %2962 = tail call double @llvm.ldexp.f64.i32(double %2935, i32 1)
  %2963 = tail call double @llvm.ldexp.f64.i32(double %2937, i32 1)
  %2964 = fmul double %2935, %2943
  %2965 = fneg double %2964
  %2966 = tail call double @llvm.fma.f64(double %2943, double %2935, double %2965)
  %2967 = tail call double @llvm.fma.f64(double %2943, double %2937, double %2966)
  %2968 = tail call double @llvm.fma.f64(double %2945, double %2935, double %2967)
  %2969 = fadd double %2964, %2968
  %2970 = fsub double %2969, %2964
  %2971 = fsub double %2968, %2970
  %2972 = fmul double %2943, %2953
  %2973 = fneg double %2972
  %2974 = tail call double @llvm.fma.f64(double %2943, double %2953, double %2973)
  %2975 = tail call double @llvm.fma.f64(double %2945, double %2953, double %2974)
  %2976 = fadd double %2972, %2975
  %2977 = fsub double %2976, %2972
  %2978 = fsub double %2975, %2977
  %2979 = fadd double %2976, 0x3FE5555555555555
  %2980 = fadd double %2979, 0xBFE5555555555555
  %2981 = fsub double %2976, %2980
  %2982 = fadd double %2978, 0x3C8543B0D5DF274D
  %2983 = fadd double %2982, %2981
  %2984 = fadd double %2979, %2983
  %2985 = fsub double %2979, %2984
  %2986 = fadd double %2983, %2985
  %2987 = fmul double %2969, %2984
  %2988 = fneg double %2987
  %2989 = tail call double @llvm.fma.f64(double %2969, double %2984, double %2988)
  %2990 = tail call double @llvm.fma.f64(double %2969, double %2986, double %2989)
  %2991 = tail call double @llvm.fma.f64(double %2971, double %2984, double %2990)
  %2992 = fadd double %2987, %2991
  %2993 = fsub double %2992, %2987
  %2994 = fsub double %2991, %2993
  %2995 = fadd double %2962, %2992
  %2996 = fsub double %2995, %2962
  %2997 = fsub double %2992, %2996
  %2998 = fadd double %2963, %2994
  %2999 = fadd double %2998, %2997
  %3000 = fadd double %2995, %2999
  %3001 = fsub double %3000, %2995
  %3002 = fsub double %2999, %3001
  %3003 = fadd double %2959, %3000
  %3004 = fsub double %3003, %2959
  %3005 = fsub double %3003, %3004
  %3006 = fsub double %2959, %3005
  %3007 = fsub double %3000, %3004
  %3008 = fadd double %3007, %3006
  %3009 = fadd double %2961, %3002
  %3010 = fsub double %3009, %2961
  %3011 = fsub double %3009, %3010
  %3012 = fsub double %2961, %3011
  %3013 = fsub double %3002, %3010
  %3014 = fadd double %3013, %3012
  %3015 = fadd double %3009, %3008
  %3016 = fadd double %3003, %3015
  %3017 = fsub double %3016, %3003
  %3018 = fsub double %3015, %3017
  %3019 = fadd double %3014, %3018
  %3020 = fadd double %3016, %3019
  %3021 = fsub double %3020, %3016
  %3022 = fsub double %3019, %3021
  %3023 = fmul double %2903, %3020
  %3024 = fneg double %3023
  %3025 = tail call double @llvm.fma.f64(double %2903, double %3020, double %3024) #9
  %3026 = tail call double @llvm.fma.f64(double %2903, double %3022, double %3025) #9
  %3027 = fadd double %3023, %3026
  %3028 = fsub double %3027, %3023
  %3029 = fsub double %3026, %3028
  %3030 = tail call double @llvm.fabs.f64(double %3023) #9
  %3031 = fcmp oeq double %3030, 0x7FF0000000000000
  %3032 = select i1 %3031, double %3023, double %3027
  %3033 = tail call double @llvm.fabs.f64(double %3032) #9
  %3034 = fcmp oeq double %3033, 0x7FF0000000000000
  %3035 = select i1 %3034, double 0.000000e+00, double %3029
  %3036 = fmul double %3032, 0x3FF71547652B82FE
  %3037 = tail call double @llvm.rint.f64(double %3036)
  %3038 = fneg double %3037
  %3039 = tail call double @llvm.fma.f64(double %3038, double 0x3FE62E42FEFA39EF, double %3032)
  %3040 = tail call double @llvm.fma.f64(double %3038, double 0x3C7ABC9E3B39803F, double %3039)
  %3041 = tail call double @llvm.fma.f64(double %3040, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3042 = tail call double @llvm.fma.f64(double %3040, double %3041, double 0x3EC71DEE623FDE64)
  %3043 = tail call double @llvm.fma.f64(double %3040, double %3042, double 0x3EFA01997C89E6B0)
  %3044 = tail call double @llvm.fma.f64(double %3040, double %3043, double 0x3F2A01A014761F6E)
  %3045 = tail call double @llvm.fma.f64(double %3040, double %3044, double 0x3F56C16C1852B7B0)
  %3046 = tail call double @llvm.fma.f64(double %3040, double %3045, double 0x3F81111111122322)
  %3047 = tail call double @llvm.fma.f64(double %3040, double %3046, double 0x3FA55555555502A1)
  %3048 = tail call double @llvm.fma.f64(double %3040, double %3047, double 0x3FC5555555555511)
  %3049 = tail call double @llvm.fma.f64(double %3040, double %3048, double 0x3FE000000000000B)
  %3050 = tail call double @llvm.fma.f64(double %3040, double %3049, double 1.000000e+00)
  %3051 = tail call double @llvm.fma.f64(double %3040, double %3050, double 1.000000e+00)
  %3052 = fptosi double %3037 to i32
  %3053 = tail call double @llvm.ldexp.f64.i32(double %3051, i32 %3052)
  %3054 = fcmp ogt double %3032, 1.024000e+03
  %3055 = select i1 %3054, double 0x7FF0000000000000, double %3053
  %3056 = fcmp olt double %3032, -1.075000e+03
  %3057 = select i1 %3056, double 0.000000e+00, double %3055
  %3058 = tail call double @llvm.fma.f64(double %3057, double %3035, double %3057) #9
  %3059 = tail call double @llvm.fabs.f64(double %3057) #9
  %3060 = fcmp oeq double %3059, 0x7FF0000000000000
  %3061 = select i1 %3060, double %3057, double %3058
  %3062 = tail call double @llvm.trunc.f64(double %2903) #9
  %3063 = fcmp oeq double %3062, %2903
  %3064 = fmul double %2903, 5.000000e-01
  %3065 = tail call double @llvm.trunc.f64(double %3064) #9
  %3066 = fcmp une double %3065, %3064
  %3067 = and i1 %3063, %3066
  %3068 = select i1 %3067, double %sub110.i.i, double 1.000000e+00
  %3069 = tail call double @llvm.copysign.f64(double %3061, double %3068) #9
  %3070 = fcmp olt double %sub110.i.i, 0.000000e+00
  %3071 = select i1 %3063, double %3069, double 0x7FF8000000000000
  %3072 = select i1 %3070, double %3071, double %3069
  %3073 = fcmp oeq double %2904, 0x7FF0000000000000
  %3074 = fcmp oeq double %sub110.i.i, 0.000000e+00
  %3075 = or i1 %3074, %3073
  %3076 = select i1 %3074, double 0.000000e+00, double 0x7FF0000000000000
  %3077 = select i1 %3067, double %sub110.i.i, double 0.000000e+00
  %3078 = tail call double @llvm.copysign.f64(double %3076, double %3077) #9
  %3079 = select i1 %3075, double %3078, double %3072
  %3080 = fcmp uno double %sub110.i.i, 0.000000e+00
  %3081 = select i1 %3080, double 0x7FF8000000000000, double %3079
  %add.i71.i.i = fadd double %3081, %2901
  %sub3.i72.i.i = fsub double %add122.i.i, %add122.i.i
  %3082 = fcmp oeq double %sub3.i72.i.i, 1.000000e+00
  %3083 = select i1 %3082, double 1.000000e+00, double 2.000000e+00
  %3084 = tail call double @llvm.fabs.f64(double %sub3.i72.i.i) #9
  %3085 = tail call double @llvm.amdgcn.frexp.mant.f64(double %3084)
  %3086 = fcmp olt double %3085, 0x3FE5555555555555
  %.neg.i.i.i2.i73.i.i = sext i1 %3086 to i32
  %3087 = select i1 %3086, double 2.000000e+00, double 1.000000e+00
  %3088 = fmul double %3085, %3087
  %3089 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3084)
  %3090 = add i32 %3089, %.neg.i.i.i2.i73.i.i
  %3091 = fadd double %3088, -1.000000e+00
  %3092 = fadd double %3088, 1.000000e+00
  %3093 = fadd double %3092, -1.000000e+00
  %3094 = fsub double %3088, %3093
  %3095 = tail call double @llvm.amdgcn.rcp.f64(double %3092)
  %3096 = fneg double %3092
  %3097 = tail call double @llvm.fma.f64(double %3096, double %3095, double 1.000000e+00)
  %3098 = tail call double @llvm.fma.f64(double %3097, double %3095, double %3095)
  %3099 = tail call double @llvm.fma.f64(double %3096, double %3098, double 1.000000e+00)
  %3100 = tail call double @llvm.fma.f64(double %3099, double %3098, double %3098)
  %3101 = fmul double %3091, %3100
  %3102 = fmul double %3092, %3101
  %3103 = fneg double %3102
  %3104 = tail call double @llvm.fma.f64(double %3101, double %3092, double %3103)
  %3105 = tail call double @llvm.fma.f64(double %3101, double %3094, double %3104)
  %3106 = fadd double %3102, %3105
  %3107 = fsub double %3106, %3102
  %3108 = fsub double %3091, %3106
  %3109 = fsub double %3091, %3108
  %3110 = fsub double %3109, %3106
  %3111 = fsub double %3107, %3105
  %3112 = fadd double %3111, %3110
  %3113 = fadd double %3108, %3112
  %3114 = fmul double %3100, %3113
  %3115 = fadd double %3101, %3114
  %3116 = fsub double %3115, %3101
  %3117 = fsub double %3114, %3116
  %3118 = fmul double %3115, %3115
  %3119 = fneg double %3118
  %3120 = tail call double @llvm.fma.f64(double %3115, double %3115, double %3119)
  %3121 = fmul double %3117, 2.000000e+00
  %3122 = tail call double @llvm.fma.f64(double %3115, double %3121, double %3120)
  %3123 = fadd double %3118, %3122
  %3124 = fsub double %3123, %3118
  %3125 = fsub double %3122, %3124
  %3126 = tail call double @llvm.fma.f64(double %3123, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %3127 = tail call double @llvm.fma.f64(double %3123, double %3126, double 0x3FBE25E43ABE935A)
  %3128 = tail call double @llvm.fma.f64(double %3123, double %3127, double 0x3FC110EF47E6C9C2)
  %3129 = tail call double @llvm.fma.f64(double %3123, double %3128, double 0x3FC3B13BCFA74449)
  %3130 = tail call double @llvm.fma.f64(double %3123, double %3129, double 0x3FC745D171BF3C30)
  %3131 = tail call double @llvm.fma.f64(double %3123, double %3130, double 0x3FCC71C71C7792CE)
  %3132 = tail call double @llvm.fma.f64(double %3123, double %3131, double 0x3FD24924924920DA)
  %3133 = tail call double @llvm.fma.f64(double %3123, double %3132, double 0x3FD999999999999C)
  %3134 = sitofp i32 %3090 to double
  %3135 = fmul double %3134, 0x3FE62E42FEFA39EF
  %3136 = fneg double %3135
  %3137 = tail call double @llvm.fma.f64(double %3134, double 0x3FE62E42FEFA39EF, double %3136)
  %3138 = tail call double @llvm.fma.f64(double %3134, double 0x3C7ABC9E3B39803F, double %3137)
  %3139 = fadd double %3135, %3138
  %3140 = fsub double %3139, %3135
  %3141 = fsub double %3138, %3140
  %3142 = tail call double @llvm.ldexp.f64.i32(double %3115, i32 1)
  %3143 = tail call double @llvm.ldexp.f64.i32(double %3117, i32 1)
  %3144 = fmul double %3115, %3123
  %3145 = fneg double %3144
  %3146 = tail call double @llvm.fma.f64(double %3123, double %3115, double %3145)
  %3147 = tail call double @llvm.fma.f64(double %3123, double %3117, double %3146)
  %3148 = tail call double @llvm.fma.f64(double %3125, double %3115, double %3147)
  %3149 = fadd double %3144, %3148
  %3150 = fsub double %3149, %3144
  %3151 = fsub double %3148, %3150
  %3152 = fmul double %3123, %3133
  %3153 = fneg double %3152
  %3154 = tail call double @llvm.fma.f64(double %3123, double %3133, double %3153)
  %3155 = tail call double @llvm.fma.f64(double %3125, double %3133, double %3154)
  %3156 = fadd double %3152, %3155
  %3157 = fsub double %3156, %3152
  %3158 = fsub double %3155, %3157
  %3159 = fadd double %3156, 0x3FE5555555555555
  %3160 = fadd double %3159, 0xBFE5555555555555
  %3161 = fsub double %3156, %3160
  %3162 = fadd double %3158, 0x3C8543B0D5DF274D
  %3163 = fadd double %3162, %3161
  %3164 = fadd double %3159, %3163
  %3165 = fsub double %3159, %3164
  %3166 = fadd double %3163, %3165
  %3167 = fmul double %3149, %3164
  %3168 = fneg double %3167
  %3169 = tail call double @llvm.fma.f64(double %3149, double %3164, double %3168)
  %3170 = tail call double @llvm.fma.f64(double %3149, double %3166, double %3169)
  %3171 = tail call double @llvm.fma.f64(double %3151, double %3164, double %3170)
  %3172 = fadd double %3167, %3171
  %3173 = fsub double %3172, %3167
  %3174 = fsub double %3171, %3173
  %3175 = fadd double %3142, %3172
  %3176 = fsub double %3175, %3142
  %3177 = fsub double %3172, %3176
  %3178 = fadd double %3143, %3174
  %3179 = fadd double %3178, %3177
  %3180 = fadd double %3175, %3179
  %3181 = fsub double %3180, %3175
  %3182 = fsub double %3179, %3181
  %3183 = fadd double %3139, %3180
  %3184 = fsub double %3183, %3139
  %3185 = fsub double %3183, %3184
  %3186 = fsub double %3139, %3185
  %3187 = fsub double %3180, %3184
  %3188 = fadd double %3187, %3186
  %3189 = fadd double %3141, %3182
  %3190 = fsub double %3189, %3141
  %3191 = fsub double %3189, %3190
  %3192 = fsub double %3141, %3191
  %3193 = fsub double %3182, %3190
  %3194 = fadd double %3193, %3192
  %3195 = fadd double %3189, %3188
  %3196 = fadd double %3183, %3195
  %3197 = fsub double %3196, %3183
  %3198 = fsub double %3195, %3197
  %3199 = fadd double %3194, %3198
  %3200 = fadd double %3196, %3199
  %3201 = fsub double %3200, %3196
  %3202 = fsub double %3199, %3201
  %3203 = fmul double %3083, %3200
  %3204 = fneg double %3203
  %3205 = tail call double @llvm.fma.f64(double %3083, double %3200, double %3204) #9
  %3206 = tail call double @llvm.fma.f64(double %3083, double %3202, double %3205) #9
  %3207 = fadd double %3203, %3206
  %3208 = fsub double %3207, %3203
  %3209 = fsub double %3206, %3208
  %3210 = tail call double @llvm.fabs.f64(double %3203) #9
  %3211 = fcmp oeq double %3210, 0x7FF0000000000000
  %3212 = select i1 %3211, double %3203, double %3207
  %3213 = tail call double @llvm.fabs.f64(double %3212) #9
  %3214 = fcmp oeq double %3213, 0x7FF0000000000000
  %3215 = select i1 %3214, double 0.000000e+00, double %3209
  %3216 = fmul double %3212, 0x3FF71547652B82FE
  %3217 = tail call double @llvm.rint.f64(double %3216)
  %3218 = fneg double %3217
  %3219 = tail call double @llvm.fma.f64(double %3218, double 0x3FE62E42FEFA39EF, double %3212)
  %3220 = tail call double @llvm.fma.f64(double %3218, double 0x3C7ABC9E3B39803F, double %3219)
  %3221 = tail call double @llvm.fma.f64(double %3220, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3222 = tail call double @llvm.fma.f64(double %3220, double %3221, double 0x3EC71DEE623FDE64)
  %3223 = tail call double @llvm.fma.f64(double %3220, double %3222, double 0x3EFA01997C89E6B0)
  %3224 = tail call double @llvm.fma.f64(double %3220, double %3223, double 0x3F2A01A014761F6E)
  %3225 = tail call double @llvm.fma.f64(double %3220, double %3224, double 0x3F56C16C1852B7B0)
  %3226 = tail call double @llvm.fma.f64(double %3220, double %3225, double 0x3F81111111122322)
  %3227 = tail call double @llvm.fma.f64(double %3220, double %3226, double 0x3FA55555555502A1)
  %3228 = tail call double @llvm.fma.f64(double %3220, double %3227, double 0x3FC5555555555511)
  %3229 = tail call double @llvm.fma.f64(double %3220, double %3228, double 0x3FE000000000000B)
  %3230 = tail call double @llvm.fma.f64(double %3220, double %3229, double 1.000000e+00)
  %3231 = tail call double @llvm.fma.f64(double %3220, double %3230, double 1.000000e+00)
  %3232 = fptosi double %3217 to i32
  %3233 = tail call double @llvm.ldexp.f64.i32(double %3231, i32 %3232)
  %3234 = fcmp ogt double %3212, 1.024000e+03
  %3235 = select i1 %3234, double 0x7FF0000000000000, double %3233
  %3236 = fcmp olt double %3212, -1.075000e+03
  %3237 = select i1 %3236, double 0.000000e+00, double %3235
  %3238 = tail call double @llvm.fma.f64(double %3237, double %3215, double %3237) #9
  %3239 = tail call double @llvm.fabs.f64(double %3237) #9
  %3240 = fcmp oeq double %3239, 0x7FF0000000000000
  %3241 = select i1 %3240, double %3237, double %3238
  %3242 = tail call double @llvm.trunc.f64(double %3083) #9
  %3243 = fcmp oeq double %3242, %3083
  %3244 = fmul double %3083, 5.000000e-01
  %3245 = tail call double @llvm.trunc.f64(double %3244) #9
  %3246 = fcmp une double %3245, %3244
  %3247 = and i1 %3243, %3246
  %3248 = select i1 %3247, double %sub3.i72.i.i, double 1.000000e+00
  %3249 = tail call double @llvm.copysign.f64(double %3241, double %3248) #9
  %3250 = fcmp olt double %sub3.i72.i.i, 0.000000e+00
  %3251 = select i1 %3243, double %3249, double 0x7FF8000000000000
  %3252 = select i1 %3250, double %3251, double %3249
  %3253 = fcmp oeq double %3084, 0x7FF0000000000000
  %3254 = fcmp oeq double %sub3.i72.i.i, 0.000000e+00
  %3255 = or i1 %3254, %3253
  %3256 = select i1 %3254, double 0.000000e+00, double 0x7FF0000000000000
  %3257 = select i1 %3247, double %sub3.i72.i.i, double 0.000000e+00
  %3258 = tail call double @llvm.copysign.f64(double %3256, double %3257) #9
  %3259 = select i1 %3255, double %3258, double %3252
  %3260 = fcmp uno double %sub3.i72.i.i, 0.000000e+00
  %3261 = select i1 %3260, double 0x7FF8000000000000, double %3259
  %add5.i74.i.i = fadd double %3261, %add.i71.i.i
  %cmp.i75.i.i = fcmp olt double %add5.i74.i.i, %min_dist.2.i12.i
  %min_dist.7.i.i = select i1 %cmp.i75.i.i, double %add5.i74.i.i, double %min_dist.2.i12.i
  br label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

sw.bb6.i:                                         ; preds = %if.then
  %arrayidx.i.i35.i = getelementptr inbounds nuw i8, ptr %lower_left_.val.i.i, i64 8
  %3262 = load double, ptr %arrayidx.i.i35.i, align 8, !tbaa !30
  %arrayidx.i67.i.i = getelementptr inbounds nuw i8, ptr %lower_left_.val.i.i, i64 16
  %3263 = load double, ptr %arrayidx.i67.i.i, align 8, !tbaa !30
  %upper_right_.i36.i = getelementptr inbounds nuw i8, ptr %this, i64 32
  %upper_right_.val.i37.i = load ptr, ptr %upper_right_.i36.i, align 8, !tbaa !29
  %3264 = load double, ptr %upper_right_.val.i37.i, align 8, !tbaa !30
  %arrayidx.i69.i.i = getelementptr inbounds nuw i8, ptr %upper_right_.val.i37.i, i64 8
  %3265 = load double, ptr %arrayidx.i69.i.i, align 8, !tbaa !30
  %arrayidx.i70.i.i = getelementptr inbounds nuw i8, ptr %upper_right_.val.i37.i, i64 16
  %3266 = load double, ptr %arrayidx.i70.i.i, align 8, !tbaa !30
  %cmp.i38.i = fcmp olt double %agg.tmp.sroa.0.0.copyload, %17
  %cmp15.i.i = fcmp ogt double %r1.sroa.0.0.copyload, %17
  %or.cond.i39.i = select i1 %cmp.i38.i, i1 %cmp15.i.i, i1 false
  br i1 %or.cond.i39.i, label %if.then.i58.i, label %lor.lhs.false.i40.i

lor.lhs.false.i40.i:                              ; preds = %sw.bb6.i
  %cmp16.i.i = fcmp ogt double %agg.tmp.sroa.0.0.copyload, %17
  %cmp18.i.i = fcmp olt double %r1.sroa.0.0.copyload, %17
  %or.cond11.i41.i = select i1 %cmp16.i.i, i1 %cmp18.i.i, i1 false
  br i1 %or.cond11.i41.i, label %if.then.i58.i, label %if.end42.i.i

if.then.i58.i:                                    ; preds = %lor.lhs.false.i40.i, %sw.bb6.i
  %sub.i59.i = fsub double %17, %agg.tmp.sroa.0.0.copyload
  %sub19.i.i = fsub double %r1.sroa.5.0.copyload, %agg.tmp.sroa.2.0.copyload
  %mul.i60.i = fmul double %sub19.i.i, %sub.i59.i
  %sub20.i.i = fsub double %r1.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %div.i61.i = fdiv double %mul.i60.i, %sub20.i.i
  %add.i62.i = fadd double %agg.tmp.sroa.2.0.copyload, %div.i61.i
  %sub22.i.i = fsub double %r1.sroa.7.0.copyload, %agg.tmp.sroa.3.0.copyload
  %mul23.i.i = fmul double %sub22.i.i, %sub.i59.i
  %div25.i.i = fdiv double %mul23.i.i, %sub20.i.i
  %add26.i.i = fadd double %agg.tmp.sroa.3.0.copyload, %div25.i.i
  %cmp27.i.i = fcmp oge double %add.i62.i, %3262
  %cmp29.i.i = fcmp olt double %add.i62.i, %3265
  %or.cond12.not200.not202.i.i = select i1 %cmp27.i.i, i1 %cmp29.i.i, i1 false
  %cmp31.i.i = fcmp oge double %add26.i.i, %3263
  %or.cond13.not201.i.i = select i1 %or.cond12.not200.not202.i.i, i1 %cmp31.i.i, i1 false
  %cmp33.i63.i = fcmp olt double %add26.i.i, %3266
  %or.cond14.i64.i = select i1 %or.cond13.not201.i.i, i1 %cmp33.i63.i, i1 false
  br i1 %or.cond14.i64.i, label %if.then34.i.i, label %if.end42.i.i

if.then34.i.i:                                    ; preds = %if.then.i58.i
  %3267 = fcmp oeq double %sub.i59.i, 1.000000e+00
  %3268 = select i1 %3267, double 1.000000e+00, double 2.000000e+00
  %3269 = tail call double @llvm.fabs.f64(double %sub.i59.i) #9
  %3270 = tail call double @llvm.amdgcn.frexp.mant.f64(double %3269)
  %3271 = fcmp olt double %3270, 0x3FE5555555555555
  %.neg.i.i.i.i.i65.i = sext i1 %3271 to i32
  %3272 = select i1 %3271, double 2.000000e+00, double 1.000000e+00
  %3273 = fmul double %3270, %3272
  %3274 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3269)
  %3275 = add i32 %3274, %.neg.i.i.i.i.i65.i
  %3276 = fadd double %3273, -1.000000e+00
  %3277 = fadd double %3273, 1.000000e+00
  %3278 = fadd double %3277, -1.000000e+00
  %3279 = fsub double %3273, %3278
  %3280 = tail call double @llvm.amdgcn.rcp.f64(double %3277)
  %3281 = fneg double %3277
  %3282 = tail call double @llvm.fma.f64(double %3281, double %3280, double 1.000000e+00)
  %3283 = tail call double @llvm.fma.f64(double %3282, double %3280, double %3280)
  %3284 = tail call double @llvm.fma.f64(double %3281, double %3283, double 1.000000e+00)
  %3285 = tail call double @llvm.fma.f64(double %3284, double %3283, double %3283)
  %3286 = fmul double %3276, %3285
  %3287 = fmul double %3277, %3286
  %3288 = fneg double %3287
  %3289 = tail call double @llvm.fma.f64(double %3286, double %3277, double %3288)
  %3290 = tail call double @llvm.fma.f64(double %3286, double %3279, double %3289)
  %3291 = fadd double %3287, %3290
  %3292 = fsub double %3291, %3287
  %3293 = fsub double %3276, %3291
  %3294 = fsub double %3276, %3293
  %3295 = fsub double %3294, %3291
  %3296 = fsub double %3292, %3290
  %3297 = fadd double %3296, %3295
  %3298 = fadd double %3293, %3297
  %3299 = fmul double %3285, %3298
  %3300 = fadd double %3286, %3299
  %3301 = fsub double %3300, %3286
  %3302 = fsub double %3299, %3301
  %3303 = fmul double %3300, %3300
  %3304 = fneg double %3303
  %3305 = tail call double @llvm.fma.f64(double %3300, double %3300, double %3304)
  %3306 = fmul double %3302, 2.000000e+00
  %3307 = tail call double @llvm.fma.f64(double %3300, double %3306, double %3305)
  %3308 = fadd double %3303, %3307
  %3309 = fsub double %3308, %3303
  %3310 = fsub double %3307, %3309
  %3311 = tail call double @llvm.fma.f64(double %3308, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %3312 = tail call double @llvm.fma.f64(double %3308, double %3311, double 0x3FBE25E43ABE935A)
  %3313 = tail call double @llvm.fma.f64(double %3308, double %3312, double 0x3FC110EF47E6C9C2)
  %3314 = tail call double @llvm.fma.f64(double %3308, double %3313, double 0x3FC3B13BCFA74449)
  %3315 = tail call double @llvm.fma.f64(double %3308, double %3314, double 0x3FC745D171BF3C30)
  %3316 = tail call double @llvm.fma.f64(double %3308, double %3315, double 0x3FCC71C71C7792CE)
  %3317 = tail call double @llvm.fma.f64(double %3308, double %3316, double 0x3FD24924924920DA)
  %3318 = tail call double @llvm.fma.f64(double %3308, double %3317, double 0x3FD999999999999C)
  %3319 = sitofp i32 %3275 to double
  %3320 = fmul double %3319, 0x3FE62E42FEFA39EF
  %3321 = fneg double %3320
  %3322 = tail call double @llvm.fma.f64(double %3319, double 0x3FE62E42FEFA39EF, double %3321)
  %3323 = tail call double @llvm.fma.f64(double %3319, double 0x3C7ABC9E3B39803F, double %3322)
  %3324 = fadd double %3320, %3323
  %3325 = fsub double %3324, %3320
  %3326 = fsub double %3323, %3325
  %3327 = tail call double @llvm.ldexp.f64.i32(double %3300, i32 1)
  %3328 = tail call double @llvm.ldexp.f64.i32(double %3302, i32 1)
  %3329 = fmul double %3300, %3308
  %3330 = fneg double %3329
  %3331 = tail call double @llvm.fma.f64(double %3308, double %3300, double %3330)
  %3332 = tail call double @llvm.fma.f64(double %3308, double %3302, double %3331)
  %3333 = tail call double @llvm.fma.f64(double %3310, double %3300, double %3332)
  %3334 = fadd double %3329, %3333
  %3335 = fsub double %3334, %3329
  %3336 = fsub double %3333, %3335
  %3337 = fmul double %3308, %3318
  %3338 = fneg double %3337
  %3339 = tail call double @llvm.fma.f64(double %3308, double %3318, double %3338)
  %3340 = tail call double @llvm.fma.f64(double %3310, double %3318, double %3339)
  %3341 = fadd double %3337, %3340
  %3342 = fsub double %3341, %3337
  %3343 = fsub double %3340, %3342
  %3344 = fadd double %3341, 0x3FE5555555555555
  %3345 = fadd double %3344, 0xBFE5555555555555
  %3346 = fsub double %3341, %3345
  %3347 = fadd double %3343, 0x3C8543B0D5DF274D
  %3348 = fadd double %3347, %3346
  %3349 = fadd double %3344, %3348
  %3350 = fsub double %3344, %3349
  %3351 = fadd double %3348, %3350
  %3352 = fmul double %3334, %3349
  %3353 = fneg double %3352
  %3354 = tail call double @llvm.fma.f64(double %3334, double %3349, double %3353)
  %3355 = tail call double @llvm.fma.f64(double %3334, double %3351, double %3354)
  %3356 = tail call double @llvm.fma.f64(double %3336, double %3349, double %3355)
  %3357 = fadd double %3352, %3356
  %3358 = fsub double %3357, %3352
  %3359 = fsub double %3356, %3358
  %3360 = fadd double %3327, %3357
  %3361 = fsub double %3360, %3327
  %3362 = fsub double %3357, %3361
  %3363 = fadd double %3328, %3359
  %3364 = fadd double %3363, %3362
  %3365 = fadd double %3360, %3364
  %3366 = fsub double %3365, %3360
  %3367 = fsub double %3364, %3366
  %3368 = fadd double %3324, %3365
  %3369 = fsub double %3368, %3324
  %3370 = fsub double %3368, %3369
  %3371 = fsub double %3324, %3370
  %3372 = fsub double %3365, %3369
  %3373 = fadd double %3372, %3371
  %3374 = fadd double %3326, %3367
  %3375 = fsub double %3374, %3326
  %3376 = fsub double %3374, %3375
  %3377 = fsub double %3326, %3376
  %3378 = fsub double %3367, %3375
  %3379 = fadd double %3378, %3377
  %3380 = fadd double %3374, %3373
  %3381 = fadd double %3368, %3380
  %3382 = fsub double %3381, %3368
  %3383 = fsub double %3380, %3382
  %3384 = fadd double %3379, %3383
  %3385 = fadd double %3381, %3384
  %3386 = fsub double %3385, %3381
  %3387 = fsub double %3384, %3386
  %3388 = fmul double %3268, %3385
  %3389 = fneg double %3388
  %3390 = tail call double @llvm.fma.f64(double %3268, double %3385, double %3389) #9
  %3391 = tail call double @llvm.fma.f64(double %3268, double %3387, double %3390) #9
  %3392 = fadd double %3388, %3391
  %3393 = fsub double %3392, %3388
  %3394 = fsub double %3391, %3393
  %3395 = tail call double @llvm.fabs.f64(double %3388) #9
  %3396 = fcmp oeq double %3395, 0x7FF0000000000000
  %3397 = select i1 %3396, double %3388, double %3392
  %3398 = tail call double @llvm.fabs.f64(double %3397) #9
  %3399 = fcmp oeq double %3398, 0x7FF0000000000000
  %3400 = select i1 %3399, double 0.000000e+00, double %3394
  %3401 = fmul double %3397, 0x3FF71547652B82FE
  %3402 = tail call double @llvm.rint.f64(double %3401)
  %3403 = fneg double %3402
  %3404 = tail call double @llvm.fma.f64(double %3403, double 0x3FE62E42FEFA39EF, double %3397)
  %3405 = tail call double @llvm.fma.f64(double %3403, double 0x3C7ABC9E3B39803F, double %3404)
  %3406 = tail call double @llvm.fma.f64(double %3405, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3407 = tail call double @llvm.fma.f64(double %3405, double %3406, double 0x3EC71DEE623FDE64)
  %3408 = tail call double @llvm.fma.f64(double %3405, double %3407, double 0x3EFA01997C89E6B0)
  %3409 = tail call double @llvm.fma.f64(double %3405, double %3408, double 0x3F2A01A014761F6E)
  %3410 = tail call double @llvm.fma.f64(double %3405, double %3409, double 0x3F56C16C1852B7B0)
  %3411 = tail call double @llvm.fma.f64(double %3405, double %3410, double 0x3F81111111122322)
  %3412 = tail call double @llvm.fma.f64(double %3405, double %3411, double 0x3FA55555555502A1)
  %3413 = tail call double @llvm.fma.f64(double %3405, double %3412, double 0x3FC5555555555511)
  %3414 = tail call double @llvm.fma.f64(double %3405, double %3413, double 0x3FE000000000000B)
  %3415 = tail call double @llvm.fma.f64(double %3405, double %3414, double 1.000000e+00)
  %3416 = tail call double @llvm.fma.f64(double %3405, double %3415, double 1.000000e+00)
  %3417 = fptosi double %3402 to i32
  %3418 = tail call double @llvm.ldexp.f64.i32(double %3416, i32 %3417)
  %3419 = fcmp ogt double %3397, 1.024000e+03
  %3420 = select i1 %3419, double 0x7FF0000000000000, double %3418
  %3421 = fcmp olt double %3397, -1.075000e+03
  %3422 = select i1 %3421, double 0.000000e+00, double %3420
  %3423 = tail call double @llvm.fma.f64(double %3422, double %3400, double %3422) #9
  %3424 = tail call double @llvm.fabs.f64(double %3422) #9
  %3425 = fcmp oeq double %3424, 0x7FF0000000000000
  %3426 = select i1 %3425, double %3422, double %3423
  %3427 = tail call double @llvm.trunc.f64(double %3268) #9
  %3428 = fcmp oeq double %3427, %3268
  %3429 = fmul double %3268, 5.000000e-01
  %3430 = tail call double @llvm.trunc.f64(double %3429) #9
  %3431 = fcmp une double %3430, %3429
  %3432 = and i1 %3428, %3431
  %3433 = select i1 %3432, double %sub.i59.i, double 1.000000e+00
  %3434 = tail call double @llvm.copysign.f64(double %3426, double %3433) #9
  %3435 = fcmp olt double %sub.i59.i, 0.000000e+00
  %3436 = select i1 %3428, double %3434, double 0x7FF8000000000000
  %3437 = select i1 %3435, double %3436, double %3434
  %3438 = fcmp oeq double %3269, 0x7FF0000000000000
  %3439 = fcmp oeq double %sub.i59.i, 0.000000e+00
  %3440 = or i1 %3439, %3438
  %3441 = select i1 %3439, double 0.000000e+00, double 0x7FF0000000000000
  %3442 = select i1 %3432, double %sub.i59.i, double 0.000000e+00
  %3443 = tail call double @llvm.copysign.f64(double %3441, double %3442) #9
  %3444 = select i1 %3440, double %3443, double %3437
  %3445 = fcmp uno double %sub.i59.i, 0.000000e+00
  %3446 = select i1 %3445, double 0x7FF8000000000000, double %3444
  %sub1.i.i66.i = fsub double %add.i62.i, %agg.tmp.sroa.2.0.copyload
  %3447 = fcmp oeq double %sub1.i.i66.i, 1.000000e+00
  %3448 = select i1 %3447, double 1.000000e+00, double 2.000000e+00
  %3449 = tail call double @llvm.fabs.f64(double %sub1.i.i66.i) #9
  %3450 = tail call double @llvm.amdgcn.frexp.mant.f64(double %3449)
  %3451 = fcmp olt double %3450, 0x3FE5555555555555
  %.neg.i.i.i1.i.i67.i = sext i1 %3451 to i32
  %3452 = select i1 %3451, double 2.000000e+00, double 1.000000e+00
  %3453 = fmul double %3450, %3452
  %3454 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3449)
  %3455 = add i32 %3454, %.neg.i.i.i1.i.i67.i
  %3456 = fadd double %3453, -1.000000e+00
  %3457 = fadd double %3453, 1.000000e+00
  %3458 = fadd double %3457, -1.000000e+00
  %3459 = fsub double %3453, %3458
  %3460 = tail call double @llvm.amdgcn.rcp.f64(double %3457)
  %3461 = fneg double %3457
  %3462 = tail call double @llvm.fma.f64(double %3461, double %3460, double 1.000000e+00)
  %3463 = tail call double @llvm.fma.f64(double %3462, double %3460, double %3460)
  %3464 = tail call double @llvm.fma.f64(double %3461, double %3463, double 1.000000e+00)
  %3465 = tail call double @llvm.fma.f64(double %3464, double %3463, double %3463)
  %3466 = fmul double %3456, %3465
  %3467 = fmul double %3457, %3466
  %3468 = fneg double %3467
  %3469 = tail call double @llvm.fma.f64(double %3466, double %3457, double %3468)
  %3470 = tail call double @llvm.fma.f64(double %3466, double %3459, double %3469)
  %3471 = fadd double %3467, %3470
  %3472 = fsub double %3471, %3467
  %3473 = fsub double %3456, %3471
  %3474 = fsub double %3456, %3473
  %3475 = fsub double %3474, %3471
  %3476 = fsub double %3472, %3470
  %3477 = fadd double %3476, %3475
  %3478 = fadd double %3473, %3477
  %3479 = fmul double %3465, %3478
  %3480 = fadd double %3466, %3479
  %3481 = fsub double %3480, %3466
  %3482 = fsub double %3479, %3481
  %3483 = fmul double %3480, %3480
  %3484 = fneg double %3483
  %3485 = tail call double @llvm.fma.f64(double %3480, double %3480, double %3484)
  %3486 = fmul double %3482, 2.000000e+00
  %3487 = tail call double @llvm.fma.f64(double %3480, double %3486, double %3485)
  %3488 = fadd double %3483, %3487
  %3489 = fsub double %3488, %3483
  %3490 = fsub double %3487, %3489
  %3491 = tail call double @llvm.fma.f64(double %3488, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %3492 = tail call double @llvm.fma.f64(double %3488, double %3491, double 0x3FBE25E43ABE935A)
  %3493 = tail call double @llvm.fma.f64(double %3488, double %3492, double 0x3FC110EF47E6C9C2)
  %3494 = tail call double @llvm.fma.f64(double %3488, double %3493, double 0x3FC3B13BCFA74449)
  %3495 = tail call double @llvm.fma.f64(double %3488, double %3494, double 0x3FC745D171BF3C30)
  %3496 = tail call double @llvm.fma.f64(double %3488, double %3495, double 0x3FCC71C71C7792CE)
  %3497 = tail call double @llvm.fma.f64(double %3488, double %3496, double 0x3FD24924924920DA)
  %3498 = tail call double @llvm.fma.f64(double %3488, double %3497, double 0x3FD999999999999C)
  %3499 = sitofp i32 %3455 to double
  %3500 = fmul double %3499, 0x3FE62E42FEFA39EF
  %3501 = fneg double %3500
  %3502 = tail call double @llvm.fma.f64(double %3499, double 0x3FE62E42FEFA39EF, double %3501)
  %3503 = tail call double @llvm.fma.f64(double %3499, double 0x3C7ABC9E3B39803F, double %3502)
  %3504 = fadd double %3500, %3503
  %3505 = fsub double %3504, %3500
  %3506 = fsub double %3503, %3505
  %3507 = tail call double @llvm.ldexp.f64.i32(double %3480, i32 1)
  %3508 = tail call double @llvm.ldexp.f64.i32(double %3482, i32 1)
  %3509 = fmul double %3480, %3488
  %3510 = fneg double %3509
  %3511 = tail call double @llvm.fma.f64(double %3488, double %3480, double %3510)
  %3512 = tail call double @llvm.fma.f64(double %3488, double %3482, double %3511)
  %3513 = tail call double @llvm.fma.f64(double %3490, double %3480, double %3512)
  %3514 = fadd double %3509, %3513
  %3515 = fsub double %3514, %3509
  %3516 = fsub double %3513, %3515
  %3517 = fmul double %3488, %3498
  %3518 = fneg double %3517
  %3519 = tail call double @llvm.fma.f64(double %3488, double %3498, double %3518)
  %3520 = tail call double @llvm.fma.f64(double %3490, double %3498, double %3519)
  %3521 = fadd double %3517, %3520
  %3522 = fsub double %3521, %3517
  %3523 = fsub double %3520, %3522
  %3524 = fadd double %3521, 0x3FE5555555555555
  %3525 = fadd double %3524, 0xBFE5555555555555
  %3526 = fsub double %3521, %3525
  %3527 = fadd double %3523, 0x3C8543B0D5DF274D
  %3528 = fadd double %3527, %3526
  %3529 = fadd double %3524, %3528
  %3530 = fsub double %3524, %3529
  %3531 = fadd double %3528, %3530
  %3532 = fmul double %3514, %3529
  %3533 = fneg double %3532
  %3534 = tail call double @llvm.fma.f64(double %3514, double %3529, double %3533)
  %3535 = tail call double @llvm.fma.f64(double %3514, double %3531, double %3534)
  %3536 = tail call double @llvm.fma.f64(double %3516, double %3529, double %3535)
  %3537 = fadd double %3532, %3536
  %3538 = fsub double %3537, %3532
  %3539 = fsub double %3536, %3538
  %3540 = fadd double %3507, %3537
  %3541 = fsub double %3540, %3507
  %3542 = fsub double %3537, %3541
  %3543 = fadd double %3508, %3539
  %3544 = fadd double %3543, %3542
  %3545 = fadd double %3540, %3544
  %3546 = fsub double %3545, %3540
  %3547 = fsub double %3544, %3546
  %3548 = fadd double %3504, %3545
  %3549 = fsub double %3548, %3504
  %3550 = fsub double %3548, %3549
  %3551 = fsub double %3504, %3550
  %3552 = fsub double %3545, %3549
  %3553 = fadd double %3552, %3551
  %3554 = fadd double %3506, %3547
  %3555 = fsub double %3554, %3506
  %3556 = fsub double %3554, %3555
  %3557 = fsub double %3506, %3556
  %3558 = fsub double %3547, %3555
  %3559 = fadd double %3558, %3557
  %3560 = fadd double %3554, %3553
  %3561 = fadd double %3548, %3560
  %3562 = fsub double %3561, %3548
  %3563 = fsub double %3560, %3562
  %3564 = fadd double %3559, %3563
  %3565 = fadd double %3561, %3564
  %3566 = fsub double %3565, %3561
  %3567 = fsub double %3564, %3566
  %3568 = fmul double %3448, %3565
  %3569 = fneg double %3568
  %3570 = tail call double @llvm.fma.f64(double %3448, double %3565, double %3569) #9
  %3571 = tail call double @llvm.fma.f64(double %3448, double %3567, double %3570) #9
  %3572 = fadd double %3568, %3571
  %3573 = fsub double %3572, %3568
  %3574 = fsub double %3571, %3573
  %3575 = tail call double @llvm.fabs.f64(double %3568) #9
  %3576 = fcmp oeq double %3575, 0x7FF0000000000000
  %3577 = select i1 %3576, double %3568, double %3572
  %3578 = tail call double @llvm.fabs.f64(double %3577) #9
  %3579 = fcmp oeq double %3578, 0x7FF0000000000000
  %3580 = select i1 %3579, double 0.000000e+00, double %3574
  %3581 = fmul double %3577, 0x3FF71547652B82FE
  %3582 = tail call double @llvm.rint.f64(double %3581)
  %3583 = fneg double %3582
  %3584 = tail call double @llvm.fma.f64(double %3583, double 0x3FE62E42FEFA39EF, double %3577)
  %3585 = tail call double @llvm.fma.f64(double %3583, double 0x3C7ABC9E3B39803F, double %3584)
  %3586 = tail call double @llvm.fma.f64(double %3585, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3587 = tail call double @llvm.fma.f64(double %3585, double %3586, double 0x3EC71DEE623FDE64)
  %3588 = tail call double @llvm.fma.f64(double %3585, double %3587, double 0x3EFA01997C89E6B0)
  %3589 = tail call double @llvm.fma.f64(double %3585, double %3588, double 0x3F2A01A014761F6E)
  %3590 = tail call double @llvm.fma.f64(double %3585, double %3589, double 0x3F56C16C1852B7B0)
  %3591 = tail call double @llvm.fma.f64(double %3585, double %3590, double 0x3F81111111122322)
  %3592 = tail call double @llvm.fma.f64(double %3585, double %3591, double 0x3FA55555555502A1)
  %3593 = tail call double @llvm.fma.f64(double %3585, double %3592, double 0x3FC5555555555511)
  %3594 = tail call double @llvm.fma.f64(double %3585, double %3593, double 0x3FE000000000000B)
  %3595 = tail call double @llvm.fma.f64(double %3585, double %3594, double 1.000000e+00)
  %3596 = tail call double @llvm.fma.f64(double %3585, double %3595, double 1.000000e+00)
  %3597 = fptosi double %3582 to i32
  %3598 = tail call double @llvm.ldexp.f64.i32(double %3596, i32 %3597)
  %3599 = fcmp ogt double %3577, 1.024000e+03
  %3600 = select i1 %3599, double 0x7FF0000000000000, double %3598
  %3601 = fcmp olt double %3577, -1.075000e+03
  %3602 = select i1 %3601, double 0.000000e+00, double %3600
  %3603 = tail call double @llvm.fma.f64(double %3602, double %3580, double %3602) #9
  %3604 = tail call double @llvm.fabs.f64(double %3602) #9
  %3605 = fcmp oeq double %3604, 0x7FF0000000000000
  %3606 = select i1 %3605, double %3602, double %3603
  %3607 = tail call double @llvm.trunc.f64(double %3448) #9
  %3608 = fcmp oeq double %3607, %3448
  %3609 = fmul double %3448, 5.000000e-01
  %3610 = tail call double @llvm.trunc.f64(double %3609) #9
  %3611 = fcmp une double %3610, %3609
  %3612 = and i1 %3608, %3611
  %3613 = select i1 %3612, double %sub1.i.i66.i, double 1.000000e+00
  %3614 = tail call double @llvm.copysign.f64(double %3606, double %3613) #9
  %3615 = fcmp olt double %sub1.i.i66.i, 0.000000e+00
  %3616 = select i1 %3608, double %3614, double 0x7FF8000000000000
  %3617 = select i1 %3615, double %3616, double %3614
  %3618 = fcmp oeq double %3449, 0x7FF0000000000000
  %3619 = fcmp oeq double %sub1.i.i66.i, 0.000000e+00
  %3620 = or i1 %3619, %3618
  %3621 = select i1 %3619, double 0.000000e+00, double 0x7FF0000000000000
  %3622 = select i1 %3612, double %sub1.i.i66.i, double 0.000000e+00
  %3623 = tail call double @llvm.copysign.f64(double %3621, double %3622) #9
  %3624 = select i1 %3620, double %3623, double %3617
  %3625 = fcmp uno double %sub1.i.i66.i, 0.000000e+00
  %3626 = select i1 %3625, double 0x7FF8000000000000, double %3624
  %add.i.i68.i = fadd double %3446, %3626
  %sub3.i.i69.i = fsub double %add26.i.i, %agg.tmp.sroa.3.0.copyload
  %3627 = fcmp oeq double %sub3.i.i69.i, 1.000000e+00
  %3628 = select i1 %3627, double 1.000000e+00, double 2.000000e+00
  %3629 = tail call double @llvm.fabs.f64(double %sub3.i.i69.i) #9
  %3630 = tail call double @llvm.amdgcn.frexp.mant.f64(double %3629)
  %3631 = fcmp olt double %3630, 0x3FE5555555555555
  %.neg.i.i.i2.i.i70.i = sext i1 %3631 to i32
  %3632 = select i1 %3631, double 2.000000e+00, double 1.000000e+00
  %3633 = fmul double %3630, %3632
  %3634 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3629)
  %3635 = add i32 %3634, %.neg.i.i.i2.i.i70.i
  %3636 = fadd double %3633, -1.000000e+00
  %3637 = fadd double %3633, 1.000000e+00
  %3638 = fadd double %3637, -1.000000e+00
  %3639 = fsub double %3633, %3638
  %3640 = tail call double @llvm.amdgcn.rcp.f64(double %3637)
  %3641 = fneg double %3637
  %3642 = tail call double @llvm.fma.f64(double %3641, double %3640, double 1.000000e+00)
  %3643 = tail call double @llvm.fma.f64(double %3642, double %3640, double %3640)
  %3644 = tail call double @llvm.fma.f64(double %3641, double %3643, double 1.000000e+00)
  %3645 = tail call double @llvm.fma.f64(double %3644, double %3643, double %3643)
  %3646 = fmul double %3636, %3645
  %3647 = fmul double %3637, %3646
  %3648 = fneg double %3647
  %3649 = tail call double @llvm.fma.f64(double %3646, double %3637, double %3648)
  %3650 = tail call double @llvm.fma.f64(double %3646, double %3639, double %3649)
  %3651 = fadd double %3647, %3650
  %3652 = fsub double %3651, %3647
  %3653 = fsub double %3636, %3651
  %3654 = fsub double %3636, %3653
  %3655 = fsub double %3654, %3651
  %3656 = fsub double %3652, %3650
  %3657 = fadd double %3656, %3655
  %3658 = fadd double %3653, %3657
  %3659 = fmul double %3645, %3658
  %3660 = fadd double %3646, %3659
  %3661 = fsub double %3660, %3646
  %3662 = fsub double %3659, %3661
  %3663 = fmul double %3660, %3660
  %3664 = fneg double %3663
  %3665 = tail call double @llvm.fma.f64(double %3660, double %3660, double %3664)
  %3666 = fmul double %3662, 2.000000e+00
  %3667 = tail call double @llvm.fma.f64(double %3660, double %3666, double %3665)
  %3668 = fadd double %3663, %3667
  %3669 = fsub double %3668, %3663
  %3670 = fsub double %3667, %3669
  %3671 = tail call double @llvm.fma.f64(double %3668, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %3672 = tail call double @llvm.fma.f64(double %3668, double %3671, double 0x3FBE25E43ABE935A)
  %3673 = tail call double @llvm.fma.f64(double %3668, double %3672, double 0x3FC110EF47E6C9C2)
  %3674 = tail call double @llvm.fma.f64(double %3668, double %3673, double 0x3FC3B13BCFA74449)
  %3675 = tail call double @llvm.fma.f64(double %3668, double %3674, double 0x3FC745D171BF3C30)
  %3676 = tail call double @llvm.fma.f64(double %3668, double %3675, double 0x3FCC71C71C7792CE)
  %3677 = tail call double @llvm.fma.f64(double %3668, double %3676, double 0x3FD24924924920DA)
  %3678 = tail call double @llvm.fma.f64(double %3668, double %3677, double 0x3FD999999999999C)
  %3679 = sitofp i32 %3635 to double
  %3680 = fmul double %3679, 0x3FE62E42FEFA39EF
  %3681 = fneg double %3680
  %3682 = tail call double @llvm.fma.f64(double %3679, double 0x3FE62E42FEFA39EF, double %3681)
  %3683 = tail call double @llvm.fma.f64(double %3679, double 0x3C7ABC9E3B39803F, double %3682)
  %3684 = fadd double %3680, %3683
  %3685 = fsub double %3684, %3680
  %3686 = fsub double %3683, %3685
  %3687 = tail call double @llvm.ldexp.f64.i32(double %3660, i32 1)
  %3688 = tail call double @llvm.ldexp.f64.i32(double %3662, i32 1)
  %3689 = fmul double %3660, %3668
  %3690 = fneg double %3689
  %3691 = tail call double @llvm.fma.f64(double %3668, double %3660, double %3690)
  %3692 = tail call double @llvm.fma.f64(double %3668, double %3662, double %3691)
  %3693 = tail call double @llvm.fma.f64(double %3670, double %3660, double %3692)
  %3694 = fadd double %3689, %3693
  %3695 = fsub double %3694, %3689
  %3696 = fsub double %3693, %3695
  %3697 = fmul double %3668, %3678
  %3698 = fneg double %3697
  %3699 = tail call double @llvm.fma.f64(double %3668, double %3678, double %3698)
  %3700 = tail call double @llvm.fma.f64(double %3670, double %3678, double %3699)
  %3701 = fadd double %3697, %3700
  %3702 = fsub double %3701, %3697
  %3703 = fsub double %3700, %3702
  %3704 = fadd double %3701, 0x3FE5555555555555
  %3705 = fadd double %3704, 0xBFE5555555555555
  %3706 = fsub double %3701, %3705
  %3707 = fadd double %3703, 0x3C8543B0D5DF274D
  %3708 = fadd double %3707, %3706
  %3709 = fadd double %3704, %3708
  %3710 = fsub double %3704, %3709
  %3711 = fadd double %3708, %3710
  %3712 = fmul double %3694, %3709
  %3713 = fneg double %3712
  %3714 = tail call double @llvm.fma.f64(double %3694, double %3709, double %3713)
  %3715 = tail call double @llvm.fma.f64(double %3694, double %3711, double %3714)
  %3716 = tail call double @llvm.fma.f64(double %3696, double %3709, double %3715)
  %3717 = fadd double %3712, %3716
  %3718 = fsub double %3717, %3712
  %3719 = fsub double %3716, %3718
  %3720 = fadd double %3687, %3717
  %3721 = fsub double %3720, %3687
  %3722 = fsub double %3717, %3721
  %3723 = fadd double %3688, %3719
  %3724 = fadd double %3723, %3722
  %3725 = fadd double %3720, %3724
  %3726 = fsub double %3725, %3720
  %3727 = fsub double %3724, %3726
  %3728 = fadd double %3684, %3725
  %3729 = fsub double %3728, %3684
  %3730 = fsub double %3728, %3729
  %3731 = fsub double %3684, %3730
  %3732 = fsub double %3725, %3729
  %3733 = fadd double %3732, %3731
  %3734 = fadd double %3686, %3727
  %3735 = fsub double %3734, %3686
  %3736 = fsub double %3734, %3735
  %3737 = fsub double %3686, %3736
  %3738 = fsub double %3727, %3735
  %3739 = fadd double %3738, %3737
  %3740 = fadd double %3734, %3733
  %3741 = fadd double %3728, %3740
  %3742 = fsub double %3741, %3728
  %3743 = fsub double %3740, %3742
  %3744 = fadd double %3739, %3743
  %3745 = fadd double %3741, %3744
  %3746 = fsub double %3745, %3741
  %3747 = fsub double %3744, %3746
  %3748 = fmul double %3628, %3745
  %3749 = fneg double %3748
  %3750 = tail call double @llvm.fma.f64(double %3628, double %3745, double %3749) #9
  %3751 = tail call double @llvm.fma.f64(double %3628, double %3747, double %3750) #9
  %3752 = fadd double %3748, %3751
  %3753 = fsub double %3752, %3748
  %3754 = fsub double %3751, %3753
  %3755 = tail call double @llvm.fabs.f64(double %3748) #9
  %3756 = fcmp oeq double %3755, 0x7FF0000000000000
  %3757 = select i1 %3756, double %3748, double %3752
  %3758 = tail call double @llvm.fabs.f64(double %3757) #9
  %3759 = fcmp oeq double %3758, 0x7FF0000000000000
  %3760 = select i1 %3759, double 0.000000e+00, double %3754
  %3761 = fmul double %3757, 0x3FF71547652B82FE
  %3762 = tail call double @llvm.rint.f64(double %3761)
  %3763 = fneg double %3762
  %3764 = tail call double @llvm.fma.f64(double %3763, double 0x3FE62E42FEFA39EF, double %3757)
  %3765 = tail call double @llvm.fma.f64(double %3763, double 0x3C7ABC9E3B39803F, double %3764)
  %3766 = tail call double @llvm.fma.f64(double %3765, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3767 = tail call double @llvm.fma.f64(double %3765, double %3766, double 0x3EC71DEE623FDE64)
  %3768 = tail call double @llvm.fma.f64(double %3765, double %3767, double 0x3EFA01997C89E6B0)
  %3769 = tail call double @llvm.fma.f64(double %3765, double %3768, double 0x3F2A01A014761F6E)
  %3770 = tail call double @llvm.fma.f64(double %3765, double %3769, double 0x3F56C16C1852B7B0)
  %3771 = tail call double @llvm.fma.f64(double %3765, double %3770, double 0x3F81111111122322)
  %3772 = tail call double @llvm.fma.f64(double %3765, double %3771, double 0x3FA55555555502A1)
  %3773 = tail call double @llvm.fma.f64(double %3765, double %3772, double 0x3FC5555555555511)
  %3774 = tail call double @llvm.fma.f64(double %3765, double %3773, double 0x3FE000000000000B)
  %3775 = tail call double @llvm.fma.f64(double %3765, double %3774, double 1.000000e+00)
  %3776 = tail call double @llvm.fma.f64(double %3765, double %3775, double 1.000000e+00)
  %3777 = fptosi double %3762 to i32
  %3778 = tail call double @llvm.ldexp.f64.i32(double %3776, i32 %3777)
  %3779 = fcmp ogt double %3757, 1.024000e+03
  %3780 = select i1 %3779, double 0x7FF0000000000000, double %3778
  %3781 = fcmp olt double %3757, -1.075000e+03
  %3782 = select i1 %3781, double 0.000000e+00, double %3780
  %3783 = tail call double @llvm.fma.f64(double %3782, double %3760, double %3782) #9
  %3784 = tail call double @llvm.fabs.f64(double %3782) #9
  %3785 = fcmp oeq double %3784, 0x7FF0000000000000
  %3786 = select i1 %3785, double %3782, double %3783
  %3787 = tail call double @llvm.trunc.f64(double %3628) #9
  %3788 = fcmp oeq double %3787, %3628
  %3789 = fmul double %3628, 5.000000e-01
  %3790 = tail call double @llvm.trunc.f64(double %3789) #9
  %3791 = fcmp une double %3790, %3789
  %3792 = and i1 %3788, %3791
  %3793 = select i1 %3792, double %sub3.i.i69.i, double 1.000000e+00
  %3794 = tail call double @llvm.copysign.f64(double %3786, double %3793) #9
  %3795 = fcmp olt double %sub3.i.i69.i, 0.000000e+00
  %3796 = select i1 %3788, double %3794, double 0x7FF8000000000000
  %3797 = select i1 %3795, double %3796, double %3794
  %3798 = fcmp oeq double %3629, 0x7FF0000000000000
  %3799 = fcmp oeq double %sub3.i.i69.i, 0.000000e+00
  %3800 = or i1 %3799, %3798
  %3801 = select i1 %3799, double 0.000000e+00, double 0x7FF0000000000000
  %3802 = select i1 %3792, double %sub3.i.i69.i, double 0.000000e+00
  %3803 = tail call double @llvm.copysign.f64(double %3801, double %3802) #9
  %3804 = select i1 %3800, double %3803, double %3797
  %3805 = fcmp uno double %sub3.i.i69.i, 0.000000e+00
  %3806 = select i1 %3805, double 0x7FF8000000000000, double %3804
  %add5.i.i71.i = fadd double %3806, %add.i.i68.i
  %cmp.i.i72.i = fcmp olt double %add5.i.i71.i, 0x7FEFFFFFFFFFFFFF
  %min_dist.6.i74.i = select i1 %cmp.i.i72.i, double %add5.i.i71.i, double 0x7FEFFFFFFFFFFFFF
  br label %if.end42.i.i

if.end42.i.i:                                     ; preds = %if.then34.i.i, %if.then.i58.i, %lor.lhs.false.i40.i
  %min_dist.0.i42.i = phi double [ 0x7FEFFFFFFFFFFFFF, %if.then.i58.i ], [ 0x7FEFFFFFFFFFFFFF, %lor.lhs.false.i40.i ], [ %min_dist.6.i74.i, %if.then34.i.i ]
  %cmp43.i.i = fcmp olt double %agg.tmp.sroa.2.0.copyload, %3262
  %cmp45.i.i = fcmp ogt double %r1.sroa.5.0.copyload, %3262
  %or.cond15.i43.i = select i1 %cmp43.i.i, i1 %cmp45.i.i, i1 false
  br i1 %or.cond15.i43.i, label %if.then50.i.i, label %lor.lhs.false46.i.i

lor.lhs.false46.i.i:                              ; preds = %if.end42.i.i
  %cmp47.i.i = fcmp ogt double %agg.tmp.sroa.2.0.copyload, %3262
  %cmp49.i.i = fcmp olt double %r1.sroa.5.0.copyload, %3262
  %or.cond16.i44.i = select i1 %cmp47.i.i, i1 %cmp49.i.i, i1 false
  br i1 %or.cond16.i44.i, label %if.then50.i.i, label %if.end81.i.i

if.then50.i.i:                                    ; preds = %lor.lhs.false46.i.i, %if.end42.i.i
  %sub51.i.i = fsub double %3262, %agg.tmp.sroa.2.0.copyload
  %sub52.i.i = fsub double %r1.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %mul53.i.i = fmul double %sub52.i.i, %sub51.i.i
  %sub54.i.i = fsub double %r1.sroa.5.0.copyload, %agg.tmp.sroa.2.0.copyload
  %div55.i.i = fdiv double %mul53.i.i, %sub54.i.i
  %add56.i.i = fadd double %agg.tmp.sroa.0.0.copyload, %div55.i.i
  %sub59.i.i = fsub double %r1.sroa.7.0.copyload, %agg.tmp.sroa.3.0.copyload
  %mul60.i.i = fmul double %sub59.i.i, %sub51.i.i
  %div62.i.i = fdiv double %mul60.i.i, %sub54.i.i
  %add63.i.i = fadd double %agg.tmp.sroa.3.0.copyload, %div62.i.i
  %cmp64.i.i = fcmp oge double %add56.i.i, %17
  %cmp66.i53.i = fcmp olt double %add56.i.i, %3264
  %or.cond17.not203.not205.i.i = select i1 %cmp64.i.i, i1 %cmp66.i53.i, i1 false
  %cmp68.i54.i = fcmp oge double %add63.i.i, %3263
  %or.cond18.not204.i.i = select i1 %or.cond17.not203.not205.i.i, i1 %cmp68.i54.i, i1 false
  %cmp70.i55.i = fcmp olt double %add63.i.i, %3266
  %or.cond19.i.i = select i1 %or.cond18.not204.i.i, i1 %cmp70.i55.i, i1 false
  br i1 %or.cond19.i.i, label %if.then71.i.i, label %if.end81.i.i

if.then71.i.i:                                    ; preds = %if.then50.i.i
  %sub.i77.i.i = fsub double %add56.i.i, %agg.tmp.sroa.0.0.copyload
  %3807 = fcmp oeq double %sub.i77.i.i, 1.000000e+00
  %3808 = select i1 %3807, double 1.000000e+00, double 2.000000e+00
  %3809 = tail call double @llvm.fabs.f64(double %sub.i77.i.i) #9
  %3810 = tail call double @llvm.amdgcn.frexp.mant.f64(double %3809)
  %3811 = fcmp olt double %3810, 0x3FE5555555555555
  %.neg.i.i.i.i78.i.i = sext i1 %3811 to i32
  %3812 = select i1 %3811, double 2.000000e+00, double 1.000000e+00
  %3813 = fmul double %3810, %3812
  %3814 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3809)
  %3815 = add i32 %3814, %.neg.i.i.i.i78.i.i
  %3816 = fadd double %3813, -1.000000e+00
  %3817 = fadd double %3813, 1.000000e+00
  %3818 = fadd double %3817, -1.000000e+00
  %3819 = fsub double %3813, %3818
  %3820 = tail call double @llvm.amdgcn.rcp.f64(double %3817)
  %3821 = fneg double %3817
  %3822 = tail call double @llvm.fma.f64(double %3821, double %3820, double 1.000000e+00)
  %3823 = tail call double @llvm.fma.f64(double %3822, double %3820, double %3820)
  %3824 = tail call double @llvm.fma.f64(double %3821, double %3823, double 1.000000e+00)
  %3825 = tail call double @llvm.fma.f64(double %3824, double %3823, double %3823)
  %3826 = fmul double %3816, %3825
  %3827 = fmul double %3817, %3826
  %3828 = fneg double %3827
  %3829 = tail call double @llvm.fma.f64(double %3826, double %3817, double %3828)
  %3830 = tail call double @llvm.fma.f64(double %3826, double %3819, double %3829)
  %3831 = fadd double %3827, %3830
  %3832 = fsub double %3831, %3827
  %3833 = fsub double %3816, %3831
  %3834 = fsub double %3816, %3833
  %3835 = fsub double %3834, %3831
  %3836 = fsub double %3832, %3830
  %3837 = fadd double %3836, %3835
  %3838 = fadd double %3833, %3837
  %3839 = fmul double %3825, %3838
  %3840 = fadd double %3826, %3839
  %3841 = fsub double %3840, %3826
  %3842 = fsub double %3839, %3841
  %3843 = fmul double %3840, %3840
  %3844 = fneg double %3843
  %3845 = tail call double @llvm.fma.f64(double %3840, double %3840, double %3844)
  %3846 = fmul double %3842, 2.000000e+00
  %3847 = tail call double @llvm.fma.f64(double %3840, double %3846, double %3845)
  %3848 = fadd double %3843, %3847
  %3849 = fsub double %3848, %3843
  %3850 = fsub double %3847, %3849
  %3851 = tail call double @llvm.fma.f64(double %3848, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %3852 = tail call double @llvm.fma.f64(double %3848, double %3851, double 0x3FBE25E43ABE935A)
  %3853 = tail call double @llvm.fma.f64(double %3848, double %3852, double 0x3FC110EF47E6C9C2)
  %3854 = tail call double @llvm.fma.f64(double %3848, double %3853, double 0x3FC3B13BCFA74449)
  %3855 = tail call double @llvm.fma.f64(double %3848, double %3854, double 0x3FC745D171BF3C30)
  %3856 = tail call double @llvm.fma.f64(double %3848, double %3855, double 0x3FCC71C71C7792CE)
  %3857 = tail call double @llvm.fma.f64(double %3848, double %3856, double 0x3FD24924924920DA)
  %3858 = tail call double @llvm.fma.f64(double %3848, double %3857, double 0x3FD999999999999C)
  %3859 = sitofp i32 %3815 to double
  %3860 = fmul double %3859, 0x3FE62E42FEFA39EF
  %3861 = fneg double %3860
  %3862 = tail call double @llvm.fma.f64(double %3859, double 0x3FE62E42FEFA39EF, double %3861)
  %3863 = tail call double @llvm.fma.f64(double %3859, double 0x3C7ABC9E3B39803F, double %3862)
  %3864 = fadd double %3860, %3863
  %3865 = fsub double %3864, %3860
  %3866 = fsub double %3863, %3865
  %3867 = tail call double @llvm.ldexp.f64.i32(double %3840, i32 1)
  %3868 = tail call double @llvm.ldexp.f64.i32(double %3842, i32 1)
  %3869 = fmul double %3840, %3848
  %3870 = fneg double %3869
  %3871 = tail call double @llvm.fma.f64(double %3848, double %3840, double %3870)
  %3872 = tail call double @llvm.fma.f64(double %3848, double %3842, double %3871)
  %3873 = tail call double @llvm.fma.f64(double %3850, double %3840, double %3872)
  %3874 = fadd double %3869, %3873
  %3875 = fsub double %3874, %3869
  %3876 = fsub double %3873, %3875
  %3877 = fmul double %3848, %3858
  %3878 = fneg double %3877
  %3879 = tail call double @llvm.fma.f64(double %3848, double %3858, double %3878)
  %3880 = tail call double @llvm.fma.f64(double %3850, double %3858, double %3879)
  %3881 = fadd double %3877, %3880
  %3882 = fsub double %3881, %3877
  %3883 = fsub double %3880, %3882
  %3884 = fadd double %3881, 0x3FE5555555555555
  %3885 = fadd double %3884, 0xBFE5555555555555
  %3886 = fsub double %3881, %3885
  %3887 = fadd double %3883, 0x3C8543B0D5DF274D
  %3888 = fadd double %3887, %3886
  %3889 = fadd double %3884, %3888
  %3890 = fsub double %3884, %3889
  %3891 = fadd double %3888, %3890
  %3892 = fmul double %3874, %3889
  %3893 = fneg double %3892
  %3894 = tail call double @llvm.fma.f64(double %3874, double %3889, double %3893)
  %3895 = tail call double @llvm.fma.f64(double %3874, double %3891, double %3894)
  %3896 = tail call double @llvm.fma.f64(double %3876, double %3889, double %3895)
  %3897 = fadd double %3892, %3896
  %3898 = fsub double %3897, %3892
  %3899 = fsub double %3896, %3898
  %3900 = fadd double %3867, %3897
  %3901 = fsub double %3900, %3867
  %3902 = fsub double %3897, %3901
  %3903 = fadd double %3868, %3899
  %3904 = fadd double %3903, %3902
  %3905 = fadd double %3900, %3904
  %3906 = fsub double %3905, %3900
  %3907 = fsub double %3904, %3906
  %3908 = fadd double %3864, %3905
  %3909 = fsub double %3908, %3864
  %3910 = fsub double %3908, %3909
  %3911 = fsub double %3864, %3910
  %3912 = fsub double %3905, %3909
  %3913 = fadd double %3912, %3911
  %3914 = fadd double %3866, %3907
  %3915 = fsub double %3914, %3866
  %3916 = fsub double %3914, %3915
  %3917 = fsub double %3866, %3916
  %3918 = fsub double %3907, %3915
  %3919 = fadd double %3918, %3917
  %3920 = fadd double %3914, %3913
  %3921 = fadd double %3908, %3920
  %3922 = fsub double %3921, %3908
  %3923 = fsub double %3920, %3922
  %3924 = fadd double %3919, %3923
  %3925 = fadd double %3921, %3924
  %3926 = fsub double %3925, %3921
  %3927 = fsub double %3924, %3926
  %3928 = fmul double %3808, %3925
  %3929 = fneg double %3928
  %3930 = tail call double @llvm.fma.f64(double %3808, double %3925, double %3929) #9
  %3931 = tail call double @llvm.fma.f64(double %3808, double %3927, double %3930) #9
  %3932 = fadd double %3928, %3931
  %3933 = fsub double %3932, %3928
  %3934 = fsub double %3931, %3933
  %3935 = tail call double @llvm.fabs.f64(double %3928) #9
  %3936 = fcmp oeq double %3935, 0x7FF0000000000000
  %3937 = select i1 %3936, double %3928, double %3932
  %3938 = tail call double @llvm.fabs.f64(double %3937) #9
  %3939 = fcmp oeq double %3938, 0x7FF0000000000000
  %3940 = select i1 %3939, double 0.000000e+00, double %3934
  %3941 = fmul double %3937, 0x3FF71547652B82FE
  %3942 = tail call double @llvm.rint.f64(double %3941)
  %3943 = fneg double %3942
  %3944 = tail call double @llvm.fma.f64(double %3943, double 0x3FE62E42FEFA39EF, double %3937)
  %3945 = tail call double @llvm.fma.f64(double %3943, double 0x3C7ABC9E3B39803F, double %3944)
  %3946 = tail call double @llvm.fma.f64(double %3945, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3947 = tail call double @llvm.fma.f64(double %3945, double %3946, double 0x3EC71DEE623FDE64)
  %3948 = tail call double @llvm.fma.f64(double %3945, double %3947, double 0x3EFA01997C89E6B0)
  %3949 = tail call double @llvm.fma.f64(double %3945, double %3948, double 0x3F2A01A014761F6E)
  %3950 = tail call double @llvm.fma.f64(double %3945, double %3949, double 0x3F56C16C1852B7B0)
  %3951 = tail call double @llvm.fma.f64(double %3945, double %3950, double 0x3F81111111122322)
  %3952 = tail call double @llvm.fma.f64(double %3945, double %3951, double 0x3FA55555555502A1)
  %3953 = tail call double @llvm.fma.f64(double %3945, double %3952, double 0x3FC5555555555511)
  %3954 = tail call double @llvm.fma.f64(double %3945, double %3953, double 0x3FE000000000000B)
  %3955 = tail call double @llvm.fma.f64(double %3945, double %3954, double 1.000000e+00)
  %3956 = tail call double @llvm.fma.f64(double %3945, double %3955, double 1.000000e+00)
  %3957 = fptosi double %3942 to i32
  %3958 = tail call double @llvm.ldexp.f64.i32(double %3956, i32 %3957)
  %3959 = fcmp ogt double %3937, 1.024000e+03
  %3960 = select i1 %3959, double 0x7FF0000000000000, double %3958
  %3961 = fcmp olt double %3937, -1.075000e+03
  %3962 = select i1 %3961, double 0.000000e+00, double %3960
  %3963 = tail call double @llvm.fma.f64(double %3962, double %3940, double %3962) #9
  %3964 = tail call double @llvm.fabs.f64(double %3962) #9
  %3965 = fcmp oeq double %3964, 0x7FF0000000000000
  %3966 = select i1 %3965, double %3962, double %3963
  %3967 = tail call double @llvm.trunc.f64(double %3808) #9
  %3968 = fcmp oeq double %3967, %3808
  %3969 = fmul double %3808, 5.000000e-01
  %3970 = tail call double @llvm.trunc.f64(double %3969) #9
  %3971 = fcmp une double %3970, %3969
  %3972 = and i1 %3968, %3971
  %3973 = select i1 %3972, double %sub.i77.i.i, double 1.000000e+00
  %3974 = tail call double @llvm.copysign.f64(double %3966, double %3973) #9
  %3975 = fcmp olt double %sub.i77.i.i, 0.000000e+00
  %3976 = select i1 %3968, double %3974, double 0x7FF8000000000000
  %3977 = select i1 %3975, double %3976, double %3974
  %3978 = fcmp oeq double %3809, 0x7FF0000000000000
  %3979 = fcmp oeq double %sub.i77.i.i, 0.000000e+00
  %3980 = or i1 %3979, %3978
  %3981 = select i1 %3979, double 0.000000e+00, double 0x7FF0000000000000
  %3982 = select i1 %3972, double %sub.i77.i.i, double 0.000000e+00
  %3983 = tail call double @llvm.copysign.f64(double %3981, double %3982) #9
  %3984 = select i1 %3980, double %3983, double %3977
  %3985 = fcmp uno double %sub.i77.i.i, 0.000000e+00
  %3986 = select i1 %3985, double 0x7FF8000000000000, double %3984
  %3987 = fcmp oeq double %sub51.i.i, 1.000000e+00
  %3988 = select i1 %3987, double 1.000000e+00, double 2.000000e+00
  %3989 = tail call double @llvm.fabs.f64(double %sub51.i.i) #9
  %3990 = tail call double @llvm.amdgcn.frexp.mant.f64(double %3989)
  %3991 = fcmp olt double %3990, 0x3FE5555555555555
  %.neg.i.i.i1.i80.i.i = sext i1 %3991 to i32
  %3992 = select i1 %3991, double 2.000000e+00, double 1.000000e+00
  %3993 = fmul double %3990, %3992
  %3994 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3989)
  %3995 = add i32 %3994, %.neg.i.i.i1.i80.i.i
  %3996 = fadd double %3993, -1.000000e+00
  %3997 = fadd double %3993, 1.000000e+00
  %3998 = fadd double %3997, -1.000000e+00
  %3999 = fsub double %3993, %3998
  %4000 = tail call double @llvm.amdgcn.rcp.f64(double %3997)
  %4001 = fneg double %3997
  %4002 = tail call double @llvm.fma.f64(double %4001, double %4000, double 1.000000e+00)
  %4003 = tail call double @llvm.fma.f64(double %4002, double %4000, double %4000)
  %4004 = tail call double @llvm.fma.f64(double %4001, double %4003, double 1.000000e+00)
  %4005 = tail call double @llvm.fma.f64(double %4004, double %4003, double %4003)
  %4006 = fmul double %3996, %4005
  %4007 = fmul double %3997, %4006
  %4008 = fneg double %4007
  %4009 = tail call double @llvm.fma.f64(double %4006, double %3997, double %4008)
  %4010 = tail call double @llvm.fma.f64(double %4006, double %3999, double %4009)
  %4011 = fadd double %4007, %4010
  %4012 = fsub double %4011, %4007
  %4013 = fsub double %3996, %4011
  %4014 = fsub double %3996, %4013
  %4015 = fsub double %4014, %4011
  %4016 = fsub double %4012, %4010
  %4017 = fadd double %4016, %4015
  %4018 = fadd double %4013, %4017
  %4019 = fmul double %4005, %4018
  %4020 = fadd double %4006, %4019
  %4021 = fsub double %4020, %4006
  %4022 = fsub double %4019, %4021
  %4023 = fmul double %4020, %4020
  %4024 = fneg double %4023
  %4025 = tail call double @llvm.fma.f64(double %4020, double %4020, double %4024)
  %4026 = fmul double %4022, 2.000000e+00
  %4027 = tail call double @llvm.fma.f64(double %4020, double %4026, double %4025)
  %4028 = fadd double %4023, %4027
  %4029 = fsub double %4028, %4023
  %4030 = fsub double %4027, %4029
  %4031 = tail call double @llvm.fma.f64(double %4028, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %4032 = tail call double @llvm.fma.f64(double %4028, double %4031, double 0x3FBE25E43ABE935A)
  %4033 = tail call double @llvm.fma.f64(double %4028, double %4032, double 0x3FC110EF47E6C9C2)
  %4034 = tail call double @llvm.fma.f64(double %4028, double %4033, double 0x3FC3B13BCFA74449)
  %4035 = tail call double @llvm.fma.f64(double %4028, double %4034, double 0x3FC745D171BF3C30)
  %4036 = tail call double @llvm.fma.f64(double %4028, double %4035, double 0x3FCC71C71C7792CE)
  %4037 = tail call double @llvm.fma.f64(double %4028, double %4036, double 0x3FD24924924920DA)
  %4038 = tail call double @llvm.fma.f64(double %4028, double %4037, double 0x3FD999999999999C)
  %4039 = sitofp i32 %3995 to double
  %4040 = fmul double %4039, 0x3FE62E42FEFA39EF
  %4041 = fneg double %4040
  %4042 = tail call double @llvm.fma.f64(double %4039, double 0x3FE62E42FEFA39EF, double %4041)
  %4043 = tail call double @llvm.fma.f64(double %4039, double 0x3C7ABC9E3B39803F, double %4042)
  %4044 = fadd double %4040, %4043
  %4045 = fsub double %4044, %4040
  %4046 = fsub double %4043, %4045
  %4047 = tail call double @llvm.ldexp.f64.i32(double %4020, i32 1)
  %4048 = tail call double @llvm.ldexp.f64.i32(double %4022, i32 1)
  %4049 = fmul double %4020, %4028
  %4050 = fneg double %4049
  %4051 = tail call double @llvm.fma.f64(double %4028, double %4020, double %4050)
  %4052 = tail call double @llvm.fma.f64(double %4028, double %4022, double %4051)
  %4053 = tail call double @llvm.fma.f64(double %4030, double %4020, double %4052)
  %4054 = fadd double %4049, %4053
  %4055 = fsub double %4054, %4049
  %4056 = fsub double %4053, %4055
  %4057 = fmul double %4028, %4038
  %4058 = fneg double %4057
  %4059 = tail call double @llvm.fma.f64(double %4028, double %4038, double %4058)
  %4060 = tail call double @llvm.fma.f64(double %4030, double %4038, double %4059)
  %4061 = fadd double %4057, %4060
  %4062 = fsub double %4061, %4057
  %4063 = fsub double %4060, %4062
  %4064 = fadd double %4061, 0x3FE5555555555555
  %4065 = fadd double %4064, 0xBFE5555555555555
  %4066 = fsub double %4061, %4065
  %4067 = fadd double %4063, 0x3C8543B0D5DF274D
  %4068 = fadd double %4067, %4066
  %4069 = fadd double %4064, %4068
  %4070 = fsub double %4064, %4069
  %4071 = fadd double %4068, %4070
  %4072 = fmul double %4054, %4069
  %4073 = fneg double %4072
  %4074 = tail call double @llvm.fma.f64(double %4054, double %4069, double %4073)
  %4075 = tail call double @llvm.fma.f64(double %4054, double %4071, double %4074)
  %4076 = tail call double @llvm.fma.f64(double %4056, double %4069, double %4075)
  %4077 = fadd double %4072, %4076
  %4078 = fsub double %4077, %4072
  %4079 = fsub double %4076, %4078
  %4080 = fadd double %4047, %4077
  %4081 = fsub double %4080, %4047
  %4082 = fsub double %4077, %4081
  %4083 = fadd double %4048, %4079
  %4084 = fadd double %4083, %4082
  %4085 = fadd double %4080, %4084
  %4086 = fsub double %4085, %4080
  %4087 = fsub double %4084, %4086
  %4088 = fadd double %4044, %4085
  %4089 = fsub double %4088, %4044
  %4090 = fsub double %4088, %4089
  %4091 = fsub double %4044, %4090
  %4092 = fsub double %4085, %4089
  %4093 = fadd double %4092, %4091
  %4094 = fadd double %4046, %4087
  %4095 = fsub double %4094, %4046
  %4096 = fsub double %4094, %4095
  %4097 = fsub double %4046, %4096
  %4098 = fsub double %4087, %4095
  %4099 = fadd double %4098, %4097
  %4100 = fadd double %4094, %4093
  %4101 = fadd double %4088, %4100
  %4102 = fsub double %4101, %4088
  %4103 = fsub double %4100, %4102
  %4104 = fadd double %4099, %4103
  %4105 = fadd double %4101, %4104
  %4106 = fsub double %4105, %4101
  %4107 = fsub double %4104, %4106
  %4108 = fmul double %3988, %4105
  %4109 = fneg double %4108
  %4110 = tail call double @llvm.fma.f64(double %3988, double %4105, double %4109) #9
  %4111 = tail call double @llvm.fma.f64(double %3988, double %4107, double %4110) #9
  %4112 = fadd double %4108, %4111
  %4113 = fsub double %4112, %4108
  %4114 = fsub double %4111, %4113
  %4115 = tail call double @llvm.fabs.f64(double %4108) #9
  %4116 = fcmp oeq double %4115, 0x7FF0000000000000
  %4117 = select i1 %4116, double %4108, double %4112
  %4118 = tail call double @llvm.fabs.f64(double %4117) #9
  %4119 = fcmp oeq double %4118, 0x7FF0000000000000
  %4120 = select i1 %4119, double 0.000000e+00, double %4114
  %4121 = fmul double %4117, 0x3FF71547652B82FE
  %4122 = tail call double @llvm.rint.f64(double %4121)
  %4123 = fneg double %4122
  %4124 = tail call double @llvm.fma.f64(double %4123, double 0x3FE62E42FEFA39EF, double %4117)
  %4125 = tail call double @llvm.fma.f64(double %4123, double 0x3C7ABC9E3B39803F, double %4124)
  %4126 = tail call double @llvm.fma.f64(double %4125, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4127 = tail call double @llvm.fma.f64(double %4125, double %4126, double 0x3EC71DEE623FDE64)
  %4128 = tail call double @llvm.fma.f64(double %4125, double %4127, double 0x3EFA01997C89E6B0)
  %4129 = tail call double @llvm.fma.f64(double %4125, double %4128, double 0x3F2A01A014761F6E)
  %4130 = tail call double @llvm.fma.f64(double %4125, double %4129, double 0x3F56C16C1852B7B0)
  %4131 = tail call double @llvm.fma.f64(double %4125, double %4130, double 0x3F81111111122322)
  %4132 = tail call double @llvm.fma.f64(double %4125, double %4131, double 0x3FA55555555502A1)
  %4133 = tail call double @llvm.fma.f64(double %4125, double %4132, double 0x3FC5555555555511)
  %4134 = tail call double @llvm.fma.f64(double %4125, double %4133, double 0x3FE000000000000B)
  %4135 = tail call double @llvm.fma.f64(double %4125, double %4134, double 1.000000e+00)
  %4136 = tail call double @llvm.fma.f64(double %4125, double %4135, double 1.000000e+00)
  %4137 = fptosi double %4122 to i32
  %4138 = tail call double @llvm.ldexp.f64.i32(double %4136, i32 %4137)
  %4139 = fcmp ogt double %4117, 1.024000e+03
  %4140 = select i1 %4139, double 0x7FF0000000000000, double %4138
  %4141 = fcmp olt double %4117, -1.075000e+03
  %4142 = select i1 %4141, double 0.000000e+00, double %4140
  %4143 = tail call double @llvm.fma.f64(double %4142, double %4120, double %4142) #9
  %4144 = tail call double @llvm.fabs.f64(double %4142) #9
  %4145 = fcmp oeq double %4144, 0x7FF0000000000000
  %4146 = select i1 %4145, double %4142, double %4143
  %4147 = tail call double @llvm.trunc.f64(double %3988) #9
  %4148 = fcmp oeq double %4147, %3988
  %4149 = fmul double %3988, 5.000000e-01
  %4150 = tail call double @llvm.trunc.f64(double %4149) #9
  %4151 = fcmp une double %4150, %4149
  %4152 = and i1 %4148, %4151
  %4153 = select i1 %4152, double %sub51.i.i, double 1.000000e+00
  %4154 = tail call double @llvm.copysign.f64(double %4146, double %4153) #9
  %4155 = fcmp olt double %sub51.i.i, 0.000000e+00
  %4156 = select i1 %4148, double %4154, double 0x7FF8000000000000
  %4157 = select i1 %4155, double %4156, double %4154
  %4158 = fcmp oeq double %3989, 0x7FF0000000000000
  %4159 = fcmp oeq double %sub51.i.i, 0.000000e+00
  %4160 = or i1 %4159, %4158
  %4161 = select i1 %4159, double 0.000000e+00, double 0x7FF0000000000000
  %4162 = select i1 %4152, double %sub51.i.i, double 0.000000e+00
  %4163 = tail call double @llvm.copysign.f64(double %4161, double %4162) #9
  %4164 = select i1 %4160, double %4163, double %4157
  %4165 = fcmp uno double %sub51.i.i, 0.000000e+00
  %4166 = select i1 %4165, double 0x7FF8000000000000, double %4164
  %add.i81.i.i = fadd double %4166, %3986
  %sub3.i82.i.i = fsub double %add63.i.i, %agg.tmp.sroa.3.0.copyload
  %4167 = fcmp oeq double %sub3.i82.i.i, 1.000000e+00
  %4168 = select i1 %4167, double 1.000000e+00, double 2.000000e+00
  %4169 = tail call double @llvm.fabs.f64(double %sub3.i82.i.i) #9
  %4170 = tail call double @llvm.amdgcn.frexp.mant.f64(double %4169)
  %4171 = fcmp olt double %4170, 0x3FE5555555555555
  %.neg.i.i.i2.i83.i.i = sext i1 %4171 to i32
  %4172 = select i1 %4171, double 2.000000e+00, double 1.000000e+00
  %4173 = fmul double %4170, %4172
  %4174 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %4169)
  %4175 = add i32 %4174, %.neg.i.i.i2.i83.i.i
  %4176 = fadd double %4173, -1.000000e+00
  %4177 = fadd double %4173, 1.000000e+00
  %4178 = fadd double %4177, -1.000000e+00
  %4179 = fsub double %4173, %4178
  %4180 = tail call double @llvm.amdgcn.rcp.f64(double %4177)
  %4181 = fneg double %4177
  %4182 = tail call double @llvm.fma.f64(double %4181, double %4180, double 1.000000e+00)
  %4183 = tail call double @llvm.fma.f64(double %4182, double %4180, double %4180)
  %4184 = tail call double @llvm.fma.f64(double %4181, double %4183, double 1.000000e+00)
  %4185 = tail call double @llvm.fma.f64(double %4184, double %4183, double %4183)
  %4186 = fmul double %4176, %4185
  %4187 = fmul double %4177, %4186
  %4188 = fneg double %4187
  %4189 = tail call double @llvm.fma.f64(double %4186, double %4177, double %4188)
  %4190 = tail call double @llvm.fma.f64(double %4186, double %4179, double %4189)
  %4191 = fadd double %4187, %4190
  %4192 = fsub double %4191, %4187
  %4193 = fsub double %4176, %4191
  %4194 = fsub double %4176, %4193
  %4195 = fsub double %4194, %4191
  %4196 = fsub double %4192, %4190
  %4197 = fadd double %4196, %4195
  %4198 = fadd double %4193, %4197
  %4199 = fmul double %4185, %4198
  %4200 = fadd double %4186, %4199
  %4201 = fsub double %4200, %4186
  %4202 = fsub double %4199, %4201
  %4203 = fmul double %4200, %4200
  %4204 = fneg double %4203
  %4205 = tail call double @llvm.fma.f64(double %4200, double %4200, double %4204)
  %4206 = fmul double %4202, 2.000000e+00
  %4207 = tail call double @llvm.fma.f64(double %4200, double %4206, double %4205)
  %4208 = fadd double %4203, %4207
  %4209 = fsub double %4208, %4203
  %4210 = fsub double %4207, %4209
  %4211 = tail call double @llvm.fma.f64(double %4208, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %4212 = tail call double @llvm.fma.f64(double %4208, double %4211, double 0x3FBE25E43ABE935A)
  %4213 = tail call double @llvm.fma.f64(double %4208, double %4212, double 0x3FC110EF47E6C9C2)
  %4214 = tail call double @llvm.fma.f64(double %4208, double %4213, double 0x3FC3B13BCFA74449)
  %4215 = tail call double @llvm.fma.f64(double %4208, double %4214, double 0x3FC745D171BF3C30)
  %4216 = tail call double @llvm.fma.f64(double %4208, double %4215, double 0x3FCC71C71C7792CE)
  %4217 = tail call double @llvm.fma.f64(double %4208, double %4216, double 0x3FD24924924920DA)
  %4218 = tail call double @llvm.fma.f64(double %4208, double %4217, double 0x3FD999999999999C)
  %4219 = sitofp i32 %4175 to double
  %4220 = fmul double %4219, 0x3FE62E42FEFA39EF
  %4221 = fneg double %4220
  %4222 = tail call double @llvm.fma.f64(double %4219, double 0x3FE62E42FEFA39EF, double %4221)
  %4223 = tail call double @llvm.fma.f64(double %4219, double 0x3C7ABC9E3B39803F, double %4222)
  %4224 = fadd double %4220, %4223
  %4225 = fsub double %4224, %4220
  %4226 = fsub double %4223, %4225
  %4227 = tail call double @llvm.ldexp.f64.i32(double %4200, i32 1)
  %4228 = tail call double @llvm.ldexp.f64.i32(double %4202, i32 1)
  %4229 = fmul double %4200, %4208
  %4230 = fneg double %4229
  %4231 = tail call double @llvm.fma.f64(double %4208, double %4200, double %4230)
  %4232 = tail call double @llvm.fma.f64(double %4208, double %4202, double %4231)
  %4233 = tail call double @llvm.fma.f64(double %4210, double %4200, double %4232)
  %4234 = fadd double %4229, %4233
  %4235 = fsub double %4234, %4229
  %4236 = fsub double %4233, %4235
  %4237 = fmul double %4208, %4218
  %4238 = fneg double %4237
  %4239 = tail call double @llvm.fma.f64(double %4208, double %4218, double %4238)
  %4240 = tail call double @llvm.fma.f64(double %4210, double %4218, double %4239)
  %4241 = fadd double %4237, %4240
  %4242 = fsub double %4241, %4237
  %4243 = fsub double %4240, %4242
  %4244 = fadd double %4241, 0x3FE5555555555555
  %4245 = fadd double %4244, 0xBFE5555555555555
  %4246 = fsub double %4241, %4245
  %4247 = fadd double %4243, 0x3C8543B0D5DF274D
  %4248 = fadd double %4247, %4246
  %4249 = fadd double %4244, %4248
  %4250 = fsub double %4244, %4249
  %4251 = fadd double %4248, %4250
  %4252 = fmul double %4234, %4249
  %4253 = fneg double %4252
  %4254 = tail call double @llvm.fma.f64(double %4234, double %4249, double %4253)
  %4255 = tail call double @llvm.fma.f64(double %4234, double %4251, double %4254)
  %4256 = tail call double @llvm.fma.f64(double %4236, double %4249, double %4255)
  %4257 = fadd double %4252, %4256
  %4258 = fsub double %4257, %4252
  %4259 = fsub double %4256, %4258
  %4260 = fadd double %4227, %4257
  %4261 = fsub double %4260, %4227
  %4262 = fsub double %4257, %4261
  %4263 = fadd double %4228, %4259
  %4264 = fadd double %4263, %4262
  %4265 = fadd double %4260, %4264
  %4266 = fsub double %4265, %4260
  %4267 = fsub double %4264, %4266
  %4268 = fadd double %4224, %4265
  %4269 = fsub double %4268, %4224
  %4270 = fsub double %4268, %4269
  %4271 = fsub double %4224, %4270
  %4272 = fsub double %4265, %4269
  %4273 = fadd double %4272, %4271
  %4274 = fadd double %4226, %4267
  %4275 = fsub double %4274, %4226
  %4276 = fsub double %4274, %4275
  %4277 = fsub double %4226, %4276
  %4278 = fsub double %4267, %4275
  %4279 = fadd double %4278, %4277
  %4280 = fadd double %4274, %4273
  %4281 = fadd double %4268, %4280
  %4282 = fsub double %4281, %4268
  %4283 = fsub double %4280, %4282
  %4284 = fadd double %4279, %4283
  %4285 = fadd double %4281, %4284
  %4286 = fsub double %4285, %4281
  %4287 = fsub double %4284, %4286
  %4288 = fmul double %4168, %4285
  %4289 = fneg double %4288
  %4290 = tail call double @llvm.fma.f64(double %4168, double %4285, double %4289) #9
  %4291 = tail call double @llvm.fma.f64(double %4168, double %4287, double %4290) #9
  %4292 = fadd double %4288, %4291
  %4293 = fsub double %4292, %4288
  %4294 = fsub double %4291, %4293
  %4295 = tail call double @llvm.fabs.f64(double %4288) #9
  %4296 = fcmp oeq double %4295, 0x7FF0000000000000
  %4297 = select i1 %4296, double %4288, double %4292
  %4298 = tail call double @llvm.fabs.f64(double %4297) #9
  %4299 = fcmp oeq double %4298, 0x7FF0000000000000
  %4300 = select i1 %4299, double 0.000000e+00, double %4294
  %4301 = fmul double %4297, 0x3FF71547652B82FE
  %4302 = tail call double @llvm.rint.f64(double %4301)
  %4303 = fneg double %4302
  %4304 = tail call double @llvm.fma.f64(double %4303, double 0x3FE62E42FEFA39EF, double %4297)
  %4305 = tail call double @llvm.fma.f64(double %4303, double 0x3C7ABC9E3B39803F, double %4304)
  %4306 = tail call double @llvm.fma.f64(double %4305, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4307 = tail call double @llvm.fma.f64(double %4305, double %4306, double 0x3EC71DEE623FDE64)
  %4308 = tail call double @llvm.fma.f64(double %4305, double %4307, double 0x3EFA01997C89E6B0)
  %4309 = tail call double @llvm.fma.f64(double %4305, double %4308, double 0x3F2A01A014761F6E)
  %4310 = tail call double @llvm.fma.f64(double %4305, double %4309, double 0x3F56C16C1852B7B0)
  %4311 = tail call double @llvm.fma.f64(double %4305, double %4310, double 0x3F81111111122322)
  %4312 = tail call double @llvm.fma.f64(double %4305, double %4311, double 0x3FA55555555502A1)
  %4313 = tail call double @llvm.fma.f64(double %4305, double %4312, double 0x3FC5555555555511)
  %4314 = tail call double @llvm.fma.f64(double %4305, double %4313, double 0x3FE000000000000B)
  %4315 = tail call double @llvm.fma.f64(double %4305, double %4314, double 1.000000e+00)
  %4316 = tail call double @llvm.fma.f64(double %4305, double %4315, double 1.000000e+00)
  %4317 = fptosi double %4302 to i32
  %4318 = tail call double @llvm.ldexp.f64.i32(double %4316, i32 %4317)
  %4319 = fcmp ogt double %4297, 1.024000e+03
  %4320 = select i1 %4319, double 0x7FF0000000000000, double %4318
  %4321 = fcmp olt double %4297, -1.075000e+03
  %4322 = select i1 %4321, double 0.000000e+00, double %4320
  %4323 = tail call double @llvm.fma.f64(double %4322, double %4300, double %4322) #9
  %4324 = tail call double @llvm.fabs.f64(double %4322) #9
  %4325 = fcmp oeq double %4324, 0x7FF0000000000000
  %4326 = select i1 %4325, double %4322, double %4323
  %4327 = tail call double @llvm.trunc.f64(double %4168) #9
  %4328 = fcmp oeq double %4327, %4168
  %4329 = fmul double %4168, 5.000000e-01
  %4330 = tail call double @llvm.trunc.f64(double %4329) #9
  %4331 = fcmp une double %4330, %4329
  %4332 = and i1 %4328, %4331
  %4333 = select i1 %4332, double %sub3.i82.i.i, double 1.000000e+00
  %4334 = tail call double @llvm.copysign.f64(double %4326, double %4333) #9
  %4335 = fcmp olt double %sub3.i82.i.i, 0.000000e+00
  %4336 = select i1 %4328, double %4334, double 0x7FF8000000000000
  %4337 = select i1 %4335, double %4336, double %4334
  %4338 = fcmp oeq double %4169, 0x7FF0000000000000
  %4339 = fcmp oeq double %sub3.i82.i.i, 0.000000e+00
  %4340 = or i1 %4339, %4338
  %4341 = select i1 %4339, double 0.000000e+00, double 0x7FF0000000000000
  %4342 = select i1 %4332, double %sub3.i82.i.i, double 0.000000e+00
  %4343 = tail call double @llvm.copysign.f64(double %4341, double %4342) #9
  %4344 = select i1 %4340, double %4343, double %4337
  %4345 = fcmp uno double %sub3.i82.i.i, 0.000000e+00
  %4346 = select i1 %4345, double 0x7FF8000000000000, double %4344
  %add5.i84.i.i = fadd double %4346, %add.i81.i.i
  %cmp.i85.i.i = fcmp olt double %add5.i84.i.i, %min_dist.0.i42.i
  %min_dist.7.i56.i = select i1 %cmp.i85.i.i, double %add5.i84.i.i, double %min_dist.0.i42.i
  br label %if.end81.i.i

if.end81.i.i:                                     ; preds = %if.then71.i.i, %if.then50.i.i, %lor.lhs.false46.i.i
  %min_dist.1.i45.i = phi double [ %min_dist.0.i42.i, %if.then50.i.i ], [ %min_dist.0.i42.i, %lor.lhs.false46.i.i ], [ %min_dist.7.i56.i, %if.then71.i.i ]
  %cmp82.i.i = fcmp olt double %agg.tmp.sroa.3.0.copyload, %3263
  %cmp84.i.i = fcmp ogt double %r1.sroa.7.0.copyload, %3263
  %or.cond20.i.i = select i1 %cmp82.i.i, i1 %cmp84.i.i, i1 false
  br i1 %or.cond20.i.i, label %if.then89.i.i, label %lor.lhs.false85.i.i

lor.lhs.false85.i.i:                              ; preds = %if.end81.i.i
  %cmp86.i.i = fcmp ogt double %agg.tmp.sroa.3.0.copyload, %3263
  %cmp88.i46.i = fcmp olt double %r1.sroa.7.0.copyload, %3263
  %or.cond21.i.i = select i1 %cmp86.i.i, i1 %cmp88.i46.i, i1 false
  br i1 %or.cond21.i.i, label %if.then89.i.i, label %if.end121.i.i

if.then89.i.i:                                    ; preds = %lor.lhs.false85.i.i, %if.end81.i.i
  %sub91.i.i = fsub double %3263, %agg.tmp.sroa.3.0.copyload
  %sub92.i.i = fsub double %r1.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %mul93.i.i = fmul double %sub92.i.i, %sub91.i.i
  %sub94.i.i = fsub double %r1.sroa.7.0.copyload, %agg.tmp.sroa.3.0.copyload
  %div95.i.i = fdiv double %mul93.i.i, %sub94.i.i
  %add96.i.i = fadd double %agg.tmp.sroa.0.0.copyload, %div95.i.i
  %sub99.i.i = fsub double %r1.sroa.5.0.copyload, %agg.tmp.sroa.2.0.copyload
  %mul100.i.i = fmul double %sub99.i.i, %sub91.i.i
  %div102.i.i = fdiv double %mul100.i.i, %sub94.i.i
  %add103.i.i = fadd double %agg.tmp.sroa.2.0.copyload, %div102.i.i
  %cmp104.i.i = fcmp oge double %add96.i.i, %17
  %cmp106.i.i = fcmp olt double %add96.i.i, %3264
  %or.cond22.not206.not208.i.i = select i1 %cmp104.i.i, i1 %cmp106.i.i, i1 false
  %cmp108.i.i = fcmp oge double %add103.i.i, %3262
  %or.cond23.not207.i.i = select i1 %or.cond22.not206.not208.i.i, i1 %cmp108.i.i, i1 false
  %cmp110.i.i = fcmp olt double %add103.i.i, %3265
  %or.cond24.i.i = select i1 %or.cond23.not207.i.i, i1 %cmp110.i.i, i1 false
  br i1 %or.cond24.i.i, label %if.then111.i.i, label %if.end121.i.i

if.then111.i.i:                                   ; preds = %if.then89.i.i
  %sub.i100.i.i = fsub double %add96.i.i, %agg.tmp.sroa.0.0.copyload
  %4347 = fcmp oeq double %sub.i100.i.i, 1.000000e+00
  %4348 = select i1 %4347, double 1.000000e+00, double 2.000000e+00
  %4349 = tail call double @llvm.fabs.f64(double %sub.i100.i.i) #9
  %4350 = tail call double @llvm.amdgcn.frexp.mant.f64(double %4349)
  %4351 = fcmp olt double %4350, 0x3FE5555555555555
  %.neg.i.i.i.i101.i.i = sext i1 %4351 to i32
  %4352 = select i1 %4351, double 2.000000e+00, double 1.000000e+00
  %4353 = fmul double %4350, %4352
  %4354 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %4349)
  %4355 = add i32 %4354, %.neg.i.i.i.i101.i.i
  %4356 = fadd double %4353, -1.000000e+00
  %4357 = fadd double %4353, 1.000000e+00
  %4358 = fadd double %4357, -1.000000e+00
  %4359 = fsub double %4353, %4358
  %4360 = tail call double @llvm.amdgcn.rcp.f64(double %4357)
  %4361 = fneg double %4357
  %4362 = tail call double @llvm.fma.f64(double %4361, double %4360, double 1.000000e+00)
  %4363 = tail call double @llvm.fma.f64(double %4362, double %4360, double %4360)
  %4364 = tail call double @llvm.fma.f64(double %4361, double %4363, double 1.000000e+00)
  %4365 = tail call double @llvm.fma.f64(double %4364, double %4363, double %4363)
  %4366 = fmul double %4356, %4365
  %4367 = fmul double %4357, %4366
  %4368 = fneg double %4367
  %4369 = tail call double @llvm.fma.f64(double %4366, double %4357, double %4368)
  %4370 = tail call double @llvm.fma.f64(double %4366, double %4359, double %4369)
  %4371 = fadd double %4367, %4370
  %4372 = fsub double %4371, %4367
  %4373 = fsub double %4356, %4371
  %4374 = fsub double %4356, %4373
  %4375 = fsub double %4374, %4371
  %4376 = fsub double %4372, %4370
  %4377 = fadd double %4376, %4375
  %4378 = fadd double %4373, %4377
  %4379 = fmul double %4365, %4378
  %4380 = fadd double %4366, %4379
  %4381 = fsub double %4380, %4366
  %4382 = fsub double %4379, %4381
  %4383 = fmul double %4380, %4380
  %4384 = fneg double %4383
  %4385 = tail call double @llvm.fma.f64(double %4380, double %4380, double %4384)
  %4386 = fmul double %4382, 2.000000e+00
  %4387 = tail call double @llvm.fma.f64(double %4380, double %4386, double %4385)
  %4388 = fadd double %4383, %4387
  %4389 = fsub double %4388, %4383
  %4390 = fsub double %4387, %4389
  %4391 = tail call double @llvm.fma.f64(double %4388, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %4392 = tail call double @llvm.fma.f64(double %4388, double %4391, double 0x3FBE25E43ABE935A)
  %4393 = tail call double @llvm.fma.f64(double %4388, double %4392, double 0x3FC110EF47E6C9C2)
  %4394 = tail call double @llvm.fma.f64(double %4388, double %4393, double 0x3FC3B13BCFA74449)
  %4395 = tail call double @llvm.fma.f64(double %4388, double %4394, double 0x3FC745D171BF3C30)
  %4396 = tail call double @llvm.fma.f64(double %4388, double %4395, double 0x3FCC71C71C7792CE)
  %4397 = tail call double @llvm.fma.f64(double %4388, double %4396, double 0x3FD24924924920DA)
  %4398 = tail call double @llvm.fma.f64(double %4388, double %4397, double 0x3FD999999999999C)
  %4399 = sitofp i32 %4355 to double
  %4400 = fmul double %4399, 0x3FE62E42FEFA39EF
  %4401 = fneg double %4400
  %4402 = tail call double @llvm.fma.f64(double %4399, double 0x3FE62E42FEFA39EF, double %4401)
  %4403 = tail call double @llvm.fma.f64(double %4399, double 0x3C7ABC9E3B39803F, double %4402)
  %4404 = fadd double %4400, %4403
  %4405 = fsub double %4404, %4400
  %4406 = fsub double %4403, %4405
  %4407 = tail call double @llvm.ldexp.f64.i32(double %4380, i32 1)
  %4408 = tail call double @llvm.ldexp.f64.i32(double %4382, i32 1)
  %4409 = fmul double %4380, %4388
  %4410 = fneg double %4409
  %4411 = tail call double @llvm.fma.f64(double %4388, double %4380, double %4410)
  %4412 = tail call double @llvm.fma.f64(double %4388, double %4382, double %4411)
  %4413 = tail call double @llvm.fma.f64(double %4390, double %4380, double %4412)
  %4414 = fadd double %4409, %4413
  %4415 = fsub double %4414, %4409
  %4416 = fsub double %4413, %4415
  %4417 = fmul double %4388, %4398
  %4418 = fneg double %4417
  %4419 = tail call double @llvm.fma.f64(double %4388, double %4398, double %4418)
  %4420 = tail call double @llvm.fma.f64(double %4390, double %4398, double %4419)
  %4421 = fadd double %4417, %4420
  %4422 = fsub double %4421, %4417
  %4423 = fsub double %4420, %4422
  %4424 = fadd double %4421, 0x3FE5555555555555
  %4425 = fadd double %4424, 0xBFE5555555555555
  %4426 = fsub double %4421, %4425
  %4427 = fadd double %4423, 0x3C8543B0D5DF274D
  %4428 = fadd double %4427, %4426
  %4429 = fadd double %4424, %4428
  %4430 = fsub double %4424, %4429
  %4431 = fadd double %4428, %4430
  %4432 = fmul double %4414, %4429
  %4433 = fneg double %4432
  %4434 = tail call double @llvm.fma.f64(double %4414, double %4429, double %4433)
  %4435 = tail call double @llvm.fma.f64(double %4414, double %4431, double %4434)
  %4436 = tail call double @llvm.fma.f64(double %4416, double %4429, double %4435)
  %4437 = fadd double %4432, %4436
  %4438 = fsub double %4437, %4432
  %4439 = fsub double %4436, %4438
  %4440 = fadd double %4407, %4437
  %4441 = fsub double %4440, %4407
  %4442 = fsub double %4437, %4441
  %4443 = fadd double %4408, %4439
  %4444 = fadd double %4443, %4442
  %4445 = fadd double %4440, %4444
  %4446 = fsub double %4445, %4440
  %4447 = fsub double %4444, %4446
  %4448 = fadd double %4404, %4445
  %4449 = fsub double %4448, %4404
  %4450 = fsub double %4448, %4449
  %4451 = fsub double %4404, %4450
  %4452 = fsub double %4445, %4449
  %4453 = fadd double %4452, %4451
  %4454 = fadd double %4406, %4447
  %4455 = fsub double %4454, %4406
  %4456 = fsub double %4454, %4455
  %4457 = fsub double %4406, %4456
  %4458 = fsub double %4447, %4455
  %4459 = fadd double %4458, %4457
  %4460 = fadd double %4454, %4453
  %4461 = fadd double %4448, %4460
  %4462 = fsub double %4461, %4448
  %4463 = fsub double %4460, %4462
  %4464 = fadd double %4459, %4463
  %4465 = fadd double %4461, %4464
  %4466 = fsub double %4465, %4461
  %4467 = fsub double %4464, %4466
  %4468 = fmul double %4348, %4465
  %4469 = fneg double %4468
  %4470 = tail call double @llvm.fma.f64(double %4348, double %4465, double %4469) #9
  %4471 = tail call double @llvm.fma.f64(double %4348, double %4467, double %4470) #9
  %4472 = fadd double %4468, %4471
  %4473 = fsub double %4472, %4468
  %4474 = fsub double %4471, %4473
  %4475 = tail call double @llvm.fabs.f64(double %4468) #9
  %4476 = fcmp oeq double %4475, 0x7FF0000000000000
  %4477 = select i1 %4476, double %4468, double %4472
  %4478 = tail call double @llvm.fabs.f64(double %4477) #9
  %4479 = fcmp oeq double %4478, 0x7FF0000000000000
  %4480 = select i1 %4479, double 0.000000e+00, double %4474
  %4481 = fmul double %4477, 0x3FF71547652B82FE
  %4482 = tail call double @llvm.rint.f64(double %4481)
  %4483 = fneg double %4482
  %4484 = tail call double @llvm.fma.f64(double %4483, double 0x3FE62E42FEFA39EF, double %4477)
  %4485 = tail call double @llvm.fma.f64(double %4483, double 0x3C7ABC9E3B39803F, double %4484)
  %4486 = tail call double @llvm.fma.f64(double %4485, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4487 = tail call double @llvm.fma.f64(double %4485, double %4486, double 0x3EC71DEE623FDE64)
  %4488 = tail call double @llvm.fma.f64(double %4485, double %4487, double 0x3EFA01997C89E6B0)
  %4489 = tail call double @llvm.fma.f64(double %4485, double %4488, double 0x3F2A01A014761F6E)
  %4490 = tail call double @llvm.fma.f64(double %4485, double %4489, double 0x3F56C16C1852B7B0)
  %4491 = tail call double @llvm.fma.f64(double %4485, double %4490, double 0x3F81111111122322)
  %4492 = tail call double @llvm.fma.f64(double %4485, double %4491, double 0x3FA55555555502A1)
  %4493 = tail call double @llvm.fma.f64(double %4485, double %4492, double 0x3FC5555555555511)
  %4494 = tail call double @llvm.fma.f64(double %4485, double %4493, double 0x3FE000000000000B)
  %4495 = tail call double @llvm.fma.f64(double %4485, double %4494, double 1.000000e+00)
  %4496 = tail call double @llvm.fma.f64(double %4485, double %4495, double 1.000000e+00)
  %4497 = fptosi double %4482 to i32
  %4498 = tail call double @llvm.ldexp.f64.i32(double %4496, i32 %4497)
  %4499 = fcmp ogt double %4477, 1.024000e+03
  %4500 = select i1 %4499, double 0x7FF0000000000000, double %4498
  %4501 = fcmp olt double %4477, -1.075000e+03
  %4502 = select i1 %4501, double 0.000000e+00, double %4500
  %4503 = tail call double @llvm.fma.f64(double %4502, double %4480, double %4502) #9
  %4504 = tail call double @llvm.fabs.f64(double %4502) #9
  %4505 = fcmp oeq double %4504, 0x7FF0000000000000
  %4506 = select i1 %4505, double %4502, double %4503
  %4507 = tail call double @llvm.trunc.f64(double %4348) #9
  %4508 = fcmp oeq double %4507, %4348
  %4509 = fmul double %4348, 5.000000e-01
  %4510 = tail call double @llvm.trunc.f64(double %4509) #9
  %4511 = fcmp une double %4510, %4509
  %4512 = and i1 %4508, %4511
  %4513 = select i1 %4512, double %sub.i100.i.i, double 1.000000e+00
  %4514 = tail call double @llvm.copysign.f64(double %4506, double %4513) #9
  %4515 = fcmp olt double %sub.i100.i.i, 0.000000e+00
  %4516 = select i1 %4508, double %4514, double 0x7FF8000000000000
  %4517 = select i1 %4515, double %4516, double %4514
  %4518 = fcmp oeq double %4349, 0x7FF0000000000000
  %4519 = fcmp oeq double %sub.i100.i.i, 0.000000e+00
  %4520 = or i1 %4519, %4518
  %4521 = select i1 %4519, double 0.000000e+00, double 0x7FF0000000000000
  %4522 = select i1 %4512, double %sub.i100.i.i, double 0.000000e+00
  %4523 = tail call double @llvm.copysign.f64(double %4521, double %4522) #9
  %4524 = select i1 %4520, double %4523, double %4517
  %4525 = fcmp uno double %sub.i100.i.i, 0.000000e+00
  %4526 = select i1 %4525, double 0x7FF8000000000000, double %4524
  %sub1.i102.i.i = fsub double %add103.i.i, %agg.tmp.sroa.2.0.copyload
  %4527 = fcmp oeq double %sub1.i102.i.i, 1.000000e+00
  %4528 = select i1 %4527, double 1.000000e+00, double 2.000000e+00
  %4529 = tail call double @llvm.fabs.f64(double %sub1.i102.i.i) #9
  %4530 = tail call double @llvm.amdgcn.frexp.mant.f64(double %4529)
  %4531 = fcmp olt double %4530, 0x3FE5555555555555
  %.neg.i.i.i1.i103.i.i = sext i1 %4531 to i32
  %4532 = select i1 %4531, double 2.000000e+00, double 1.000000e+00
  %4533 = fmul double %4530, %4532
  %4534 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %4529)
  %4535 = add i32 %4534, %.neg.i.i.i1.i103.i.i
  %4536 = fadd double %4533, -1.000000e+00
  %4537 = fadd double %4533, 1.000000e+00
  %4538 = fadd double %4537, -1.000000e+00
  %4539 = fsub double %4533, %4538
  %4540 = tail call double @llvm.amdgcn.rcp.f64(double %4537)
  %4541 = fneg double %4537
  %4542 = tail call double @llvm.fma.f64(double %4541, double %4540, double 1.000000e+00)
  %4543 = tail call double @llvm.fma.f64(double %4542, double %4540, double %4540)
  %4544 = tail call double @llvm.fma.f64(double %4541, double %4543, double 1.000000e+00)
  %4545 = tail call double @llvm.fma.f64(double %4544, double %4543, double %4543)
  %4546 = fmul double %4536, %4545
  %4547 = fmul double %4537, %4546
  %4548 = fneg double %4547
  %4549 = tail call double @llvm.fma.f64(double %4546, double %4537, double %4548)
  %4550 = tail call double @llvm.fma.f64(double %4546, double %4539, double %4549)
  %4551 = fadd double %4547, %4550
  %4552 = fsub double %4551, %4547
  %4553 = fsub double %4536, %4551
  %4554 = fsub double %4536, %4553
  %4555 = fsub double %4554, %4551
  %4556 = fsub double %4552, %4550
  %4557 = fadd double %4556, %4555
  %4558 = fadd double %4553, %4557
  %4559 = fmul double %4545, %4558
  %4560 = fadd double %4546, %4559
  %4561 = fsub double %4560, %4546
  %4562 = fsub double %4559, %4561
  %4563 = fmul double %4560, %4560
  %4564 = fneg double %4563
  %4565 = tail call double @llvm.fma.f64(double %4560, double %4560, double %4564)
  %4566 = fmul double %4562, 2.000000e+00
  %4567 = tail call double @llvm.fma.f64(double %4560, double %4566, double %4565)
  %4568 = fadd double %4563, %4567
  %4569 = fsub double %4568, %4563
  %4570 = fsub double %4567, %4569
  %4571 = tail call double @llvm.fma.f64(double %4568, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %4572 = tail call double @llvm.fma.f64(double %4568, double %4571, double 0x3FBE25E43ABE935A)
  %4573 = tail call double @llvm.fma.f64(double %4568, double %4572, double 0x3FC110EF47E6C9C2)
  %4574 = tail call double @llvm.fma.f64(double %4568, double %4573, double 0x3FC3B13BCFA74449)
  %4575 = tail call double @llvm.fma.f64(double %4568, double %4574, double 0x3FC745D171BF3C30)
  %4576 = tail call double @llvm.fma.f64(double %4568, double %4575, double 0x3FCC71C71C7792CE)
  %4577 = tail call double @llvm.fma.f64(double %4568, double %4576, double 0x3FD24924924920DA)
  %4578 = tail call double @llvm.fma.f64(double %4568, double %4577, double 0x3FD999999999999C)
  %4579 = sitofp i32 %4535 to double
  %4580 = fmul double %4579, 0x3FE62E42FEFA39EF
  %4581 = fneg double %4580
  %4582 = tail call double @llvm.fma.f64(double %4579, double 0x3FE62E42FEFA39EF, double %4581)
  %4583 = tail call double @llvm.fma.f64(double %4579, double 0x3C7ABC9E3B39803F, double %4582)
  %4584 = fadd double %4580, %4583
  %4585 = fsub double %4584, %4580
  %4586 = fsub double %4583, %4585
  %4587 = tail call double @llvm.ldexp.f64.i32(double %4560, i32 1)
  %4588 = tail call double @llvm.ldexp.f64.i32(double %4562, i32 1)
  %4589 = fmul double %4560, %4568
  %4590 = fneg double %4589
  %4591 = tail call double @llvm.fma.f64(double %4568, double %4560, double %4590)
  %4592 = tail call double @llvm.fma.f64(double %4568, double %4562, double %4591)
  %4593 = tail call double @llvm.fma.f64(double %4570, double %4560, double %4592)
  %4594 = fadd double %4589, %4593
  %4595 = fsub double %4594, %4589
  %4596 = fsub double %4593, %4595
  %4597 = fmul double %4568, %4578
  %4598 = fneg double %4597
  %4599 = tail call double @llvm.fma.f64(double %4568, double %4578, double %4598)
  %4600 = tail call double @llvm.fma.f64(double %4570, double %4578, double %4599)
  %4601 = fadd double %4597, %4600
  %4602 = fsub double %4601, %4597
  %4603 = fsub double %4600, %4602
  %4604 = fadd double %4601, 0x3FE5555555555555
  %4605 = fadd double %4604, 0xBFE5555555555555
  %4606 = fsub double %4601, %4605
  %4607 = fadd double %4603, 0x3C8543B0D5DF274D
  %4608 = fadd double %4607, %4606
  %4609 = fadd double %4604, %4608
  %4610 = fsub double %4604, %4609
  %4611 = fadd double %4608, %4610
  %4612 = fmul double %4594, %4609
  %4613 = fneg double %4612
  %4614 = tail call double @llvm.fma.f64(double %4594, double %4609, double %4613)
  %4615 = tail call double @llvm.fma.f64(double %4594, double %4611, double %4614)
  %4616 = tail call double @llvm.fma.f64(double %4596, double %4609, double %4615)
  %4617 = fadd double %4612, %4616
  %4618 = fsub double %4617, %4612
  %4619 = fsub double %4616, %4618
  %4620 = fadd double %4587, %4617
  %4621 = fsub double %4620, %4587
  %4622 = fsub double %4617, %4621
  %4623 = fadd double %4588, %4619
  %4624 = fadd double %4623, %4622
  %4625 = fadd double %4620, %4624
  %4626 = fsub double %4625, %4620
  %4627 = fsub double %4624, %4626
  %4628 = fadd double %4584, %4625
  %4629 = fsub double %4628, %4584
  %4630 = fsub double %4628, %4629
  %4631 = fsub double %4584, %4630
  %4632 = fsub double %4625, %4629
  %4633 = fadd double %4632, %4631
  %4634 = fadd double %4586, %4627
  %4635 = fsub double %4634, %4586
  %4636 = fsub double %4634, %4635
  %4637 = fsub double %4586, %4636
  %4638 = fsub double %4627, %4635
  %4639 = fadd double %4638, %4637
  %4640 = fadd double %4634, %4633
  %4641 = fadd double %4628, %4640
  %4642 = fsub double %4641, %4628
  %4643 = fsub double %4640, %4642
  %4644 = fadd double %4639, %4643
  %4645 = fadd double %4641, %4644
  %4646 = fsub double %4645, %4641
  %4647 = fsub double %4644, %4646
  %4648 = fmul double %4528, %4645
  %4649 = fneg double %4648
  %4650 = tail call double @llvm.fma.f64(double %4528, double %4645, double %4649) #9
  %4651 = tail call double @llvm.fma.f64(double %4528, double %4647, double %4650) #9
  %4652 = fadd double %4648, %4651
  %4653 = fsub double %4652, %4648
  %4654 = fsub double %4651, %4653
  %4655 = tail call double @llvm.fabs.f64(double %4648) #9
  %4656 = fcmp oeq double %4655, 0x7FF0000000000000
  %4657 = select i1 %4656, double %4648, double %4652
  %4658 = tail call double @llvm.fabs.f64(double %4657) #9
  %4659 = fcmp oeq double %4658, 0x7FF0000000000000
  %4660 = select i1 %4659, double 0.000000e+00, double %4654
  %4661 = fmul double %4657, 0x3FF71547652B82FE
  %4662 = tail call double @llvm.rint.f64(double %4661)
  %4663 = fneg double %4662
  %4664 = tail call double @llvm.fma.f64(double %4663, double 0x3FE62E42FEFA39EF, double %4657)
  %4665 = tail call double @llvm.fma.f64(double %4663, double 0x3C7ABC9E3B39803F, double %4664)
  %4666 = tail call double @llvm.fma.f64(double %4665, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4667 = tail call double @llvm.fma.f64(double %4665, double %4666, double 0x3EC71DEE623FDE64)
  %4668 = tail call double @llvm.fma.f64(double %4665, double %4667, double 0x3EFA01997C89E6B0)
  %4669 = tail call double @llvm.fma.f64(double %4665, double %4668, double 0x3F2A01A014761F6E)
  %4670 = tail call double @llvm.fma.f64(double %4665, double %4669, double 0x3F56C16C1852B7B0)
  %4671 = tail call double @llvm.fma.f64(double %4665, double %4670, double 0x3F81111111122322)
  %4672 = tail call double @llvm.fma.f64(double %4665, double %4671, double 0x3FA55555555502A1)
  %4673 = tail call double @llvm.fma.f64(double %4665, double %4672, double 0x3FC5555555555511)
  %4674 = tail call double @llvm.fma.f64(double %4665, double %4673, double 0x3FE000000000000B)
  %4675 = tail call double @llvm.fma.f64(double %4665, double %4674, double 1.000000e+00)
  %4676 = tail call double @llvm.fma.f64(double %4665, double %4675, double 1.000000e+00)
  %4677 = fptosi double %4662 to i32
  %4678 = tail call double @llvm.ldexp.f64.i32(double %4676, i32 %4677)
  %4679 = fcmp ogt double %4657, 1.024000e+03
  %4680 = select i1 %4679, double 0x7FF0000000000000, double %4678
  %4681 = fcmp olt double %4657, -1.075000e+03
  %4682 = select i1 %4681, double 0.000000e+00, double %4680
  %4683 = tail call double @llvm.fma.f64(double %4682, double %4660, double %4682) #9
  %4684 = tail call double @llvm.fabs.f64(double %4682) #9
  %4685 = fcmp oeq double %4684, 0x7FF0000000000000
  %4686 = select i1 %4685, double %4682, double %4683
  %4687 = tail call double @llvm.trunc.f64(double %4528) #9
  %4688 = fcmp oeq double %4687, %4528
  %4689 = fmul double %4528, 5.000000e-01
  %4690 = tail call double @llvm.trunc.f64(double %4689) #9
  %4691 = fcmp une double %4690, %4689
  %4692 = and i1 %4688, %4691
  %4693 = select i1 %4692, double %sub1.i102.i.i, double 1.000000e+00
  %4694 = tail call double @llvm.copysign.f64(double %4686, double %4693) #9
  %4695 = fcmp olt double %sub1.i102.i.i, 0.000000e+00
  %4696 = select i1 %4688, double %4694, double 0x7FF8000000000000
  %4697 = select i1 %4695, double %4696, double %4694
  %4698 = fcmp oeq double %4529, 0x7FF0000000000000
  %4699 = fcmp oeq double %sub1.i102.i.i, 0.000000e+00
  %4700 = or i1 %4699, %4698
  %4701 = select i1 %4699, double 0.000000e+00, double 0x7FF0000000000000
  %4702 = select i1 %4692, double %sub1.i102.i.i, double 0.000000e+00
  %4703 = tail call double @llvm.copysign.f64(double %4701, double %4702) #9
  %4704 = select i1 %4700, double %4703, double %4697
  %4705 = fcmp uno double %sub1.i102.i.i, 0.000000e+00
  %4706 = select i1 %4705, double 0x7FF8000000000000, double %4704
  %add.i104.i.i = fadd double %4526, %4706
  %4707 = fcmp oeq double %sub91.i.i, 1.000000e+00
  %4708 = select i1 %4707, double 1.000000e+00, double 2.000000e+00
  %4709 = tail call double @llvm.fabs.f64(double %sub91.i.i) #9
  %4710 = tail call double @llvm.amdgcn.frexp.mant.f64(double %4709)
  %4711 = fcmp olt double %4710, 0x3FE5555555555555
  %.neg.i.i.i2.i106.i.i = sext i1 %4711 to i32
  %4712 = select i1 %4711, double 2.000000e+00, double 1.000000e+00
  %4713 = fmul double %4710, %4712
  %4714 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %4709)
  %4715 = add i32 %4714, %.neg.i.i.i2.i106.i.i
  %4716 = fadd double %4713, -1.000000e+00
  %4717 = fadd double %4713, 1.000000e+00
  %4718 = fadd double %4717, -1.000000e+00
  %4719 = fsub double %4713, %4718
  %4720 = tail call double @llvm.amdgcn.rcp.f64(double %4717)
  %4721 = fneg double %4717
  %4722 = tail call double @llvm.fma.f64(double %4721, double %4720, double 1.000000e+00)
  %4723 = tail call double @llvm.fma.f64(double %4722, double %4720, double %4720)
  %4724 = tail call double @llvm.fma.f64(double %4721, double %4723, double 1.000000e+00)
  %4725 = tail call double @llvm.fma.f64(double %4724, double %4723, double %4723)
  %4726 = fmul double %4716, %4725
  %4727 = fmul double %4717, %4726
  %4728 = fneg double %4727
  %4729 = tail call double @llvm.fma.f64(double %4726, double %4717, double %4728)
  %4730 = tail call double @llvm.fma.f64(double %4726, double %4719, double %4729)
  %4731 = fadd double %4727, %4730
  %4732 = fsub double %4731, %4727
  %4733 = fsub double %4716, %4731
  %4734 = fsub double %4716, %4733
  %4735 = fsub double %4734, %4731
  %4736 = fsub double %4732, %4730
  %4737 = fadd double %4736, %4735
  %4738 = fadd double %4733, %4737
  %4739 = fmul double %4725, %4738
  %4740 = fadd double %4726, %4739
  %4741 = fsub double %4740, %4726
  %4742 = fsub double %4739, %4741
  %4743 = fmul double %4740, %4740
  %4744 = fneg double %4743
  %4745 = tail call double @llvm.fma.f64(double %4740, double %4740, double %4744)
  %4746 = fmul double %4742, 2.000000e+00
  %4747 = tail call double @llvm.fma.f64(double %4740, double %4746, double %4745)
  %4748 = fadd double %4743, %4747
  %4749 = fsub double %4748, %4743
  %4750 = fsub double %4747, %4749
  %4751 = tail call double @llvm.fma.f64(double %4748, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %4752 = tail call double @llvm.fma.f64(double %4748, double %4751, double 0x3FBE25E43ABE935A)
  %4753 = tail call double @llvm.fma.f64(double %4748, double %4752, double 0x3FC110EF47E6C9C2)
  %4754 = tail call double @llvm.fma.f64(double %4748, double %4753, double 0x3FC3B13BCFA74449)
  %4755 = tail call double @llvm.fma.f64(double %4748, double %4754, double 0x3FC745D171BF3C30)
  %4756 = tail call double @llvm.fma.f64(double %4748, double %4755, double 0x3FCC71C71C7792CE)
  %4757 = tail call double @llvm.fma.f64(double %4748, double %4756, double 0x3FD24924924920DA)
  %4758 = tail call double @llvm.fma.f64(double %4748, double %4757, double 0x3FD999999999999C)
  %4759 = sitofp i32 %4715 to double
  %4760 = fmul double %4759, 0x3FE62E42FEFA39EF
  %4761 = fneg double %4760
  %4762 = tail call double @llvm.fma.f64(double %4759, double 0x3FE62E42FEFA39EF, double %4761)
  %4763 = tail call double @llvm.fma.f64(double %4759, double 0x3C7ABC9E3B39803F, double %4762)
  %4764 = fadd double %4760, %4763
  %4765 = fsub double %4764, %4760
  %4766 = fsub double %4763, %4765
  %4767 = tail call double @llvm.ldexp.f64.i32(double %4740, i32 1)
  %4768 = tail call double @llvm.ldexp.f64.i32(double %4742, i32 1)
  %4769 = fmul double %4740, %4748
  %4770 = fneg double %4769
  %4771 = tail call double @llvm.fma.f64(double %4748, double %4740, double %4770)
  %4772 = tail call double @llvm.fma.f64(double %4748, double %4742, double %4771)
  %4773 = tail call double @llvm.fma.f64(double %4750, double %4740, double %4772)
  %4774 = fadd double %4769, %4773
  %4775 = fsub double %4774, %4769
  %4776 = fsub double %4773, %4775
  %4777 = fmul double %4748, %4758
  %4778 = fneg double %4777
  %4779 = tail call double @llvm.fma.f64(double %4748, double %4758, double %4778)
  %4780 = tail call double @llvm.fma.f64(double %4750, double %4758, double %4779)
  %4781 = fadd double %4777, %4780
  %4782 = fsub double %4781, %4777
  %4783 = fsub double %4780, %4782
  %4784 = fadd double %4781, 0x3FE5555555555555
  %4785 = fadd double %4784, 0xBFE5555555555555
  %4786 = fsub double %4781, %4785
  %4787 = fadd double %4783, 0x3C8543B0D5DF274D
  %4788 = fadd double %4787, %4786
  %4789 = fadd double %4784, %4788
  %4790 = fsub double %4784, %4789
  %4791 = fadd double %4788, %4790
  %4792 = fmul double %4774, %4789
  %4793 = fneg double %4792
  %4794 = tail call double @llvm.fma.f64(double %4774, double %4789, double %4793)
  %4795 = tail call double @llvm.fma.f64(double %4774, double %4791, double %4794)
  %4796 = tail call double @llvm.fma.f64(double %4776, double %4789, double %4795)
  %4797 = fadd double %4792, %4796
  %4798 = fsub double %4797, %4792
  %4799 = fsub double %4796, %4798
  %4800 = fadd double %4767, %4797
  %4801 = fsub double %4800, %4767
  %4802 = fsub double %4797, %4801
  %4803 = fadd double %4768, %4799
  %4804 = fadd double %4803, %4802
  %4805 = fadd double %4800, %4804
  %4806 = fsub double %4805, %4800
  %4807 = fsub double %4804, %4806
  %4808 = fadd double %4764, %4805
  %4809 = fsub double %4808, %4764
  %4810 = fsub double %4808, %4809
  %4811 = fsub double %4764, %4810
  %4812 = fsub double %4805, %4809
  %4813 = fadd double %4812, %4811
  %4814 = fadd double %4766, %4807
  %4815 = fsub double %4814, %4766
  %4816 = fsub double %4814, %4815
  %4817 = fsub double %4766, %4816
  %4818 = fsub double %4807, %4815
  %4819 = fadd double %4818, %4817
  %4820 = fadd double %4814, %4813
  %4821 = fadd double %4808, %4820
  %4822 = fsub double %4821, %4808
  %4823 = fsub double %4820, %4822
  %4824 = fadd double %4819, %4823
  %4825 = fadd double %4821, %4824
  %4826 = fsub double %4825, %4821
  %4827 = fsub double %4824, %4826
  %4828 = fmul double %4708, %4825
  %4829 = fneg double %4828
  %4830 = tail call double @llvm.fma.f64(double %4708, double %4825, double %4829) #9
  %4831 = tail call double @llvm.fma.f64(double %4708, double %4827, double %4830) #9
  %4832 = fadd double %4828, %4831
  %4833 = fsub double %4832, %4828
  %4834 = fsub double %4831, %4833
  %4835 = tail call double @llvm.fabs.f64(double %4828) #9
  %4836 = fcmp oeq double %4835, 0x7FF0000000000000
  %4837 = select i1 %4836, double %4828, double %4832
  %4838 = tail call double @llvm.fabs.f64(double %4837) #9
  %4839 = fcmp oeq double %4838, 0x7FF0000000000000
  %4840 = select i1 %4839, double 0.000000e+00, double %4834
  %4841 = fmul double %4837, 0x3FF71547652B82FE
  %4842 = tail call double @llvm.rint.f64(double %4841)
  %4843 = fneg double %4842
  %4844 = tail call double @llvm.fma.f64(double %4843, double 0x3FE62E42FEFA39EF, double %4837)
  %4845 = tail call double @llvm.fma.f64(double %4843, double 0x3C7ABC9E3B39803F, double %4844)
  %4846 = tail call double @llvm.fma.f64(double %4845, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4847 = tail call double @llvm.fma.f64(double %4845, double %4846, double 0x3EC71DEE623FDE64)
  %4848 = tail call double @llvm.fma.f64(double %4845, double %4847, double 0x3EFA01997C89E6B0)
  %4849 = tail call double @llvm.fma.f64(double %4845, double %4848, double 0x3F2A01A014761F6E)
  %4850 = tail call double @llvm.fma.f64(double %4845, double %4849, double 0x3F56C16C1852B7B0)
  %4851 = tail call double @llvm.fma.f64(double %4845, double %4850, double 0x3F81111111122322)
  %4852 = tail call double @llvm.fma.f64(double %4845, double %4851, double 0x3FA55555555502A1)
  %4853 = tail call double @llvm.fma.f64(double %4845, double %4852, double 0x3FC5555555555511)
  %4854 = tail call double @llvm.fma.f64(double %4845, double %4853, double 0x3FE000000000000B)
  %4855 = tail call double @llvm.fma.f64(double %4845, double %4854, double 1.000000e+00)
  %4856 = tail call double @llvm.fma.f64(double %4845, double %4855, double 1.000000e+00)
  %4857 = fptosi double %4842 to i32
  %4858 = tail call double @llvm.ldexp.f64.i32(double %4856, i32 %4857)
  %4859 = fcmp ogt double %4837, 1.024000e+03
  %4860 = select i1 %4859, double 0x7FF0000000000000, double %4858
  %4861 = fcmp olt double %4837, -1.075000e+03
  %4862 = select i1 %4861, double 0.000000e+00, double %4860
  %4863 = tail call double @llvm.fma.f64(double %4862, double %4840, double %4862) #9
  %4864 = tail call double @llvm.fabs.f64(double %4862) #9
  %4865 = fcmp oeq double %4864, 0x7FF0000000000000
  %4866 = select i1 %4865, double %4862, double %4863
  %4867 = tail call double @llvm.trunc.f64(double %4708) #9
  %4868 = fcmp oeq double %4867, %4708
  %4869 = fmul double %4708, 5.000000e-01
  %4870 = tail call double @llvm.trunc.f64(double %4869) #9
  %4871 = fcmp une double %4870, %4869
  %4872 = and i1 %4868, %4871
  %4873 = select i1 %4872, double %sub91.i.i, double 1.000000e+00
  %4874 = tail call double @llvm.copysign.f64(double %4866, double %4873) #9
  %4875 = fcmp olt double %sub91.i.i, 0.000000e+00
  %4876 = select i1 %4868, double %4874, double 0x7FF8000000000000
  %4877 = select i1 %4875, double %4876, double %4874
  %4878 = fcmp oeq double %4709, 0x7FF0000000000000
  %4879 = fcmp oeq double %sub91.i.i, 0.000000e+00
  %4880 = or i1 %4879, %4878
  %4881 = select i1 %4879, double 0.000000e+00, double 0x7FF0000000000000
  %4882 = select i1 %4872, double %sub91.i.i, double 0.000000e+00
  %4883 = tail call double @llvm.copysign.f64(double %4881, double %4882) #9
  %4884 = select i1 %4880, double %4883, double %4877
  %4885 = fcmp uno double %sub91.i.i, 0.000000e+00
  %4886 = select i1 %4885, double 0x7FF8000000000000, double %4884
  %add5.i107.i.i = fadd double %4886, %add.i104.i.i
  %cmp.i108.i.i = fcmp olt double %add5.i107.i.i, %min_dist.1.i45.i
  %min_dist.8.i.i = select i1 %cmp.i108.i.i, double %add5.i107.i.i, double %min_dist.1.i45.i
  br label %if.end121.i.i

if.end121.i.i:                                    ; preds = %if.then111.i.i, %if.then89.i.i, %lor.lhs.false85.i.i
  %min_dist.2.i47.i = phi double [ %min_dist.1.i45.i, %if.then89.i.i ], [ %min_dist.1.i45.i, %lor.lhs.false85.i.i ], [ %min_dist.8.i.i, %if.then111.i.i ]
  %cmp122.i.i = fcmp olt double %agg.tmp.sroa.0.0.copyload, %3264
  %cmp124.i.i = fcmp ogt double %r1.sroa.0.0.copyload, %3264
  %or.cond25.i.i = select i1 %cmp122.i.i, i1 %cmp124.i.i, i1 false
  br i1 %or.cond25.i.i, label %if.then129.i.i, label %lor.lhs.false125.i.i

lor.lhs.false125.i.i:                             ; preds = %if.end121.i.i
  %cmp126.i.i = fcmp ogt double %agg.tmp.sroa.0.0.copyload, %3264
  %cmp128.i.i = fcmp olt double %r1.sroa.0.0.copyload, %3264
  %or.cond26.i.i = select i1 %cmp126.i.i, i1 %cmp128.i.i, i1 false
  br i1 %or.cond26.i.i, label %if.then129.i.i, label %if.end162.i.i

if.then129.i.i:                                   ; preds = %lor.lhs.false125.i.i, %if.end121.i.i
  %sub131.i.i = fsub double %3264, %agg.tmp.sroa.0.0.copyload
  %sub132.i.i = fsub double %r1.sroa.5.0.copyload, %agg.tmp.sroa.2.0.copyload
  %mul133.i.i = fmul double %sub132.i.i, %sub131.i.i
  %sub134.i.i = fsub double %r1.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %div135.i.i = fdiv double %mul133.i.i, %sub134.i.i
  %add136.i.i = fadd double %agg.tmp.sroa.2.0.copyload, %div135.i.i
  %sub139.i.i = fsub double %r1.sroa.7.0.copyload, %agg.tmp.sroa.3.0.copyload
  %mul140.i.i = fmul double %sub139.i.i, %sub131.i.i
  %div142.i.i = fdiv double %mul140.i.i, %sub134.i.i
  %add143.i.i = fadd double %agg.tmp.sroa.3.0.copyload, %div142.i.i
  %cmp144.i.i = fcmp oge double %add136.i.i, %3262
  %cmp146.i.i = fcmp olt double %add136.i.i, %3265
  %or.cond27.not209.not211.i.i = select i1 %cmp144.i.i, i1 %cmp146.i.i, i1 false
  %cmp148.i.i = fcmp oge double %add143.i.i, %3263
  %or.cond28.not210.i.i = select i1 %or.cond27.not209.not211.i.i, i1 %cmp148.i.i, i1 false
  %cmp150.i.i = fcmp olt double %add143.i.i, %3266
  %or.cond29.i.i = select i1 %or.cond28.not210.i.i, i1 %cmp150.i.i, i1 false
  br i1 %or.cond29.i.i, label %if.then151.i.i, label %if.end162.i.i

if.then151.i.i:                                   ; preds = %if.then129.i.i
  %4887 = fcmp oeq double %sub131.i.i, 1.000000e+00
  %4888 = select i1 %4887, double 1.000000e+00, double 2.000000e+00
  %4889 = tail call double @llvm.fabs.f64(double %sub131.i.i) #9
  %4890 = tail call double @llvm.amdgcn.frexp.mant.f64(double %4889)
  %4891 = fcmp olt double %4890, 0x3FE5555555555555
  %.neg.i.i.i.i124.i.i = sext i1 %4891 to i32
  %4892 = select i1 %4891, double 2.000000e+00, double 1.000000e+00
  %4893 = fmul double %4890, %4892
  %4894 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %4889)
  %4895 = add i32 %4894, %.neg.i.i.i.i124.i.i
  %4896 = fadd double %4893, -1.000000e+00
  %4897 = fadd double %4893, 1.000000e+00
  %4898 = fadd double %4897, -1.000000e+00
  %4899 = fsub double %4893, %4898
  %4900 = tail call double @llvm.amdgcn.rcp.f64(double %4897)
  %4901 = fneg double %4897
  %4902 = tail call double @llvm.fma.f64(double %4901, double %4900, double 1.000000e+00)
  %4903 = tail call double @llvm.fma.f64(double %4902, double %4900, double %4900)
  %4904 = tail call double @llvm.fma.f64(double %4901, double %4903, double 1.000000e+00)
  %4905 = tail call double @llvm.fma.f64(double %4904, double %4903, double %4903)
  %4906 = fmul double %4896, %4905
  %4907 = fmul double %4897, %4906
  %4908 = fneg double %4907
  %4909 = tail call double @llvm.fma.f64(double %4906, double %4897, double %4908)
  %4910 = tail call double @llvm.fma.f64(double %4906, double %4899, double %4909)
  %4911 = fadd double %4907, %4910
  %4912 = fsub double %4911, %4907
  %4913 = fsub double %4896, %4911
  %4914 = fsub double %4896, %4913
  %4915 = fsub double %4914, %4911
  %4916 = fsub double %4912, %4910
  %4917 = fadd double %4916, %4915
  %4918 = fadd double %4913, %4917
  %4919 = fmul double %4905, %4918
  %4920 = fadd double %4906, %4919
  %4921 = fsub double %4920, %4906
  %4922 = fsub double %4919, %4921
  %4923 = fmul double %4920, %4920
  %4924 = fneg double %4923
  %4925 = tail call double @llvm.fma.f64(double %4920, double %4920, double %4924)
  %4926 = fmul double %4922, 2.000000e+00
  %4927 = tail call double @llvm.fma.f64(double %4920, double %4926, double %4925)
  %4928 = fadd double %4923, %4927
  %4929 = fsub double %4928, %4923
  %4930 = fsub double %4927, %4929
  %4931 = tail call double @llvm.fma.f64(double %4928, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %4932 = tail call double @llvm.fma.f64(double %4928, double %4931, double 0x3FBE25E43ABE935A)
  %4933 = tail call double @llvm.fma.f64(double %4928, double %4932, double 0x3FC110EF47E6C9C2)
  %4934 = tail call double @llvm.fma.f64(double %4928, double %4933, double 0x3FC3B13BCFA74449)
  %4935 = tail call double @llvm.fma.f64(double %4928, double %4934, double 0x3FC745D171BF3C30)
  %4936 = tail call double @llvm.fma.f64(double %4928, double %4935, double 0x3FCC71C71C7792CE)
  %4937 = tail call double @llvm.fma.f64(double %4928, double %4936, double 0x3FD24924924920DA)
  %4938 = tail call double @llvm.fma.f64(double %4928, double %4937, double 0x3FD999999999999C)
  %4939 = sitofp i32 %4895 to double
  %4940 = fmul double %4939, 0x3FE62E42FEFA39EF
  %4941 = fneg double %4940
  %4942 = tail call double @llvm.fma.f64(double %4939, double 0x3FE62E42FEFA39EF, double %4941)
  %4943 = tail call double @llvm.fma.f64(double %4939, double 0x3C7ABC9E3B39803F, double %4942)
  %4944 = fadd double %4940, %4943
  %4945 = fsub double %4944, %4940
  %4946 = fsub double %4943, %4945
  %4947 = tail call double @llvm.ldexp.f64.i32(double %4920, i32 1)
  %4948 = tail call double @llvm.ldexp.f64.i32(double %4922, i32 1)
  %4949 = fmul double %4920, %4928
  %4950 = fneg double %4949
  %4951 = tail call double @llvm.fma.f64(double %4928, double %4920, double %4950)
  %4952 = tail call double @llvm.fma.f64(double %4928, double %4922, double %4951)
  %4953 = tail call double @llvm.fma.f64(double %4930, double %4920, double %4952)
  %4954 = fadd double %4949, %4953
  %4955 = fsub double %4954, %4949
  %4956 = fsub double %4953, %4955
  %4957 = fmul double %4928, %4938
  %4958 = fneg double %4957
  %4959 = tail call double @llvm.fma.f64(double %4928, double %4938, double %4958)
  %4960 = tail call double @llvm.fma.f64(double %4930, double %4938, double %4959)
  %4961 = fadd double %4957, %4960
  %4962 = fsub double %4961, %4957
  %4963 = fsub double %4960, %4962
  %4964 = fadd double %4961, 0x3FE5555555555555
  %4965 = fadd double %4964, 0xBFE5555555555555
  %4966 = fsub double %4961, %4965
  %4967 = fadd double %4963, 0x3C8543B0D5DF274D
  %4968 = fadd double %4967, %4966
  %4969 = fadd double %4964, %4968
  %4970 = fsub double %4964, %4969
  %4971 = fadd double %4968, %4970
  %4972 = fmul double %4954, %4969
  %4973 = fneg double %4972
  %4974 = tail call double @llvm.fma.f64(double %4954, double %4969, double %4973)
  %4975 = tail call double @llvm.fma.f64(double %4954, double %4971, double %4974)
  %4976 = tail call double @llvm.fma.f64(double %4956, double %4969, double %4975)
  %4977 = fadd double %4972, %4976
  %4978 = fsub double %4977, %4972
  %4979 = fsub double %4976, %4978
  %4980 = fadd double %4947, %4977
  %4981 = fsub double %4980, %4947
  %4982 = fsub double %4977, %4981
  %4983 = fadd double %4948, %4979
  %4984 = fadd double %4983, %4982
  %4985 = fadd double %4980, %4984
  %4986 = fsub double %4985, %4980
  %4987 = fsub double %4984, %4986
  %4988 = fadd double %4944, %4985
  %4989 = fsub double %4988, %4944
  %4990 = fsub double %4988, %4989
  %4991 = fsub double %4944, %4990
  %4992 = fsub double %4985, %4989
  %4993 = fadd double %4992, %4991
  %4994 = fadd double %4946, %4987
  %4995 = fsub double %4994, %4946
  %4996 = fsub double %4994, %4995
  %4997 = fsub double %4946, %4996
  %4998 = fsub double %4987, %4995
  %4999 = fadd double %4998, %4997
  %5000 = fadd double %4994, %4993
  %5001 = fadd double %4988, %5000
  %5002 = fsub double %5001, %4988
  %5003 = fsub double %5000, %5002
  %5004 = fadd double %4999, %5003
  %5005 = fadd double %5001, %5004
  %5006 = fsub double %5005, %5001
  %5007 = fsub double %5004, %5006
  %5008 = fmul double %4888, %5005
  %5009 = fneg double %5008
  %5010 = tail call double @llvm.fma.f64(double %4888, double %5005, double %5009) #9
  %5011 = tail call double @llvm.fma.f64(double %4888, double %5007, double %5010) #9
  %5012 = fadd double %5008, %5011
  %5013 = fsub double %5012, %5008
  %5014 = fsub double %5011, %5013
  %5015 = tail call double @llvm.fabs.f64(double %5008) #9
  %5016 = fcmp oeq double %5015, 0x7FF0000000000000
  %5017 = select i1 %5016, double %5008, double %5012
  %5018 = tail call double @llvm.fabs.f64(double %5017) #9
  %5019 = fcmp oeq double %5018, 0x7FF0000000000000
  %5020 = select i1 %5019, double 0.000000e+00, double %5014
  %5021 = fmul double %5017, 0x3FF71547652B82FE
  %5022 = tail call double @llvm.rint.f64(double %5021)
  %5023 = fneg double %5022
  %5024 = tail call double @llvm.fma.f64(double %5023, double 0x3FE62E42FEFA39EF, double %5017)
  %5025 = tail call double @llvm.fma.f64(double %5023, double 0x3C7ABC9E3B39803F, double %5024)
  %5026 = tail call double @llvm.fma.f64(double %5025, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %5027 = tail call double @llvm.fma.f64(double %5025, double %5026, double 0x3EC71DEE623FDE64)
  %5028 = tail call double @llvm.fma.f64(double %5025, double %5027, double 0x3EFA01997C89E6B0)
  %5029 = tail call double @llvm.fma.f64(double %5025, double %5028, double 0x3F2A01A014761F6E)
  %5030 = tail call double @llvm.fma.f64(double %5025, double %5029, double 0x3F56C16C1852B7B0)
  %5031 = tail call double @llvm.fma.f64(double %5025, double %5030, double 0x3F81111111122322)
  %5032 = tail call double @llvm.fma.f64(double %5025, double %5031, double 0x3FA55555555502A1)
  %5033 = tail call double @llvm.fma.f64(double %5025, double %5032, double 0x3FC5555555555511)
  %5034 = tail call double @llvm.fma.f64(double %5025, double %5033, double 0x3FE000000000000B)
  %5035 = tail call double @llvm.fma.f64(double %5025, double %5034, double 1.000000e+00)
  %5036 = tail call double @llvm.fma.f64(double %5025, double %5035, double 1.000000e+00)
  %5037 = fptosi double %5022 to i32
  %5038 = tail call double @llvm.ldexp.f64.i32(double %5036, i32 %5037)
  %5039 = fcmp ogt double %5017, 1.024000e+03
  %5040 = select i1 %5039, double 0x7FF0000000000000, double %5038
  %5041 = fcmp olt double %5017, -1.075000e+03
  %5042 = select i1 %5041, double 0.000000e+00, double %5040
  %5043 = tail call double @llvm.fma.f64(double %5042, double %5020, double %5042) #9
  %5044 = tail call double @llvm.fabs.f64(double %5042) #9
  %5045 = fcmp oeq double %5044, 0x7FF0000000000000
  %5046 = select i1 %5045, double %5042, double %5043
  %5047 = tail call double @llvm.trunc.f64(double %4888) #9
  %5048 = fcmp oeq double %5047, %4888
  %5049 = fmul double %4888, 5.000000e-01
  %5050 = tail call double @llvm.trunc.f64(double %5049) #9
  %5051 = fcmp une double %5050, %5049
  %5052 = and i1 %5048, %5051
  %5053 = select i1 %5052, double %sub131.i.i, double 1.000000e+00
  %5054 = tail call double @llvm.copysign.f64(double %5046, double %5053) #9
  %5055 = fcmp olt double %sub131.i.i, 0.000000e+00
  %5056 = select i1 %5048, double %5054, double 0x7FF8000000000000
  %5057 = select i1 %5055, double %5056, double %5054
  %5058 = fcmp oeq double %4889, 0x7FF0000000000000
  %5059 = fcmp oeq double %sub131.i.i, 0.000000e+00
  %5060 = or i1 %5059, %5058
  %5061 = select i1 %5059, double 0.000000e+00, double 0x7FF0000000000000
  %5062 = select i1 %5052, double %sub131.i.i, double 0.000000e+00
  %5063 = tail call double @llvm.copysign.f64(double %5061, double %5062) #9
  %5064 = select i1 %5060, double %5063, double %5057
  %5065 = fcmp uno double %sub131.i.i, 0.000000e+00
  %5066 = select i1 %5065, double 0x7FF8000000000000, double %5064
  %sub1.i125.i.i = fsub double %add136.i.i, %agg.tmp.sroa.2.0.copyload
  %5067 = fcmp oeq double %sub1.i125.i.i, 1.000000e+00
  %5068 = select i1 %5067, double 1.000000e+00, double 2.000000e+00
  %5069 = tail call double @llvm.fabs.f64(double %sub1.i125.i.i) #9
  %5070 = tail call double @llvm.amdgcn.frexp.mant.f64(double %5069)
  %5071 = fcmp olt double %5070, 0x3FE5555555555555
  %.neg.i.i.i1.i126.i.i = sext i1 %5071 to i32
  %5072 = select i1 %5071, double 2.000000e+00, double 1.000000e+00
  %5073 = fmul double %5070, %5072
  %5074 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %5069)
  %5075 = add i32 %5074, %.neg.i.i.i1.i126.i.i
  %5076 = fadd double %5073, -1.000000e+00
  %5077 = fadd double %5073, 1.000000e+00
  %5078 = fadd double %5077, -1.000000e+00
  %5079 = fsub double %5073, %5078
  %5080 = tail call double @llvm.amdgcn.rcp.f64(double %5077)
  %5081 = fneg double %5077
  %5082 = tail call double @llvm.fma.f64(double %5081, double %5080, double 1.000000e+00)
  %5083 = tail call double @llvm.fma.f64(double %5082, double %5080, double %5080)
  %5084 = tail call double @llvm.fma.f64(double %5081, double %5083, double 1.000000e+00)
  %5085 = tail call double @llvm.fma.f64(double %5084, double %5083, double %5083)
  %5086 = fmul double %5076, %5085
  %5087 = fmul double %5077, %5086
  %5088 = fneg double %5087
  %5089 = tail call double @llvm.fma.f64(double %5086, double %5077, double %5088)
  %5090 = tail call double @llvm.fma.f64(double %5086, double %5079, double %5089)
  %5091 = fadd double %5087, %5090
  %5092 = fsub double %5091, %5087
  %5093 = fsub double %5076, %5091
  %5094 = fsub double %5076, %5093
  %5095 = fsub double %5094, %5091
  %5096 = fsub double %5092, %5090
  %5097 = fadd double %5096, %5095
  %5098 = fadd double %5093, %5097
  %5099 = fmul double %5085, %5098
  %5100 = fadd double %5086, %5099
  %5101 = fsub double %5100, %5086
  %5102 = fsub double %5099, %5101
  %5103 = fmul double %5100, %5100
  %5104 = fneg double %5103
  %5105 = tail call double @llvm.fma.f64(double %5100, double %5100, double %5104)
  %5106 = fmul double %5102, 2.000000e+00
  %5107 = tail call double @llvm.fma.f64(double %5100, double %5106, double %5105)
  %5108 = fadd double %5103, %5107
  %5109 = fsub double %5108, %5103
  %5110 = fsub double %5107, %5109
  %5111 = tail call double @llvm.fma.f64(double %5108, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %5112 = tail call double @llvm.fma.f64(double %5108, double %5111, double 0x3FBE25E43ABE935A)
  %5113 = tail call double @llvm.fma.f64(double %5108, double %5112, double 0x3FC110EF47E6C9C2)
  %5114 = tail call double @llvm.fma.f64(double %5108, double %5113, double 0x3FC3B13BCFA74449)
  %5115 = tail call double @llvm.fma.f64(double %5108, double %5114, double 0x3FC745D171BF3C30)
  %5116 = tail call double @llvm.fma.f64(double %5108, double %5115, double 0x3FCC71C71C7792CE)
  %5117 = tail call double @llvm.fma.f64(double %5108, double %5116, double 0x3FD24924924920DA)
  %5118 = tail call double @llvm.fma.f64(double %5108, double %5117, double 0x3FD999999999999C)
  %5119 = sitofp i32 %5075 to double
  %5120 = fmul double %5119, 0x3FE62E42FEFA39EF
  %5121 = fneg double %5120
  %5122 = tail call double @llvm.fma.f64(double %5119, double 0x3FE62E42FEFA39EF, double %5121)
  %5123 = tail call double @llvm.fma.f64(double %5119, double 0x3C7ABC9E3B39803F, double %5122)
  %5124 = fadd double %5120, %5123
  %5125 = fsub double %5124, %5120
  %5126 = fsub double %5123, %5125
  %5127 = tail call double @llvm.ldexp.f64.i32(double %5100, i32 1)
  %5128 = tail call double @llvm.ldexp.f64.i32(double %5102, i32 1)
  %5129 = fmul double %5100, %5108
  %5130 = fneg double %5129
  %5131 = tail call double @llvm.fma.f64(double %5108, double %5100, double %5130)
  %5132 = tail call double @llvm.fma.f64(double %5108, double %5102, double %5131)
  %5133 = tail call double @llvm.fma.f64(double %5110, double %5100, double %5132)
  %5134 = fadd double %5129, %5133
  %5135 = fsub double %5134, %5129
  %5136 = fsub double %5133, %5135
  %5137 = fmul double %5108, %5118
  %5138 = fneg double %5137
  %5139 = tail call double @llvm.fma.f64(double %5108, double %5118, double %5138)
  %5140 = tail call double @llvm.fma.f64(double %5110, double %5118, double %5139)
  %5141 = fadd double %5137, %5140
  %5142 = fsub double %5141, %5137
  %5143 = fsub double %5140, %5142
  %5144 = fadd double %5141, 0x3FE5555555555555
  %5145 = fadd double %5144, 0xBFE5555555555555
  %5146 = fsub double %5141, %5145
  %5147 = fadd double %5143, 0x3C8543B0D5DF274D
  %5148 = fadd double %5147, %5146
  %5149 = fadd double %5144, %5148
  %5150 = fsub double %5144, %5149
  %5151 = fadd double %5148, %5150
  %5152 = fmul double %5134, %5149
  %5153 = fneg double %5152
  %5154 = tail call double @llvm.fma.f64(double %5134, double %5149, double %5153)
  %5155 = tail call double @llvm.fma.f64(double %5134, double %5151, double %5154)
  %5156 = tail call double @llvm.fma.f64(double %5136, double %5149, double %5155)
  %5157 = fadd double %5152, %5156
  %5158 = fsub double %5157, %5152
  %5159 = fsub double %5156, %5158
  %5160 = fadd double %5127, %5157
  %5161 = fsub double %5160, %5127
  %5162 = fsub double %5157, %5161
  %5163 = fadd double %5128, %5159
  %5164 = fadd double %5163, %5162
  %5165 = fadd double %5160, %5164
  %5166 = fsub double %5165, %5160
  %5167 = fsub double %5164, %5166
  %5168 = fadd double %5124, %5165
  %5169 = fsub double %5168, %5124
  %5170 = fsub double %5168, %5169
  %5171 = fsub double %5124, %5170
  %5172 = fsub double %5165, %5169
  %5173 = fadd double %5172, %5171
  %5174 = fadd double %5126, %5167
  %5175 = fsub double %5174, %5126
  %5176 = fsub double %5174, %5175
  %5177 = fsub double %5126, %5176
  %5178 = fsub double %5167, %5175
  %5179 = fadd double %5178, %5177
  %5180 = fadd double %5174, %5173
  %5181 = fadd double %5168, %5180
  %5182 = fsub double %5181, %5168
  %5183 = fsub double %5180, %5182
  %5184 = fadd double %5179, %5183
  %5185 = fadd double %5181, %5184
  %5186 = fsub double %5185, %5181
  %5187 = fsub double %5184, %5186
  %5188 = fmul double %5068, %5185
  %5189 = fneg double %5188
  %5190 = tail call double @llvm.fma.f64(double %5068, double %5185, double %5189) #9
  %5191 = tail call double @llvm.fma.f64(double %5068, double %5187, double %5190) #9
  %5192 = fadd double %5188, %5191
  %5193 = fsub double %5192, %5188
  %5194 = fsub double %5191, %5193
  %5195 = tail call double @llvm.fabs.f64(double %5188) #9
  %5196 = fcmp oeq double %5195, 0x7FF0000000000000
  %5197 = select i1 %5196, double %5188, double %5192
  %5198 = tail call double @llvm.fabs.f64(double %5197) #9
  %5199 = fcmp oeq double %5198, 0x7FF0000000000000
  %5200 = select i1 %5199, double 0.000000e+00, double %5194
  %5201 = fmul double %5197, 0x3FF71547652B82FE
  %5202 = tail call double @llvm.rint.f64(double %5201)
  %5203 = fneg double %5202
  %5204 = tail call double @llvm.fma.f64(double %5203, double 0x3FE62E42FEFA39EF, double %5197)
  %5205 = tail call double @llvm.fma.f64(double %5203, double 0x3C7ABC9E3B39803F, double %5204)
  %5206 = tail call double @llvm.fma.f64(double %5205, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %5207 = tail call double @llvm.fma.f64(double %5205, double %5206, double 0x3EC71DEE623FDE64)
  %5208 = tail call double @llvm.fma.f64(double %5205, double %5207, double 0x3EFA01997C89E6B0)
  %5209 = tail call double @llvm.fma.f64(double %5205, double %5208, double 0x3F2A01A014761F6E)
  %5210 = tail call double @llvm.fma.f64(double %5205, double %5209, double 0x3F56C16C1852B7B0)
  %5211 = tail call double @llvm.fma.f64(double %5205, double %5210, double 0x3F81111111122322)
  %5212 = tail call double @llvm.fma.f64(double %5205, double %5211, double 0x3FA55555555502A1)
  %5213 = tail call double @llvm.fma.f64(double %5205, double %5212, double 0x3FC5555555555511)
  %5214 = tail call double @llvm.fma.f64(double %5205, double %5213, double 0x3FE000000000000B)
  %5215 = tail call double @llvm.fma.f64(double %5205, double %5214, double 1.000000e+00)
  %5216 = tail call double @llvm.fma.f64(double %5205, double %5215, double 1.000000e+00)
  %5217 = fptosi double %5202 to i32
  %5218 = tail call double @llvm.ldexp.f64.i32(double %5216, i32 %5217)
  %5219 = fcmp ogt double %5197, 1.024000e+03
  %5220 = select i1 %5219, double 0x7FF0000000000000, double %5218
  %5221 = fcmp olt double %5197, -1.075000e+03
  %5222 = select i1 %5221, double 0.000000e+00, double %5220
  %5223 = tail call double @llvm.fma.f64(double %5222, double %5200, double %5222) #9
  %5224 = tail call double @llvm.fabs.f64(double %5222) #9
  %5225 = fcmp oeq double %5224, 0x7FF0000000000000
  %5226 = select i1 %5225, double %5222, double %5223
  %5227 = tail call double @llvm.trunc.f64(double %5068) #9
  %5228 = fcmp oeq double %5227, %5068
  %5229 = fmul double %5068, 5.000000e-01
  %5230 = tail call double @llvm.trunc.f64(double %5229) #9
  %5231 = fcmp une double %5230, %5229
  %5232 = and i1 %5228, %5231
  %5233 = select i1 %5232, double %sub1.i125.i.i, double 1.000000e+00
  %5234 = tail call double @llvm.copysign.f64(double %5226, double %5233) #9
  %5235 = fcmp olt double %sub1.i125.i.i, 0.000000e+00
  %5236 = select i1 %5228, double %5234, double 0x7FF8000000000000
  %5237 = select i1 %5235, double %5236, double %5234
  %5238 = fcmp oeq double %5069, 0x7FF0000000000000
  %5239 = fcmp oeq double %sub1.i125.i.i, 0.000000e+00
  %5240 = or i1 %5239, %5238
  %5241 = select i1 %5239, double 0.000000e+00, double 0x7FF0000000000000
  %5242 = select i1 %5232, double %sub1.i125.i.i, double 0.000000e+00
  %5243 = tail call double @llvm.copysign.f64(double %5241, double %5242) #9
  %5244 = select i1 %5240, double %5243, double %5237
  %5245 = fcmp uno double %sub1.i125.i.i, 0.000000e+00
  %5246 = select i1 %5245, double 0x7FF8000000000000, double %5244
  %add.i127.i.i = fadd double %5066, %5246
  %sub3.i128.i.i = fsub double %add143.i.i, %agg.tmp.sroa.3.0.copyload
  %5247 = fcmp oeq double %sub3.i128.i.i, 1.000000e+00
  %5248 = select i1 %5247, double 1.000000e+00, double 2.000000e+00
  %5249 = tail call double @llvm.fabs.f64(double %sub3.i128.i.i) #9
  %5250 = tail call double @llvm.amdgcn.frexp.mant.f64(double %5249)
  %5251 = fcmp olt double %5250, 0x3FE5555555555555
  %.neg.i.i.i2.i129.i.i = sext i1 %5251 to i32
  %5252 = select i1 %5251, double 2.000000e+00, double 1.000000e+00
  %5253 = fmul double %5250, %5252
  %5254 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %5249)
  %5255 = add i32 %5254, %.neg.i.i.i2.i129.i.i
  %5256 = fadd double %5253, -1.000000e+00
  %5257 = fadd double %5253, 1.000000e+00
  %5258 = fadd double %5257, -1.000000e+00
  %5259 = fsub double %5253, %5258
  %5260 = tail call double @llvm.amdgcn.rcp.f64(double %5257)
  %5261 = fneg double %5257
  %5262 = tail call double @llvm.fma.f64(double %5261, double %5260, double 1.000000e+00)
  %5263 = tail call double @llvm.fma.f64(double %5262, double %5260, double %5260)
  %5264 = tail call double @llvm.fma.f64(double %5261, double %5263, double 1.000000e+00)
  %5265 = tail call double @llvm.fma.f64(double %5264, double %5263, double %5263)
  %5266 = fmul double %5256, %5265
  %5267 = fmul double %5257, %5266
  %5268 = fneg double %5267
  %5269 = tail call double @llvm.fma.f64(double %5266, double %5257, double %5268)
  %5270 = tail call double @llvm.fma.f64(double %5266, double %5259, double %5269)
  %5271 = fadd double %5267, %5270
  %5272 = fsub double %5271, %5267
  %5273 = fsub double %5256, %5271
  %5274 = fsub double %5256, %5273
  %5275 = fsub double %5274, %5271
  %5276 = fsub double %5272, %5270
  %5277 = fadd double %5276, %5275
  %5278 = fadd double %5273, %5277
  %5279 = fmul double %5265, %5278
  %5280 = fadd double %5266, %5279
  %5281 = fsub double %5280, %5266
  %5282 = fsub double %5279, %5281
  %5283 = fmul double %5280, %5280
  %5284 = fneg double %5283
  %5285 = tail call double @llvm.fma.f64(double %5280, double %5280, double %5284)
  %5286 = fmul double %5282, 2.000000e+00
  %5287 = tail call double @llvm.fma.f64(double %5280, double %5286, double %5285)
  %5288 = fadd double %5283, %5287
  %5289 = fsub double %5288, %5283
  %5290 = fsub double %5287, %5289
  %5291 = tail call double @llvm.fma.f64(double %5288, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %5292 = tail call double @llvm.fma.f64(double %5288, double %5291, double 0x3FBE25E43ABE935A)
  %5293 = tail call double @llvm.fma.f64(double %5288, double %5292, double 0x3FC110EF47E6C9C2)
  %5294 = tail call double @llvm.fma.f64(double %5288, double %5293, double 0x3FC3B13BCFA74449)
  %5295 = tail call double @llvm.fma.f64(double %5288, double %5294, double 0x3FC745D171BF3C30)
  %5296 = tail call double @llvm.fma.f64(double %5288, double %5295, double 0x3FCC71C71C7792CE)
  %5297 = tail call double @llvm.fma.f64(double %5288, double %5296, double 0x3FD24924924920DA)
  %5298 = tail call double @llvm.fma.f64(double %5288, double %5297, double 0x3FD999999999999C)
  %5299 = sitofp i32 %5255 to double
  %5300 = fmul double %5299, 0x3FE62E42FEFA39EF
  %5301 = fneg double %5300
  %5302 = tail call double @llvm.fma.f64(double %5299, double 0x3FE62E42FEFA39EF, double %5301)
  %5303 = tail call double @llvm.fma.f64(double %5299, double 0x3C7ABC9E3B39803F, double %5302)
  %5304 = fadd double %5300, %5303
  %5305 = fsub double %5304, %5300
  %5306 = fsub double %5303, %5305
  %5307 = tail call double @llvm.ldexp.f64.i32(double %5280, i32 1)
  %5308 = tail call double @llvm.ldexp.f64.i32(double %5282, i32 1)
  %5309 = fmul double %5280, %5288
  %5310 = fneg double %5309
  %5311 = tail call double @llvm.fma.f64(double %5288, double %5280, double %5310)
  %5312 = tail call double @llvm.fma.f64(double %5288, double %5282, double %5311)
  %5313 = tail call double @llvm.fma.f64(double %5290, double %5280, double %5312)
  %5314 = fadd double %5309, %5313
  %5315 = fsub double %5314, %5309
  %5316 = fsub double %5313, %5315
  %5317 = fmul double %5288, %5298
  %5318 = fneg double %5317
  %5319 = tail call double @llvm.fma.f64(double %5288, double %5298, double %5318)
  %5320 = tail call double @llvm.fma.f64(double %5290, double %5298, double %5319)
  %5321 = fadd double %5317, %5320
  %5322 = fsub double %5321, %5317
  %5323 = fsub double %5320, %5322
  %5324 = fadd double %5321, 0x3FE5555555555555
  %5325 = fadd double %5324, 0xBFE5555555555555
  %5326 = fsub double %5321, %5325
  %5327 = fadd double %5323, 0x3C8543B0D5DF274D
  %5328 = fadd double %5327, %5326
  %5329 = fadd double %5324, %5328
  %5330 = fsub double %5324, %5329
  %5331 = fadd double %5328, %5330
  %5332 = fmul double %5314, %5329
  %5333 = fneg double %5332
  %5334 = tail call double @llvm.fma.f64(double %5314, double %5329, double %5333)
  %5335 = tail call double @llvm.fma.f64(double %5314, double %5331, double %5334)
  %5336 = tail call double @llvm.fma.f64(double %5316, double %5329, double %5335)
  %5337 = fadd double %5332, %5336
  %5338 = fsub double %5337, %5332
  %5339 = fsub double %5336, %5338
  %5340 = fadd double %5307, %5337
  %5341 = fsub double %5340, %5307
  %5342 = fsub double %5337, %5341
  %5343 = fadd double %5308, %5339
  %5344 = fadd double %5343, %5342
  %5345 = fadd double %5340, %5344
  %5346 = fsub double %5345, %5340
  %5347 = fsub double %5344, %5346
  %5348 = fadd double %5304, %5345
  %5349 = fsub double %5348, %5304
  %5350 = fsub double %5348, %5349
  %5351 = fsub double %5304, %5350
  %5352 = fsub double %5345, %5349
  %5353 = fadd double %5352, %5351
  %5354 = fadd double %5306, %5347
  %5355 = fsub double %5354, %5306
  %5356 = fsub double %5354, %5355
  %5357 = fsub double %5306, %5356
  %5358 = fsub double %5347, %5355
  %5359 = fadd double %5358, %5357
  %5360 = fadd double %5354, %5353
  %5361 = fadd double %5348, %5360
  %5362 = fsub double %5361, %5348
  %5363 = fsub double %5360, %5362
  %5364 = fadd double %5359, %5363
  %5365 = fadd double %5361, %5364
  %5366 = fsub double %5365, %5361
  %5367 = fsub double %5364, %5366
  %5368 = fmul double %5248, %5365
  %5369 = fneg double %5368
  %5370 = tail call double @llvm.fma.f64(double %5248, double %5365, double %5369) #9
  %5371 = tail call double @llvm.fma.f64(double %5248, double %5367, double %5370) #9
  %5372 = fadd double %5368, %5371
  %5373 = fsub double %5372, %5368
  %5374 = fsub double %5371, %5373
  %5375 = tail call double @llvm.fabs.f64(double %5368) #9
  %5376 = fcmp oeq double %5375, 0x7FF0000000000000
  %5377 = select i1 %5376, double %5368, double %5372
  %5378 = tail call double @llvm.fabs.f64(double %5377) #9
  %5379 = fcmp oeq double %5378, 0x7FF0000000000000
  %5380 = select i1 %5379, double 0.000000e+00, double %5374
  %5381 = fmul double %5377, 0x3FF71547652B82FE
  %5382 = tail call double @llvm.rint.f64(double %5381)
  %5383 = fneg double %5382
  %5384 = tail call double @llvm.fma.f64(double %5383, double 0x3FE62E42FEFA39EF, double %5377)
  %5385 = tail call double @llvm.fma.f64(double %5383, double 0x3C7ABC9E3B39803F, double %5384)
  %5386 = tail call double @llvm.fma.f64(double %5385, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %5387 = tail call double @llvm.fma.f64(double %5385, double %5386, double 0x3EC71DEE623FDE64)
  %5388 = tail call double @llvm.fma.f64(double %5385, double %5387, double 0x3EFA01997C89E6B0)
  %5389 = tail call double @llvm.fma.f64(double %5385, double %5388, double 0x3F2A01A014761F6E)
  %5390 = tail call double @llvm.fma.f64(double %5385, double %5389, double 0x3F56C16C1852B7B0)
  %5391 = tail call double @llvm.fma.f64(double %5385, double %5390, double 0x3F81111111122322)
  %5392 = tail call double @llvm.fma.f64(double %5385, double %5391, double 0x3FA55555555502A1)
  %5393 = tail call double @llvm.fma.f64(double %5385, double %5392, double 0x3FC5555555555511)
  %5394 = tail call double @llvm.fma.f64(double %5385, double %5393, double 0x3FE000000000000B)
  %5395 = tail call double @llvm.fma.f64(double %5385, double %5394, double 1.000000e+00)
  %5396 = tail call double @llvm.fma.f64(double %5385, double %5395, double 1.000000e+00)
  %5397 = fptosi double %5382 to i32
  %5398 = tail call double @llvm.ldexp.f64.i32(double %5396, i32 %5397)
  %5399 = fcmp ogt double %5377, 1.024000e+03
  %5400 = select i1 %5399, double 0x7FF0000000000000, double %5398
  %5401 = fcmp olt double %5377, -1.075000e+03
  %5402 = select i1 %5401, double 0.000000e+00, double %5400
  %5403 = tail call double @llvm.fma.f64(double %5402, double %5380, double %5402) #9
  %5404 = tail call double @llvm.fabs.f64(double %5402) #9
  %5405 = fcmp oeq double %5404, 0x7FF0000000000000
  %5406 = select i1 %5405, double %5402, double %5403
  %5407 = tail call double @llvm.trunc.f64(double %5248) #9
  %5408 = fcmp oeq double %5407, %5248
  %5409 = fmul double %5248, 5.000000e-01
  %5410 = tail call double @llvm.trunc.f64(double %5409) #9
  %5411 = fcmp une double %5410, %5409
  %5412 = and i1 %5408, %5411
  %5413 = select i1 %5412, double %sub3.i128.i.i, double 1.000000e+00
  %5414 = tail call double @llvm.copysign.f64(double %5406, double %5413) #9
  %5415 = fcmp olt double %sub3.i128.i.i, 0.000000e+00
  %5416 = select i1 %5408, double %5414, double 0x7FF8000000000000
  %5417 = select i1 %5415, double %5416, double %5414
  %5418 = fcmp oeq double %5249, 0x7FF0000000000000
  %5419 = fcmp oeq double %sub3.i128.i.i, 0.000000e+00
  %5420 = or i1 %5419, %5418
  %5421 = select i1 %5419, double 0.000000e+00, double 0x7FF0000000000000
  %5422 = select i1 %5412, double %sub3.i128.i.i, double 0.000000e+00
  %5423 = tail call double @llvm.copysign.f64(double %5421, double %5422) #9
  %5424 = select i1 %5420, double %5423, double %5417
  %5425 = fcmp uno double %sub3.i128.i.i, 0.000000e+00
  %5426 = select i1 %5425, double 0x7FF8000000000000, double %5424
  %add5.i130.i.i = fadd double %5426, %add.i127.i.i
  %cmp.i131.i.i = fcmp olt double %add5.i130.i.i, %min_dist.2.i47.i
  %min_dist.9.i.i = select i1 %cmp.i131.i.i, double %add5.i130.i.i, double %min_dist.2.i47.i
  br label %if.end162.i.i

if.end162.i.i:                                    ; preds = %if.then151.i.i, %if.then129.i.i, %lor.lhs.false125.i.i
  %min_dist.3.i48.i = phi double [ %min_dist.2.i47.i, %if.then129.i.i ], [ %min_dist.2.i47.i, %lor.lhs.false125.i.i ], [ %min_dist.9.i.i, %if.then151.i.i ]
  %cmp163.i.i = fcmp olt double %agg.tmp.sroa.2.0.copyload, %3265
  %cmp165.i.i = fcmp ogt double %r1.sroa.5.0.copyload, %3265
  %or.cond30.i.i = select i1 %cmp163.i.i, i1 %cmp165.i.i, i1 false
  br i1 %or.cond30.i.i, label %if.then170.i.i, label %lor.lhs.false166.i.i

lor.lhs.false166.i.i:                             ; preds = %if.end162.i.i
  %cmp167.i.i = fcmp ogt double %agg.tmp.sroa.2.0.copyload, %3265
  %cmp169.i.i = fcmp olt double %r1.sroa.5.0.copyload, %3265
  %or.cond31.i.i = select i1 %cmp167.i.i, i1 %cmp169.i.i, i1 false
  br i1 %or.cond31.i.i, label %if.then170.i.i, label %if.end204.i.i

if.then170.i.i:                                   ; preds = %lor.lhs.false166.i.i, %if.end162.i.i
  %sub172.i.i = fsub double %3265, %agg.tmp.sroa.2.0.copyload
  %sub173.i.i = fsub double %r1.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %mul174.i.i = fmul double %sub173.i.i, %sub172.i.i
  %sub175.i.i = fsub double %r1.sroa.5.0.copyload, %agg.tmp.sroa.2.0.copyload
  %div176.i.i = fdiv double %mul174.i.i, %sub175.i.i
  %add177.i.i = fadd double %agg.tmp.sroa.0.0.copyload, %div176.i.i
  %sub180.i.i = fsub double %r1.sroa.7.0.copyload, %agg.tmp.sroa.3.0.copyload
  %mul181.i.i = fmul double %sub180.i.i, %sub172.i.i
  %div183.i.i = fdiv double %mul181.i.i, %sub175.i.i
  %add184.i.i = fadd double %agg.tmp.sroa.3.0.copyload, %div183.i.i
  %cmp185.i.i = fcmp oge double %add177.i.i, %17
  %cmp187.i.i = fcmp olt double %add177.i.i, %3264
  %or.cond32.not212.not214.i.i = select i1 %cmp185.i.i, i1 %cmp187.i.i, i1 false
  %cmp189.i.i = fcmp oge double %add184.i.i, %3263
  %or.cond33.not213.i.i = select i1 %or.cond32.not212.not214.i.i, i1 %cmp189.i.i, i1 false
  %cmp191.i.i = fcmp olt double %add184.i.i, %3266
  %or.cond34.i.i = select i1 %or.cond33.not213.i.i, i1 %cmp191.i.i, i1 false
  br i1 %or.cond34.i.i, label %if.then192.i.i, label %if.end204.i.i

if.then192.i.i:                                   ; preds = %if.then170.i.i
  %sub.i147.i.i = fsub double %add177.i.i, %agg.tmp.sroa.0.0.copyload
  %5427 = fcmp oeq double %sub.i147.i.i, 1.000000e+00
  %5428 = select i1 %5427, double 1.000000e+00, double 2.000000e+00
  %5429 = tail call double @llvm.fabs.f64(double %sub.i147.i.i) #9
  %5430 = tail call double @llvm.amdgcn.frexp.mant.f64(double %5429)
  %5431 = fcmp olt double %5430, 0x3FE5555555555555
  %.neg.i.i.i.i148.i.i = sext i1 %5431 to i32
  %5432 = select i1 %5431, double 2.000000e+00, double 1.000000e+00
  %5433 = fmul double %5430, %5432
  %5434 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %5429)
  %5435 = add i32 %5434, %.neg.i.i.i.i148.i.i
  %5436 = fadd double %5433, -1.000000e+00
  %5437 = fadd double %5433, 1.000000e+00
  %5438 = fadd double %5437, -1.000000e+00
  %5439 = fsub double %5433, %5438
  %5440 = tail call double @llvm.amdgcn.rcp.f64(double %5437)
  %5441 = fneg double %5437
  %5442 = tail call double @llvm.fma.f64(double %5441, double %5440, double 1.000000e+00)
  %5443 = tail call double @llvm.fma.f64(double %5442, double %5440, double %5440)
  %5444 = tail call double @llvm.fma.f64(double %5441, double %5443, double 1.000000e+00)
  %5445 = tail call double @llvm.fma.f64(double %5444, double %5443, double %5443)
  %5446 = fmul double %5436, %5445
  %5447 = fmul double %5437, %5446
  %5448 = fneg double %5447
  %5449 = tail call double @llvm.fma.f64(double %5446, double %5437, double %5448)
  %5450 = tail call double @llvm.fma.f64(double %5446, double %5439, double %5449)
  %5451 = fadd double %5447, %5450
  %5452 = fsub double %5451, %5447
  %5453 = fsub double %5436, %5451
  %5454 = fsub double %5436, %5453
  %5455 = fsub double %5454, %5451
  %5456 = fsub double %5452, %5450
  %5457 = fadd double %5456, %5455
  %5458 = fadd double %5453, %5457
  %5459 = fmul double %5445, %5458
  %5460 = fadd double %5446, %5459
  %5461 = fsub double %5460, %5446
  %5462 = fsub double %5459, %5461
  %5463 = fmul double %5460, %5460
  %5464 = fneg double %5463
  %5465 = tail call double @llvm.fma.f64(double %5460, double %5460, double %5464)
  %5466 = fmul double %5462, 2.000000e+00
  %5467 = tail call double @llvm.fma.f64(double %5460, double %5466, double %5465)
  %5468 = fadd double %5463, %5467
  %5469 = fsub double %5468, %5463
  %5470 = fsub double %5467, %5469
  %5471 = tail call double @llvm.fma.f64(double %5468, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %5472 = tail call double @llvm.fma.f64(double %5468, double %5471, double 0x3FBE25E43ABE935A)
  %5473 = tail call double @llvm.fma.f64(double %5468, double %5472, double 0x3FC110EF47E6C9C2)
  %5474 = tail call double @llvm.fma.f64(double %5468, double %5473, double 0x3FC3B13BCFA74449)
  %5475 = tail call double @llvm.fma.f64(double %5468, double %5474, double 0x3FC745D171BF3C30)
  %5476 = tail call double @llvm.fma.f64(double %5468, double %5475, double 0x3FCC71C71C7792CE)
  %5477 = tail call double @llvm.fma.f64(double %5468, double %5476, double 0x3FD24924924920DA)
  %5478 = tail call double @llvm.fma.f64(double %5468, double %5477, double 0x3FD999999999999C)
  %5479 = sitofp i32 %5435 to double
  %5480 = fmul double %5479, 0x3FE62E42FEFA39EF
  %5481 = fneg double %5480
  %5482 = tail call double @llvm.fma.f64(double %5479, double 0x3FE62E42FEFA39EF, double %5481)
  %5483 = tail call double @llvm.fma.f64(double %5479, double 0x3C7ABC9E3B39803F, double %5482)
  %5484 = fadd double %5480, %5483
  %5485 = fsub double %5484, %5480
  %5486 = fsub double %5483, %5485
  %5487 = tail call double @llvm.ldexp.f64.i32(double %5460, i32 1)
  %5488 = tail call double @llvm.ldexp.f64.i32(double %5462, i32 1)
  %5489 = fmul double %5460, %5468
  %5490 = fneg double %5489
  %5491 = tail call double @llvm.fma.f64(double %5468, double %5460, double %5490)
  %5492 = tail call double @llvm.fma.f64(double %5468, double %5462, double %5491)
  %5493 = tail call double @llvm.fma.f64(double %5470, double %5460, double %5492)
  %5494 = fadd double %5489, %5493
  %5495 = fsub double %5494, %5489
  %5496 = fsub double %5493, %5495
  %5497 = fmul double %5468, %5478
  %5498 = fneg double %5497
  %5499 = tail call double @llvm.fma.f64(double %5468, double %5478, double %5498)
  %5500 = tail call double @llvm.fma.f64(double %5470, double %5478, double %5499)
  %5501 = fadd double %5497, %5500
  %5502 = fsub double %5501, %5497
  %5503 = fsub double %5500, %5502
  %5504 = fadd double %5501, 0x3FE5555555555555
  %5505 = fadd double %5504, 0xBFE5555555555555
  %5506 = fsub double %5501, %5505
  %5507 = fadd double %5503, 0x3C8543B0D5DF274D
  %5508 = fadd double %5507, %5506
  %5509 = fadd double %5504, %5508
  %5510 = fsub double %5504, %5509
  %5511 = fadd double %5508, %5510
  %5512 = fmul double %5494, %5509
  %5513 = fneg double %5512
  %5514 = tail call double @llvm.fma.f64(double %5494, double %5509, double %5513)
  %5515 = tail call double @llvm.fma.f64(double %5494, double %5511, double %5514)
  %5516 = tail call double @llvm.fma.f64(double %5496, double %5509, double %5515)
  %5517 = fadd double %5512, %5516
  %5518 = fsub double %5517, %5512
  %5519 = fsub double %5516, %5518
  %5520 = fadd double %5487, %5517
  %5521 = fsub double %5520, %5487
  %5522 = fsub double %5517, %5521
  %5523 = fadd double %5488, %5519
  %5524 = fadd double %5523, %5522
  %5525 = fadd double %5520, %5524
  %5526 = fsub double %5525, %5520
  %5527 = fsub double %5524, %5526
  %5528 = fadd double %5484, %5525
  %5529 = fsub double %5528, %5484
  %5530 = fsub double %5528, %5529
  %5531 = fsub double %5484, %5530
  %5532 = fsub double %5525, %5529
  %5533 = fadd double %5532, %5531
  %5534 = fadd double %5486, %5527
  %5535 = fsub double %5534, %5486
  %5536 = fsub double %5534, %5535
  %5537 = fsub double %5486, %5536
  %5538 = fsub double %5527, %5535
  %5539 = fadd double %5538, %5537
  %5540 = fadd double %5534, %5533
  %5541 = fadd double %5528, %5540
  %5542 = fsub double %5541, %5528
  %5543 = fsub double %5540, %5542
  %5544 = fadd double %5539, %5543
  %5545 = fadd double %5541, %5544
  %5546 = fsub double %5545, %5541
  %5547 = fsub double %5544, %5546
  %5548 = fmul double %5428, %5545
  %5549 = fneg double %5548
  %5550 = tail call double @llvm.fma.f64(double %5428, double %5545, double %5549) #9
  %5551 = tail call double @llvm.fma.f64(double %5428, double %5547, double %5550) #9
  %5552 = fadd double %5548, %5551
  %5553 = fsub double %5552, %5548
  %5554 = fsub double %5551, %5553
  %5555 = tail call double @llvm.fabs.f64(double %5548) #9
  %5556 = fcmp oeq double %5555, 0x7FF0000000000000
  %5557 = select i1 %5556, double %5548, double %5552
  %5558 = tail call double @llvm.fabs.f64(double %5557) #9
  %5559 = fcmp oeq double %5558, 0x7FF0000000000000
  %5560 = select i1 %5559, double 0.000000e+00, double %5554
  %5561 = fmul double %5557, 0x3FF71547652B82FE
  %5562 = tail call double @llvm.rint.f64(double %5561)
  %5563 = fneg double %5562
  %5564 = tail call double @llvm.fma.f64(double %5563, double 0x3FE62E42FEFA39EF, double %5557)
  %5565 = tail call double @llvm.fma.f64(double %5563, double 0x3C7ABC9E3B39803F, double %5564)
  %5566 = tail call double @llvm.fma.f64(double %5565, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %5567 = tail call double @llvm.fma.f64(double %5565, double %5566, double 0x3EC71DEE623FDE64)
  %5568 = tail call double @llvm.fma.f64(double %5565, double %5567, double 0x3EFA01997C89E6B0)
  %5569 = tail call double @llvm.fma.f64(double %5565, double %5568, double 0x3F2A01A014761F6E)
  %5570 = tail call double @llvm.fma.f64(double %5565, double %5569, double 0x3F56C16C1852B7B0)
  %5571 = tail call double @llvm.fma.f64(double %5565, double %5570, double 0x3F81111111122322)
  %5572 = tail call double @llvm.fma.f64(double %5565, double %5571, double 0x3FA55555555502A1)
  %5573 = tail call double @llvm.fma.f64(double %5565, double %5572, double 0x3FC5555555555511)
  %5574 = tail call double @llvm.fma.f64(double %5565, double %5573, double 0x3FE000000000000B)
  %5575 = tail call double @llvm.fma.f64(double %5565, double %5574, double 1.000000e+00)
  %5576 = tail call double @llvm.fma.f64(double %5565, double %5575, double 1.000000e+00)
  %5577 = fptosi double %5562 to i32
  %5578 = tail call double @llvm.ldexp.f64.i32(double %5576, i32 %5577)
  %5579 = fcmp ogt double %5557, 1.024000e+03
  %5580 = select i1 %5579, double 0x7FF0000000000000, double %5578
  %5581 = fcmp olt double %5557, -1.075000e+03
  %5582 = select i1 %5581, double 0.000000e+00, double %5580
  %5583 = tail call double @llvm.fma.f64(double %5582, double %5560, double %5582) #9
  %5584 = tail call double @llvm.fabs.f64(double %5582) #9
  %5585 = fcmp oeq double %5584, 0x7FF0000000000000
  %5586 = select i1 %5585, double %5582, double %5583
  %5587 = tail call double @llvm.trunc.f64(double %5428) #9
  %5588 = fcmp oeq double %5587, %5428
  %5589 = fmul double %5428, 5.000000e-01
  %5590 = tail call double @llvm.trunc.f64(double %5589) #9
  %5591 = fcmp une double %5590, %5589
  %5592 = and i1 %5588, %5591
  %5593 = select i1 %5592, double %sub.i147.i.i, double 1.000000e+00
  %5594 = tail call double @llvm.copysign.f64(double %5586, double %5593) #9
  %5595 = fcmp olt double %sub.i147.i.i, 0.000000e+00
  %5596 = select i1 %5588, double %5594, double 0x7FF8000000000000
  %5597 = select i1 %5595, double %5596, double %5594
  %5598 = fcmp oeq double %5429, 0x7FF0000000000000
  %5599 = fcmp oeq double %sub.i147.i.i, 0.000000e+00
  %5600 = or i1 %5599, %5598
  %5601 = select i1 %5599, double 0.000000e+00, double 0x7FF0000000000000
  %5602 = select i1 %5592, double %sub.i147.i.i, double 0.000000e+00
  %5603 = tail call double @llvm.copysign.f64(double %5601, double %5602) #9
  %5604 = select i1 %5600, double %5603, double %5597
  %5605 = fcmp uno double %sub.i147.i.i, 0.000000e+00
  %5606 = select i1 %5605, double 0x7FF8000000000000, double %5604
  %5607 = fcmp oeq double %sub172.i.i, 1.000000e+00
  %5608 = select i1 %5607, double 1.000000e+00, double 2.000000e+00
  %5609 = tail call double @llvm.fabs.f64(double %sub172.i.i) #9
  %5610 = tail call double @llvm.amdgcn.frexp.mant.f64(double %5609)
  %5611 = fcmp olt double %5610, 0x3FE5555555555555
  %.neg.i.i.i1.i150.i.i = sext i1 %5611 to i32
  %5612 = select i1 %5611, double 2.000000e+00, double 1.000000e+00
  %5613 = fmul double %5610, %5612
  %5614 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %5609)
  %5615 = add i32 %5614, %.neg.i.i.i1.i150.i.i
  %5616 = fadd double %5613, -1.000000e+00
  %5617 = fadd double %5613, 1.000000e+00
  %5618 = fadd double %5617, -1.000000e+00
  %5619 = fsub double %5613, %5618
  %5620 = tail call double @llvm.amdgcn.rcp.f64(double %5617)
  %5621 = fneg double %5617
  %5622 = tail call double @llvm.fma.f64(double %5621, double %5620, double 1.000000e+00)
  %5623 = tail call double @llvm.fma.f64(double %5622, double %5620, double %5620)
  %5624 = tail call double @llvm.fma.f64(double %5621, double %5623, double 1.000000e+00)
  %5625 = tail call double @llvm.fma.f64(double %5624, double %5623, double %5623)
  %5626 = fmul double %5616, %5625
  %5627 = fmul double %5617, %5626
  %5628 = fneg double %5627
  %5629 = tail call double @llvm.fma.f64(double %5626, double %5617, double %5628)
  %5630 = tail call double @llvm.fma.f64(double %5626, double %5619, double %5629)
  %5631 = fadd double %5627, %5630
  %5632 = fsub double %5631, %5627
  %5633 = fsub double %5616, %5631
  %5634 = fsub double %5616, %5633
  %5635 = fsub double %5634, %5631
  %5636 = fsub double %5632, %5630
  %5637 = fadd double %5636, %5635
  %5638 = fadd double %5633, %5637
  %5639 = fmul double %5625, %5638
  %5640 = fadd double %5626, %5639
  %5641 = fsub double %5640, %5626
  %5642 = fsub double %5639, %5641
  %5643 = fmul double %5640, %5640
  %5644 = fneg double %5643
  %5645 = tail call double @llvm.fma.f64(double %5640, double %5640, double %5644)
  %5646 = fmul double %5642, 2.000000e+00
  %5647 = tail call double @llvm.fma.f64(double %5640, double %5646, double %5645)
  %5648 = fadd double %5643, %5647
  %5649 = fsub double %5648, %5643
  %5650 = fsub double %5647, %5649
  %5651 = tail call double @llvm.fma.f64(double %5648, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %5652 = tail call double @llvm.fma.f64(double %5648, double %5651, double 0x3FBE25E43ABE935A)
  %5653 = tail call double @llvm.fma.f64(double %5648, double %5652, double 0x3FC110EF47E6C9C2)
  %5654 = tail call double @llvm.fma.f64(double %5648, double %5653, double 0x3FC3B13BCFA74449)
  %5655 = tail call double @llvm.fma.f64(double %5648, double %5654, double 0x3FC745D171BF3C30)
  %5656 = tail call double @llvm.fma.f64(double %5648, double %5655, double 0x3FCC71C71C7792CE)
  %5657 = tail call double @llvm.fma.f64(double %5648, double %5656, double 0x3FD24924924920DA)
  %5658 = tail call double @llvm.fma.f64(double %5648, double %5657, double 0x3FD999999999999C)
  %5659 = sitofp i32 %5615 to double
  %5660 = fmul double %5659, 0x3FE62E42FEFA39EF
  %5661 = fneg double %5660
  %5662 = tail call double @llvm.fma.f64(double %5659, double 0x3FE62E42FEFA39EF, double %5661)
  %5663 = tail call double @llvm.fma.f64(double %5659, double 0x3C7ABC9E3B39803F, double %5662)
  %5664 = fadd double %5660, %5663
  %5665 = fsub double %5664, %5660
  %5666 = fsub double %5663, %5665
  %5667 = tail call double @llvm.ldexp.f64.i32(double %5640, i32 1)
  %5668 = tail call double @llvm.ldexp.f64.i32(double %5642, i32 1)
  %5669 = fmul double %5640, %5648
  %5670 = fneg double %5669
  %5671 = tail call double @llvm.fma.f64(double %5648, double %5640, double %5670)
  %5672 = tail call double @llvm.fma.f64(double %5648, double %5642, double %5671)
  %5673 = tail call double @llvm.fma.f64(double %5650, double %5640, double %5672)
  %5674 = fadd double %5669, %5673
  %5675 = fsub double %5674, %5669
  %5676 = fsub double %5673, %5675
  %5677 = fmul double %5648, %5658
  %5678 = fneg double %5677
  %5679 = tail call double @llvm.fma.f64(double %5648, double %5658, double %5678)
  %5680 = tail call double @llvm.fma.f64(double %5650, double %5658, double %5679)
  %5681 = fadd double %5677, %5680
  %5682 = fsub double %5681, %5677
  %5683 = fsub double %5680, %5682
  %5684 = fadd double %5681, 0x3FE5555555555555
  %5685 = fadd double %5684, 0xBFE5555555555555
  %5686 = fsub double %5681, %5685
  %5687 = fadd double %5683, 0x3C8543B0D5DF274D
  %5688 = fadd double %5687, %5686
  %5689 = fadd double %5684, %5688
  %5690 = fsub double %5684, %5689
  %5691 = fadd double %5688, %5690
  %5692 = fmul double %5674, %5689
  %5693 = fneg double %5692
  %5694 = tail call double @llvm.fma.f64(double %5674, double %5689, double %5693)
  %5695 = tail call double @llvm.fma.f64(double %5674, double %5691, double %5694)
  %5696 = tail call double @llvm.fma.f64(double %5676, double %5689, double %5695)
  %5697 = fadd double %5692, %5696
  %5698 = fsub double %5697, %5692
  %5699 = fsub double %5696, %5698
  %5700 = fadd double %5667, %5697
  %5701 = fsub double %5700, %5667
  %5702 = fsub double %5697, %5701
  %5703 = fadd double %5668, %5699
  %5704 = fadd double %5703, %5702
  %5705 = fadd double %5700, %5704
  %5706 = fsub double %5705, %5700
  %5707 = fsub double %5704, %5706
  %5708 = fadd double %5664, %5705
  %5709 = fsub double %5708, %5664
  %5710 = fsub double %5708, %5709
  %5711 = fsub double %5664, %5710
  %5712 = fsub double %5705, %5709
  %5713 = fadd double %5712, %5711
  %5714 = fadd double %5666, %5707
  %5715 = fsub double %5714, %5666
  %5716 = fsub double %5714, %5715
  %5717 = fsub double %5666, %5716
  %5718 = fsub double %5707, %5715
  %5719 = fadd double %5718, %5717
  %5720 = fadd double %5714, %5713
  %5721 = fadd double %5708, %5720
  %5722 = fsub double %5721, %5708
  %5723 = fsub double %5720, %5722
  %5724 = fadd double %5719, %5723
  %5725 = fadd double %5721, %5724
  %5726 = fsub double %5725, %5721
  %5727 = fsub double %5724, %5726
  %5728 = fmul double %5608, %5725
  %5729 = fneg double %5728
  %5730 = tail call double @llvm.fma.f64(double %5608, double %5725, double %5729) #9
  %5731 = tail call double @llvm.fma.f64(double %5608, double %5727, double %5730) #9
  %5732 = fadd double %5728, %5731
  %5733 = fsub double %5732, %5728
  %5734 = fsub double %5731, %5733
  %5735 = tail call double @llvm.fabs.f64(double %5728) #9
  %5736 = fcmp oeq double %5735, 0x7FF0000000000000
  %5737 = select i1 %5736, double %5728, double %5732
  %5738 = tail call double @llvm.fabs.f64(double %5737) #9
  %5739 = fcmp oeq double %5738, 0x7FF0000000000000
  %5740 = select i1 %5739, double 0.000000e+00, double %5734
  %5741 = fmul double %5737, 0x3FF71547652B82FE
  %5742 = tail call double @llvm.rint.f64(double %5741)
  %5743 = fneg double %5742
  %5744 = tail call double @llvm.fma.f64(double %5743, double 0x3FE62E42FEFA39EF, double %5737)
  %5745 = tail call double @llvm.fma.f64(double %5743, double 0x3C7ABC9E3B39803F, double %5744)
  %5746 = tail call double @llvm.fma.f64(double %5745, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %5747 = tail call double @llvm.fma.f64(double %5745, double %5746, double 0x3EC71DEE623FDE64)
  %5748 = tail call double @llvm.fma.f64(double %5745, double %5747, double 0x3EFA01997C89E6B0)
  %5749 = tail call double @llvm.fma.f64(double %5745, double %5748, double 0x3F2A01A014761F6E)
  %5750 = tail call double @llvm.fma.f64(double %5745, double %5749, double 0x3F56C16C1852B7B0)
  %5751 = tail call double @llvm.fma.f64(double %5745, double %5750, double 0x3F81111111122322)
  %5752 = tail call double @llvm.fma.f64(double %5745, double %5751, double 0x3FA55555555502A1)
  %5753 = tail call double @llvm.fma.f64(double %5745, double %5752, double 0x3FC5555555555511)
  %5754 = tail call double @llvm.fma.f64(double %5745, double %5753, double 0x3FE000000000000B)
  %5755 = tail call double @llvm.fma.f64(double %5745, double %5754, double 1.000000e+00)
  %5756 = tail call double @llvm.fma.f64(double %5745, double %5755, double 1.000000e+00)
  %5757 = fptosi double %5742 to i32
  %5758 = tail call double @llvm.ldexp.f64.i32(double %5756, i32 %5757)
  %5759 = fcmp ogt double %5737, 1.024000e+03
  %5760 = select i1 %5759, double 0x7FF0000000000000, double %5758
  %5761 = fcmp olt double %5737, -1.075000e+03
  %5762 = select i1 %5761, double 0.000000e+00, double %5760
  %5763 = tail call double @llvm.fma.f64(double %5762, double %5740, double %5762) #9
  %5764 = tail call double @llvm.fabs.f64(double %5762) #9
  %5765 = fcmp oeq double %5764, 0x7FF0000000000000
  %5766 = select i1 %5765, double %5762, double %5763
  %5767 = tail call double @llvm.trunc.f64(double %5608) #9
  %5768 = fcmp oeq double %5767, %5608
  %5769 = fmul double %5608, 5.000000e-01
  %5770 = tail call double @llvm.trunc.f64(double %5769) #9
  %5771 = fcmp une double %5770, %5769
  %5772 = and i1 %5768, %5771
  %5773 = select i1 %5772, double %sub172.i.i, double 1.000000e+00
  %5774 = tail call double @llvm.copysign.f64(double %5766, double %5773) #9
  %5775 = fcmp olt double %sub172.i.i, 0.000000e+00
  %5776 = select i1 %5768, double %5774, double 0x7FF8000000000000
  %5777 = select i1 %5775, double %5776, double %5774
  %5778 = fcmp oeq double %5609, 0x7FF0000000000000
  %5779 = fcmp oeq double %sub172.i.i, 0.000000e+00
  %5780 = or i1 %5779, %5778
  %5781 = select i1 %5779, double 0.000000e+00, double 0x7FF0000000000000
  %5782 = select i1 %5772, double %sub172.i.i, double 0.000000e+00
  %5783 = tail call double @llvm.copysign.f64(double %5781, double %5782) #9
  %5784 = select i1 %5780, double %5783, double %5777
  %5785 = fcmp uno double %sub172.i.i, 0.000000e+00
  %5786 = select i1 %5785, double 0x7FF8000000000000, double %5784
  %add.i151.i.i = fadd double %5786, %5606
  %sub3.i152.i.i = fsub double %add184.i.i, %agg.tmp.sroa.3.0.copyload
  %5787 = fcmp oeq double %sub3.i152.i.i, 1.000000e+00
  %5788 = select i1 %5787, double 1.000000e+00, double 2.000000e+00
  %5789 = tail call double @llvm.fabs.f64(double %sub3.i152.i.i) #9
  %5790 = tail call double @llvm.amdgcn.frexp.mant.f64(double %5789)
  %5791 = fcmp olt double %5790, 0x3FE5555555555555
  %.neg.i.i.i2.i153.i.i = sext i1 %5791 to i32
  %5792 = select i1 %5791, double 2.000000e+00, double 1.000000e+00
  %5793 = fmul double %5790, %5792
  %5794 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %5789)
  %5795 = add i32 %5794, %.neg.i.i.i2.i153.i.i
  %5796 = fadd double %5793, -1.000000e+00
  %5797 = fadd double %5793, 1.000000e+00
  %5798 = fadd double %5797, -1.000000e+00
  %5799 = fsub double %5793, %5798
  %5800 = tail call double @llvm.amdgcn.rcp.f64(double %5797)
  %5801 = fneg double %5797
  %5802 = tail call double @llvm.fma.f64(double %5801, double %5800, double 1.000000e+00)
  %5803 = tail call double @llvm.fma.f64(double %5802, double %5800, double %5800)
  %5804 = tail call double @llvm.fma.f64(double %5801, double %5803, double 1.000000e+00)
  %5805 = tail call double @llvm.fma.f64(double %5804, double %5803, double %5803)
  %5806 = fmul double %5796, %5805
  %5807 = fmul double %5797, %5806
  %5808 = fneg double %5807
  %5809 = tail call double @llvm.fma.f64(double %5806, double %5797, double %5808)
  %5810 = tail call double @llvm.fma.f64(double %5806, double %5799, double %5809)
  %5811 = fadd double %5807, %5810
  %5812 = fsub double %5811, %5807
  %5813 = fsub double %5796, %5811
  %5814 = fsub double %5796, %5813
  %5815 = fsub double %5814, %5811
  %5816 = fsub double %5812, %5810
  %5817 = fadd double %5816, %5815
  %5818 = fadd double %5813, %5817
  %5819 = fmul double %5805, %5818
  %5820 = fadd double %5806, %5819
  %5821 = fsub double %5820, %5806
  %5822 = fsub double %5819, %5821
  %5823 = fmul double %5820, %5820
  %5824 = fneg double %5823
  %5825 = tail call double @llvm.fma.f64(double %5820, double %5820, double %5824)
  %5826 = fmul double %5822, 2.000000e+00
  %5827 = tail call double @llvm.fma.f64(double %5820, double %5826, double %5825)
  %5828 = fadd double %5823, %5827
  %5829 = fsub double %5828, %5823
  %5830 = fsub double %5827, %5829
  %5831 = tail call double @llvm.fma.f64(double %5828, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %5832 = tail call double @llvm.fma.f64(double %5828, double %5831, double 0x3FBE25E43ABE935A)
  %5833 = tail call double @llvm.fma.f64(double %5828, double %5832, double 0x3FC110EF47E6C9C2)
  %5834 = tail call double @llvm.fma.f64(double %5828, double %5833, double 0x3FC3B13BCFA74449)
  %5835 = tail call double @llvm.fma.f64(double %5828, double %5834, double 0x3FC745D171BF3C30)
  %5836 = tail call double @llvm.fma.f64(double %5828, double %5835, double 0x3FCC71C71C7792CE)
  %5837 = tail call double @llvm.fma.f64(double %5828, double %5836, double 0x3FD24924924920DA)
  %5838 = tail call double @llvm.fma.f64(double %5828, double %5837, double 0x3FD999999999999C)
  %5839 = sitofp i32 %5795 to double
  %5840 = fmul double %5839, 0x3FE62E42FEFA39EF
  %5841 = fneg double %5840
  %5842 = tail call double @llvm.fma.f64(double %5839, double 0x3FE62E42FEFA39EF, double %5841)
  %5843 = tail call double @llvm.fma.f64(double %5839, double 0x3C7ABC9E3B39803F, double %5842)
  %5844 = fadd double %5840, %5843
  %5845 = fsub double %5844, %5840
  %5846 = fsub double %5843, %5845
  %5847 = tail call double @llvm.ldexp.f64.i32(double %5820, i32 1)
  %5848 = tail call double @llvm.ldexp.f64.i32(double %5822, i32 1)
  %5849 = fmul double %5820, %5828
  %5850 = fneg double %5849
  %5851 = tail call double @llvm.fma.f64(double %5828, double %5820, double %5850)
  %5852 = tail call double @llvm.fma.f64(double %5828, double %5822, double %5851)
  %5853 = tail call double @llvm.fma.f64(double %5830, double %5820, double %5852)
  %5854 = fadd double %5849, %5853
  %5855 = fsub double %5854, %5849
  %5856 = fsub double %5853, %5855
  %5857 = fmul double %5828, %5838
  %5858 = fneg double %5857
  %5859 = tail call double @llvm.fma.f64(double %5828, double %5838, double %5858)
  %5860 = tail call double @llvm.fma.f64(double %5830, double %5838, double %5859)
  %5861 = fadd double %5857, %5860
  %5862 = fsub double %5861, %5857
  %5863 = fsub double %5860, %5862
  %5864 = fadd double %5861, 0x3FE5555555555555
  %5865 = fadd double %5864, 0xBFE5555555555555
  %5866 = fsub double %5861, %5865
  %5867 = fadd double %5863, 0x3C8543B0D5DF274D
  %5868 = fadd double %5867, %5866
  %5869 = fadd double %5864, %5868
  %5870 = fsub double %5864, %5869
  %5871 = fadd double %5868, %5870
  %5872 = fmul double %5854, %5869
  %5873 = fneg double %5872
  %5874 = tail call double @llvm.fma.f64(double %5854, double %5869, double %5873)
  %5875 = tail call double @llvm.fma.f64(double %5854, double %5871, double %5874)
  %5876 = tail call double @llvm.fma.f64(double %5856, double %5869, double %5875)
  %5877 = fadd double %5872, %5876
  %5878 = fsub double %5877, %5872
  %5879 = fsub double %5876, %5878
  %5880 = fadd double %5847, %5877
  %5881 = fsub double %5880, %5847
  %5882 = fsub double %5877, %5881
  %5883 = fadd double %5848, %5879
  %5884 = fadd double %5883, %5882
  %5885 = fadd double %5880, %5884
  %5886 = fsub double %5885, %5880
  %5887 = fsub double %5884, %5886
  %5888 = fadd double %5844, %5885
  %5889 = fsub double %5888, %5844
  %5890 = fsub double %5888, %5889
  %5891 = fsub double %5844, %5890
  %5892 = fsub double %5885, %5889
  %5893 = fadd double %5892, %5891
  %5894 = fadd double %5846, %5887
  %5895 = fsub double %5894, %5846
  %5896 = fsub double %5894, %5895
  %5897 = fsub double %5846, %5896
  %5898 = fsub double %5887, %5895
  %5899 = fadd double %5898, %5897
  %5900 = fadd double %5894, %5893
  %5901 = fadd double %5888, %5900
  %5902 = fsub double %5901, %5888
  %5903 = fsub double %5900, %5902
  %5904 = fadd double %5899, %5903
  %5905 = fadd double %5901, %5904
  %5906 = fsub double %5905, %5901
  %5907 = fsub double %5904, %5906
  %5908 = fmul double %5788, %5905
  %5909 = fneg double %5908
  %5910 = tail call double @llvm.fma.f64(double %5788, double %5905, double %5909) #9
  %5911 = tail call double @llvm.fma.f64(double %5788, double %5907, double %5910) #9
  %5912 = fadd double %5908, %5911
  %5913 = fsub double %5912, %5908
  %5914 = fsub double %5911, %5913
  %5915 = tail call double @llvm.fabs.f64(double %5908) #9
  %5916 = fcmp oeq double %5915, 0x7FF0000000000000
  %5917 = select i1 %5916, double %5908, double %5912
  %5918 = tail call double @llvm.fabs.f64(double %5917) #9
  %5919 = fcmp oeq double %5918, 0x7FF0000000000000
  %5920 = select i1 %5919, double 0.000000e+00, double %5914
  %5921 = fmul double %5917, 0x3FF71547652B82FE
  %5922 = tail call double @llvm.rint.f64(double %5921)
  %5923 = fneg double %5922
  %5924 = tail call double @llvm.fma.f64(double %5923, double 0x3FE62E42FEFA39EF, double %5917)
  %5925 = tail call double @llvm.fma.f64(double %5923, double 0x3C7ABC9E3B39803F, double %5924)
  %5926 = tail call double @llvm.fma.f64(double %5925, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %5927 = tail call double @llvm.fma.f64(double %5925, double %5926, double 0x3EC71DEE623FDE64)
  %5928 = tail call double @llvm.fma.f64(double %5925, double %5927, double 0x3EFA01997C89E6B0)
  %5929 = tail call double @llvm.fma.f64(double %5925, double %5928, double 0x3F2A01A014761F6E)
  %5930 = tail call double @llvm.fma.f64(double %5925, double %5929, double 0x3F56C16C1852B7B0)
  %5931 = tail call double @llvm.fma.f64(double %5925, double %5930, double 0x3F81111111122322)
  %5932 = tail call double @llvm.fma.f64(double %5925, double %5931, double 0x3FA55555555502A1)
  %5933 = tail call double @llvm.fma.f64(double %5925, double %5932, double 0x3FC5555555555511)
  %5934 = tail call double @llvm.fma.f64(double %5925, double %5933, double 0x3FE000000000000B)
  %5935 = tail call double @llvm.fma.f64(double %5925, double %5934, double 1.000000e+00)
  %5936 = tail call double @llvm.fma.f64(double %5925, double %5935, double 1.000000e+00)
  %5937 = fptosi double %5922 to i32
  %5938 = tail call double @llvm.ldexp.f64.i32(double %5936, i32 %5937)
  %5939 = fcmp ogt double %5917, 1.024000e+03
  %5940 = select i1 %5939, double 0x7FF0000000000000, double %5938
  %5941 = fcmp olt double %5917, -1.075000e+03
  %5942 = select i1 %5941, double 0.000000e+00, double %5940
  %5943 = tail call double @llvm.fma.f64(double %5942, double %5920, double %5942) #9
  %5944 = tail call double @llvm.fabs.f64(double %5942) #9
  %5945 = fcmp oeq double %5944, 0x7FF0000000000000
  %5946 = select i1 %5945, double %5942, double %5943
  %5947 = tail call double @llvm.trunc.f64(double %5788) #9
  %5948 = fcmp oeq double %5947, %5788
  %5949 = fmul double %5788, 5.000000e-01
  %5950 = tail call double @llvm.trunc.f64(double %5949) #9
  %5951 = fcmp une double %5950, %5949
  %5952 = and i1 %5948, %5951
  %5953 = select i1 %5952, double %sub3.i152.i.i, double 1.000000e+00
  %5954 = tail call double @llvm.copysign.f64(double %5946, double %5953) #9
  %5955 = fcmp olt double %sub3.i152.i.i, 0.000000e+00
  %5956 = select i1 %5948, double %5954, double 0x7FF8000000000000
  %5957 = select i1 %5955, double %5956, double %5954
  %5958 = fcmp oeq double %5789, 0x7FF0000000000000
  %5959 = fcmp oeq double %sub3.i152.i.i, 0.000000e+00
  %5960 = or i1 %5959, %5958
  %5961 = select i1 %5959, double 0.000000e+00, double 0x7FF0000000000000
  %5962 = select i1 %5952, double %sub3.i152.i.i, double 0.000000e+00
  %5963 = tail call double @llvm.copysign.f64(double %5961, double %5962) #9
  %5964 = select i1 %5960, double %5963, double %5957
  %5965 = fcmp uno double %sub3.i152.i.i, 0.000000e+00
  %5966 = select i1 %5965, double 0x7FF8000000000000, double %5964
  %add5.i154.i.i = fadd double %5966, %add.i151.i.i
  %cmp.i155.i.i = fcmp olt double %add5.i154.i.i, %min_dist.3.i48.i
  %min_dist.10.i.i = select i1 %cmp.i155.i.i, double %add5.i154.i.i, double %min_dist.3.i48.i
  br label %if.end204.i.i

if.end204.i.i:                                    ; preds = %if.then192.i.i, %if.then170.i.i, %lor.lhs.false166.i.i
  %min_dist.4.i49.i = phi double [ %min_dist.3.i48.i, %if.then170.i.i ], [ %min_dist.3.i48.i, %lor.lhs.false166.i.i ], [ %min_dist.10.i.i, %if.then192.i.i ]
  %cmp205.i.i = fcmp olt double %agg.tmp.sroa.3.0.copyload, %3266
  %cmp207.i.i = fcmp ogt double %r1.sroa.7.0.copyload, %3266
  %or.cond35.i.i = select i1 %cmp205.i.i, i1 %cmp207.i.i, i1 false
  br i1 %or.cond35.i.i, label %if.then212.i.i, label %lor.lhs.false208.i.i

lor.lhs.false208.i.i:                             ; preds = %if.end204.i.i
  %cmp209.i.i = fcmp ogt double %agg.tmp.sroa.3.0.copyload, %3266
  %cmp211.i.i = fcmp olt double %r1.sroa.7.0.copyload, %3266
  %or.cond36.i.i = select i1 %cmp209.i.i, i1 %cmp211.i.i, i1 false
  br i1 %or.cond36.i.i, label %if.then212.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then212.i.i:                                   ; preds = %lor.lhs.false208.i.i, %if.end204.i.i
  %sub214.i.i = fsub double %3266, %agg.tmp.sroa.3.0.copyload
  %sub215.i.i = fsub double %r1.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %mul216.i.i = fmul double %sub215.i.i, %sub214.i.i
  %sub217.i.i = fsub double %r1.sroa.7.0.copyload, %agg.tmp.sroa.3.0.copyload
  %div218.i.i = fdiv double %mul216.i.i, %sub217.i.i
  %add219.i.i = fadd double %agg.tmp.sroa.0.0.copyload, %div218.i.i
  %sub222.i.i = fsub double %r1.sroa.5.0.copyload, %agg.tmp.sroa.2.0.copyload
  %mul223.i.i = fmul double %sub222.i.i, %sub214.i.i
  %div225.i.i = fdiv double %mul223.i.i, %sub217.i.i
  %add226.i.i = fadd double %agg.tmp.sroa.2.0.copyload, %div225.i.i
  %cmp227.i.i = fcmp oge double %add219.i.i, %17
  %cmp229.i.i = fcmp olt double %add219.i.i, %3264
  %or.cond37.not215.not217.i.i = select i1 %cmp227.i.i, i1 %cmp229.i.i, i1 false
  %cmp231.i.i = fcmp oge double %add226.i.i, %3262
  %or.cond38.not216.i.i = select i1 %or.cond37.not215.not217.i.i, i1 %cmp231.i.i, i1 false
  %cmp233.i.i = fcmp olt double %add226.i.i, %3265
  %or.cond39.i.i = select i1 %or.cond38.not216.i.i, i1 %cmp233.i.i, i1 false
  br i1 %or.cond39.i.i, label %if.then234.i.i, label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

if.then234.i.i:                                   ; preds = %if.then212.i.i
  %sub.i171.i.i = fsub double %add219.i.i, %agg.tmp.sroa.0.0.copyload
  %5967 = fcmp oeq double %sub.i171.i.i, 1.000000e+00
  %5968 = select i1 %5967, double 1.000000e+00, double 2.000000e+00
  %5969 = tail call double @llvm.fabs.f64(double %sub.i171.i.i) #9
  %5970 = tail call double @llvm.amdgcn.frexp.mant.f64(double %5969)
  %5971 = fcmp olt double %5970, 0x3FE5555555555555
  %.neg.i.i.i.i172.i.i = sext i1 %5971 to i32
  %5972 = select i1 %5971, double 2.000000e+00, double 1.000000e+00
  %5973 = fmul double %5970, %5972
  %5974 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %5969)
  %5975 = add i32 %5974, %.neg.i.i.i.i172.i.i
  %5976 = fadd double %5973, -1.000000e+00
  %5977 = fadd double %5973, 1.000000e+00
  %5978 = fadd double %5977, -1.000000e+00
  %5979 = fsub double %5973, %5978
  %5980 = tail call double @llvm.amdgcn.rcp.f64(double %5977)
  %5981 = fneg double %5977
  %5982 = tail call double @llvm.fma.f64(double %5981, double %5980, double 1.000000e+00)
  %5983 = tail call double @llvm.fma.f64(double %5982, double %5980, double %5980)
  %5984 = tail call double @llvm.fma.f64(double %5981, double %5983, double 1.000000e+00)
  %5985 = tail call double @llvm.fma.f64(double %5984, double %5983, double %5983)
  %5986 = fmul double %5976, %5985
  %5987 = fmul double %5977, %5986
  %5988 = fneg double %5987
  %5989 = tail call double @llvm.fma.f64(double %5986, double %5977, double %5988)
  %5990 = tail call double @llvm.fma.f64(double %5986, double %5979, double %5989)
  %5991 = fadd double %5987, %5990
  %5992 = fsub double %5991, %5987
  %5993 = fsub double %5976, %5991
  %5994 = fsub double %5976, %5993
  %5995 = fsub double %5994, %5991
  %5996 = fsub double %5992, %5990
  %5997 = fadd double %5996, %5995
  %5998 = fadd double %5993, %5997
  %5999 = fmul double %5985, %5998
  %6000 = fadd double %5986, %5999
  %6001 = fsub double %6000, %5986
  %6002 = fsub double %5999, %6001
  %6003 = fmul double %6000, %6000
  %6004 = fneg double %6003
  %6005 = tail call double @llvm.fma.f64(double %6000, double %6000, double %6004)
  %6006 = fmul double %6002, 2.000000e+00
  %6007 = tail call double @llvm.fma.f64(double %6000, double %6006, double %6005)
  %6008 = fadd double %6003, %6007
  %6009 = fsub double %6008, %6003
  %6010 = fsub double %6007, %6009
  %6011 = tail call double @llvm.fma.f64(double %6008, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %6012 = tail call double @llvm.fma.f64(double %6008, double %6011, double 0x3FBE25E43ABE935A)
  %6013 = tail call double @llvm.fma.f64(double %6008, double %6012, double 0x3FC110EF47E6C9C2)
  %6014 = tail call double @llvm.fma.f64(double %6008, double %6013, double 0x3FC3B13BCFA74449)
  %6015 = tail call double @llvm.fma.f64(double %6008, double %6014, double 0x3FC745D171BF3C30)
  %6016 = tail call double @llvm.fma.f64(double %6008, double %6015, double 0x3FCC71C71C7792CE)
  %6017 = tail call double @llvm.fma.f64(double %6008, double %6016, double 0x3FD24924924920DA)
  %6018 = tail call double @llvm.fma.f64(double %6008, double %6017, double 0x3FD999999999999C)
  %6019 = sitofp i32 %5975 to double
  %6020 = fmul double %6019, 0x3FE62E42FEFA39EF
  %6021 = fneg double %6020
  %6022 = tail call double @llvm.fma.f64(double %6019, double 0x3FE62E42FEFA39EF, double %6021)
  %6023 = tail call double @llvm.fma.f64(double %6019, double 0x3C7ABC9E3B39803F, double %6022)
  %6024 = fadd double %6020, %6023
  %6025 = fsub double %6024, %6020
  %6026 = fsub double %6023, %6025
  %6027 = tail call double @llvm.ldexp.f64.i32(double %6000, i32 1)
  %6028 = tail call double @llvm.ldexp.f64.i32(double %6002, i32 1)
  %6029 = fmul double %6000, %6008
  %6030 = fneg double %6029
  %6031 = tail call double @llvm.fma.f64(double %6008, double %6000, double %6030)
  %6032 = tail call double @llvm.fma.f64(double %6008, double %6002, double %6031)
  %6033 = tail call double @llvm.fma.f64(double %6010, double %6000, double %6032)
  %6034 = fadd double %6029, %6033
  %6035 = fsub double %6034, %6029
  %6036 = fsub double %6033, %6035
  %6037 = fmul double %6008, %6018
  %6038 = fneg double %6037
  %6039 = tail call double @llvm.fma.f64(double %6008, double %6018, double %6038)
  %6040 = tail call double @llvm.fma.f64(double %6010, double %6018, double %6039)
  %6041 = fadd double %6037, %6040
  %6042 = fsub double %6041, %6037
  %6043 = fsub double %6040, %6042
  %6044 = fadd double %6041, 0x3FE5555555555555
  %6045 = fadd double %6044, 0xBFE5555555555555
  %6046 = fsub double %6041, %6045
  %6047 = fadd double %6043, 0x3C8543B0D5DF274D
  %6048 = fadd double %6047, %6046
  %6049 = fadd double %6044, %6048
  %6050 = fsub double %6044, %6049
  %6051 = fadd double %6048, %6050
  %6052 = fmul double %6034, %6049
  %6053 = fneg double %6052
  %6054 = tail call double @llvm.fma.f64(double %6034, double %6049, double %6053)
  %6055 = tail call double @llvm.fma.f64(double %6034, double %6051, double %6054)
  %6056 = tail call double @llvm.fma.f64(double %6036, double %6049, double %6055)
  %6057 = fadd double %6052, %6056
  %6058 = fsub double %6057, %6052
  %6059 = fsub double %6056, %6058
  %6060 = fadd double %6027, %6057
  %6061 = fsub double %6060, %6027
  %6062 = fsub double %6057, %6061
  %6063 = fadd double %6028, %6059
  %6064 = fadd double %6063, %6062
  %6065 = fadd double %6060, %6064
  %6066 = fsub double %6065, %6060
  %6067 = fsub double %6064, %6066
  %6068 = fadd double %6024, %6065
  %6069 = fsub double %6068, %6024
  %6070 = fsub double %6068, %6069
  %6071 = fsub double %6024, %6070
  %6072 = fsub double %6065, %6069
  %6073 = fadd double %6072, %6071
  %6074 = fadd double %6026, %6067
  %6075 = fsub double %6074, %6026
  %6076 = fsub double %6074, %6075
  %6077 = fsub double %6026, %6076
  %6078 = fsub double %6067, %6075
  %6079 = fadd double %6078, %6077
  %6080 = fadd double %6074, %6073
  %6081 = fadd double %6068, %6080
  %6082 = fsub double %6081, %6068
  %6083 = fsub double %6080, %6082
  %6084 = fadd double %6079, %6083
  %6085 = fadd double %6081, %6084
  %6086 = fsub double %6085, %6081
  %6087 = fsub double %6084, %6086
  %6088 = fmul double %5968, %6085
  %6089 = fneg double %6088
  %6090 = tail call double @llvm.fma.f64(double %5968, double %6085, double %6089) #9
  %6091 = tail call double @llvm.fma.f64(double %5968, double %6087, double %6090) #9
  %6092 = fadd double %6088, %6091
  %6093 = fsub double %6092, %6088
  %6094 = fsub double %6091, %6093
  %6095 = tail call double @llvm.fabs.f64(double %6088) #9
  %6096 = fcmp oeq double %6095, 0x7FF0000000000000
  %6097 = select i1 %6096, double %6088, double %6092
  %6098 = tail call double @llvm.fabs.f64(double %6097) #9
  %6099 = fcmp oeq double %6098, 0x7FF0000000000000
  %6100 = select i1 %6099, double 0.000000e+00, double %6094
  %6101 = fmul double %6097, 0x3FF71547652B82FE
  %6102 = tail call double @llvm.rint.f64(double %6101)
  %6103 = fneg double %6102
  %6104 = tail call double @llvm.fma.f64(double %6103, double 0x3FE62E42FEFA39EF, double %6097)
  %6105 = tail call double @llvm.fma.f64(double %6103, double 0x3C7ABC9E3B39803F, double %6104)
  %6106 = tail call double @llvm.fma.f64(double %6105, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %6107 = tail call double @llvm.fma.f64(double %6105, double %6106, double 0x3EC71DEE623FDE64)
  %6108 = tail call double @llvm.fma.f64(double %6105, double %6107, double 0x3EFA01997C89E6B0)
  %6109 = tail call double @llvm.fma.f64(double %6105, double %6108, double 0x3F2A01A014761F6E)
  %6110 = tail call double @llvm.fma.f64(double %6105, double %6109, double 0x3F56C16C1852B7B0)
  %6111 = tail call double @llvm.fma.f64(double %6105, double %6110, double 0x3F81111111122322)
  %6112 = tail call double @llvm.fma.f64(double %6105, double %6111, double 0x3FA55555555502A1)
  %6113 = tail call double @llvm.fma.f64(double %6105, double %6112, double 0x3FC5555555555511)
  %6114 = tail call double @llvm.fma.f64(double %6105, double %6113, double 0x3FE000000000000B)
  %6115 = tail call double @llvm.fma.f64(double %6105, double %6114, double 1.000000e+00)
  %6116 = tail call double @llvm.fma.f64(double %6105, double %6115, double 1.000000e+00)
  %6117 = fptosi double %6102 to i32
  %6118 = tail call double @llvm.ldexp.f64.i32(double %6116, i32 %6117)
  %6119 = fcmp ogt double %6097, 1.024000e+03
  %6120 = select i1 %6119, double 0x7FF0000000000000, double %6118
  %6121 = fcmp olt double %6097, -1.075000e+03
  %6122 = select i1 %6121, double 0.000000e+00, double %6120
  %6123 = tail call double @llvm.fma.f64(double %6122, double %6100, double %6122) #9
  %6124 = tail call double @llvm.fabs.f64(double %6122) #9
  %6125 = fcmp oeq double %6124, 0x7FF0000000000000
  %6126 = select i1 %6125, double %6122, double %6123
  %6127 = tail call double @llvm.trunc.f64(double %5968) #9
  %6128 = fcmp oeq double %6127, %5968
  %6129 = fmul double %5968, 5.000000e-01
  %6130 = tail call double @llvm.trunc.f64(double %6129) #9
  %6131 = fcmp une double %6130, %6129
  %6132 = and i1 %6128, %6131
  %6133 = select i1 %6132, double %sub.i171.i.i, double 1.000000e+00
  %6134 = tail call double @llvm.copysign.f64(double %6126, double %6133) #9
  %6135 = fcmp olt double %sub.i171.i.i, 0.000000e+00
  %6136 = select i1 %6128, double %6134, double 0x7FF8000000000000
  %6137 = select i1 %6135, double %6136, double %6134
  %6138 = fcmp oeq double %5969, 0x7FF0000000000000
  %6139 = fcmp oeq double %sub.i171.i.i, 0.000000e+00
  %6140 = or i1 %6139, %6138
  %6141 = select i1 %6139, double 0.000000e+00, double 0x7FF0000000000000
  %6142 = select i1 %6132, double %sub.i171.i.i, double 0.000000e+00
  %6143 = tail call double @llvm.copysign.f64(double %6141, double %6142) #9
  %6144 = select i1 %6140, double %6143, double %6137
  %6145 = fcmp uno double %sub.i171.i.i, 0.000000e+00
  %6146 = select i1 %6145, double 0x7FF8000000000000, double %6144
  %sub1.i173.i.i = fsub double %add226.i.i, %agg.tmp.sroa.2.0.copyload
  %6147 = fcmp oeq double %sub1.i173.i.i, 1.000000e+00
  %6148 = select i1 %6147, double 1.000000e+00, double 2.000000e+00
  %6149 = tail call double @llvm.fabs.f64(double %sub1.i173.i.i) #9
  %6150 = tail call double @llvm.amdgcn.frexp.mant.f64(double %6149)
  %6151 = fcmp olt double %6150, 0x3FE5555555555555
  %.neg.i.i.i1.i174.i.i = sext i1 %6151 to i32
  %6152 = select i1 %6151, double 2.000000e+00, double 1.000000e+00
  %6153 = fmul double %6150, %6152
  %6154 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %6149)
  %6155 = add i32 %6154, %.neg.i.i.i1.i174.i.i
  %6156 = fadd double %6153, -1.000000e+00
  %6157 = fadd double %6153, 1.000000e+00
  %6158 = fadd double %6157, -1.000000e+00
  %6159 = fsub double %6153, %6158
  %6160 = tail call double @llvm.amdgcn.rcp.f64(double %6157)
  %6161 = fneg double %6157
  %6162 = tail call double @llvm.fma.f64(double %6161, double %6160, double 1.000000e+00)
  %6163 = tail call double @llvm.fma.f64(double %6162, double %6160, double %6160)
  %6164 = tail call double @llvm.fma.f64(double %6161, double %6163, double 1.000000e+00)
  %6165 = tail call double @llvm.fma.f64(double %6164, double %6163, double %6163)
  %6166 = fmul double %6156, %6165
  %6167 = fmul double %6157, %6166
  %6168 = fneg double %6167
  %6169 = tail call double @llvm.fma.f64(double %6166, double %6157, double %6168)
  %6170 = tail call double @llvm.fma.f64(double %6166, double %6159, double %6169)
  %6171 = fadd double %6167, %6170
  %6172 = fsub double %6171, %6167
  %6173 = fsub double %6156, %6171
  %6174 = fsub double %6156, %6173
  %6175 = fsub double %6174, %6171
  %6176 = fsub double %6172, %6170
  %6177 = fadd double %6176, %6175
  %6178 = fadd double %6173, %6177
  %6179 = fmul double %6165, %6178
  %6180 = fadd double %6166, %6179
  %6181 = fsub double %6180, %6166
  %6182 = fsub double %6179, %6181
  %6183 = fmul double %6180, %6180
  %6184 = fneg double %6183
  %6185 = tail call double @llvm.fma.f64(double %6180, double %6180, double %6184)
  %6186 = fmul double %6182, 2.000000e+00
  %6187 = tail call double @llvm.fma.f64(double %6180, double %6186, double %6185)
  %6188 = fadd double %6183, %6187
  %6189 = fsub double %6188, %6183
  %6190 = fsub double %6187, %6189
  %6191 = tail call double @llvm.fma.f64(double %6188, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %6192 = tail call double @llvm.fma.f64(double %6188, double %6191, double 0x3FBE25E43ABE935A)
  %6193 = tail call double @llvm.fma.f64(double %6188, double %6192, double 0x3FC110EF47E6C9C2)
  %6194 = tail call double @llvm.fma.f64(double %6188, double %6193, double 0x3FC3B13BCFA74449)
  %6195 = tail call double @llvm.fma.f64(double %6188, double %6194, double 0x3FC745D171BF3C30)
  %6196 = tail call double @llvm.fma.f64(double %6188, double %6195, double 0x3FCC71C71C7792CE)
  %6197 = tail call double @llvm.fma.f64(double %6188, double %6196, double 0x3FD24924924920DA)
  %6198 = tail call double @llvm.fma.f64(double %6188, double %6197, double 0x3FD999999999999C)
  %6199 = sitofp i32 %6155 to double
  %6200 = fmul double %6199, 0x3FE62E42FEFA39EF
  %6201 = fneg double %6200
  %6202 = tail call double @llvm.fma.f64(double %6199, double 0x3FE62E42FEFA39EF, double %6201)
  %6203 = tail call double @llvm.fma.f64(double %6199, double 0x3C7ABC9E3B39803F, double %6202)
  %6204 = fadd double %6200, %6203
  %6205 = fsub double %6204, %6200
  %6206 = fsub double %6203, %6205
  %6207 = tail call double @llvm.ldexp.f64.i32(double %6180, i32 1)
  %6208 = tail call double @llvm.ldexp.f64.i32(double %6182, i32 1)
  %6209 = fmul double %6180, %6188
  %6210 = fneg double %6209
  %6211 = tail call double @llvm.fma.f64(double %6188, double %6180, double %6210)
  %6212 = tail call double @llvm.fma.f64(double %6188, double %6182, double %6211)
  %6213 = tail call double @llvm.fma.f64(double %6190, double %6180, double %6212)
  %6214 = fadd double %6209, %6213
  %6215 = fsub double %6214, %6209
  %6216 = fsub double %6213, %6215
  %6217 = fmul double %6188, %6198
  %6218 = fneg double %6217
  %6219 = tail call double @llvm.fma.f64(double %6188, double %6198, double %6218)
  %6220 = tail call double @llvm.fma.f64(double %6190, double %6198, double %6219)
  %6221 = fadd double %6217, %6220
  %6222 = fsub double %6221, %6217
  %6223 = fsub double %6220, %6222
  %6224 = fadd double %6221, 0x3FE5555555555555
  %6225 = fadd double %6224, 0xBFE5555555555555
  %6226 = fsub double %6221, %6225
  %6227 = fadd double %6223, 0x3C8543B0D5DF274D
  %6228 = fadd double %6227, %6226
  %6229 = fadd double %6224, %6228
  %6230 = fsub double %6224, %6229
  %6231 = fadd double %6228, %6230
  %6232 = fmul double %6214, %6229
  %6233 = fneg double %6232
  %6234 = tail call double @llvm.fma.f64(double %6214, double %6229, double %6233)
  %6235 = tail call double @llvm.fma.f64(double %6214, double %6231, double %6234)
  %6236 = tail call double @llvm.fma.f64(double %6216, double %6229, double %6235)
  %6237 = fadd double %6232, %6236
  %6238 = fsub double %6237, %6232
  %6239 = fsub double %6236, %6238
  %6240 = fadd double %6207, %6237
  %6241 = fsub double %6240, %6207
  %6242 = fsub double %6237, %6241
  %6243 = fadd double %6208, %6239
  %6244 = fadd double %6243, %6242
  %6245 = fadd double %6240, %6244
  %6246 = fsub double %6245, %6240
  %6247 = fsub double %6244, %6246
  %6248 = fadd double %6204, %6245
  %6249 = fsub double %6248, %6204
  %6250 = fsub double %6248, %6249
  %6251 = fsub double %6204, %6250
  %6252 = fsub double %6245, %6249
  %6253 = fadd double %6252, %6251
  %6254 = fadd double %6206, %6247
  %6255 = fsub double %6254, %6206
  %6256 = fsub double %6254, %6255
  %6257 = fsub double %6206, %6256
  %6258 = fsub double %6247, %6255
  %6259 = fadd double %6258, %6257
  %6260 = fadd double %6254, %6253
  %6261 = fadd double %6248, %6260
  %6262 = fsub double %6261, %6248
  %6263 = fsub double %6260, %6262
  %6264 = fadd double %6259, %6263
  %6265 = fadd double %6261, %6264
  %6266 = fsub double %6265, %6261
  %6267 = fsub double %6264, %6266
  %6268 = fmul double %6148, %6265
  %6269 = fneg double %6268
  %6270 = tail call double @llvm.fma.f64(double %6148, double %6265, double %6269) #9
  %6271 = tail call double @llvm.fma.f64(double %6148, double %6267, double %6270) #9
  %6272 = fadd double %6268, %6271
  %6273 = fsub double %6272, %6268
  %6274 = fsub double %6271, %6273
  %6275 = tail call double @llvm.fabs.f64(double %6268) #9
  %6276 = fcmp oeq double %6275, 0x7FF0000000000000
  %6277 = select i1 %6276, double %6268, double %6272
  %6278 = tail call double @llvm.fabs.f64(double %6277) #9
  %6279 = fcmp oeq double %6278, 0x7FF0000000000000
  %6280 = select i1 %6279, double 0.000000e+00, double %6274
  %6281 = fmul double %6277, 0x3FF71547652B82FE
  %6282 = tail call double @llvm.rint.f64(double %6281)
  %6283 = fneg double %6282
  %6284 = tail call double @llvm.fma.f64(double %6283, double 0x3FE62E42FEFA39EF, double %6277)
  %6285 = tail call double @llvm.fma.f64(double %6283, double 0x3C7ABC9E3B39803F, double %6284)
  %6286 = tail call double @llvm.fma.f64(double %6285, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %6287 = tail call double @llvm.fma.f64(double %6285, double %6286, double 0x3EC71DEE623FDE64)
  %6288 = tail call double @llvm.fma.f64(double %6285, double %6287, double 0x3EFA01997C89E6B0)
  %6289 = tail call double @llvm.fma.f64(double %6285, double %6288, double 0x3F2A01A014761F6E)
  %6290 = tail call double @llvm.fma.f64(double %6285, double %6289, double 0x3F56C16C1852B7B0)
  %6291 = tail call double @llvm.fma.f64(double %6285, double %6290, double 0x3F81111111122322)
  %6292 = tail call double @llvm.fma.f64(double %6285, double %6291, double 0x3FA55555555502A1)
  %6293 = tail call double @llvm.fma.f64(double %6285, double %6292, double 0x3FC5555555555511)
  %6294 = tail call double @llvm.fma.f64(double %6285, double %6293, double 0x3FE000000000000B)
  %6295 = tail call double @llvm.fma.f64(double %6285, double %6294, double 1.000000e+00)
  %6296 = tail call double @llvm.fma.f64(double %6285, double %6295, double 1.000000e+00)
  %6297 = fptosi double %6282 to i32
  %6298 = tail call double @llvm.ldexp.f64.i32(double %6296, i32 %6297)
  %6299 = fcmp ogt double %6277, 1.024000e+03
  %6300 = select i1 %6299, double 0x7FF0000000000000, double %6298
  %6301 = fcmp olt double %6277, -1.075000e+03
  %6302 = select i1 %6301, double 0.000000e+00, double %6300
  %6303 = tail call double @llvm.fma.f64(double %6302, double %6280, double %6302) #9
  %6304 = tail call double @llvm.fabs.f64(double %6302) #9
  %6305 = fcmp oeq double %6304, 0x7FF0000000000000
  %6306 = select i1 %6305, double %6302, double %6303
  %6307 = tail call double @llvm.trunc.f64(double %6148) #9
  %6308 = fcmp oeq double %6307, %6148
  %6309 = fmul double %6148, 5.000000e-01
  %6310 = tail call double @llvm.trunc.f64(double %6309) #9
  %6311 = fcmp une double %6310, %6309
  %6312 = and i1 %6308, %6311
  %6313 = select i1 %6312, double %sub1.i173.i.i, double 1.000000e+00
  %6314 = tail call double @llvm.copysign.f64(double %6306, double %6313) #9
  %6315 = fcmp olt double %sub1.i173.i.i, 0.000000e+00
  %6316 = select i1 %6308, double %6314, double 0x7FF8000000000000
  %6317 = select i1 %6315, double %6316, double %6314
  %6318 = fcmp oeq double %6149, 0x7FF0000000000000
  %6319 = fcmp oeq double %sub1.i173.i.i, 0.000000e+00
  %6320 = or i1 %6319, %6318
  %6321 = select i1 %6319, double 0.000000e+00, double 0x7FF0000000000000
  %6322 = select i1 %6312, double %sub1.i173.i.i, double 0.000000e+00
  %6323 = tail call double @llvm.copysign.f64(double %6321, double %6322) #9
  %6324 = select i1 %6320, double %6323, double %6317
  %6325 = fcmp uno double %sub1.i173.i.i, 0.000000e+00
  %6326 = select i1 %6325, double 0x7FF8000000000000, double %6324
  %add.i175.i.i = fadd double %6146, %6326
  %6327 = fcmp oeq double %sub214.i.i, 1.000000e+00
  %6328 = select i1 %6327, double 1.000000e+00, double 2.000000e+00
  %6329 = tail call double @llvm.fabs.f64(double %sub214.i.i) #9
  %6330 = tail call double @llvm.amdgcn.frexp.mant.f64(double %6329)
  %6331 = fcmp olt double %6330, 0x3FE5555555555555
  %.neg.i.i.i2.i177.i.i = sext i1 %6331 to i32
  %6332 = select i1 %6331, double 2.000000e+00, double 1.000000e+00
  %6333 = fmul double %6330, %6332
  %6334 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %6329)
  %6335 = add i32 %6334, %.neg.i.i.i2.i177.i.i
  %6336 = fadd double %6333, -1.000000e+00
  %6337 = fadd double %6333, 1.000000e+00
  %6338 = fadd double %6337, -1.000000e+00
  %6339 = fsub double %6333, %6338
  %6340 = tail call double @llvm.amdgcn.rcp.f64(double %6337)
  %6341 = fneg double %6337
  %6342 = tail call double @llvm.fma.f64(double %6341, double %6340, double 1.000000e+00)
  %6343 = tail call double @llvm.fma.f64(double %6342, double %6340, double %6340)
  %6344 = tail call double @llvm.fma.f64(double %6341, double %6343, double 1.000000e+00)
  %6345 = tail call double @llvm.fma.f64(double %6344, double %6343, double %6343)
  %6346 = fmul double %6336, %6345
  %6347 = fmul double %6337, %6346
  %6348 = fneg double %6347
  %6349 = tail call double @llvm.fma.f64(double %6346, double %6337, double %6348)
  %6350 = tail call double @llvm.fma.f64(double %6346, double %6339, double %6349)
  %6351 = fadd double %6347, %6350
  %6352 = fsub double %6351, %6347
  %6353 = fsub double %6336, %6351
  %6354 = fsub double %6336, %6353
  %6355 = fsub double %6354, %6351
  %6356 = fsub double %6352, %6350
  %6357 = fadd double %6356, %6355
  %6358 = fadd double %6353, %6357
  %6359 = fmul double %6345, %6358
  %6360 = fadd double %6346, %6359
  %6361 = fsub double %6360, %6346
  %6362 = fsub double %6359, %6361
  %6363 = fmul double %6360, %6360
  %6364 = fneg double %6363
  %6365 = tail call double @llvm.fma.f64(double %6360, double %6360, double %6364)
  %6366 = fmul double %6362, 2.000000e+00
  %6367 = tail call double @llvm.fma.f64(double %6360, double %6366, double %6365)
  %6368 = fadd double %6363, %6367
  %6369 = fsub double %6368, %6363
  %6370 = fsub double %6367, %6369
  %6371 = tail call double @llvm.fma.f64(double %6368, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %6372 = tail call double @llvm.fma.f64(double %6368, double %6371, double 0x3FBE25E43ABE935A)
  %6373 = tail call double @llvm.fma.f64(double %6368, double %6372, double 0x3FC110EF47E6C9C2)
  %6374 = tail call double @llvm.fma.f64(double %6368, double %6373, double 0x3FC3B13BCFA74449)
  %6375 = tail call double @llvm.fma.f64(double %6368, double %6374, double 0x3FC745D171BF3C30)
  %6376 = tail call double @llvm.fma.f64(double %6368, double %6375, double 0x3FCC71C71C7792CE)
  %6377 = tail call double @llvm.fma.f64(double %6368, double %6376, double 0x3FD24924924920DA)
  %6378 = tail call double @llvm.fma.f64(double %6368, double %6377, double 0x3FD999999999999C)
  %6379 = sitofp i32 %6335 to double
  %6380 = fmul double %6379, 0x3FE62E42FEFA39EF
  %6381 = fneg double %6380
  %6382 = tail call double @llvm.fma.f64(double %6379, double 0x3FE62E42FEFA39EF, double %6381)
  %6383 = tail call double @llvm.fma.f64(double %6379, double 0x3C7ABC9E3B39803F, double %6382)
  %6384 = fadd double %6380, %6383
  %6385 = fsub double %6384, %6380
  %6386 = fsub double %6383, %6385
  %6387 = tail call double @llvm.ldexp.f64.i32(double %6360, i32 1)
  %6388 = tail call double @llvm.ldexp.f64.i32(double %6362, i32 1)
  %6389 = fmul double %6360, %6368
  %6390 = fneg double %6389
  %6391 = tail call double @llvm.fma.f64(double %6368, double %6360, double %6390)
  %6392 = tail call double @llvm.fma.f64(double %6368, double %6362, double %6391)
  %6393 = tail call double @llvm.fma.f64(double %6370, double %6360, double %6392)
  %6394 = fadd double %6389, %6393
  %6395 = fsub double %6394, %6389
  %6396 = fsub double %6393, %6395
  %6397 = fmul double %6368, %6378
  %6398 = fneg double %6397
  %6399 = tail call double @llvm.fma.f64(double %6368, double %6378, double %6398)
  %6400 = tail call double @llvm.fma.f64(double %6370, double %6378, double %6399)
  %6401 = fadd double %6397, %6400
  %6402 = fsub double %6401, %6397
  %6403 = fsub double %6400, %6402
  %6404 = fadd double %6401, 0x3FE5555555555555
  %6405 = fadd double %6404, 0xBFE5555555555555
  %6406 = fsub double %6401, %6405
  %6407 = fadd double %6403, 0x3C8543B0D5DF274D
  %6408 = fadd double %6407, %6406
  %6409 = fadd double %6404, %6408
  %6410 = fsub double %6404, %6409
  %6411 = fadd double %6408, %6410
  %6412 = fmul double %6394, %6409
  %6413 = fneg double %6412
  %6414 = tail call double @llvm.fma.f64(double %6394, double %6409, double %6413)
  %6415 = tail call double @llvm.fma.f64(double %6394, double %6411, double %6414)
  %6416 = tail call double @llvm.fma.f64(double %6396, double %6409, double %6415)
  %6417 = fadd double %6412, %6416
  %6418 = fsub double %6417, %6412
  %6419 = fsub double %6416, %6418
  %6420 = fadd double %6387, %6417
  %6421 = fsub double %6420, %6387
  %6422 = fsub double %6417, %6421
  %6423 = fadd double %6388, %6419
  %6424 = fadd double %6423, %6422
  %6425 = fadd double %6420, %6424
  %6426 = fsub double %6425, %6420
  %6427 = fsub double %6424, %6426
  %6428 = fadd double %6384, %6425
  %6429 = fsub double %6428, %6384
  %6430 = fsub double %6428, %6429
  %6431 = fsub double %6384, %6430
  %6432 = fsub double %6425, %6429
  %6433 = fadd double %6432, %6431
  %6434 = fadd double %6386, %6427
  %6435 = fsub double %6434, %6386
  %6436 = fsub double %6434, %6435
  %6437 = fsub double %6386, %6436
  %6438 = fsub double %6427, %6435
  %6439 = fadd double %6438, %6437
  %6440 = fadd double %6434, %6433
  %6441 = fadd double %6428, %6440
  %6442 = fsub double %6441, %6428
  %6443 = fsub double %6440, %6442
  %6444 = fadd double %6439, %6443
  %6445 = fadd double %6441, %6444
  %6446 = fsub double %6445, %6441
  %6447 = fsub double %6444, %6446
  %6448 = fmul double %6328, %6445
  %6449 = fneg double %6448
  %6450 = tail call double @llvm.fma.f64(double %6328, double %6445, double %6449) #9
  %6451 = tail call double @llvm.fma.f64(double %6328, double %6447, double %6450) #9
  %6452 = fadd double %6448, %6451
  %6453 = fsub double %6452, %6448
  %6454 = fsub double %6451, %6453
  %6455 = tail call double @llvm.fabs.f64(double %6448) #9
  %6456 = fcmp oeq double %6455, 0x7FF0000000000000
  %6457 = select i1 %6456, double %6448, double %6452
  %6458 = tail call double @llvm.fabs.f64(double %6457) #9
  %6459 = fcmp oeq double %6458, 0x7FF0000000000000
  %6460 = select i1 %6459, double 0.000000e+00, double %6454
  %6461 = fmul double %6457, 0x3FF71547652B82FE
  %6462 = tail call double @llvm.rint.f64(double %6461)
  %6463 = fneg double %6462
  %6464 = tail call double @llvm.fma.f64(double %6463, double 0x3FE62E42FEFA39EF, double %6457)
  %6465 = tail call double @llvm.fma.f64(double %6463, double 0x3C7ABC9E3B39803F, double %6464)
  %6466 = tail call double @llvm.fma.f64(double %6465, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %6467 = tail call double @llvm.fma.f64(double %6465, double %6466, double 0x3EC71DEE623FDE64)
  %6468 = tail call double @llvm.fma.f64(double %6465, double %6467, double 0x3EFA01997C89E6B0)
  %6469 = tail call double @llvm.fma.f64(double %6465, double %6468, double 0x3F2A01A014761F6E)
  %6470 = tail call double @llvm.fma.f64(double %6465, double %6469, double 0x3F56C16C1852B7B0)
  %6471 = tail call double @llvm.fma.f64(double %6465, double %6470, double 0x3F81111111122322)
  %6472 = tail call double @llvm.fma.f64(double %6465, double %6471, double 0x3FA55555555502A1)
  %6473 = tail call double @llvm.fma.f64(double %6465, double %6472, double 0x3FC5555555555511)
  %6474 = tail call double @llvm.fma.f64(double %6465, double %6473, double 0x3FE000000000000B)
  %6475 = tail call double @llvm.fma.f64(double %6465, double %6474, double 1.000000e+00)
  %6476 = tail call double @llvm.fma.f64(double %6465, double %6475, double 1.000000e+00)
  %6477 = fptosi double %6462 to i32
  %6478 = tail call double @llvm.ldexp.f64.i32(double %6476, i32 %6477)
  %6479 = fcmp ogt double %6457, 1.024000e+03
  %6480 = select i1 %6479, double 0x7FF0000000000000, double %6478
  %6481 = fcmp olt double %6457, -1.075000e+03
  %6482 = select i1 %6481, double 0.000000e+00, double %6480
  %6483 = tail call double @llvm.fma.f64(double %6482, double %6460, double %6482) #9
  %6484 = tail call double @llvm.fabs.f64(double %6482) #9
  %6485 = fcmp oeq double %6484, 0x7FF0000000000000
  %6486 = select i1 %6485, double %6482, double %6483
  %6487 = tail call double @llvm.trunc.f64(double %6328) #9
  %6488 = fcmp oeq double %6487, %6328
  %6489 = fmul double %6328, 5.000000e-01
  %6490 = tail call double @llvm.trunc.f64(double %6489) #9
  %6491 = fcmp une double %6490, %6489
  %6492 = and i1 %6488, %6491
  %6493 = select i1 %6492, double %sub214.i.i, double 1.000000e+00
  %6494 = tail call double @llvm.copysign.f64(double %6486, double %6493) #9
  %6495 = fcmp olt double %sub214.i.i, 0.000000e+00
  %6496 = select i1 %6488, double %6494, double 0x7FF8000000000000
  %6497 = select i1 %6495, double %6496, double %6494
  %6498 = fcmp oeq double %6329, 0x7FF0000000000000
  %6499 = fcmp oeq double %sub214.i.i, 0.000000e+00
  %6500 = or i1 %6499, %6498
  %6501 = select i1 %6499, double 0.000000e+00, double 0x7FF0000000000000
  %6502 = select i1 %6492, double %sub214.i.i, double 0.000000e+00
  %6503 = tail call double @llvm.copysign.f64(double %6501, double %6502) #9
  %6504 = select i1 %6500, double %6503, double %6497
  %6505 = fcmp uno double %sub214.i.i, 0.000000e+00
  %6506 = select i1 %6505, double 0x7FF8000000000000, double %6504
  %add5.i178.i.i = fadd double %6506, %add.i175.i.i
  %cmp.i179.i.i = fcmp olt double %add5.i178.i.i, %min_dist.4.i49.i
  %min_dist.11.i.i = select i1 %cmp.i179.i.i, double %add5.i178.i.i, double %min_dist.4.i49.i
  br label %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit

sw.epilog.i:                                      ; preds = %if.then
  unreachable

_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit: ; preds = %if.then234.i.i, %if.then212.i.i, %lor.lhs.false208.i.i, %if.then126.i.i, %if.then108.i.i, %lor.lhs.false104.i.i, %if.then29.i.i, %lor.lhs.false25.i.i
  %retval.0.in.i = phi double [ %min_dist.0.i.i, %lor.lhs.false25.i.i ], [ %min_dist.2.i12.i, %if.then108.i.i ], [ %min_dist.2.i12.i, %lor.lhs.false104.i.i ], [ %min_dist.4.i49.i, %if.then212.i.i ], [ %min_dist.4.i49.i, %lor.lhs.false208.i.i ], [ %min_dist.3.i.i, %if.then29.i.i ], [ %min_dist.7.i.i, %if.then126.i.i ], [ %min_dist.11.i.i, %if.then234.i.i ]
  %retval.0.i = fcmp olt double %retval.0.in.i, 0x7FEFFFFFFFFFFFFF
  br i1 %retval.0.i, label %if.end11, label %cleanup219

if.end11:                                         ; preds = %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit, %_ZNK6openmc4Mesh11get_indicesENS_8PositionEPiPb.internalized.exit105
  br i1 %cmp2.i, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body, %if.end11
  %n_cross.0.lcssa = phi i32 [ 0, %if.end11 ], [ %add, %for.body ]
  %cmp17 = icmp eq i32 %n_cross.0.lcssa, 0
  br i1 %cmp17, label %cleanup219, label %if.end19

for.body:                                         ; preds = %for.body, %if.end11
  %n_cross.0343 = phi i32 [ %add, %for.body ], [ 0, %if.end11 ]
  %i.0342 = phi i32 [ %inc, %for.body ], [ 0, %if.end11 ]
  %arrayidx.i.i110 = getelementptr inbounds nuw [3 x i32], ptr addrspace(5) %ijk1, i32 0, i32 %i.0342
  %6507 = load i32, ptr addrspace(5) %arrayidx.i.i110, align 4, !tbaa !31
  %arrayidx.i.i111 = getelementptr inbounds nuw [3 x i32], ptr addrspace(5) %ijk0, i32 0, i32 %i.0342
  %6508 = load i32, ptr addrspace(5) %arrayidx.i.i111, align 4, !tbaa !31
  %sub = sub nsw i32 %6507, %6508
  %6509 = tail call noundef range(i32 0, -2147483648) i32 @llvm.abs.i32(i32 %sub, i1 true) #9, !range !47
  %add = add nuw nsw i32 %6509, %n_cross.0343
  %inc = add nuw nsw i32 %i.0342, 1
  %exitcond.not = icmp eq i32 %inc, %0
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !48

if.end19:                                         ; preds = %for.cond.cleanup
  call void @llvm.lifetime.start.p5(i64 8, ptr addrspace(5) %xyz_cross.sroa.0)
  call void @llvm.lifetime.start.p5(i64 8, ptr addrspace(5) %xyz_cross.sroa.13)
  call void @llvm.lifetime.start.p5(i64 8, ptr addrspace(5) %xyz_cross.sroa.19)
  store double 0.000000e+00, ptr addrspace(5) %xyz_cross.sroa.0, align 8, !tbaa !35
  store double 0.000000e+00, ptr addrspace(5) %xyz_cross.sroa.13, align 8, !tbaa !37
  store double 0.000000e+00, ptr addrspace(5) %xyz_cross.sroa.19, align 8, !tbaa !38
  br i1 %cmp2.i, label %for.body24.lr.ph, label %for.cond39.preheader

for.body24.lr.ph:                                 ; preds = %if.end19
  %6510 = getelementptr inbounds nuw i8, ptr %this, i64 8
  %6511 = getelementptr inbounds nuw i8, ptr %this, i64 88
  br label %for.body24

for.cond39.preheader:                             ; preds = %for.inc35, %if.end19
  %shape_ = getelementptr inbounds nuw i8, ptr %this, i64 56
  %arrayidx8.i270 = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 8
  %arrayidx13.i274 = getelementptr inbounds nuw i8, ptr addrspace(5) %ijk0, i32 4
  %6512 = getelementptr inbounds nuw i8, ptr %match, i64 1504
  %mul157 = shl nsw i32 %0, 2
  %width_164 = getelementptr inbounds nuw i8, ptr %this, i64 88
  %b1.i = addrspacecast ptr addrspace(5) %b.i to ptr
  %6513 = getelementptr inbounds nuw i8, ptr addrspace(5) %b.i, i32 8
  %6514 = getelementptr inbounds nuw i8, ptr addrspace(5) %b.i, i32 16
  %umax = call i32 @llvm.umax.i32(i32 %n_cross.0.lcssa, i32 1)
  br label %for.body42

for.body24:                                       ; preds = %for.inc35, %for.body24.lr.ph
  %i20.0345 = phi i32 [ 0, %for.body24.lr.ph ], [ %inc36, %for.inc35 ]
  switch i32 %i20.0345, label %sw.default.i [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit
    i32 1, label %sw.bb2.i
    i32 2, label %sw.bb3.i112
  ]

sw.bb2.i:                                         ; preds = %for.body24
  br label %_ZN6openmc8PositionixEi.internalized.exit

sw.bb3.i112:                                      ; preds = %for.body24
  br label %_ZN6openmc8PositionixEi.internalized.exit

sw.default.i:                                     ; preds = %for.body24
  %call.i = tail call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit

_ZN6openmc8PositionixEi.internalized.exit:        ; preds = %sw.default.i, %sw.bb3.i112, %sw.bb2.i, %for.body24
  %retval.0.i114.sroa.speculated = phi double [ %u.sroa.0.0.copyload, %sw.default.i ], [ %u.sroa.17.0.copyload, %sw.bb3.i112 ], [ %u.sroa.12.0.copyload, %sw.bb2.i ], [ %u.sroa.0.0.copyload, %for.body24 ]
  %cmp26 = fcmp ogt double %retval.0.i114.sroa.speculated, 0.000000e+00
  %this.val71 = load ptr, ptr %6510, align 8, !tbaa !29
  %this.val72 = load ptr, ptr %6511, align 8, !tbaa !29
  %conv.i = zext nneg i32 %i20.0345 to i64
  %arrayidx.i.i116 = getelementptr inbounds nuw double, ptr %this.val71, i64 %conv.i
  %6515 = load double, ptr %arrayidx.i.i116, align 8, !tbaa !30
  %arrayidx.i117 = getelementptr inbounds nuw i32, ptr addrspace(5) %ijk0, i32 %i20.0345
  %6516 = load i32, ptr addrspace(5) %arrayidx.i117, align 4, !tbaa !31
  br i1 %cmp26, label %if.then27, label %if.else

if.then27:                                        ; preds = %_ZN6openmc8PositionixEi.internalized.exit
  %conv2.i = sitofp i32 %6516 to double
  %arrayidx.i1.i = getelementptr inbounds nuw double, ptr %this.val72, i64 %conv.i
  %6517 = load double, ptr %arrayidx.i1.i, align 8, !tbaa !30
  %6518 = tail call noundef double @llvm.fmuladd.f64(double %conv2.i, double %6517, double %6515) #9
  switch i32 %i20.0345, label %sw.default.i123 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit125
    i32 1, label %sw.bb2.i121
    i32 2, label %sw.bb3.i118
  ]

sw.bb2.i121:                                      ; preds = %if.then27
  br label %_ZN6openmc8PositionixEi.internalized.exit125

sw.bb3.i118:                                      ; preds = %if.then27
  br label %_ZN6openmc8PositionixEi.internalized.exit125

sw.default.i123:                                  ; preds = %if.then27
  %call.i124 = tail call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit125

_ZN6openmc8PositionixEi.internalized.exit125:     ; preds = %sw.default.i123, %sw.bb3.i118, %sw.bb2.i121, %if.then27
  %retval.0.i120 = phi ptr addrspace(5) [ %xyz_cross.sroa.0, %sw.default.i123 ], [ %xyz_cross.sroa.19, %sw.bb3.i118 ], [ %xyz_cross.sroa.13, %sw.bb2.i121 ], [ %xyz_cross.sroa.0, %if.then27 ]
  store double %6518, ptr addrspace(5) %retval.0.i120, align 8, !tbaa !30
  br label %for.inc35

if.else:                                          ; preds = %_ZN6openmc8PositionixEi.internalized.exit
  %sub.i = add nsw i32 %6516, -1
  %conv2.i129 = sitofp i32 %sub.i to double
  %arrayidx.i1.i130 = getelementptr inbounds nuw double, ptr %this.val72, i64 %conv.i
  %6519 = load double, ptr %arrayidx.i1.i130, align 8, !tbaa !30
  %6520 = tail call noundef double @llvm.fmuladd.f64(double %conv2.i129, double %6519, double %6515) #9
  switch i32 %i20.0345, label %sw.default.i136 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit138
    i32 1, label %sw.bb2.i134
    i32 2, label %sw.bb3.i131
  ]

sw.bb2.i134:                                      ; preds = %if.else
  br label %_ZN6openmc8PositionixEi.internalized.exit138

sw.bb3.i131:                                      ; preds = %if.else
  br label %_ZN6openmc8PositionixEi.internalized.exit138

sw.default.i136:                                  ; preds = %if.else
  %call.i137 = tail call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit138

_ZN6openmc8PositionixEi.internalized.exit138:     ; preds = %sw.default.i136, %sw.bb3.i131, %sw.bb2.i134, %if.else
  %retval.0.i133 = phi ptr addrspace(5) [ %xyz_cross.sroa.0, %sw.default.i136 ], [ %xyz_cross.sroa.19, %sw.bb3.i131 ], [ %xyz_cross.sroa.13, %sw.bb2.i134 ], [ %xyz_cross.sroa.0, %if.else ]
  store double %6520, ptr addrspace(5) %retval.0.i133, align 8, !tbaa !30
  br label %for.inc35

for.inc35:                                        ; preds = %_ZN6openmc8PositionixEi.internalized.exit138, %_ZN6openmc8PositionixEi.internalized.exit125
  %inc36 = add nuw nsw i32 %i20.0345, 1
  %exitcond365.not = icmp eq i32 %inc36, %0
  br i1 %exitcond365.not, label %for.cond39.preheader, label %for.body24, !llvm.loop !49

for.cond.cleanup41:                               ; preds = %for.cond.cleanup68
  call void @llvm.lifetime.end.p5(i64 8, ptr addrspace(5) %xyz_cross.sroa.0)
  call void @llvm.lifetime.end.p5(i64 8, ptr addrspace(5) %xyz_cross.sroa.13)
  call void @llvm.lifetime.end.p5(i64 8, ptr addrspace(5) %xyz_cross.sroa.19)
  br label %cleanup219

for.body42:                                       ; preds = %for.cond.cleanup68, %for.cond39.preheader
  %j.0363 = phi i32 [ 0, %for.cond39.preheader ], [ %inc215, %for.cond.cleanup68 ]
  call void @llvm.lifetime.start.p5(i64 8, ptr addrspace(5) %d.sroa.0)
  call void @llvm.lifetime.start.p5(i64 8, ptr addrspace(5) %d.sroa.11)
  call void @llvm.lifetime.start.p5(i64 8, ptr addrspace(5) %d.sroa.16)
  store double 0x7FEFFFFFFFFFFFFF, ptr addrspace(5) %d.sroa.0, align 8, !tbaa !35
  store double 0x7FEFFFFFFFFFFFFF, ptr addrspace(5) %d.sroa.11, align 8, !tbaa !37
  store double 0x7FEFFFFFFFFFFFFF, ptr addrspace(5) %d.sroa.16, align 8, !tbaa !38
  br i1 %cmp2.i, label %for.body47, label %for.cond66.preheader

for.cond66.preheader:                             ; preds = %_ZN6openmc8PositionixEi.internalized.exit196, %for.body42
  %distance.0.lcssa = phi double [ 0x7FEFFFFFFFFFFFFF, %for.body42 ], [ %.sroa.speculated, %_ZN6openmc8PositionixEi.internalized.exit196 ]
  br i1 %cmp2.i, label %for.body69, label %for.cond.cleanup68

for.body47:                                       ; preds = %_ZN6openmc8PositionixEi.internalized.exit196, %for.body42
  %i43.0348 = phi i32 [ %inc62, %_ZN6openmc8PositionixEi.internalized.exit196 ], [ 0, %for.body42 ]
  %distance.0347 = phi double [ %.sroa.speculated, %_ZN6openmc8PositionixEi.internalized.exit196 ], [ 0x7FEFFFFFFFFFFFFF, %for.body42 ]
  switch i32 %i43.0348, label %sw.default.i146 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit148
    i32 1, label %sw.bb2.i144
    i32 2, label %sw.bb3.i141
  ]

sw.bb2.i144:                                      ; preds = %for.body47
  br label %_ZN6openmc8PositionixEi.internalized.exit148

sw.bb3.i141:                                      ; preds = %for.body47
  br label %_ZN6openmc8PositionixEi.internalized.exit148

sw.default.i146:                                  ; preds = %for.body47
  %call.i147 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit148

_ZN6openmc8PositionixEi.internalized.exit148:     ; preds = %sw.default.i146, %sw.bb3.i141, %sw.bb2.i144, %for.body47
  %retval.0.i143.sroa.speculated = phi double [ %u.sroa.0.0.copyload, %sw.default.i146 ], [ %u.sroa.17.0.copyload, %sw.bb3.i141 ], [ %u.sroa.12.0.copyload, %sw.bb2.i144 ], [ %u.sroa.0.0.copyload, %for.body47 ]
  %cmp49 = fcmp oeq double %retval.0.i143.sroa.speculated, 0.000000e+00
  br i1 %cmp49, label %if.then50, label %if.else52

if.then50:                                        ; preds = %_ZN6openmc8PositionixEi.internalized.exit148
  switch i32 %i43.0348, label %sw.default.i154 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit156
    i32 1, label %sw.bb2.i152
    i32 2, label %sw.bb3.i149
  ]

sw.bb2.i152:                                      ; preds = %if.then50
  br label %_ZN6openmc8PositionixEi.internalized.exit156

sw.bb3.i149:                                      ; preds = %if.then50
  br label %_ZN6openmc8PositionixEi.internalized.exit156

sw.default.i154:                                  ; preds = %if.then50
  %call.i155 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit156

_ZN6openmc8PositionixEi.internalized.exit156:     ; preds = %sw.default.i154, %sw.bb3.i149, %sw.bb2.i152, %if.then50
  %retval.0.i151 = phi ptr addrspace(5) [ %d.sroa.0, %sw.default.i154 ], [ %d.sroa.16, %sw.bb3.i149 ], [ %d.sroa.11, %sw.bb2.i152 ], [ %d.sroa.0, %if.then50 ]
  store double 0x7FEFFFFFFFFFFFFF, ptr addrspace(5) %retval.0.i151, align 8, !tbaa !30
  br label %if.end58

if.else52:                                        ; preds = %_ZN6openmc8PositionixEi.internalized.exit148
  switch i32 %i43.0348, label %sw.default.i162 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit164
    i32 1, label %sw.bb2.i160
    i32 2, label %sw.bb3.i157
  ]

sw.bb2.i160:                                      ; preds = %if.else52
  br label %_ZN6openmc8PositionixEi.internalized.exit164

sw.bb3.i157:                                      ; preds = %if.else52
  br label %_ZN6openmc8PositionixEi.internalized.exit164

sw.default.i162:                                  ; preds = %if.else52
  %call.i163 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit164

_ZN6openmc8PositionixEi.internalized.exit164:     ; preds = %sw.default.i162, %sw.bb3.i157, %sw.bb2.i160, %if.else52
  %retval.0.i159 = phi ptr addrspace(5) [ %xyz_cross.sroa.0, %sw.default.i162 ], [ %xyz_cross.sroa.19, %sw.bb3.i157 ], [ %xyz_cross.sroa.13, %sw.bb2.i160 ], [ %xyz_cross.sroa.0, %if.else52 ]
  %6521 = load double, ptr addrspace(5) %retval.0.i159, align 8, !tbaa !30
  switch i32 %i43.0348, label %sw.default.i170 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit172
    i32 1, label %sw.bb2.i168
    i32 2, label %sw.bb3.i165
  ]

sw.bb2.i168:                                      ; preds = %_ZN6openmc8PositionixEi.internalized.exit164
  br label %_ZN6openmc8PositionixEi.internalized.exit172

sw.bb3.i165:                                      ; preds = %_ZN6openmc8PositionixEi.internalized.exit164
  br label %_ZN6openmc8PositionixEi.internalized.exit172

sw.default.i170:                                  ; preds = %_ZN6openmc8PositionixEi.internalized.exit164
  %call.i171 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit172

_ZN6openmc8PositionixEi.internalized.exit172:     ; preds = %sw.default.i170, %sw.bb3.i165, %sw.bb2.i168, %_ZN6openmc8PositionixEi.internalized.exit164
  %retval.0.i167 = phi ptr addrspace(5) [ %r0, %sw.default.i170 ], [ %agg.tmp.sroa.3.0.r0.ascast.sroa_idx, %sw.bb3.i165 ], [ %agg.tmp.sroa.2.0.r0.ascast.sroa_idx, %sw.bb2.i168 ], [ %r0, %_ZN6openmc8PositionixEi.internalized.exit164 ]
  %6522 = load double, ptr addrspace(5) %retval.0.i167, align 8, !tbaa !30
  %sub55 = fsub double %6521, %6522
  switch i32 %i43.0348, label %sw.default.i178 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit180
    i32 1, label %sw.bb2.i176
    i32 2, label %sw.bb3.i173
  ]

sw.bb2.i176:                                      ; preds = %_ZN6openmc8PositionixEi.internalized.exit172
  br label %_ZN6openmc8PositionixEi.internalized.exit180

sw.bb3.i173:                                      ; preds = %_ZN6openmc8PositionixEi.internalized.exit172
  br label %_ZN6openmc8PositionixEi.internalized.exit180

sw.default.i178:                                  ; preds = %_ZN6openmc8PositionixEi.internalized.exit172
  %call.i179 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit180

_ZN6openmc8PositionixEi.internalized.exit180:     ; preds = %sw.default.i178, %sw.bb3.i173, %sw.bb2.i176, %_ZN6openmc8PositionixEi.internalized.exit172
  %retval.0.i175.sroa.speculated = phi double [ %u.sroa.0.0.copyload, %sw.default.i178 ], [ %u.sroa.17.0.copyload, %sw.bb3.i173 ], [ %u.sroa.12.0.copyload, %sw.bb2.i176 ], [ %u.sroa.0.0.copyload, %_ZN6openmc8PositionixEi.internalized.exit172 ]
  %div = fdiv double %sub55, %retval.0.i175.sroa.speculated
  switch i32 %i43.0348, label %sw.default.i186 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit188
    i32 1, label %sw.bb2.i184
    i32 2, label %sw.bb3.i181
  ]

sw.bb2.i184:                                      ; preds = %_ZN6openmc8PositionixEi.internalized.exit180
  br label %_ZN6openmc8PositionixEi.internalized.exit188

sw.bb3.i181:                                      ; preds = %_ZN6openmc8PositionixEi.internalized.exit180
  br label %_ZN6openmc8PositionixEi.internalized.exit188

sw.default.i186:                                  ; preds = %_ZN6openmc8PositionixEi.internalized.exit180
  %call.i187 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit188

_ZN6openmc8PositionixEi.internalized.exit188:     ; preds = %sw.default.i186, %sw.bb3.i181, %sw.bb2.i184, %_ZN6openmc8PositionixEi.internalized.exit180
  %retval.0.i183 = phi ptr addrspace(5) [ %d.sroa.0, %sw.default.i186 ], [ %d.sroa.16, %sw.bb3.i181 ], [ %d.sroa.11, %sw.bb2.i184 ], [ %d.sroa.0, %_ZN6openmc8PositionixEi.internalized.exit180 ]
  store double %div, ptr addrspace(5) %retval.0.i183, align 8, !tbaa !30
  br label %if.end58

if.end58:                                         ; preds = %_ZN6openmc8PositionixEi.internalized.exit188, %_ZN6openmc8PositionixEi.internalized.exit156
  switch i32 %i43.0348, label %sw.default.i194 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit196
    i32 1, label %sw.bb2.i192
    i32 2, label %sw.bb3.i189
  ]

sw.bb2.i192:                                      ; preds = %if.end58
  br label %_ZN6openmc8PositionixEi.internalized.exit196

sw.bb3.i189:                                      ; preds = %if.end58
  br label %_ZN6openmc8PositionixEi.internalized.exit196

sw.default.i194:                                  ; preds = %if.end58
  %call.i195 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit196

_ZN6openmc8PositionixEi.internalized.exit196:     ; preds = %sw.default.i194, %sw.bb3.i189, %sw.bb2.i192, %if.end58
  %retval.0.i191 = phi ptr addrspace(5) [ %d.sroa.0, %sw.default.i194 ], [ %d.sroa.16, %sw.bb3.i189 ], [ %d.sroa.11, %sw.bb2.i192 ], [ %d.sroa.0, %if.end58 ]
  %6523 = load double, ptr addrspace(5) %retval.0.i191, align 8, !tbaa !30
  %cmp.i197 = fcmp olt double %6523, %distance.0347
  %.sroa.speculated = select i1 %cmp.i197, double %6523, double %distance.0347
  %inc62 = add nuw nsw i32 %i43.0348, 1
  %exitcond366.not = icmp eq i32 %inc62, %0
  br i1 %exitcond366.not, label %for.cond66.preheader, label %for.body47, !llvm.loop !50

for.cond.cleanup68:                               ; preds = %for.inc206, %for.cond66.preheader
  call void @llvm.lifetime.start.p5(i64 24, ptr addrspace(5) %b.i)
  store double %u.sroa.0.0.copyload, ptr addrspace(5) %b.i, align 8
  store double %u.sroa.12.0.copyload, ptr addrspace(5) %6513, align 8
  store double %u.sroa.17.0.copyload, ptr addrspace(5) %6514, align 8
  %call.i198 = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionmLEd(ptr noundef nonnull align 8 dereferenceable(24) %b1.i, double noundef %distance.0.lcssa) #8
  %retval.sroa.0.0.copyload.i = load double, ptr %call.i198, align 8, !tbaa !30
  %retval.sroa.2.0.call.sroa_idx.i = getelementptr inbounds nuw i8, ptr %call.i198, i64 8
  %retval.sroa.2.0.copyload.i = load double, ptr %retval.sroa.2.0.call.sroa_idx.i, align 8, !tbaa !30
  %retval.sroa.3.0.call.sroa_idx.i = getelementptr inbounds nuw i8, ptr %call.i198, i64 16
  %retval.sroa.3.0.copyload.i = load double, ptr %retval.sroa.3.0.call.sroa_idx.i, align 8, !tbaa !30
  call void @llvm.lifetime.end.p5(i64 24, ptr addrspace(5) %b.i)
  %call213 = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN6openmc8PositionpLES0_(ptr noundef nonnull align 8 dereferenceable(24) %r0.ascast, double %retval.sroa.0.0.copyload.i, double %retval.sroa.2.0.copyload.i, double %retval.sroa.3.0.copyload.i) #8
  call void @llvm.lifetime.end.p5(i64 8, ptr addrspace(5) %d.sroa.0)
  call void @llvm.lifetime.end.p5(i64 8, ptr addrspace(5) %d.sroa.11)
  call void @llvm.lifetime.end.p5(i64 8, ptr addrspace(5) %d.sroa.16)
  %inc215 = add nuw i32 %j.0363, 1
  %exitcond371.not = icmp eq i32 %inc215, %umax
  br i1 %exitcond371.not, label %for.cond.cleanup41, label %for.body42, !llvm.loop !51

for.body69:                                       ; preds = %for.inc206, %for.cond66.preheader
  %i65.0361 = phi i32 [ %inc207, %for.inc206 ], [ 0, %for.cond66.preheader ]
  switch i32 %i65.0361, label %sw.default.i204 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit206
    i32 1, label %sw.bb2.i202
    i32 2, label %sw.bb3.i199
  ]

sw.bb2.i202:                                      ; preds = %for.body69
  br label %_ZN6openmc8PositionixEi.internalized.exit206

sw.bb3.i199:                                      ; preds = %for.body69
  br label %_ZN6openmc8PositionixEi.internalized.exit206

sw.default.i204:                                  ; preds = %for.body69
  %call.i205 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit206

_ZN6openmc8PositionixEi.internalized.exit206:     ; preds = %sw.default.i204, %sw.bb3.i199, %sw.bb2.i202, %for.body69
  %retval.0.i201 = phi ptr addrspace(5) [ %d.sroa.0, %sw.default.i204 ], [ %d.sroa.16, %sw.bb3.i199 ], [ %d.sroa.11, %sw.bb2.i202 ], [ %d.sroa.0, %for.body69 ]
  %6524 = load double, ptr addrspace(5) %retval.0.i201, align 8, !tbaa !30
  %cmp71 = fcmp oeq double %distance.0.lcssa, %6524
  br i1 %cmp71, label %for.body77.lr.ph, label %for.inc206

for.body77.lr.ph:                                 ; preds = %_ZN6openmc8PositionixEi.internalized.exit206
  %shape_.val = load ptr, ptr %shape_, align 8
  br label %for.body77

for.cond74:                                       ; preds = %lor.lhs.false
  %inc89 = add nuw nsw i32 %j73.0351, 1
  %exitcond367.not = icmp eq i32 %inc89, %0
  br i1 %exitcond367.not, label %cleanup90, label %for.body77, !llvm.loop !52

for.body77:                                       ; preds = %for.cond74, %for.body77.lr.ph
  %j73.0351 = phi i32 [ 0, %for.body77.lr.ph ], [ %inc89, %for.cond74 ]
  %arrayidx.i.i207 = getelementptr inbounds nuw [3 x i32], ptr addrspace(5) %ijk0, i32 0, i32 %j73.0351
  %6525 = load i32, ptr addrspace(5) %arrayidx.i.i207, align 4, !tbaa !31
  %cmp80 = icmp slt i32 %6525, 1
  br i1 %cmp80, label %cleanup90, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body77
  %conv78 = zext nneg i32 %j73.0351 to i64
  %arrayidx.i209 = getelementptr inbounds nuw i32, ptr %shape_.val, i64 %conv78
  %6526 = load i32, ptr %arrayidx.i209, align 4, !tbaa !31
  %cmp85 = icmp sgt i32 %6525, %6526
  br i1 %cmp85, label %cleanup90, label %for.cond74

cleanup90:                                        ; preds = %lor.lhs.false, %for.body77, %for.cond74
  %cmp75.not.lcssa = phi i1 [ true, %for.body77 ], [ true, %lor.lhs.false ], [ false, %for.cond74 ]
  switch i32 %i65.0361, label %sw.default.i215 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit217
    i32 1, label %sw.bb2.i213
    i32 2, label %sw.bb3.i210
  ]

sw.bb2.i213:                                      ; preds = %cleanup90
  br label %_ZN6openmc8PositionixEi.internalized.exit217

sw.bb3.i210:                                      ; preds = %cleanup90
  br label %_ZN6openmc8PositionixEi.internalized.exit217

sw.default.i215:                                  ; preds = %cleanup90
  %call.i216 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit217

_ZN6openmc8PositionixEi.internalized.exit217:     ; preds = %sw.default.i215, %sw.bb3.i210, %sw.bb2.i213, %cleanup90
  %retval.0.i212.sroa.speculated = phi double [ %u.sroa.0.0.copyload, %sw.default.i215 ], [ %u.sroa.17.0.copyload, %sw.bb3.i210 ], [ %u.sroa.12.0.copyload, %sw.bb2.i213 ], [ %u.sroa.0.0.copyload, %cleanup90 ]
  %cmp93 = fcmp ogt double %retval.0.i212.sroa.speculated, 0.000000e+00
  br i1 %cmp93, label %if.then94, label %if.else147

if.then94:                                        ; preds = %_ZN6openmc8PositionixEi.internalized.exit217
  br i1 %cmp75.not.lcssa, label %if.end104, label %if.then96

if.then96:                                        ; preds = %if.then94
  %mul = shl nsw i32 %i65.0361, 2
  %this.val = load i32, ptr %n_dimension_, align 4, !tbaa !17
  %this.val64 = load ptr, ptr %shape_, align 8
  switch i32 %this.val, label %sw.epilog.i223 [
    i32 1, label %sw.bb.i222
    i32 2, label %sw.bb2.i221
    i32 3, label %sw.bb7.i
  ]

sw.bb.i222:                                       ; preds = %if.then96
  %6527 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit

sw.bb2.i221:                                      ; preds = %if.then96
  %6528 = load i32, ptr addrspace(5) %arrayidx13.i274, align 4, !tbaa !31
  %sub4.i = add nsw i32 %6528, -1
  %6529 = load i32, ptr %this.val64, align 4, !tbaa !31
  %mul.i = mul nsw i32 %sub4.i, %6529
  %6530 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %add.i = add nsw i32 %mul.i, %6530
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit

sw.bb7.i:                                         ; preds = %if.then96
  %6531 = load i32, ptr addrspace(5) %arrayidx8.i270, align 4, !tbaa !31
  %sub9.i = add nsw i32 %6531, -1
  %arrayidx.i.i218 = getelementptr inbounds nuw i8, ptr %this.val64, i64 4
  %6532 = load i32, ptr %arrayidx.i.i218, align 4, !tbaa !31
  %mul12.i = mul nsw i32 %sub9.i, %6532
  %6533 = load i32, ptr addrspace(5) %arrayidx13.i274, align 4, !tbaa !31
  %sub14.i = add nsw i32 %6533, -1
  %add15.i = add nsw i32 %sub14.i, %mul12.i
  %6534 = load i32, ptr %this.val64, align 4, !tbaa !31
  %mul18.i = mul nsw i32 %add15.i, %6534
  %6535 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %add20.i = add nsw i32 %mul18.i, %6535
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit

sw.epilog.i223:                                   ; preds = %if.then96
  unreachable

_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit: ; preds = %sw.bb7.i, %sw.bb2.i221, %sw.bb.i222
  %retval.0.in.i219 = phi i32 [ %add20.i, %sw.bb7.i ], [ %add.i, %sw.bb2.i221 ], [ %6527, %sw.bb.i222 ]
  %this.val.i224 = load i32, ptr %6512, align 8, !tbaa !40
  %cmp.i.i225 = icmp sgt i32 %this.val.i224, 124
  br i1 %cmp.i.i225, label %if.end104, label %if.then.i226

if.then.i226:                                     ; preds = %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit
  %idxprom.i = sext i32 %this.val.i224 to i64
  %arrayidx.i227 = getelementptr inbounds [125 x i32], ptr %match, i64 0, i64 %idxprom.i
  %retval.0.i220 = add nsw i32 %retval.0.in.i219, -1
  %mul101 = mul nsw i32 %mul157, %retval.0.i220
  %add102 = or disjoint i32 %mul, 2
  %sub103 = add i32 %add102, %mul101
  store i32 %sub103, ptr %arrayidx.i227, align 4, !tbaa !31
  %6536 = load i32, ptr %6512, align 8, !tbaa !40
  %inc.i228 = add nsw i32 %6536, 1
  store i32 %inc.i228, ptr %6512, align 8, !tbaa !40
  br label %if.end104

if.end104:                                        ; preds = %if.then.i226, %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit, %if.then94
  %conv105 = zext nneg i32 %i65.0361 to i64
  %arrayidx.i.i229 = getelementptr inbounds nuw [3 x i32], ptr addrspace(5) %ijk0, i32 0, i32 %i65.0361
  %6537 = load i32, ptr addrspace(5) %arrayidx.i.i229, align 4, !tbaa !31
  %inc107 = add nsw i32 %6537, 1
  store i32 %inc107, ptr addrspace(5) %arrayidx.i.i229, align 4, !tbaa !31
  %width_.val = load ptr, ptr %width_164, align 8, !tbaa !29
  %arrayidx.i230 = getelementptr inbounds nuw double, ptr %width_.val, i64 %conv105
  %6538 = load double, ptr %arrayidx.i230, align 8, !tbaa !30
  switch i32 %i65.0361, label %sw.default.i236 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit238
    i32 1, label %sw.bb2.i234
    i32 2, label %sw.bb3.i231
  ]

sw.bb2.i234:                                      ; preds = %if.end104
  br label %_ZN6openmc8PositionixEi.internalized.exit238

sw.bb3.i231:                                      ; preds = %if.end104
  br label %_ZN6openmc8PositionixEi.internalized.exit238

sw.default.i236:                                  ; preds = %if.end104
  %call.i237 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit238

_ZN6openmc8PositionixEi.internalized.exit238:     ; preds = %sw.default.i236, %sw.bb3.i231, %sw.bb2.i234, %if.end104
  %retval.0.i233 = phi ptr addrspace(5) [ %xyz_cross.sroa.0, %sw.default.i236 ], [ %xyz_cross.sroa.19, %sw.bb3.i231 ], [ %xyz_cross.sroa.13, %sw.bb2.i234 ], [ %xyz_cross.sroa.0, %if.end104 ]
  %6539 = load double, ptr addrspace(5) %retval.0.i233, align 8, !tbaa !30
  %add111 = fadd double %6538, %6539
  store double %add111, ptr addrspace(5) %retval.0.i233, align 8, !tbaa !30
  %shape_123.val = load ptr, ptr %shape_, align 8
  br label %for.body116

for.cond113:                                      ; preds = %lor.lhs.false120
  %inc130 = add nuw nsw i32 %j112.0359, 1
  %exitcond369.not = icmp eq i32 %inc130, %0
  br i1 %exitcond369.not, label %if.then134.critedge, label %for.body116, !llvm.loop !53

for.body116:                                      ; preds = %for.cond113, %_ZN6openmc8PositionixEi.internalized.exit238
  %j112.0359 = phi i32 [ 0, %_ZN6openmc8PositionixEi.internalized.exit238 ], [ %inc130, %for.cond113 ]
  %arrayidx.i.i239 = getelementptr inbounds nuw [3 x i32], ptr addrspace(5) %ijk0, i32 0, i32 %j112.0359
  %6540 = load i32, ptr addrspace(5) %arrayidx.i.i239, align 4, !tbaa !31
  %cmp119 = icmp slt i32 %6540, 1
  br i1 %cmp119, label %for.inc206, label %lor.lhs.false120

lor.lhs.false120:                                 ; preds = %for.body116
  %conv117 = zext nneg i32 %j112.0359 to i64
  %arrayidx.i241 = getelementptr inbounds nuw i32, ptr %shape_123.val, i64 %conv117
  %6541 = load i32, ptr %arrayidx.i241, align 4, !tbaa !31
  %cmp126 = icmp sgt i32 %6540, %6541
  br i1 %cmp126, label %for.inc206, label %for.cond113

if.then134.critedge:                              ; preds = %for.cond113
  %mul136 = shl nsw i32 %i65.0361, 2
  %this.val65 = load i32, ptr %n_dimension_, align 4, !tbaa !17
  switch i32 %this.val65, label %sw.epilog.i260 [
    i32 1, label %sw.bb.i259
    i32 2, label %sw.bb2.i254
    i32 3, label %sw.bb7.i242
  ]

sw.bb.i259:                                       ; preds = %if.then134.critedge
  %6542 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit261

sw.bb2.i254:                                      ; preds = %if.then134.critedge
  %6543 = load i32, ptr addrspace(5) %arrayidx13.i274, align 4, !tbaa !31
  %sub4.i256 = add nsw i32 %6543, -1
  %6544 = load i32, ptr %shape_123.val, align 4, !tbaa !31
  %mul.i257 = mul nsw i32 %sub4.i256, %6544
  %6545 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %add.i258 = add nsw i32 %mul.i257, %6545
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit261

sw.bb7.i242:                                      ; preds = %if.then134.critedge
  %6546 = load i32, ptr addrspace(5) %arrayidx8.i270, align 4, !tbaa !31
  %sub9.i244 = add nsw i32 %6546, -1
  %arrayidx.i.i245 = getelementptr inbounds nuw i8, ptr %shape_123.val, i64 4
  %6547 = load i32, ptr %arrayidx.i.i245, align 4, !tbaa !31
  %mul12.i246 = mul nsw i32 %sub9.i244, %6547
  %6548 = load i32, ptr addrspace(5) %arrayidx13.i274, align 4, !tbaa !31
  %sub14.i248 = add nsw i32 %6548, -1
  %add15.i249 = add nsw i32 %sub14.i248, %mul12.i246
  %6549 = load i32, ptr %shape_123.val, align 4, !tbaa !31
  %mul18.i250 = mul nsw i32 %add15.i249, %6549
  %6550 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %add20.i251 = add nsw i32 %mul18.i250, %6550
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit261

sw.epilog.i260:                                   ; preds = %if.then134.critedge
  unreachable

_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit261: ; preds = %sw.bb7.i242, %sw.bb2.i254, %sw.bb.i259
  %retval.0.in.i252 = phi i32 [ %add20.i251, %sw.bb7.i242 ], [ %add.i258, %sw.bb2.i254 ], [ %6542, %sw.bb.i259 ]
  %this.val.i262 = load i32, ptr %6512, align 8, !tbaa !40
  %cmp.i.i263 = icmp sgt i32 %this.val.i262, 124
  br i1 %cmp.i.i263, label %for.inc206, label %if.then.i264

if.then.i264:                                     ; preds = %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit261
  %idxprom.i265 = sext i32 %this.val.i262 to i64
  %arrayidx.i266 = getelementptr inbounds [125 x i32], ptr %match, i64 0, i64 %idxprom.i265
  %retval.0.i253 = add nsw i32 %retval.0.in.i252, -1
  %mul143 = mul nsw i32 %mul157, %retval.0.i253
  %add144 = or disjoint i32 %mul136, 1
  %sub145 = add i32 %add144, %mul143
  store i32 %sub145, ptr %arrayidx.i266, align 4, !tbaa !31
  br label %for.inc206.sink.split

if.else147:                                       ; preds = %_ZN6openmc8PositionixEi.internalized.exit217
  br i1 %cmp75.not.lcssa, label %if.end161, label %if.then149

if.then149:                                       ; preds = %if.else147
  %mul151 = shl nsw i32 %i65.0361, 2
  %this.val67 = load i32, ptr %n_dimension_, align 4, !tbaa !17
  %this.val68 = load ptr, ptr %shape_, align 8
  switch i32 %this.val67, label %sw.epilog.i287 [
    i32 1, label %sw.bb.i286
    i32 2, label %sw.bb2.i281
    i32 3, label %sw.bb7.i269
  ]

sw.bb.i286:                                       ; preds = %if.then149
  %6551 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit288

sw.bb2.i281:                                      ; preds = %if.then149
  %6552 = load i32, ptr addrspace(5) %arrayidx13.i274, align 4, !tbaa !31
  %sub4.i283 = add nsw i32 %6552, -1
  %6553 = load i32, ptr %this.val68, align 4, !tbaa !31
  %mul.i284 = mul nsw i32 %sub4.i283, %6553
  %6554 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %add.i285 = add nsw i32 %mul.i284, %6554
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit288

sw.bb7.i269:                                      ; preds = %if.then149
  %6555 = load i32, ptr addrspace(5) %arrayidx8.i270, align 4, !tbaa !31
  %sub9.i271 = add nsw i32 %6555, -1
  %arrayidx.i.i272 = getelementptr inbounds nuw i8, ptr %this.val68, i64 4
  %6556 = load i32, ptr %arrayidx.i.i272, align 4, !tbaa !31
  %mul12.i273 = mul nsw i32 %sub9.i271, %6556
  %6557 = load i32, ptr addrspace(5) %arrayidx13.i274, align 4, !tbaa !31
  %sub14.i275 = add nsw i32 %6557, -1
  %add15.i276 = add nsw i32 %sub14.i275, %mul12.i273
  %6558 = load i32, ptr %this.val68, align 4, !tbaa !31
  %mul18.i277 = mul nsw i32 %add15.i276, %6558
  %6559 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %add20.i278 = add nsw i32 %mul18.i277, %6559
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit288

sw.epilog.i287:                                   ; preds = %if.then149
  unreachable

_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit288: ; preds = %sw.bb7.i269, %sw.bb2.i281, %sw.bb.i286
  %retval.0.in.i279 = phi i32 [ %add20.i278, %sw.bb7.i269 ], [ %add.i285, %sw.bb2.i281 ], [ %6551, %sw.bb.i286 ]
  %this.val.i289 = load i32, ptr %6512, align 8, !tbaa !40
  %cmp.i.i290 = icmp sgt i32 %this.val.i289, 124
  br i1 %cmp.i.i290, label %if.end161, label %if.then.i291

if.then.i291:                                     ; preds = %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit288
  %idxprom.i292 = sext i32 %this.val.i289 to i64
  %arrayidx.i293 = getelementptr inbounds [125 x i32], ptr %match, i64 0, i64 %idxprom.i292
  %retval.0.i280 = add nsw i32 %retval.0.in.i279, -1
  %mul158 = mul nsw i32 %mul157, %retval.0.i280
  %sub160 = add i32 %mul158, %mul151
  store i32 %sub160, ptr %arrayidx.i293, align 4, !tbaa !31
  %6560 = load i32, ptr %6512, align 8, !tbaa !40
  %inc.i294 = add nsw i32 %6560, 1
  store i32 %inc.i294, ptr %6512, align 8, !tbaa !40
  br label %if.end161

if.end161:                                        ; preds = %if.then.i291, %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit288, %if.else147
  %conv162 = zext nneg i32 %i65.0361 to i64
  %arrayidx.i.i296 = getelementptr inbounds nuw [3 x i32], ptr addrspace(5) %ijk0, i32 0, i32 %i65.0361
  %6561 = load i32, ptr addrspace(5) %arrayidx.i.i296, align 4, !tbaa !31
  %dec = add nsw i32 %6561, -1
  store i32 %dec, ptr addrspace(5) %arrayidx.i.i296, align 4, !tbaa !31
  %width_164.val = load ptr, ptr %width_164, align 8, !tbaa !29
  %arrayidx.i297 = getelementptr inbounds nuw double, ptr %width_164.val, i64 %conv162
  %6562 = load double, ptr %arrayidx.i297, align 8, !tbaa !30
  switch i32 %i65.0361, label %sw.default.i303 [
    i32 0, label %_ZN6openmc8PositionixEi.internalized.exit305
    i32 1, label %sw.bb2.i301
    i32 2, label %sw.bb3.i298
  ]

sw.bb2.i301:                                      ; preds = %if.end161
  br label %_ZN6openmc8PositionixEi.internalized.exit305

sw.bb3.i298:                                      ; preds = %if.end161
  br label %_ZN6openmc8PositionixEi.internalized.exit305

sw.default.i303:                                  ; preds = %if.end161
  %call.i304 = call i32 (ptr, ...) @printf(ptr noundef addrspacecast (ptr addrspace(4) @.str.llvm.2019228830457604128 to ptr)) #8
  br label %_ZN6openmc8PositionixEi.internalized.exit305

_ZN6openmc8PositionixEi.internalized.exit305:     ; preds = %sw.default.i303, %sw.bb3.i298, %sw.bb2.i301, %if.end161
  %retval.0.i300 = phi ptr addrspace(5) [ %xyz_cross.sroa.0, %sw.default.i303 ], [ %xyz_cross.sroa.19, %sw.bb3.i298 ], [ %xyz_cross.sroa.13, %sw.bb2.i301 ], [ %xyz_cross.sroa.0, %if.end161 ]
  %6563 = load double, ptr addrspace(5) %retval.0.i300, align 8, !tbaa !30
  %sub168 = fsub double %6563, %6562
  store double %sub168, ptr addrspace(5) %retval.0.i300, align 8, !tbaa !30
  %shape_180.val = load ptr, ptr %shape_, align 8
  br label %for.body173

for.cond170:                                      ; preds = %lor.lhs.false177
  %inc187 = add nuw nsw i32 %j169.0357, 1
  %exitcond368.not = icmp eq i32 %inc187, %0
  br i1 %exitcond368.not, label %if.then191.critedge, label %for.body173, !llvm.loop !54

for.body173:                                      ; preds = %for.cond170, %_ZN6openmc8PositionixEi.internalized.exit305
  %j169.0357 = phi i32 [ 0, %_ZN6openmc8PositionixEi.internalized.exit305 ], [ %inc187, %for.cond170 ]
  %arrayidx.i.i306 = getelementptr inbounds nuw [3 x i32], ptr addrspace(5) %ijk0, i32 0, i32 %j169.0357
  %6564 = load i32, ptr addrspace(5) %arrayidx.i.i306, align 4, !tbaa !31
  %cmp176 = icmp slt i32 %6564, 1
  br i1 %cmp176, label %for.inc206, label %lor.lhs.false177

lor.lhs.false177:                                 ; preds = %for.body173
  %conv174 = zext nneg i32 %j169.0357 to i64
  %arrayidx.i308 = getelementptr inbounds nuw i32, ptr %shape_180.val, i64 %conv174
  %6565 = load i32, ptr %arrayidx.i308, align 4, !tbaa !31
  %cmp183 = icmp sgt i32 %6564, %6565
  br i1 %cmp183, label %for.inc206, label %for.cond170

if.then191.critedge:                              ; preds = %for.cond170
  %this.val69 = load i32, ptr %n_dimension_, align 4, !tbaa !17
  switch i32 %this.val69, label %sw.epilog.i327 [
    i32 1, label %sw.bb.i326
    i32 2, label %sw.bb2.i321
    i32 3, label %sw.bb7.i309
  ]

sw.bb.i326:                                       ; preds = %if.then191.critedge
  %6566 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit328

sw.bb2.i321:                                      ; preds = %if.then191.critedge
  %6567 = load i32, ptr addrspace(5) %arrayidx13.i274, align 4, !tbaa !31
  %sub4.i323 = add nsw i32 %6567, -1
  %6568 = load i32, ptr %shape_180.val, align 4, !tbaa !31
  %mul.i324 = mul nsw i32 %sub4.i323, %6568
  %6569 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %add.i325 = add nsw i32 %mul.i324, %6569
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit328

sw.bb7.i309:                                      ; preds = %if.then191.critedge
  %6570 = load i32, ptr addrspace(5) %arrayidx8.i270, align 4, !tbaa !31
  %sub9.i311 = add nsw i32 %6570, -1
  %arrayidx.i.i312 = getelementptr inbounds nuw i8, ptr %shape_180.val, i64 4
  %6571 = load i32, ptr %arrayidx.i.i312, align 4, !tbaa !31
  %mul12.i313 = mul nsw i32 %sub9.i311, %6571
  %6572 = load i32, ptr addrspace(5) %arrayidx13.i274, align 4, !tbaa !31
  %sub14.i315 = add nsw i32 %6572, -1
  %add15.i316 = add nsw i32 %sub14.i315, %mul12.i313
  %6573 = load i32, ptr %shape_180.val, align 4, !tbaa !31
  %mul18.i317 = mul nsw i32 %add15.i316, %6573
  %6574 = load i32, ptr addrspace(5) %ijk0, align 4, !tbaa !31
  %add20.i318 = add nsw i32 %mul18.i317, %6574
  br label %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit328

sw.epilog.i327:                                   ; preds = %if.then191.critedge
  unreachable

_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit328: ; preds = %sw.bb7.i309, %sw.bb2.i321, %sw.bb.i326
  %retval.0.in.i319 = phi i32 [ %add20.i318, %sw.bb7.i309 ], [ %add.i325, %sw.bb2.i321 ], [ %6566, %sw.bb.i326 ]
  %this.val.i329 = load i32, ptr %6512, align 8, !tbaa !40
  %cmp.i.i330 = icmp sgt i32 %this.val.i329, 124
  br i1 %cmp.i.i330, label %for.inc206, label %if.then.i331

if.then.i331:                                     ; preds = %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit328
  %idxprom.i332 = sext i32 %this.val.i329 to i64
  %arrayidx.i333 = getelementptr inbounds [125 x i32], ptr %match, i64 0, i64 %idxprom.i332
  %retval.0.i320 = add i32 %retval.0.in.i319, 1073741823
  %mul200 = mul i32 %retval.0.i320, %0
  %reass.add = add i32 %mul200, %i65.0361
  %reass.mul = shl i32 %reass.add, 2
  %sub202 = or disjoint i32 %reass.mul, 3
  store i32 %sub202, ptr %arrayidx.i333, align 4, !tbaa !31
  br label %for.inc206.sink.split

for.inc206.sink.split:                            ; preds = %if.then.i331, %if.then.i264
  %6575 = load i32, ptr %6512, align 8, !tbaa !40
  %inc.i334 = add nsw i32 %6575, 1
  store i32 %inc.i334, ptr %6512, align 8, !tbaa !40
  br label %for.inc206

for.inc206:                                       ; preds = %for.inc206.sink.split, %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit328, %lor.lhs.false177, %for.body173, %_ZNK6openmc4Mesh20get_bin_from_indicesEPKi.internalized.exit261, %lor.lhs.false120, %for.body116, %_ZN6openmc8PositionixEi.internalized.exit206
  %inc207 = add nuw nsw i32 %i65.0361, 1
  %exitcond370.not = icmp eq i32 %inc207, %0
  br i1 %exitcond370.not, label %for.cond.cleanup68, label %for.body69, !llvm.loop !55

cleanup219:                                       ; preds = %for.cond.cleanup41, %for.cond.cleanup, %_ZNK6openmc4Mesh10intersectsERNS_8PositionES1_Pi.internalized.exit
  call void @llvm.lifetime.end.p5(i64 12, ptr addrspace(5) %ijk1) #7
  call void @llvm.lifetime.end.p5(i64 12, ptr addrspace(5) %ijk0) #7
  call void @llvm.lifetime.end.p5(i64 24, ptr addrspace(5) %r0) #7
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.copysign.f64(double, double) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.maxnum.f64(double, double) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.frexp.exp.i32.f64(double) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.frexp.exp.i32.f32(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fma.f64(double, double, double) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.trunc.f64(double) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.rint.f64(double) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.ldexp.f64.i32(double, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.amdgcn.frexp.mant.f64(double) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.amdgcn.rcp.f64(double) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.ldexp.f32.i32(float, i32) #2

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p5.p0.i64(ptr addrspace(5) noalias writeonly captures(none), ptr noalias readonly captures(none), i64, i1 immarg) #6

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #2

attributes #0 = { cold mustprogress noinline nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx942" "target-features"="+16-bit-insts,+atomic-buffer-global-pk-add-f16-insts,+atomic-ds-pk-add-16-insts,+atomic-fadd-rtn-insts,+atomic-flat-pk-add-16-insts,+atomic-global-pk-add-bf16-inst,+ci-insts,+dl-insts,+dot1-insts,+dot10-insts,+dot2-insts,+dot3-insts,+dot4-insts,+dot5-insts,+dot6-insts,+dot7-insts,+dpp,+fp8-conversion-insts,+fp8-insts,+gfx8-insts,+gfx9-insts,+gfx90a-insts,+gfx940-insts,+mai-insts,+s-memrealtime,+s-memtime-inst,+wavefrontsize64,+xf32-insts" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { convergent mustprogress nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx942" "target-features"="+16-bit-insts,+atomic-buffer-global-pk-add-f16-insts,+atomic-ds-pk-add-16-insts,+atomic-fadd-rtn-insts,+atomic-flat-pk-add-16-insts,+atomic-global-pk-add-bf16-inst,+ci-insts,+dl-insts,+dot1-insts,+dot10-insts,+dot2-insts,+dot3-insts,+dot4-insts,+dot5-insts,+dot6-insts,+dot7-insts,+dpp,+fp8-conversion-insts,+fp8-insts,+gfx8-insts,+gfx9-insts,+gfx90a-insts,+gfx940-insts,+mai-insts,+s-memrealtime,+s-memtime-inst,+wavefrontsize64,+xf32-insts" }
attributes #4 = { convergent "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx942" "target-features"="+16-bit-insts,+atomic-buffer-global-pk-add-f16-insts,+atomic-ds-pk-add-16-insts,+atomic-fadd-rtn-insts,+atomic-flat-pk-add-16-insts,+atomic-global-pk-add-bf16-inst,+ci-insts,+dl-insts,+dot1-insts,+dot10-insts,+dot2-insts,+dot3-insts,+dot4-insts,+dot5-insts,+dot6-insts,+dot7-insts,+dpp,+fp8-conversion-insts,+fp8-insts,+gfx8-insts,+gfx9-insts,+gfx90a-insts,+gfx940-insts,+mai-insts,+s-memrealtime,+s-memtime-inst,+wavefrontsize64,+xf32-insts" }
attributes #5 = { convergent nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx942" "target-features"="+16-bit-insts,+atomic-buffer-global-pk-add-f16-insts,+atomic-ds-pk-add-16-insts,+atomic-fadd-rtn-insts,+atomic-flat-pk-add-16-insts,+atomic-global-pk-add-bf16-inst,+ci-insts,+dl-insts,+dot1-insts,+dot10-insts,+dot2-insts,+dot3-insts,+dot4-insts,+dot5-insts,+dot6-insts,+dot7-insts,+dpp,+fp8-conversion-insts,+fp8-insts,+gfx8-insts,+gfx9-insts,+gfx90a-insts,+gfx940-insts,+mai-insts,+s-memrealtime,+s-memtime-inst,+wavefrontsize64,+xf32-insts" }
attributes #6 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { nounwind }
attributes #8 = { convergent nounwind }
attributes #9 = { nosync }

!omp_offload.info = !{!0, !1, !2, !3, !4, !5, !6, !7}
!llvm.module.flags = !{!8, !9, !10, !11, !12, !13}
!opencl.ocl.version = !{!14}
!llvm.ident = !{!15, !16}

!0 = !{i32 1, !"dagmc", i32 0, i32 0}
!1 = !{i32 1, !"gen_per_batch", i32 0, i32 3}
!2 = !{i32 1, !"n_particles", i32 0, i32 4}
!3 = !{i32 1, !"_ZN6openmc5model11meshes_sizeE", i32 0, i32 7}
!4 = !{i32 1, !"max_lost_particles", i32 0, i32 2}
!5 = !{i32 1, !"run_CE", i32 0, i32 1}
!6 = !{i32 1, !"_ZN6openmcL12DEPLETION_RXE", i32 0, i32 5}
!7 = !{i32 1, !"_ZN6openmc5model6meshesE", i32 0, i32 6}
!8 = !{i32 1, !"amdhsa_code_object_version", i32 600}
!9 = !{i32 1, !"wchar_size", i32 4}
!10 = !{i32 7, !"openmp", i32 51}
!11 = !{i32 7, !"openmp-device", i32 51}
!12 = !{i32 8, !"PIC Level", i32 2}
!13 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!14 = !{i32 2, i32 0}
!15 = !{!"clang version 21.0.0git (https://github.com/llvm/llvm-project.git da17ced11b1cf44b433cb2b850978df4b6bff279)"}
!16 = !{!"AMD clang version 18.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.3.1 24491 1e0fda770a2079fbd71e4b70974d74f62fd3af10)"}
!17 = !{!18, !19, i64 4}
!18 = !{!"_ZTSN6openmc4MeshE", !19, i64 0, !19, i64 4, !22, i64 8, !22, i64 32, !26, i64 56, !28, i64 80, !22, i64 88}
!19 = !{!"int", !20, i64 0}
!20 = !{!"omnipotent char", !21, i64 0}
!21 = !{!"Simple C++ TBAA"}
!22 = !{!"_ZTSN6openmc6vectorIdEE", !23, i64 0, !25, i64 8, !25, i64 16}
!23 = !{!"p1 double", !24, i64 0}
!24 = !{!"any pointer", !20, i64 0}
!25 = !{!"long", !20, i64 0}
!26 = !{!"_ZTSN6openmc6vectorIiEE", !27, i64 0, !25, i64 8, !25, i64 16}
!27 = !{!"p1 int", !24, i64 0}
!28 = !{!"double", !20, i64 0}
!29 = !{!22, !23, i64 0}
!30 = !{!28, !28, i64 0}
!31 = !{!19, !19, i64 0}
!32 = !{!26, !27, i64 0}
!33 = distinct !{!33, !34}
!34 = !{!"llvm.loop.mustprogress"}
!35 = !{!36, !28, i64 0}
!36 = !{!"_ZTSN6openmc8PositionE", !28, i64 0, !28, i64 8, !28, i64 16}
!37 = !{!36, !28, i64 8}
!38 = !{!36, !28, i64 16}
!39 = distinct !{!39, !34}
!40 = !{!41, !19, i64 1504}
!41 = !{!"_ZTSN6openmc11FilterMatchE", !20, i64 0, !20, i64 504, !19, i64 1504, !19, i64 1508, !42, i64 1512}
!42 = !{!"bool", !20, i64 0}
!43 = distinct !{!43, !34}
!44 = distinct !{!44, !34}
!45 = distinct !{!45, !34}
!46 = !{i64 0, i64 8, !30, i64 8, i64 8, !30, i64 16, i64 8, !30}
!47 = !{i32 0, i32 -2147483648}
!48 = distinct !{!48, !34}
!49 = distinct !{!49, !34}
!50 = distinct !{!50, !34}
!51 = distinct !{!51, !34}
!52 = distinct !{!52, !34}
!53 = distinct !{!53, !34}
!54 = distinct !{!54, !34}
!55 = distinct !{!55, !34}
