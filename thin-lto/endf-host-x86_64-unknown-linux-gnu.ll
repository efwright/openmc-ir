; ModuleID = 'endf-host-x86_64-unknown-linux-gnu.bc'
source_filename = "/g/g0/wright117/workspace/openmc/openmc-omp/openmc/src/endf.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::array" = type { [6 x i32] }
%"class.std::ios_base::Init" = type { i8 }
%"class.std::reverse_iterator" = type { %"class.__gnu_cxx::__normal_iterator" }
%"class.__gnu_cxx::__normal_iterator" = type { ptr }
%"class.openmc::Polynomial" = type { %"class.openmc::Function1D", %"class.std::vector.43" }
%"class.openmc::Function1D" = type { ptr }
%"class.std::vector.43" = type { %"struct.std::_Vector_base.44" }
%"struct.std::_Vector_base.44" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.openmc::Tabulated1D" = type { %"class.openmc::Function1D", i64, %"class.std::vector", %"class.std::vector.38", i64, %"class.std::vector.43", %"class.std::vector.43" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.38" = type { %"struct.std::_Vector_base.39" }
%"struct.std::_Vector_base.39" = type { %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl" }
%"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl" = type { %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data" }
%"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.__gnu_cxx::__normal_iterator.94" = type { ptr }
%"class.openmc::CoherentElasticXS" = type { %"class.openmc::Function1D", %"class.std::vector.43", %"class.std::vector.43" }
%"class.openmc::IncoherentElasticXS" = type { %"class.openmc::Function1D", double, double }
%"class.std::unique_ptr" = type { %"struct.std::__uniq_ptr_data" }
%"struct.std::__uniq_ptr_data" = type { %"class.std::__uniq_ptr_impl" }
%"class.std::__uniq_ptr_impl" = type { %"class.std::tuple" }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base.1" }
%"struct.std::_Head_base.1" = type { ptr }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon.2 }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { ptr }
%union.anon.2 = type { i64, [8 x i8] }
%"class.std::unique_ptr.3" = type { %"struct.std::__uniq_ptr_data.4" }
%"struct.std::__uniq_ptr_data.4" = type { %"class.std::__uniq_ptr_impl.5" }
%"class.std::__uniq_ptr_impl.5" = type { %"class.std::tuple.6" }
%"class.std::tuple.6" = type { %"struct.std::_Tuple_impl.7" }
%"struct.std::_Tuple_impl.7" = type { %"struct.std::_Head_base.10" }
%"struct.std::_Head_base.10" = type { ptr }
%"class.std::unique_ptr.11" = type { %"struct.std::__uniq_ptr_data.12" }
%"struct.std::__uniq_ptr_data.12" = type { %"class.std::__uniq_ptr_impl.13" }
%"class.std::__uniq_ptr_impl.13" = type { %"class.std::tuple.14" }
%"class.std::tuple.14" = type { %"struct.std::_Tuple_impl.15" }
%"struct.std::_Tuple_impl.15" = type { %"struct.std::_Head_base.18" }
%"struct.std::_Head_base.18" = type { ptr }
%"class.std::unique_ptr.19" = type { %"struct.std::__uniq_ptr_data.20" }
%"struct.std::__uniq_ptr_data.20" = type { %"class.std::__uniq_ptr_impl.21" }
%"class.std::__uniq_ptr_impl.21" = type { %"class.std::tuple.22" }
%"class.std::tuple.22" = type { %"struct.std::_Tuple_impl.23" }
%"struct.std::_Tuple_impl.23" = type { %"struct.std::_Head_base.26" }
%"struct.std::_Head_base.26" = type { ptr }
%"class.std::unique_ptr.27" = type { %"struct.std::__uniq_ptr_data.28" }
%"struct.std::__uniq_ptr_data.28" = type { %"class.std::__uniq_ptr_impl.29" }
%"class.std::__uniq_ptr_impl.29" = type { %"class.std::tuple.30" }
%"class.std::tuple.30" = type { %"struct.std::_Tuple_impl.31" }
%"struct.std::_Tuple_impl.31" = type { %"struct.std::_Head_base.34" }
%"struct.std::_Head_base.34" = type { ptr }
%"class.std::allocator" = type { i8 }
%"struct.std::default_delete" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%struct._Guard = type { ptr }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"class.std::vector.56" = type { %"struct.std::_Vector_base.57" }
%"struct.std::_Vector_base.57" = type { %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl" }
%"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.openmc::DataBuffer" = type <{ ptr, i64, i64, i32, [4 x i8] }>
%"class.gsl::span" = type { ptr, ptr }
%"class.std::reverse_iterator.61" = type { ptr }
%"class.openmc::PolynomialFlat" = type { ptr }
%"class.__gnu_cxx::__normal_iterator.62" = type { ptr }
%"class.xt::xarray_container" = type { %"class.xt::xstrided_container.base", %"class.xt::xcontainer_semantic", %"class.xt::uvector" }
%"class.xt::xstrided_container.base" = type <{ %"class.xt::svector", %"class.xt::svector.63", %"class.xt::svector.63", i32 }>
%"class.xt::svector" = type { [8 x i8], ptr, ptr, ptr, [4 x i64] }
%"class.xt::svector.63" = type { [8 x i8], ptr, ptr, ptr, [4 x i64] }
%"class.xt::xcontainer_semantic" = type { %"class.xt::xsemantic_base" }
%"class.xt::xsemantic_base" = type { %"class.xt::xsharable_expression" }
%"class.xt::xsharable_expression" = type { %"class.std::shared_ptr" }
%"class.std::shared_ptr" = type { %"class.std::__shared_ptr" }
%"class.std::__shared_ptr" = type { ptr, %"class.std::__shared_count" }
%"class.std::__shared_count" = type { ptr }
%"class.xt::uvector" = type { [8 x i8], ptr, ptr }
%"class.xt::xview" = type <{ %"class.xt::xview_semantic", ptr, %"class.std::tuple.75", [4 x i8], %"class.xt::sequence_view", %"class.xt::sequence_view.78", %"class.xt::sequence_view.78", i64, i8, [7 x i8] }>
%"class.xt::xview_semantic" = type { %"class.xt::xsemantic_base.64" }
%"class.xt::xsemantic_base.64" = type { %"class.xt::xsharable_expression.65" }
%"class.xt::xsharable_expression.65" = type { %"class.std::shared_ptr.67" }
%"class.std::shared_ptr.67" = type { %"class.std::__shared_ptr.68" }
%"class.std::__shared_ptr.68" = type { ptr, %"class.std::__shared_count" }
%"class.std::tuple.75" = type { %"struct.std::_Tuple_impl.76" }
%"struct.std::_Tuple_impl.76" = type { %"struct.std::_Head_base.77" }
%"struct.std::_Head_base.77" = type { i32 }
%"class.xt::sequence_view" = type { ptr }
%"class.xt::sequence_view.78" = type { ptr }
%"class.std::back_insert_iterator" = type { ptr }
%"class.__gnu_cxx::__normal_iterator.80" = type { ptr }
%"class.std::allocator.45" = type { i8 }
%"struct.std::integer_sequence" = type { i8 }
%class.anon = type { ptr }
%class.anon.88 = type { ptr }
%class.anon.89 = type { ptr }
%class.anon.90 = type { ptr }
%"class.__gnu_cxx::__normal_iterator.81" = type { ptr }
%"class.xt::xstrided_container" = type <{ %"class.xt::svector", %"class.xt::svector.63", %"class.xt::svector.63", i32, [4 x i8] }>
%"class.std::allocator.58" = type { i8 }
%"class.std::allocator.82" = type { i8 }
%"class.std::_Sp_counted_base" = type { ptr, i32, i32 }
%"class.__gnu_cxx::__normal_iterator.85" = type { ptr }
%"struct.xt::detail::slice_implementation_getter" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"struct.xtl::is_signed" = type { i8 }
%"struct.xt::detail::is_sequence_view" = type { i8 }
%"struct.std::array.86" = type { [1 x i64] }
%"class.__gnu_cxx::__normal_iterator.87" = type { ptr }
%"struct.xtl::identity" = type { i8 }
%"struct.std::integral_constant.91" = type { i8 }
%"struct.xtl::is_signed.92" = type { i8 }
%"struct.std::multiplies" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_less_val" = type { i8 }
%"class.openmc::Tabulated1DFlat" = type { ptr, i64, i64 }
%"class.gsl::span.95" = type { ptr, ptr }
%"class.openmc::CoherentElasticXSFlat" = type { ptr }
%"struct.std::array.96" = type { [2 x double] }
%"class.openmc::IncoherentElasticXSFlat" = type { ptr }

$_ZN6openmc10PolynomialD2Ev = comdat any

$_ZN6openmc10PolynomialD0Ev = comdat any

$_ZN6openmc11Tabulated1DD2Ev = comdat any

$_ZN6openmc11Tabulated1DD0Ev = comdat any

$_ZN6openmc17CoherentElasticXSD2Ev = comdat any

$_ZN6openmc17CoherentElasticXSD0Ev = comdat any

$_ZN6openmc10Function1DD2Ev = comdat any

$_ZN6openmc19IncoherentElasticXSD0Ev = comdat any

$_ZN6openmc14read_attributeElPKcRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEC2IS3_vEEv = comdat any

$_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_ = comdat any

$_ZSt11make_uniqueIN6openmc11Tabulated1DEJRlEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_ = comdat any

$_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEaSINS0_11Tabulated1DES2_IS6_EEENSt9enable_ifIXsr6__and_ISt6__and_IJSt14is_convertibleINS_IT_T0_E7pointerEPS1_ESt6__not_ISt8is_arrayISB_EEEESt13is_assignableIRS3_OSC_EEE5valueERS4_E4typeEOSD_ = comdat any

$_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EED2Ev = comdat any

$_ZSt11make_uniqueIN6openmc10PolynomialEJRlEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_ = comdat any

$_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEaSINS0_10PolynomialES2_IS6_EEENSt9enable_ifIXsr6__and_ISt6__and_IJSt14is_convertibleINS_IT_T0_E7pointerEPS1_ESt6__not_ISt8is_arrayISB_EEEESt13is_assignableIRS3_OSC_EEE5valueERS4_E4typeEOSD_ = comdat any

$_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EED2Ev = comdat any

$_ZSt11make_uniqueIN6openmc17CoherentElasticXSEJRlEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_ = comdat any

$_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEaSINS0_17CoherentElasticXSES2_IS6_EEENSt9enable_ifIXsr6__and_ISt6__and_IJSt14is_convertibleINS_IT_T0_E7pointerEPS1_ESt6__not_ISt8is_arrayISB_EEEESt13is_assignableIRS3_OSC_EEE5valueERS4_E4typeEOSD_ = comdat any

$_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EED2Ev = comdat any

$_ZSt11make_uniqueIN6openmc19IncoherentElasticXSEJRlEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_ = comdat any

$_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEaSINS0_19IncoherentElasticXSES2_IS6_EEENSt9enable_ifIXsr6__and_ISt6__and_IJSt14is_convertibleINS_IT_T0_E7pointerEPS1_ESt6__not_ISt8is_arrayISB_EEEESt13is_assignableIRS3_OSC_EEE5valueERS4_E4typeEOSD_ = comdat any

$_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EED2Ev = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_ = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_ = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ = comdat any

$_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc = comdat any

$_ZNSt15__new_allocatorIcEC2Ev = comdat any

$_ZNSt15__new_allocatorIcEC2ERKS0_ = comdat any

$_ZNSt11char_traitsIcE6assignERcRKc = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag = comdat any

$_ZNSt15__new_allocatorIcED2Ev = comdat any

$_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_ = comdat any

$_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC2EPS4_ = comdat any

$_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev = comdat any

$_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_ = comdat any

$_ZNSt11char_traitsIcE4copyEPcPKcm = comdat any

$_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_ = comdat any

$_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm = comdat any

$_ZNSt15__new_allocatorIcE10deallocateEPcm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIcEcE15_S_always_equalEv = comdat any

$_ZStneRKSaIcES1_ = comdat any

$_ZSt15__alloc_on_moveISaIcEEvRT_S2_ = comdat any

$_ZNSt15__uniq_ptr_dataIN6openmc10Function1DESt14default_deleteIS1_ELb1ELb1EEC2Ev = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EEC2Ev = comdat any

$_ZNSt5tupleIJPN6openmc10Function1DESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv = comdat any

$_ZNSt11_Tuple_implILm0EJPN6openmc10Function1DESt14default_deleteIS1_EEEC2Ev = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10Function1DEEEEC2Ev = comdat any

$_ZNSt10_Head_baseILm0EPN6openmc10Function1DELb0EEC2Ev = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc10Function1DEELb1EEC2Ev = comdat any

$_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EEC2IS3_vEEPS1_ = comdat any

$_ZNSt15__uniq_ptr_dataIN6openmc11Tabulated1DESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_ = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EEC2EPS1_ = comdat any

$_ZNSt5tupleIJPN6openmc11Tabulated1DESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE6_M_ptrEv = comdat any

$_ZNSt11_Tuple_implILm0EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEEC2Ev = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc11Tabulated1DEEEEC2Ev = comdat any

$_ZNSt10_Head_baseILm0EPN6openmc11Tabulated1DELb0EEC2Ev = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc11Tabulated1DEELb1EEC2Ev = comdat any

$_ZSt3getILm0EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm0EPN6openmc11Tabulated1DEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEE7_M_headERS5_ = comdat any

$_ZNSt10_Head_baseILm0EPN6openmc11Tabulated1DELb0EE7_M_headERS3_ = comdat any

$_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE5resetEPS1_ = comdat any

$_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EE7releaseEv = comdat any

$_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EE11get_deleterEv = comdat any

$_ZNSt14default_deleteIN6openmc10Function1DEEC2INS0_11Tabulated1DEvEERKS_IT_E = comdat any

$_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE11get_deleterEv = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE5resetEPS1_ = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE6_M_ptrEv = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE10_M_deleterEv = comdat any

$_ZNKSt14default_deleteIN6openmc10Function1DEEclEPS1_ = comdat any

$_ZSt3getILm0EJPN6openmc10Function1DESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm0EPN6openmc10Function1DEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJPN6openmc10Function1DESt14default_deleteIS1_EEE7_M_headERS5_ = comdat any

$_ZNSt10_Head_baseILm0EPN6openmc10Function1DELb0EE7_M_headERS3_ = comdat any

$_ZSt3getILm1EJPN6openmc10Function1DESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm1ESt14default_deleteIN6openmc10Function1DEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10Function1DEEEE7_M_headERS4_ = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc10Function1DEELb1EE7_M_headERS4_ = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE7releaseEv = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE10_M_deleterEv = comdat any

$_ZSt3getILm1EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm1ESt14default_deleteIN6openmc11Tabulated1DEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc11Tabulated1DEEEE7_M_headERS4_ = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc11Tabulated1DEELb1EE7_M_headERS4_ = comdat any

$_ZNKSt14default_deleteIN6openmc11Tabulated1DEEclEPS1_ = comdat any

$_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EEC2IS3_vEEPS1_ = comdat any

$_ZNSt15__uniq_ptr_dataIN6openmc10PolynomialESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_ = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EEC2EPS1_ = comdat any

$_ZNSt5tupleIJPN6openmc10PolynomialESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE6_M_ptrEv = comdat any

$_ZNSt11_Tuple_implILm0EJPN6openmc10PolynomialESt14default_deleteIS1_EEEC2Ev = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10PolynomialEEEEC2Ev = comdat any

$_ZNSt10_Head_baseILm0EPN6openmc10PolynomialELb0EEC2Ev = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc10PolynomialEELb1EEC2Ev = comdat any

$_ZSt3getILm0EJPN6openmc10PolynomialESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm0EPN6openmc10PolynomialEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJPN6openmc10PolynomialESt14default_deleteIS1_EEE7_M_headERS5_ = comdat any

$_ZNSt10_Head_baseILm0EPN6openmc10PolynomialELb0EE7_M_headERS3_ = comdat any

$_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EE7releaseEv = comdat any

$_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EE11get_deleterEv = comdat any

$_ZNSt14default_deleteIN6openmc10Function1DEEC2INS0_10PolynomialEvEERKS_IT_E = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE7releaseEv = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE10_M_deleterEv = comdat any

$_ZSt3getILm1EJPN6openmc10PolynomialESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm1ESt14default_deleteIN6openmc10PolynomialEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10PolynomialEEEE7_M_headERS4_ = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc10PolynomialEELb1EE7_M_headERS4_ = comdat any

$_ZNKSt14default_deleteIN6openmc10PolynomialEEclEPS1_ = comdat any

$_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EEC2IS3_vEEPS1_ = comdat any

$_ZNSt15__uniq_ptr_dataIN6openmc17CoherentElasticXSESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_ = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EEC2EPS1_ = comdat any

$_ZNSt5tupleIJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE6_M_ptrEv = comdat any

$_ZNSt11_Tuple_implILm0EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEEC2Ev = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc17CoherentElasticXSEEEEC2Ev = comdat any

$_ZNSt10_Head_baseILm0EPN6openmc17CoherentElasticXSELb0EEC2Ev = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc17CoherentElasticXSEELb1EEC2Ev = comdat any

$_ZSt3getILm0EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm0EPN6openmc17CoherentElasticXSEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEE7_M_headERS5_ = comdat any

$_ZNSt10_Head_baseILm0EPN6openmc17CoherentElasticXSELb0EE7_M_headERS3_ = comdat any

$_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE7releaseEv = comdat any

$_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE11get_deleterEv = comdat any

$_ZNSt14default_deleteIN6openmc10Function1DEEC2INS0_17CoherentElasticXSEvEERKS_IT_E = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE7releaseEv = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE10_M_deleterEv = comdat any

$_ZSt3getILm1EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm1ESt14default_deleteIN6openmc17CoherentElasticXSEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc17CoherentElasticXSEEEE7_M_headERS4_ = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc17CoherentElasticXSEELb1EE7_M_headERS4_ = comdat any

$_ZNKSt14default_deleteIN6openmc17CoherentElasticXSEEclEPS1_ = comdat any

$_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEC2IS3_vEEPS1_ = comdat any

$_ZNSt15__uniq_ptr_dataIN6openmc19IncoherentElasticXSESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_ = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEC2EPS1_ = comdat any

$_ZNSt5tupleIJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE6_M_ptrEv = comdat any

$_ZNSt11_Tuple_implILm0EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEEC2Ev = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc19IncoherentElasticXSEEEEC2Ev = comdat any

$_ZNSt10_Head_baseILm0EPN6openmc19IncoherentElasticXSELb0EEC2Ev = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc19IncoherentElasticXSEELb1EEC2Ev = comdat any

$_ZSt3getILm0EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm0EPN6openmc19IncoherentElasticXSEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEE7_M_headERS5_ = comdat any

$_ZNSt10_Head_baseILm0EPN6openmc19IncoherentElasticXSELb0EE7_M_headERS3_ = comdat any

$_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE7releaseEv = comdat any

$_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE11get_deleterEv = comdat any

$_ZNSt14default_deleteIN6openmc10Function1DEEC2INS0_19IncoherentElasticXSEvEERKS_IT_E = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE7releaseEv = comdat any

$_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE10_M_deleterEv = comdat any

$_ZSt3getILm1EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm1ESt14default_deleteIN6openmc19IncoherentElasticXSEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc19IncoherentElasticXSEEEE7_M_headERS4_ = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc19IncoherentElasticXSEELb1EE7_M_headERS4_ = comdat any

$_ZNKSt14default_deleteIN6openmc19IncoherentElasticXSEEclEPS1_ = comdat any

$_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_ = comdat any

$_ZNKSt15__new_allocatorIcE8max_sizeEv = comdat any

$_ZNKSt15__new_allocatorIcE11_M_max_sizeEv = comdat any

$_ZNSt11char_traitsIcE6lengthEPKc = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_ = comdat any

$_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZN6openmc10Function1DC2Ev = comdat any

$_ZNSt6vectorIdSaIdEEC2Ev = comdat any

$_ZN6openmc12read_datasetIdEEvlRSt6vectorIT_SaIS2_EEb = comdat any

$_ZNSt6vectorIdSaIdEED2Ev = comdat any

$_ZN6openmc10Function1DD0Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEEC2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt15__new_allocatorIdEC2Ev = comdat any

$_ZNSt6vectorIdSaIdEE6resizeEm = comdat any

$_ZNSt6vectorImSaImEEixEm = comdat any

$_ZNSt6vectorIdSaIdEE4dataEv = comdat any

$_ZNSt6vectorImSaImEED2Ev = comdat any

$_ZNKSt6vectorIdSaIdEE4sizeEv = comdat any

$_ZNSt6vectorIdSaIdEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd = comdat any

$_ZNKSt6vectorIdSaIdEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm = comdat any

$_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm = comdat any

$_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_ = comdat any

$_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_ = comdat any

$_ZSt3minImERKT_S2_S2_ = comdat any

$_ZNKSt15__new_allocatorIdE8max_sizeEv = comdat any

$_ZNKSt15__new_allocatorIdE11_M_max_sizeEv = comdat any

$_ZSt25__uninitialized_default_nIPdmET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_ = comdat any

$_ZSt10_ConstructIdJEEvPT_DpOT0_ = comdat any

$_ZSt6fill_nIPdmdET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag = comdat any

$_ZSt17__size_to_integerm = comdat any

$_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_ = comdat any

$_ZSt8__fill_aIPddEvT_S1_RKT0_ = comdat any

$_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIdEE8allocateERS0_m = comdat any

$_ZNSt15__new_allocatorIdE8allocateEmPKv = comdat any

$_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm = comdat any

$_ZNSt15__new_allocatorIdE10deallocateEPdm = comdat any

$_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_ = comdat any

$_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E = comdat any

$_ZSt12__niter_baseIPdET_S1_ = comdat any

$_ZSt8_DestroyIPddEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPdEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_ = comdat any

$_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_ = comdat any

$_ZSt8_DestroyIPmmEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseImSaImEED2Ev = comdat any

$_ZSt8_DestroyIPmEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPmEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseImSaImEE13_M_deallocateEPmm = comdat any

$_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm = comdat any

$_ZNSt15__new_allocatorImE10deallocateEPmm = comdat any

$_ZNSt12_Vector_baseIdSaIdEED2Ev = comdat any

$_ZNKSt6vectorIdSaIdEE7crbeginEv = comdat any

$_ZStneIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEbRKSt16reverse_iteratorIT_ESC_ = comdat any

$_ZNKSt6vectorIdSaIdEE5crendEv = comdat any

$_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEdeEv = comdat any

$_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEppEv = comdat any

$_ZNKSt6vectorIdSaIdEE3endEv = comdat any

$_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEC2ES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_ = comdat any

$_ZSteqIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEbRKSt16reverse_iteratorIT_ESC_ = comdat any

$_ZN9__gnu_cxxeqIPKdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESB_ = comdat any

$_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEE4baseEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv = comdat any

$_ZNKSt6vectorIdSaIdEE5beginEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmmEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEdeEv = comdat any

$_ZN6openmc10DataBuffer3addIiEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_ = comdat any

$_ZN6openmc10DataBuffer3addIdEEvRKSt6vectorIT_SaIS3_EE = comdat any

$_ZNKSt6vectorIdSaIdEE4dataEv = comdat any

$_ZNK3gsl4spanIKdE7crbeginEv = comdat any

$_ZStneIPKdEbRKSt16reverse_iteratorIT_ES6_ = comdat any

$_ZNK3gsl4spanIKdE5crendEv = comdat any

$_ZNKSt16reverse_iteratorIPKdEdeEv = comdat any

$_ZNSt16reverse_iteratorIPKdEppEv = comdat any

$_ZNK3gsl4spanIKdE4cendEv = comdat any

$_ZNSt16reverse_iteratorIPKdEC2ES1_ = comdat any

$_ZNK3gsl4spanIKdE3endEv = comdat any

$_ZSteqIPKdEbRKSt16reverse_iteratorIT_ES6_ = comdat any

$_ZNKSt16reverse_iteratorIPKdE4baseEv = comdat any

$_ZNK3gsl4spanIKdE6cbeginEv = comdat any

$_ZNK3gsl4spanIKdE5beginEv = comdat any

$_ZN3gsl4spanIKdEC2EPS1_m = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt6vectorIN6openmc13InterpolationESaIS1_EEC2Ev = comdat any

$_ZN6openmc14read_attributeIiEEvlPKcRSt6vectorIT_SaIS4_EE = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZNSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNSt6vectorIiSaIiEE3endEv = comdat any

$_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv = comdat any

$_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE9push_backEOS1_ = comdat any

$_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEC2Ev = comdat any

$_ZN6openmc12read_datasetIdEEvlRN2xt16xarray_containerINS1_7uvectorIT_SaIS4_EEELNS1_11layout_typeE1ENS1_7svectorINS6_9size_typeELm4ESaINSt6vectorIS4_S5_E9size_typeEELb1EEENS1_22xtensor_expression_tagEEEb = comdat any

$_ZN2xt4viewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEDaOT_DpOT0_ = comdat any

$_ZSt4copyIPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET0_T_S7_S6_ = comdat any

$_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE5beginILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEv = comdat any

$_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE3endILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEv = comdat any

$_ZSt13back_inserterISt6vectorIdSaIdEEESt20back_insert_iteratorIT_ERS4_ = comdat any

$_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEED2Ev = comdat any

$_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEED2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorIN6openmc13InterpolationESaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt15__new_allocatorIiEC2Ev = comdat any

$_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN6openmc13InterpolationEEC2Ev = comdat any

$_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt15__new_allocatorIN6openmc13InterpolationEEC2Ev = comdat any

$_ZNSt6vectorImSaImEE5beginEv = comdat any

$_ZNSt6vectorImSaImEE3endEv = comdat any

$_ZN9__gnu_cxxneIPmSt6vectorImSaImEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEppEv = comdat any

$_ZNSt6vectorIiSaIiEE6resizeEm = comdat any

$_ZNSt6vectorIiSaIiEE4dataEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEC2ERKS1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEE4baseEv = comdat any

$_ZNSt6vectorIiSaIiEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_ = comdat any

$_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZNKSt15__new_allocatorIiE8max_sizeEv = comdat any

$_ZNKSt15__new_allocatorIiE11_M_max_sizeEv = comdat any

$_ZSt25__uninitialized_default_nIPimET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_ = comdat any

$_ZSt10_ConstructIiJEEvPT_DpOT0_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiET_S1_T0_RKT1_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_ = comdat any

$_ZSt8__fill_aIPiiEvT_S1_RKT0_ = comdat any

$_ZSt9__fill_a1IPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZNSt15__new_allocatorIiE8allocateEmPKv = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZNSt15__new_allocatorIiE10deallocateEPim = comdat any

$_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZSt14__relocate_a_1IiiENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E = comdat any

$_ZSt12__niter_baseIPiET_S1_ = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNKSt6vectorIiSaIiEE11_M_data_ptrIiEEPT_S4_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE12emplace_backIJS1_EEERS1_DpOT_ = comdat any

$_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ = comdat any

$_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE3endEv = comdat any

$_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE4backEv = comdat any

$_ZNSt15__new_allocatorIN6openmc13InterpolationEE9constructIS1_JS1_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZN9__gnu_cxxmiIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE5beginEv = comdat any

$_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE11_M_allocateEm = comdat any

$_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE8max_sizeEv = comdat any

$_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE8max_sizeERKS2_ = comdat any

$_ZNKSt15__new_allocatorIN6openmc13InterpolationEE8max_sizeEv = comdat any

$_ZNKSt15__new_allocatorIN6openmc13InterpolationEE11_M_max_sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE8allocateERS2_m = comdat any

$_ZNSt15__new_allocatorIN6openmc13InterpolationEE8allocateEmPKv = comdat any

$_ZSt12__relocate_aIPN6openmc13InterpolationES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt14__relocate_a_1IN6openmc13InterpolationES1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E = comdat any

$_ZSt12__niter_baseIPN6openmc13InterpolationEET_S3_ = comdat any

$_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE10deallocateERS2_PS1_m = comdat any

$_ZNSt15__new_allocatorIN6openmc13InterpolationEE10deallocateEPS1_m = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEmiEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEC2Ev = comdat any

$_ZN2xt19xcontainer_semanticINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEC2Ev = comdat any

$_ZNSaIdEC2Ev = comdat any

$_ZN2xt7uvectorIdSaIdEEC2EmRKdRKS1_ = comdat any

$_ZNSt15__new_allocatorIdED2Ev = comdat any

$_ZN2xt20xsharable_expressionINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEED2Ev = comdat any

$_ZN2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEED2Ev = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EEC2Ev = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EEC2Ev = comdat any

$_ZN3xtl13make_sequenceIN2xt7svectorImLm4ESaImELb1EEEEET_NS5_9size_typeENS5_10value_typeE = comdat any

$_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE9dimensionEv = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EEaSEOS2_ = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EED2Ev = comdat any

$_ZN3xtl13make_sequenceIN2xt7svectorIlLm4ESaIlELb1EEEEET_NS5_9size_typeENS5_10value_typeE = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EEaSEOS2_ = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EED2Ev = comdat any

$_ZNSaImEC2Ev = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EEC2ERKS1_ = comdat any

$_ZNSt15__new_allocatorImED2Ev = comdat any

$_ZNSt15__new_allocatorImEC2Ev = comdat any

$_ZNSaImEC2ERKS_ = comdat any

$_ZSt5beginImLm4EEPT_RAT0__S0_ = comdat any

$_ZSt3endImLm4EEPT_RAT0__S0_ = comdat any

$_ZNSt15__new_allocatorImEC2ERKS0_ = comdat any

$_ZNSaIlEC2Ev = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EEC2ERKS1_ = comdat any

$_ZNSt15__new_allocatorIlED2Ev = comdat any

$_ZNSt15__new_allocatorIlEC2Ev = comdat any

$_ZNSaIlEC2ERKS_ = comdat any

$_ZSt5beginIlLm4EEPT_RAT0__S0_ = comdat any

$_ZSt3endIlLm4EEPT_RAT0__S0_ = comdat any

$_ZNSt15__new_allocatorIlEC2ERKS0_ = comdat any

$_ZN3xtl6detail16sequence_builderIN2xt7svectorImLm4ESaImELb1EEEE4makeEmm = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EEC2EmRKmRKS1_ = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EE6assignEmRKm = comdat any

$_ZNK2xt7svectorImLm4ESaImELb1EE8capacityEv = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EE4growEm = comdat any

$_ZSt4fillIPmmEvT_S1_RKT0_ = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EE5beginEv = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EE3endEv = comdat any

$_ZNK2xt7svectorImLm4ESaImELb1EE4sizeEv = comdat any

$_ZNSt15__new_allocatorImE8allocateEmPKv = comdat any

$_ZSt18uninitialized_copyIPmS0_ET0_T_S2_S1_ = comdat any

$_ZNKSt15__new_allocatorImE11_M_max_sizeEv = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPmS2_EET0_T_S4_S3_ = comdat any

$_ZSt4copyIPmS0_ET0_T_S2_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPmET_S1_ = comdat any

$_ZSt12__niter_wrapIPmET_RKS1_S1_ = comdat any

$_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPmET_S1_ = comdat any

$_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_ = comdat any

$_ZSt8__fill_aIPmmEvT_S1_RKT0_ = comdat any

$_ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE5shapeEv = comdat any

$_ZNKR2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12derived_castEv = comdat any

$_ZNK2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE10shape_implEv = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EE6assignIPmEEvT_S5_ = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EE8on_stackEv = comdat any

$_ZN2xt6detail23safe_destroy_deallocateISaImEEEvRT_NSt16allocator_traitsIS3_E7pointerENS6_9size_typeE = comdat any

$_ZN3xtl6detail16sequence_builderIN2xt7svectorIlLm4ESaIlELb1EEEE4makeEml = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EEC2EmRKlRKS1_ = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EE6assignEmRKl = comdat any

$_ZNK2xt7svectorIlLm4ESaIlELb1EE8capacityEv = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EE4growEm = comdat any

$_ZSt4fillIPllEvT_S1_RKT0_ = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EE5beginEv = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EE3endEv = comdat any

$_ZNK2xt7svectorIlLm4ESaIlELb1EE4sizeEv = comdat any

$_ZNSt15__new_allocatorIlE8allocateEmPKv = comdat any

$_ZSt18uninitialized_copyIPlS0_ET0_T_S2_S1_ = comdat any

$_ZNSt15__new_allocatorIlE10deallocateEPlm = comdat any

$_ZNKSt15__new_allocatorIlE11_M_max_sizeEv = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPlS2_EET0_T_S4_S3_ = comdat any

$_ZSt4copyIPlS0_ET0_T_S2_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPlS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPlET_S1_ = comdat any

$_ZSt12__niter_wrapIPlET_RKS1_S1_ = comdat any

$_ZSt14__copy_move_a1ILb0EPlS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPlET_S1_ = comdat any

$_ZSt14__copy_move_a2ILb0EPlS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_ = comdat any

$_ZSt8__fill_aIPllEvT_S1_RKT0_ = comdat any

$_ZSt9__fill_a1IPllEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EE6assignIPlEEvT_S5_ = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EE8on_stackEv = comdat any

$_ZN2xt6detail23safe_destroy_deallocateISaIlEEEvRT_NSt16allocator_traitsIS3_E7pointerENS6_9size_typeE = comdat any

$_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm = comdat any

$_ZN2xt14xsemantic_baseINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEC2Ev = comdat any

$_ZN2xt20xsharable_expressionINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEC2Ev = comdat any

$_ZNSt10shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEEC2EDn = comdat any

$_ZNSt10shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEEC2Ev = comdat any

$_ZNSt12__shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEELN9__gnu_cxx12_Lock_policyE2EEC2Ev = comdat any

$_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev = comdat any

$_ZNSaIdEC2ERKS_ = comdat any

$_ZSt18uninitialized_fillIPddEvT_S1_RKT0_ = comdat any

$_ZNSt15__new_allocatorIdEC2ERKS0_ = comdat any

$_ZNSt20__uninitialized_fillILb1EE13__uninit_fillIPddEEvT_S3_RKT0_ = comdat any

$_ZSt4fillIPddEvT_S1_RKT0_ = comdat any

$_ZNSt12__shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEELN9__gnu_cxx12_Lock_policyE2EED2Ev = comdat any

$_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev = comdat any

$_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv = comdat any

$_ZN9__gnu_cxx27__exchange_and_add_dispatchEPii = comdat any

$_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv = comdat any

$_ZN9__gnu_cxx20__is_single_threadedEv = comdat any

$_ZN9__gnu_cxx25__exchange_and_add_singleEPii = comdat any

$_ZN9__gnu_cxx18__exchange_and_addEPVii = comdat any

$_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv = comdat any

$_ZN2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE6resizeIRSt6vectorImS7_EEEvOT_b = comdat any

$_ZN2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE4dataEv = comdat any

$_ZNKSt6vectorImSaImEE4sizeEv = comdat any

$_ZSt5equalIN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEES2_EbT_S7_T0_ = comdat any

$_ZSt5beginISt6vectorImSaImEEEDTcldtfp_5beginEERT_ = comdat any

$_ZSt3endISt6vectorImSaImEEEDTcldtfp_3endEERT_ = comdat any

$_ZSt5beginIN2xt7svectorImLm4ESaImELb1EEEEDTcldtfp_5beginEERT_ = comdat any

$_ZN3xtl16forward_sequenceIN2xt7svectorImLm4ESaImELb1EEERSt6vectorImS3_EEEDcRNSt16remove_referenceIT0_E4typeE = comdat any

$_ZN2xt16resize_containerINS_7svectorIlLm4ESaIlELb1EEEEEbRT_NS4_9size_typeE = comdat any

$_ZN2xt15compute_stridesILNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS2_IlLm4ESaIlELb1EEES6_EEmRKT0_S1_RT1_RT2_ = comdat any

$_ZN2xt6detail21resize_data_containerINS_7uvectorIdSaIdEEEmEEvRT_T0_ = comdat any

$_ZN2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE7storageEv = comdat any

$_ZSt11__equal_auxIN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEES2_EbT_S7_T0_ = comdat any

$_ZSt12__equal_aux1IPmS0_EbT_S1_T0_ = comdat any

$_ZSt12__niter_baseIPmSt6vectorImSaImEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE = comdat any

$_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_ = comdat any

$_ZSt8__memcmpImmEiPKT_PKT0_m = comdat any

$_ZN3xtl6detail23sequence_forwarder_implIN2xt7svectorImLm4ESaImELb1EEESt6vectorImS4_EvE7forwardIS7_EEDaRKT_ = comdat any

$_ZSt5beginISt6vectorImSaImEEEDTcldtfp_5beginEERKT_ = comdat any

$_ZSt3endISt6vectorImSaImEEEDTcldtfp_3endEERKT_ = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EEC2IN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImS1_EEEvEET_SB_RKS1_ = comdat any

$_ZNKSt6vectorImSaImEE5beginEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEC2ERKS2_ = comdat any

$_ZNKSt6vectorImSaImEE3endEv = comdat any

$_ZN2xt7svectorImLm4ESaImELb1EE6assignIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImS1_EEEEEvT_SB_ = comdat any

$_ZN9__gnu_cxxmiIPKmSt6vectorImSaImEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET0_T_SA_S9_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEE4baseEv = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET0_T_SA_S9_ = comdat any

$_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEET_S8_ = comdat any

$_ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKmSt6vectorImSaImEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE = comdat any

$_ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_ = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EE6resizeEm = comdat any

$_ZN2xt6detail15compute_stridesILNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS3_IlLm4ESaIlELb1EEEPS7_EEmRKT0_S2_RT1_T2_ = comdat any

$_ZN2xt7svectorIlLm4ESaIlELb1EEixEm = comdat any

$_ZNK2xt7svectorImLm4ESaImELb1EEixEm = comdat any

$_ZN2xt6detail13adapt_stridesINS_7svectorImLm4ESaImELb1EEENS2_IlLm4ESaIlELb1EEEPS6_EEvRKT_RT0_T1_NSB_9size_typeE = comdat any

$_ZN2xt16resize_containerINS_7uvectorIdSaIdEEEEEbRT_NS4_9size_typeE = comdat any

$_ZN2xt7uvectorIdSaIdEE6resizeEm = comdat any

$_ZN2xt7uvectorIdSaIdEE11resize_implEm = comdat any

$_ZNK2xt7uvectorIdSaIdEE4sizeEv = comdat any

$_ZN2xt6detail18safe_init_allocateISaIdEEENSt16allocator_traitsIT_E7pointerERS4_NS5_9size_typeE = comdat any

$_ZN2xt6detail23safe_destroy_deallocateISaIdEEEvRT_NSt16allocator_traitsIS3_E7pointerENS6_9size_typeE = comdat any

$_ZNR2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12derived_castEv = comdat any

$_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEE12storage_implEv = comdat any

$_ZN2xt7uvectorIdSaIdEE4dataEv = comdat any

$_ZN2xt6detail14make_view_implIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJLm0EEJiEEEDaOT_St16integer_sequenceImJXspT0_EEEDpOT1_ = comdat any

$_ZN2xt24get_slice_implementationINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEiEEDaRT_OT0_m = comdat any

$_ZN2xt6detail26get_underlying_shape_indexINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEmm = comdat any

$_ZN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEC2ISB_lJEEEOT_OT0_DpOT1_ = comdat any

$_ZNK2xt6detail27slice_implementation_getterIiEclINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEiEEDcRT_OT0_m = comdat any

$_ZNK2xt6detail27slice_implementation_getterIiE9get_sliceINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEiEEDcRT_OT0_mSt17integral_constantIbLb1EE = comdat any

$_ZNK2xt17xconst_accessibleINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE5shapeEm = comdat any

$_ZNK2xt17xconst_accessibleINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12derived_castEv = comdat any

$_ZN2xt20newaxis_count_beforeIJiEEEmm = comdat any

$_ZN2xt6detail18newaxis_count_implIiJvEE5countEm = comdat any

$_ZN2xt6detail18newaxis_count_implIvJEE5countEm = comdat any

$_ZN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEC2ISB_lJEEESt17integral_constantIbLb1EEOT_OT0_DpOT1_ = comdat any

$_ZN2xt14xview_semanticINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEC2Ev = comdat any

$_ZNSt5tupleIJiEEC2IJlELb1ETnNSt9enable_ifIXclsr4_TCCIXT0_EEE29__is_implicitly_constructibleIDpT_EEEbE4typeELb1EEEDpOS3_ = comdat any

$_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE13compute_shapeESt17integral_constantIbLb1EE = comdat any

$_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE7stridesEv = comdat any

$_ZN2xt13sequence_viewINS_7svectorIlLm4ESaIlELb1EEELl1ELln1EEC2ERKS3_ = comdat any

$_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE11backstridesEv = comdat any

$_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE16data_offset_implIJLm0EEEEmSt16integer_sequenceImJXspT_EEE = comdat any

$_ZN2xt14xsemantic_baseINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEC2Ev = comdat any

$_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEC2Ev = comdat any

$_ZNSt10shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEEEC2EDn = comdat any

$_ZNSt10shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEEEC2Ev = comdat any

$_ZNSt12__shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEELN9__gnu_cxx12_Lock_policyE2EEC2Ev = comdat any

$_ZNSt11_Tuple_implILm0EJiEEC2IlEEOT_ = comdat any

$_ZNSt10_Head_baseILm0EiLb0EEC2IlEEOT_ = comdat any

$_ZN2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EEC2ERKS3_ = comdat any

$_ZNK2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12strides_implEv = comdat any

$_ZNK2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE16backstrides_implEv = comdat any

$_ZN2xt5valueIiiEENSt9enable_ifIXntsr9is_xsliceIT_EE5valueEmE4typeERKS2_T0_ = comdat any

$_ZSt3getILm0EJiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_ = comdat any

$_ZNSt5arrayIlLm1EEixEm = comdat any

$_ZNK2xt7svectorIlLm4ESaIlELb1EEixEm = comdat any

$_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE11data_offsetEv = comdat any

$_ZSt12__get_helperILm0EiJEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJiEE7_M_headERKS0_ = comdat any

$_ZNSt10_Head_baseILm0EiLb0EE7_M_headERKS0_ = comdat any

$_ZNSt14__array_traitsIlLm1EE6_S_refERA1_Klm = comdat any

$_ZSt13__copy_move_aILb0EPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET1_T0_S7_S6_ = comdat any

$_ZSt12__miter_baseIPdET_S1_ = comdat any

$_ZSt12__niter_wrapISt20back_insert_iteratorISt6vectorIdSaIdEEEET_RKS5_S5_ = comdat any

$_ZSt14__copy_move_a1ILb0EPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET1_T0_S7_S6_ = comdat any

$_ZSt12__niter_baseISt20back_insert_iteratorISt6vectorIdSaIdEEEET_S5_ = comdat any

$_ZSt14__copy_move_a2ILb0EPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET1_T0_S7_S6_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPdSt20back_insert_iteratorISt6vectorIdSaIdEEEEET0_T_SA_S9_ = comdat any

$_ZNSt20back_insert_iteratorISt6vectorIdSaIdEEEdeEv = comdat any

$_ZNSt20back_insert_iteratorISt6vectorIdSaIdEEEaSERKd = comdat any

$_ZNSt20back_insert_iteratorISt6vectorIdSaIdEEEppEv = comdat any

$_ZNSt6vectorIdSaIdEE9push_backERKd = comdat any

$_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_ = comdat any

$_ZNSt6vectorIdSaIdEE3endEv = comdat any

$_ZNSt15__new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_ = comdat any

$_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZNSt6vectorIdSaIdEE5beginEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_ = comdat any

$_ZN3xtl3mpl9static_ifILb1EZN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEE5beginILS9_1EEENSt11conditionalIXeqT_L_ZNSH_13static_layoutEEEPdNS2_9xiteratorINS2_8xstepperISG_EEPNS2_13sequence_viewISC_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_ZNSI_ILS9_1EEEST_vEUlSU_E0_EEDcRKT0_RKT1_ = comdat any

$_ZN3xtl3mpl9static_ifIZN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEE5beginILS9_1EEENSt11conditionalIXeqT_L_ZNSH_13static_layoutEEEPdNS2_9xiteratorINS2_8xstepperISG_EEPNS2_13sequence_viewISC_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_ZNSI_ILS9_1EEEST_vEUlSU_E0_EEDcSt17integral_constantIbLb1EERKSU_RKT0_ = comdat any

$_ZZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE5beginILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEvENKUlT_E_clIN3xtl8identityEEEDaSR_ = comdat any

$_ZNK3xtl8identityclIRN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEEEEEOT_SK_ = comdat any

$_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE12derived_castEv = comdat any

$_ZN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE13storage_beginISA_EENSt9enable_ifIXaasr18has_data_interfaceIT_EE5valueL_ZNSC_15is_strided_viewEEEPdE4typeEv = comdat any

$_ZN2xt7uvectorIdSaIdEE5beginEv = comdat any

$_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE11data_offsetISA_EENSt9enable_ifIXaasr18has_data_interfaceIT_EE5valueL_ZNSC_15is_strided_viewEEEmE4typeEv = comdat any

$_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE15compute_stridesESt17integral_constantIbLb1EE = comdat any

$_ZN3xtl3mpl9static_ifILb1EZN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEE3endILS9_1EEENSt11conditionalIXeqT_L_ZNSH_13static_layoutEEEPdNS2_9xiteratorINS2_8xstepperISG_EEPNS2_13sequence_viewISC_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_ZNSI_ILS9_1EEEST_vEUlSU_E0_EEDcRKT0_RKT1_ = comdat any

$_ZN3xtl3mpl9static_ifIZN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEE3endILS9_1EEENSt11conditionalIXeqT_L_ZNSH_13static_layoutEEEPdNS2_9xiteratorINS2_8xstepperISG_EEPNS2_13sequence_viewISC_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_ZNSI_ILS9_1EEEST_vEUlSU_E0_EEDcSt17integral_constantIbLb1EERKSU_RKT0_ = comdat any

$_ZZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE3endILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEvENKUlT_E_clIN3xtl8identityEEEDaSR_ = comdat any

$_ZN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE11storage_endISA_EENSt9enable_ifIXaasr18has_data_interfaceIT_EE5valueL_ZNSC_15is_strided_viewEEEPdE4typeEv = comdat any

$_ZNK2xt17xconst_accessibleINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE4sizeEv = comdat any

$_ZN2xt12compute_sizeINS_13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EEEEEmRKT_ = comdat any

$_ZNK2xt17xconst_accessibleINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE12derived_castEv = comdat any

$_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE5shapeEv = comdat any

$_ZN2xt6detail17compute_size_implINS_13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EEEEEmRKT_St17integral_constantIbLb0EE = comdat any

$_ZSt10accumulateIPKmmSt10multipliesImEET0_T_S5_S4_T1_ = comdat any

$_ZNK2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EE6cbeginEv = comdat any

$_ZNK2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EE4cendEv = comdat any

$_ZNKSt10multipliesImEclERKmS2_ = comdat any

$_ZNK2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EE5beginEv = comdat any

$_ZNK2xt7svectorImLm4ESaImELb1EE5beginEv = comdat any

$_ZNK2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EE3endEv = comdat any

$_ZNK2xt7svectorImLm4ESaImELb1EE3endEv = comdat any

$_ZNSt20back_insert_iteratorISt6vectorIdSaIdEEEC2ERS2_ = comdat any

$_ZNSt12__shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEELN9__gnu_cxx12_Lock_policyE2EED2Ev = comdat any

$_ZN2xt7uvectorIdSaIdEED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZNSt15__new_allocatorIiED2Ev = comdat any

$_ZSt8_DestroyIPN6openmc13InterpolationES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN6openmc13InterpolationEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN6openmc13InterpolationEEEvT_S5_ = comdat any

$_ZNSt15__new_allocatorIN6openmc13InterpolationEED2Ev = comdat any

$_ZNKSt6vectorIdSaIdEEixEm = comdat any

$_ZN6openmc17lower_bound_indexIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEdEENSt15iterator_traitsIT_E15difference_typeESA_SA_RKT0_ = comdat any

$_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EEixEm = comdat any

$_ZNKSt6vectorIiSaIiEEixEm = comdat any

$_ZN9__gnu_cxxmiIPKdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_ = comdat any

$_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEdET_S8_S8_RKT0_ = comdat any

$_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEdNS0_5__ops14_Iter_less_valEET_SA_SA_RKT0_T1_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_less_valEv = comdat any

$_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_ = comdat any

$_ZSt7advanceIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEElEvRT_T0_ = comdat any

$_ZNK9__gnu_cxx5__ops14_Iter_less_valclINS_17__normal_iteratorIPKdSt6vectorIdSaIdEEEES4_EEbT_RT0_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEppEv = comdat any

$_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_ = comdat any

$_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEElEvRT_T0_St26random_access_iterator_tag = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEpLEl = comdat any

$_ZN6openmc10DataBuffer3addIiEEvRKSt6vectorIT_SaIS3_EE = comdat any

$_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZNSt6vectorIiSaIiEE9push_backEOi = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZN6openmc10DataBuffer3addImEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_ = comdat any

$_ZNKSt6vectorIiSaIiEE4dataEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt6vectorIiSaIiEE12emplace_backIJiEEERiDpOT_ = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_ = comdat any

$_ZNSt6vectorIiSaIiEE4backEv = comdat any

$_ZNSt15__new_allocatorIiE9constructIiJiEEEvPT_DpOT0_ = comdat any

$_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmiEl = comdat any

$_ZNK3gsl4spanIKdEixEm = comdat any

$_ZN6openmc17lower_bound_indexIPKddEENSt15iterator_traitsIT_E15difference_typeES4_S4_RKT0_ = comdat any

$_ZNK3gsl4spanIKiEixEm = comdat any

$_ZSt11lower_boundIPKddET_S2_S2_RKT0_ = comdat any

$_ZSt13__lower_boundIPKddN9__gnu_cxx5__ops14_Iter_less_valEET_S5_S5_RKT0_T1_ = comdat any

$_ZSt8distanceIPKdENSt15iterator_traitsIT_E15difference_typeES3_S3_ = comdat any

$_ZSt7advanceIPKdlEvRT_T0_ = comdat any

$_ZNK9__gnu_cxx5__ops14_Iter_less_valclIPKdS3_EEbT_RT0_ = comdat any

$_ZSt10__distanceIPKdENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPKdENSt15iterator_traitsIT_E17iterator_categoryERKS3_ = comdat any

$_ZSt9__advanceIPKdlEvRT_T0_St26random_access_iterator_tag = comdat any

$_ZN3gsl4spanIKiEC2EPS1_m = comdat any

$_ZN6openmc12read_datasetIdLm2EEEvlPKcRSt5arrayIT_XT0_EEb = comdat any

$_ZNSt5arrayIdLm2EEixEm = comdat any

$_ZNSt5arrayIdLm2EE4dataEv = comdat any

$_ZNSt14__array_traitsIdLm2EE6_S_ptrERA2_Kd = comdat any

$_ZNSt14__array_traitsIdLm2EE6_S_refERA2_Kdm = comdat any

$_ZN6openmc10DataBuffer3addIdEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_ = comdat any

$_ZNK6openmc23IncoherentElasticXSFlat12debye_wallerEv = comdat any

$_ZNK6openmc23IncoherentElasticXSFlat8bound_xsEv = comdat any

$_ZTIN6openmc10Function1DE = comdat any

$_ZTSN6openmc10Function1DE = comdat any

$_ZTVN6openmc10Function1DE = comdat any

@dagmc = external global i8, align 1
@run_CE = external global i8, align 1
@max_lost_particles = external global i32, align 4
@gen_per_batch = external global i32, align 4
@n_particles = external global i64, align 8
@_ZTVN6openmc10PolynomialE = unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6openmc10PolynomialE, ptr @_ZNK6openmc10PolynomialclEd, ptr @_ZN6openmc10PolynomialD2Ev, ptr @_ZN6openmc10PolynomialD0Ev, ptr @_ZNK6openmc10Polynomial9serializeERNS_10DataBufferE] }, align 8
@_ZTIN6openmc10PolynomialE = constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6openmc10PolynomialE, ptr @_ZTIN6openmc10Function1DE }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global [0 x ptr]
@_ZTSN6openmc10PolynomialE = constant [22 x i8] c"N6openmc10PolynomialE\00", align 1
@_ZTIN6openmc10Function1DE = linkonce_odr constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN6openmc10Function1DE }, comdat, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external global [0 x ptr]
@_ZTSN6openmc10Function1DE = linkonce_odr constant [22 x i8] c"N6openmc10Function1DE\00", comdat, align 1
@_ZTVN6openmc11Tabulated1DE = unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6openmc11Tabulated1DE, ptr @_ZNK6openmc11Tabulated1DclEd, ptr @_ZN6openmc11Tabulated1DD2Ev, ptr @_ZN6openmc11Tabulated1DD0Ev, ptr @_ZNK6openmc11Tabulated1D9serializeERNS_10DataBufferE] }, align 8
@_ZTIN6openmc11Tabulated1DE = constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6openmc11Tabulated1DE, ptr @_ZTIN6openmc10Function1DE }, align 8
@_ZTSN6openmc11Tabulated1DE = constant [23 x i8] c"N6openmc11Tabulated1DE\00", align 1
@_ZTVN6openmc17CoherentElasticXSE = unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6openmc17CoherentElasticXSE, ptr @_ZNK6openmc17CoherentElasticXSclEd, ptr @_ZN6openmc17CoherentElasticXSD2Ev, ptr @_ZN6openmc17CoherentElasticXSD0Ev, ptr @_ZNK6openmc17CoherentElasticXS9serializeERNS_10DataBufferE] }, align 8
@_ZTIN6openmc17CoherentElasticXSE = constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6openmc17CoherentElasticXSE, ptr @_ZTIN6openmc10Function1DE }, align 8
@_ZTSN6openmc17CoherentElasticXSE = constant [29 x i8] c"N6openmc17CoherentElasticXSE\00", align 1
@_ZTVN6openmc19IncoherentElasticXSE = unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6openmc19IncoherentElasticXSE, ptr @_ZNK6openmc19IncoherentElasticXSclEd, ptr @_ZN6openmc10Function1DD2Ev, ptr @_ZN6openmc19IncoherentElasticXSD0Ev, ptr @_ZNK6openmc19IncoherentElasticXS9serializeERNS_10DataBufferE] }, align 8
@_ZTIN6openmc19IncoherentElasticXSE = constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6openmc19IncoherentElasticXSE, ptr @_ZTIN6openmc10Function1DE }, align 8
@_ZTSN6openmc19IncoherentElasticXSE = constant [31 x i8] c"N6openmc19IncoherentElasticXSE\00", align 1
@_ZN6openmcL12DEPLETION_RXE = internal constant %"struct.std::array" { [6 x i32] [i32 102, i32 103, i32 107, i32 16, i32 17, i32 37] }, align 4
@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@.str = private unnamed_addr constant [28 x i8] c"Invalid interpolation code.\00", align 1
@_ZTISt13runtime_error = external constant ptr
@.str.1 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"Tabulated1D\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"Polynomial\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"CoherentElastic\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"IncoherentElastic\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"Unknown function type \00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c" for dataset \00", align 1
@.str.8 = private unnamed_addr constant [50 x i8] c"basic_string: construction from null is not valid\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"basic_string::replace\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@_ZTVN6openmc10Function1DE = linkonce_odr unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6openmc10Function1DE, ptr @__cxa_pure_virtual, ptr @_ZN6openmc10Function1DD2Ev, ptr @_ZN6openmc10Function1DD0Ev, ptr @__cxa_pure_virtual] }, comdat, align 8
@_ZN6openmc9H5TypeMapIdE7type_idE = external constant i64, align 8
@.str.12 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"breakpoints\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"interpolation\00", align 1
@_ZN6openmc9H5TypeMapIiE7type_idE = external constant i64, align 8
@.str.15 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@_ZZL18__gthread_active_pvE20__gthread_active_ptr = internal constant ptr @__pthread_key_create, align 8
@.str.16 = private unnamed_addr constant [30 x i8] c"Invalid interpolation scheme.\00", align 1
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_endf.cpp, ptr null }]

@_ZN6openmc10PolynomialC1El = unnamed_addr alias void (ptr, i64), ptr @_ZN6openmc10PolynomialC2El
@_ZN6openmc11Tabulated1DC1El = unnamed_addr alias void (ptr, i64), ptr @_ZN6openmc11Tabulated1DC2El
@_ZN6openmc15Tabulated1DFlatC1EPKh = unnamed_addr alias void (ptr, ptr), ptr @_ZN6openmc15Tabulated1DFlatC2EPKh
@_ZN6openmc17CoherentElasticXSC1El = unnamed_addr alias void (ptr, i64), ptr @_ZN6openmc17CoherentElasticXSC2El
@_ZN6openmc19IncoherentElasticXSC1El = unnamed_addr alias void (ptr, i64), ptr @_ZN6openmc19IncoherentElasticXSC2El

; Function Attrs: mustprogress uwtable
define noundef double @_ZNK6openmc10PolynomialclEd(ptr noundef nonnull align 8 dereferenceable(32) %this, double noundef %x) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %x.addr = alloca double, align 8
  %y = alloca double, align 8
  %c = alloca %"class.std::reverse_iterator", align 8
  %ref.tmp = alloca %"class.std::reverse_iterator", align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !11
  store double %x, ptr %x.addr, align 8, !tbaa !16
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %y) #6
  store double 0.000000e+00, ptr %y, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 8, ptr %c) #6
  %coef_ = getelementptr inbounds nuw %"class.openmc::Polynomial", ptr %this1, i32 0, i32 1
  call void @_ZNKSt6vectorIdSaIdEE7crbeginEv(ptr dead_on_unwind writable sret(%"class.std::reverse_iterator") align 8 %c, ptr noundef nonnull align 8 dereferenceable(24) %coef_) #6
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %coef_2 = getelementptr inbounds nuw %"class.openmc::Polynomial", ptr %this1, i32 0, i32 1
  call void @_ZNKSt6vectorIdSaIdEE5crendEv(ptr dead_on_unwind writable sret(%"class.std::reverse_iterator") align 8 %ref.tmp, ptr noundef nonnull align 8 dereferenceable(24) %coef_2) #6
  %call = call noundef zeroext i1 @_ZStneIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEbRKSt16reverse_iteratorIT_ESC_(ptr noundef nonnull align 8 dereferenceable(8) %c, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp)
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  br i1 %call, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %c) #6
  br label %for.end

for.body:                                         ; preds = %for.cond
  %0 = load double, ptr %y, align 8, !tbaa !16
  %1 = load double, ptr %x.addr, align 8, !tbaa !16
  %call3 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %c)
  %2 = load double, ptr %call3, align 8, !tbaa !16
  %3 = call double @llvm.fmuladd.f64(double %0, double %1, double %2)
  store double %3, ptr %y, align 8, !tbaa !16
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %call4 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %c)
  br label %for.cond, !llvm.loop !18

for.end:                                          ; preds = %for.cond.cleanup
  %4 = load double, ptr %y, align 8, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr %y) #6
  ret double %4
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc10PolynomialD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !11
  %this1 = load ptr, ptr %this.addr, align 8
  store ptr getelementptr inbounds inrange(-16, 32) ({ [6 x ptr] }, ptr @_ZTVN6openmc10PolynomialE, i32 0, i32 0, i32 2), ptr %this1, align 8, !tbaa !20
  %coef_ = getelementptr inbounds nuw %"class.openmc::Polynomial", ptr %this1, i32 0, i32 1
  call void @_ZNSt6vectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %coef_) #6
  call void @_ZN6openmc10Function1DD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc10PolynomialD0Ev(ptr noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !11
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN6openmc10PolynomialD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %this1) #6
  call void @_ZdlPvm(ptr noundef %this1, i64 noundef 32) #23
  ret void
}

; Function Attrs: mustprogress uwtable
define void @_ZNK6openmc10Polynomial9serializeERNS_10DataBufferE(ptr noundef nonnull align 8 dereferenceable(32) %this, ptr noundef nonnull align 8 dereferenceable(28) %buffer) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %buffer.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !11
  store ptr %buffer, ptr %buffer.addr, align 8, !tbaa !22
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  call void @_ZN6openmc10DataBuffer3addIiEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %0, i32 noundef 0)
  %1 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  %coef_ = getelementptr inbounds nuw %"class.openmc::Polynomial", ptr %this1, i32 0, i32 1
  %call = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %coef_) #6
  %conv = trunc i64 %call to i32
  call void @_ZN6openmc10DataBuffer3addIiEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %1, i32 noundef %conv)
  %2 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  %coef_2 = getelementptr inbounds nuw %"class.openmc::Polynomial", ptr %this1, i32 0, i32 1
  call void @_ZN6openmc10DataBuffer3addIdEEvRKSt6vectorIT_SaIS3_EE(ptr noundef nonnull align 8 dereferenceable(28) %2, ptr noundef nonnull align 8 dereferenceable(24) %coef_2)
  ret void
}

; Function Attrs: mustprogress uwtable
define noundef double @_ZNK6openmc11Tabulated1DclEd(ptr noundef nonnull align 8 dereferenceable(120) %this, double noundef %x) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %retval = alloca double, align 8
  %this.addr = alloca ptr, align 8
  %x.addr = alloca double, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %interp = alloca i32, align 4
  %j = alloca i32, align 4
  %x0 = alloca double, align 8
  %x1 = alloca double, align 8
  %y0 = alloca double, align 8
  %y1 = alloca double, align 8
  %r = alloca double, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %this, ptr %this.addr, align 8, !tbaa !24
  store double %x, ptr %x.addr, align 8, !tbaa !16
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  %0 = load double, ptr %x.addr, align 8, !tbaa !16
  %x_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 5
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt6vectorIdSaIdEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %x_, i64 noundef 0) #6
  %1 = load double, ptr %call, align 8, !tbaa !16
  %cmp = fcmp olt double %0, %1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %y_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 6
  %call2 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt6vectorIdSaIdEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %y_, i64 noundef 0) #6
  %2 = load double, ptr %call2, align 8, !tbaa !16
  store double %2, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup92

if.else:                                          ; preds = %entry
  %3 = load double, ptr %x.addr, align 8, !tbaa !16
  %x_3 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 5
  %n_pairs_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 4
  %4 = load i64, ptr %n_pairs_, align 8, !tbaa !26
  %sub = sub i64 %4, 1
  %call4 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt6vectorIdSaIdEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %x_3, i64 noundef %sub) #6
  %5 = load double, ptr %call4, align 8, !tbaa !16
  %cmp5 = fcmp ogt double %3, %5
  br i1 %cmp5, label %if.then6, label %if.else11

if.then6:                                         ; preds = %if.else
  %y_7 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 6
  %n_pairs_8 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 4
  %6 = load i64, ptr %n_pairs_8, align 8, !tbaa !26
  %sub9 = sub i64 %6, 1
  %call10 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt6vectorIdSaIdEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %y_7, i64 noundef %sub9) #6
  %7 = load double, ptr %call10, align 8, !tbaa !16
  store double %7, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup92

if.else11:                                        ; preds = %if.else
  %x_12 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 5
  %call13 = call ptr @_ZNKSt6vectorIdSaIdEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %x_12) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp, i32 0, i32 0
  store ptr %call13, ptr %coerce.dive, align 8
  %x_15 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 5
  %call16 = call ptr @_ZNKSt6vectorIdSaIdEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %x_15) #6
  %coerce.dive17 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp14, i32 0, i32 0
  store ptr %call16, ptr %coerce.dive17, align 8
  %coerce.dive18 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp, i32 0, i32 0
  %8 = load ptr, ptr %coerce.dive18, align 8
  %coerce.dive19 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp14, i32 0, i32 0
  %9 = load ptr, ptr %coerce.dive19, align 8
  %call20 = call noundef i64 @_ZN6openmc17lower_bound_indexIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEdEENSt15iterator_traitsIT_E15difference_typeESA_SA_RKT0_(ptr %8, ptr %9, ptr noundef nonnull align 8 dereferenceable(8) %x.addr)
  %conv = trunc i64 %call20 to i32
  store i32 %conv, ptr %i, align 4, !tbaa !44
  br label %if.end

if.end:                                           ; preds = %if.else11
  br label %if.end21

if.end21:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %interp) #6
  %n_regions_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 1
  %10 = load i64, ptr %n_regions_, align 8, !tbaa !46
  %cmp22 = icmp eq i64 %10, 0
  br i1 %cmp22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.end21
  store i32 2, ptr %interp, align 4, !tbaa !47
  br label %if.end37

if.else24:                                        ; preds = %if.end21
  %int_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 3
  %call25 = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EEixEm(ptr noundef nonnull align 8 dereferenceable(24) %int_, i64 noundef 0) #6
  %11 = load i32, ptr %call25, align 4, !tbaa !47
  store i32 %11, ptr %interp, align 4, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #6
  store i32 0, ptr %j, align 4, !tbaa !44
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else24
  %12 = load i32, ptr %j, align 4, !tbaa !44
  %conv26 = sext i32 %12 to i64
  %n_regions_27 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 1
  %13 = load i64, ptr %n_regions_27, align 8, !tbaa !46
  %cmp28 = icmp ult i64 %conv26, %13
  br i1 %cmp28, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup

for.body:                                         ; preds = %for.cond
  %14 = load i32, ptr %i, align 4, !tbaa !44
  %nbt_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 2
  %15 = load i32, ptr %j, align 4, !tbaa !44
  %conv29 = sext i32 %15 to i64
  %call30 = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNKSt6vectorIiSaIiEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %nbt_, i64 noundef %conv29) #6
  %16 = load i32, ptr %call30, align 4, !tbaa !44
  %cmp31 = icmp slt i32 %14, %16
  br i1 %cmp31, label %if.then32, label %if.end36

if.then32:                                        ; preds = %for.body
  %int_33 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 3
  %17 = load i32, ptr %j, align 4, !tbaa !44
  %conv34 = sext i32 %17 to i64
  %call35 = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EEixEm(ptr noundef nonnull align 8 dereferenceable(24) %int_33, i64 noundef %conv34) #6
  %18 = load i32, ptr %call35, align 4, !tbaa !47
  store i32 %18, ptr %interp, align 4, !tbaa !47
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end36:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end36
  %19 = load i32, ptr %j, align 4, !tbaa !44
  %inc = add nsw i32 %19, 1
  store i32 %inc, ptr %j, align 4, !tbaa !44
  br label %for.cond, !llvm.loop !49

cleanup:                                          ; preds = %if.then32, %for.cond.cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #6
  br label %for.end

for.end:                                          ; preds = %cleanup
  br label %if.end37

if.end37:                                         ; preds = %for.end, %if.then23
  %20 = load i32, ptr %interp, align 4, !tbaa !47
  %cmp38 = icmp eq i32 %20, 1
  br i1 %cmp38, label %if.then39, label %if.end43

if.then39:                                        ; preds = %if.end37
  %y_40 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 6
  %21 = load i32, ptr %i, align 4, !tbaa !44
  %conv41 = sext i32 %21 to i64
  %call42 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt6vectorIdSaIdEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %y_40, i64 noundef %conv41) #6
  %22 = load double, ptr %call42, align 8, !tbaa !16
  store double %22, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup91

if.end43:                                         ; preds = %if.end37
  call void @llvm.lifetime.start.p0(i64 8, ptr %x0) #6
  %x_44 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 5
  %23 = load i32, ptr %i, align 4, !tbaa !44
  %conv45 = sext i32 %23 to i64
  %call46 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt6vectorIdSaIdEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %x_44, i64 noundef %conv45) #6
  %24 = load double, ptr %call46, align 8, !tbaa !16
  store double %24, ptr %x0, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 8, ptr %x1) #6
  %x_47 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 5
  %25 = load i32, ptr %i, align 4, !tbaa !44
  %add = add nsw i32 %25, 1
  %conv48 = sext i32 %add to i64
  %call49 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt6vectorIdSaIdEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %x_47, i64 noundef %conv48) #6
  %26 = load double, ptr %call49, align 8, !tbaa !16
  store double %26, ptr %x1, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 8, ptr %y0) #6
  %y_50 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 6
  %27 = load i32, ptr %i, align 4, !tbaa !44
  %conv51 = sext i32 %27 to i64
  %call52 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt6vectorIdSaIdEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %y_50, i64 noundef %conv51) #6
  %28 = load double, ptr %call52, align 8, !tbaa !16
  store double %28, ptr %y0, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 8, ptr %y1) #6
  %y_53 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 6
  %29 = load i32, ptr %i, align 4, !tbaa !44
  %add54 = add nsw i32 %29, 1
  %conv55 = sext i32 %add54 to i64
  %call56 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt6vectorIdSaIdEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %y_53, i64 noundef %conv55) #6
  %30 = load double, ptr %call56, align 8, !tbaa !16
  store double %30, ptr %y1, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #6
  %31 = load i32, ptr %interp, align 4, !tbaa !47
  switch i32 %31, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb60
    i32 4, label %sw.bb67
    i32 5, label %sw.bb75
  ]

sw.bb:                                            ; preds = %if.end43
  %32 = load double, ptr %x.addr, align 8, !tbaa !16
  %33 = load double, ptr %x0, align 8, !tbaa !16
  %sub57 = fsub double %32, %33
  %34 = load double, ptr %x1, align 8, !tbaa !16
  %35 = load double, ptr %x0, align 8, !tbaa !16
  %sub58 = fsub double %34, %35
  %div = fdiv double %sub57, %sub58
  store double %div, ptr %r, align 8, !tbaa !16
  %36 = load double, ptr %y0, align 8, !tbaa !16
  %37 = load double, ptr %r, align 8, !tbaa !16
  %38 = load double, ptr %y1, align 8, !tbaa !16
  %39 = load double, ptr %y0, align 8, !tbaa !16
  %sub59 = fsub double %38, %39
  %40 = call double @llvm.fmuladd.f64(double %37, double %sub59, double %36)
  store double %40, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup86

sw.bb60:                                          ; preds = %if.end43
  %41 = load double, ptr %x.addr, align 8, !tbaa !16
  %42 = load double, ptr %x0, align 8, !tbaa !16
  %div61 = fdiv double %41, %42
  %call62 = call double @log(double noundef %div61) #6, !tbaa !44
  %43 = load double, ptr %x1, align 8, !tbaa !16
  %44 = load double, ptr %x0, align 8, !tbaa !16
  %div63 = fdiv double %43, %44
  %call64 = call double @log(double noundef %div63) #6, !tbaa !44
  %div65 = fdiv double %call62, %call64
  store double %div65, ptr %r, align 8, !tbaa !16
  %45 = load double, ptr %y0, align 8, !tbaa !16
  %46 = load double, ptr %r, align 8, !tbaa !16
  %47 = load double, ptr %y1, align 8, !tbaa !16
  %48 = load double, ptr %y0, align 8, !tbaa !16
  %sub66 = fsub double %47, %48
  %49 = call double @llvm.fmuladd.f64(double %46, double %sub66, double %45)
  store double %49, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup86

sw.bb67:                                          ; preds = %if.end43
  %50 = load double, ptr %x.addr, align 8, !tbaa !16
  %51 = load double, ptr %x0, align 8, !tbaa !16
  %sub68 = fsub double %50, %51
  %52 = load double, ptr %x1, align 8, !tbaa !16
  %53 = load double, ptr %x0, align 8, !tbaa !16
  %sub69 = fsub double %52, %53
  %div70 = fdiv double %sub68, %sub69
  store double %div70, ptr %r, align 8, !tbaa !16
  %54 = load double, ptr %y0, align 8, !tbaa !16
  %55 = load double, ptr %r, align 8, !tbaa !16
  %56 = load double, ptr %y1, align 8, !tbaa !16
  %57 = load double, ptr %y0, align 8, !tbaa !16
  %div71 = fdiv double %56, %57
  %call72 = call double @log(double noundef %div71) #6, !tbaa !44
  %mul = fmul double %55, %call72
  %call73 = call double @exp(double noundef %mul) #6, !tbaa !44
  %mul74 = fmul double %54, %call73
  store double %mul74, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup86

sw.bb75:                                          ; preds = %if.end43
  %58 = load double, ptr %x.addr, align 8, !tbaa !16
  %59 = load double, ptr %x0, align 8, !tbaa !16
  %div76 = fdiv double %58, %59
  %call77 = call double @log(double noundef %div76) #6, !tbaa !44
  %60 = load double, ptr %x1, align 8, !tbaa !16
  %61 = load double, ptr %x0, align 8, !tbaa !16
  %div78 = fdiv double %60, %61
  %call79 = call double @log(double noundef %div78) #6, !tbaa !44
  %div80 = fdiv double %call77, %call79
  store double %div80, ptr %r, align 8, !tbaa !16
  %62 = load double, ptr %y0, align 8, !tbaa !16
  %63 = load double, ptr %r, align 8, !tbaa !16
  %64 = load double, ptr %y1, align 8, !tbaa !16
  %65 = load double, ptr %y0, align 8, !tbaa !16
  %div81 = fdiv double %64, %65
  %call82 = call double @log(double noundef %div81) #6, !tbaa !44
  %mul83 = fmul double %63, %call82
  %call84 = call double @exp(double noundef %mul83) #6, !tbaa !44
  %mul85 = fmul double %62, %call84
  store double %mul85, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup86

sw.default:                                       ; preds = %if.end43
  %exception = call ptr @__cxa_allocate_exception(i64 16) #6
  invoke void @_ZNSt13runtime_errorC1EPKc(ptr noundef nonnull align 8 dereferenceable(16) %exception, ptr noundef @.str.16)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %sw.default
  call void @__cxa_throw(ptr %exception, ptr @_ZTISt13runtime_error, ptr @_ZNSt13runtime_errorD1Ev) #24
  unreachable

lpad:                                             ; preds = %sw.default
  %66 = landingpad { ptr, i32 }
          cleanup
  %67 = extractvalue { ptr, i32 } %66, 0
  store ptr %67, ptr %exn.slot, align 8
  %68 = extractvalue { ptr, i32 } %66, 1
  store i32 %68, ptr %ehselector.slot, align 4
  call void @__cxa_free_exception(ptr %exception) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %y1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %y0) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %x1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %x0) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %interp) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  br label %eh.resume

cleanup86:                                        ; preds = %sw.bb75, %sw.bb67, %sw.bb60, %sw.bb
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %y1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %y0) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %x1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %x0) #6
  br label %cleanup91

cleanup91:                                        ; preds = %cleanup86, %if.then39
  call void @llvm.lifetime.end.p0(i64 4, ptr %interp) #6
  br label %cleanup92

cleanup92:                                        ; preds = %cleanup91, %if.then6, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  %69 = load double, ptr %retval, align 8
  ret double %69

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val93 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val93
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc11Tabulated1DD2Ev(ptr noundef nonnull align 8 dereferenceable(120) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !24
  %this1 = load ptr, ptr %this.addr, align 8
  store ptr getelementptr inbounds inrange(-16, 32) ({ [6 x ptr] }, ptr @_ZTVN6openmc11Tabulated1DE, i32 0, i32 0, i32 2), ptr %this1, align 8, !tbaa !20
  %y_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 6
  call void @_ZNSt6vectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %y_) #6
  %x_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 5
  call void @_ZNSt6vectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %x_) #6
  %int_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 3
  call void @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %int_) #6
  %nbt_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %nbt_) #6
  call void @_ZN6openmc10Function1DD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc11Tabulated1DD0Ev(ptr noundef nonnull align 8 dereferenceable(120) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !24
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN6openmc11Tabulated1DD2Ev(ptr noundef nonnull align 8 dereferenceable(120) %this1) #6
  call void @_ZdlPvm(ptr noundef %this1, i64 noundef 120) #23
  ret void
}

; Function Attrs: mustprogress uwtable
define void @_ZNK6openmc11Tabulated1D9serializeERNS_10DataBufferE(ptr noundef nonnull align 8 dereferenceable(120) %this, ptr noundef nonnull align 8 dereferenceable(28) %buffer) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %buffer.addr = alloca ptr, align 8
  %interp = alloca %"class.std::vector", align 8
  %__range1 = alloca ptr, align 8
  %__begin1 = alloca %"class.__gnu_cxx::__normal_iterator.94", align 8
  %__end1 = alloca %"class.__gnu_cxx::__normal_iterator.94", align 8
  %x = alloca i32, align 4
  %ref.tmp = alloca i32, align 4
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %this, ptr %this.addr, align 8, !tbaa !24
  store ptr %buffer, ptr %buffer.addr, align 8, !tbaa !22
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  call void @_ZN6openmc10DataBuffer3addIiEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %0, i32 noundef 1)
  %1 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  %n_regions_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 1
  %2 = load i64, ptr %n_regions_, align 8, !tbaa !46
  %conv = trunc i64 %2 to i32
  call void @_ZN6openmc10DataBuffer3addIiEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %1, i32 noundef %conv)
  %3 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  %nbt_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 2
  call void @_ZN6openmc10DataBuffer3addIiEEvRKSt6vectorIT_SaIS3_EE(ptr noundef nonnull align 8 dereferenceable(28) %3, ptr noundef nonnull align 8 dereferenceable(24) %nbt_)
  call void @llvm.lifetime.start.p0(i64 24, ptr %interp) #6
  call void @_ZNSt6vectorIiSaIiEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %interp) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %__range1) #6
  %int_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 3
  store ptr %int_, ptr %__range1, align 8, !tbaa !50
  call void @llvm.lifetime.start.p0(i64 8, ptr %__begin1) #6
  %4 = load ptr, ptr %__range1, align 8, !tbaa !50
  %call = call ptr @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %4) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.94", ptr %__begin1, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__end1) #6
  %5 = load ptr, ptr %__range1, align 8, !tbaa !50
  %call2 = call ptr @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %5) #6
  %coerce.dive3 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.94", ptr %__end1, i32 0, i32 0
  store ptr %call2, ptr %coerce.dive3, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %call4 = call noundef zeroext i1 @_ZN9__gnu_cxxneIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(ptr noundef nonnull align 8 dereferenceable(8) %__begin1, ptr noundef nonnull align 8 dereferenceable(8) %__end1) #6
  br i1 %call4, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__end1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__begin1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__range1) #6
  br label %for.end

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %x) #6
  %call5 = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %__begin1) #6
  %6 = load i32, ptr %call5, align 4, !tbaa !47
  store i32 %6, ptr %x, align 4, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 4, ptr %ref.tmp) #6
  %7 = load i32, ptr %x, align 4, !tbaa !47
  store i32 %7, ptr %ref.tmp, align 4, !tbaa !44
  invoke void @_ZNSt6vectorIiSaIiEE9push_backEOi(ptr noundef nonnull align 8 dereferenceable(24) %interp, ptr noundef nonnull align 4 dereferenceable(4) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body
  call void @llvm.lifetime.end.p0(i64 4, ptr %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %x) #6
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont
  %call6 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %__begin1) #6
  br label %for.cond

lpad:                                             ; preds = %for.body
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  store ptr %9, ptr %exn.slot, align 8
  %10 = extractvalue { ptr, i32 } %8, 1
  store i32 %10, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %x) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__end1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__begin1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__range1) #6
  br label %ehcleanup

for.end:                                          ; preds = %for.cond.cleanup
  %11 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  invoke void @_ZN6openmc10DataBuffer3addIiEEvRKSt6vectorIT_SaIS3_EE(ptr noundef nonnull align 8 dereferenceable(28) %11, ptr noundef nonnull align 8 dereferenceable(24) %interp)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %for.end
  %12 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  %n_pairs_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 4
  %13 = load i64, ptr %n_pairs_, align 8, !tbaa !26
  invoke void @_ZN6openmc10DataBuffer3addImEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %12, i64 noundef %13)
          to label %invoke.cont9 unwind label %lpad7

invoke.cont9:                                     ; preds = %invoke.cont8
  %14 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  %x_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 5
  call void @_ZN6openmc10DataBuffer3addIdEEvRKSt6vectorIT_SaIS3_EE(ptr noundef nonnull align 8 dereferenceable(28) %14, ptr noundef nonnull align 8 dereferenceable(24) %x_)
  %15 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  %y_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 6
  call void @_ZN6openmc10DataBuffer3addIdEEvRKSt6vectorIT_SaIS3_EE(ptr noundef nonnull align 8 dereferenceable(28) %15, ptr noundef nonnull align 8 dereferenceable(24) %y_)
  call void @_ZNSt6vectorIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %interp) #6
  call void @llvm.lifetime.end.p0(i64 24, ptr %interp) #6
  ret void

lpad7:                                            ; preds = %invoke.cont8, %for.end
  %16 = landingpad { ptr, i32 }
          cleanup
  %17 = extractvalue { ptr, i32 } %16, 0
  store ptr %17, ptr %exn.slot, align 8
  %18 = extractvalue { ptr, i32 } %16, 1
  store i32 %18, ptr %ehselector.slot, align 4
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad7, %lpad
  call void @_ZNSt6vectorIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %interp) #6
  call void @llvm.lifetime.end.p0(i64 24, ptr %interp) #6
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val11 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val11
}

; Function Attrs: mustprogress uwtable
define noundef double @_ZNK6openmc17CoherentElasticXSclEd(ptr noundef nonnull align 8 dereferenceable(56) %this, double noundef %E) unnamed_addr #0 align 2 {
entry:
  %retval = alloca double, align 8
  %this.addr = alloca ptr, align 8
  %E.addr = alloca double, align 8
  %i_grid = alloca i64, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !52
  store double %E, ptr %E.addr, align 8, !tbaa !16
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load double, ptr %E.addr, align 8, !tbaa !16
  %bragg_edges_ = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 1
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt6vectorIdSaIdEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %bragg_edges_, i64 noundef 0) #6
  %1 = load double, ptr %call, align 8, !tbaa !16
  %cmp = fcmp olt double %0, %1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store double 0.000000e+00, ptr %retval, align 8
  br label %return

if.else:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %i_grid) #6
  %bragg_edges_2 = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 1
  %call3 = call ptr @_ZNKSt6vectorIdSaIdEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %bragg_edges_2) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp, i32 0, i32 0
  store ptr %call3, ptr %coerce.dive, align 8
  %bragg_edges_5 = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 1
  %call6 = call ptr @_ZNKSt6vectorIdSaIdEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %bragg_edges_5) #6
  %coerce.dive7 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp4, i32 0, i32 0
  store ptr %call6, ptr %coerce.dive7, align 8
  %coerce.dive8 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive8, align 8
  %coerce.dive9 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp4, i32 0, i32 0
  %3 = load ptr, ptr %coerce.dive9, align 8
  %call10 = call noundef i64 @_ZN6openmc17lower_bound_indexIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEdEENSt15iterator_traitsIT_E15difference_typeESA_SA_RKT0_(ptr %2, ptr %3, ptr noundef nonnull align 8 dereferenceable(8) %E.addr)
  store i64 %call10, ptr %i_grid, align 8, !tbaa !54
  %factors_ = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 2
  %4 = load i64, ptr %i_grid, align 8, !tbaa !54
  %call11 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt6vectorIdSaIdEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %factors_, i64 noundef %4) #6
  %5 = load double, ptr %call11, align 8, !tbaa !16
  %6 = load double, ptr %E.addr, align 8, !tbaa !16
  %div = fdiv double %5, %6
  store double %div, ptr %retval, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %i_grid) #6
  br label %return

return:                                           ; preds = %if.else, %if.then
  %7 = load double, ptr %retval, align 8
  ret double %7
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc17CoherentElasticXSD2Ev(ptr noundef nonnull align 8 dereferenceable(56) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !52
  %this1 = load ptr, ptr %this.addr, align 8
  store ptr getelementptr inbounds inrange(-16, 32) ({ [6 x ptr] }, ptr @_ZTVN6openmc17CoherentElasticXSE, i32 0, i32 0, i32 2), ptr %this1, align 8, !tbaa !20
  %factors_ = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 2
  call void @_ZNSt6vectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %factors_) #6
  %bragg_edges_ = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 1
  call void @_ZNSt6vectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %bragg_edges_) #6
  call void @_ZN6openmc10Function1DD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc17CoherentElasticXSD0Ev(ptr noundef nonnull align 8 dereferenceable(56) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !52
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN6openmc17CoherentElasticXSD2Ev(ptr noundef nonnull align 8 dereferenceable(56) %this1) #6
  call void @_ZdlPvm(ptr noundef %this1, i64 noundef 56) #23
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define void @_ZNK6openmc17CoherentElasticXS9serializeERNS_10DataBufferE(ptr noundef nonnull align 8 dereferenceable(56) %this, ptr noundef nonnull align 8 dereferenceable(28) %buffer) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %buffer.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !52
  store ptr %buffer, ptr %buffer.addr, align 8, !tbaa !22
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  call void @_ZN6openmc10DataBuffer3addIiEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %0, i32 noundef 2)
  %1 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  %bragg_edges_ = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 1
  %call = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %bragg_edges_) #6
  %conv = trunc i64 %call to i32
  call void @_ZN6openmc10DataBuffer3addIiEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %1, i32 noundef %conv)
  %2 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  %bragg_edges_2 = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 1
  call void @_ZN6openmc10DataBuffer3addIdEEvRKSt6vectorIT_SaIS3_EE(ptr noundef nonnull align 8 dereferenceable(28) %2, ptr noundef nonnull align 8 dereferenceable(24) %bragg_edges_2)
  %3 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  %factors_ = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 2
  call void @_ZN6openmc10DataBuffer3addIdEEvRKSt6vectorIT_SaIS3_EE(ptr noundef nonnull align 8 dereferenceable(28) %3, ptr noundef nonnull align 8 dereferenceable(24) %factors_)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define noundef double @_ZNK6openmc19IncoherentElasticXSclEd(ptr noundef nonnull align 8 dereferenceable(24) %this, double noundef %E) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %E.addr = alloca double, align 8
  %W = alloca double, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !55
  store double %E, ptr %E.addr, align 8, !tbaa !16
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %W) #6
  %debye_waller_ = getelementptr inbounds nuw %"class.openmc::IncoherentElasticXS", ptr %this1, i32 0, i32 2
  %0 = load double, ptr %debye_waller_, align 8, !tbaa !57
  store double %0, ptr %W, align 8, !tbaa !16
  %bound_xs_ = getelementptr inbounds nuw %"class.openmc::IncoherentElasticXS", ptr %this1, i32 0, i32 1
  %1 = load double, ptr %bound_xs_, align 8, !tbaa !59
  %div = fdiv double %1, 2.000000e+00
  %2 = load double, ptr %E.addr, align 8, !tbaa !16
  %mul = fmul double -4.000000e+00, %2
  %3 = load double, ptr %W, align 8, !tbaa !16
  %mul2 = fmul double %mul, %3
  %call = call double @exp(double noundef %mul2) #6, !tbaa !44
  %sub = fsub double 1.000000e+00, %call
  %4 = load double, ptr %E.addr, align 8, !tbaa !16
  %mul3 = fmul double 2.000000e+00, %4
  %5 = load double, ptr %W, align 8, !tbaa !16
  %mul4 = fmul double %mul3, %5
  %div5 = fdiv double %sub, %mul4
  %mul6 = fmul double %div, %div5
  call void @llvm.lifetime.end.p0(i64 8, ptr %W) #6
  ret double %mul6
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc10Function1DD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !60
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc19IncoherentElasticXSD0Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !55
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN6openmc10Function1DD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  call void @_ZdlPvm(ptr noundef %this1, i64 noundef 24) #23
  ret void
}

; Function Attrs: mustprogress uwtable
define void @_ZNK6openmc19IncoherentElasticXS9serializeERNS_10DataBufferE(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 8 dereferenceable(28) %buffer) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %buffer.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !55
  store ptr %buffer, ptr %buffer.addr, align 8, !tbaa !22
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  call void @_ZN6openmc10DataBuffer3addIiEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %0, i32 noundef 3)
  %1 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  call void @_ZN6openmc10DataBuffer5alignEi(ptr noundef nonnull align 8 dereferenceable(28) %1, i32 noundef 8)
  %2 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  %bound_xs_ = getelementptr inbounds nuw %"class.openmc::IncoherentElasticXS", ptr %this1, i32 0, i32 1
  %3 = load double, ptr %bound_xs_, align 8, !tbaa !59
  call void @_ZN6openmc10DataBuffer3addIdEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %2, double noundef %3)
  %4 = load ptr, ptr %buffer.addr, align 8, !tbaa !22
  %debye_waller_ = getelementptr inbounds nuw %"class.openmc::IncoherentElasticXS", ptr %this1, i32 0, i32 2
  %5 = load double, ptr %debye_waller_, align 8, !tbaa !57
  call void @_ZN6openmc10DataBuffer3addIdEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %4, double noundef %5)
  ret void
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init() #3 section ".text.startup" {
entry:
  call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %0 = call i32 @__cxa_atexit(ptr @_ZNSt8ios_base4InitD1Ev, ptr @_ZStL8__ioinit, ptr @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #5

; Function Attrs: nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) #6

; Function Attrs: mustprogress uwtable
define noundef i32 @_ZN6openmc10int2interpEi(i32 noundef %i) #0 personality ptr @__gxx_personality_v0 {
entry:
  %retval = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store i32 %i, ptr %i.addr, align 4, !tbaa !44
  %0 = load i32, ptr %i.addr, align 4, !tbaa !44
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 11, label %sw.bb
    i32 21, label %sw.bb
    i32 2, label %sw.bb1
    i32 12, label %sw.bb1
    i32 22, label %sw.bb1
    i32 3, label %sw.bb2
    i32 13, label %sw.bb2
    i32 23, label %sw.bb2
    i32 4, label %sw.bb3
    i32 14, label %sw.bb3
    i32 24, label %sw.bb3
    i32 5, label %sw.bb4
    i32 15, label %sw.bb4
    i32 25, label %sw.bb4
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i32 1, ptr %retval, align 4
  br label %return

sw.bb1:                                           ; preds = %entry, %entry, %entry
  store i32 2, ptr %retval, align 4
  br label %return

sw.bb2:                                           ; preds = %entry, %entry, %entry
  store i32 3, ptr %retval, align 4
  br label %return

sw.bb3:                                           ; preds = %entry, %entry, %entry
  store i32 4, ptr %retval, align 4
  br label %return

sw.bb4:                                           ; preds = %entry, %entry, %entry
  store i32 5, ptr %retval, align 4
  br label %return

sw.default:                                       ; preds = %entry
  %exception = call ptr @__cxa_allocate_exception(i64 16) #6
  invoke void @_ZNSt13runtime_errorC1EPKc(ptr noundef nonnull align 8 dereferenceable(16) %exception, ptr noundef @.str)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %sw.default
  call void @__cxa_throw(ptr %exception, ptr @_ZTISt13runtime_error, ptr @_ZNSt13runtime_errorD1Ev) #24
  unreachable

lpad:                                             ; preds = %sw.default
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  store ptr %2, ptr %exn.slot, align 8
  %3 = extractvalue { ptr, i32 } %1, 1
  store i32 %3, ptr %ehselector.slot, align 4
  call void @__cxa_free_exception(ptr %exception) #6
  br label %eh.resume

return:                                           ; preds = %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %4 = load i32, ptr %retval, align 4
  ret i32 %4

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val5 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val5
}

declare ptr @__cxa_allocate_exception(i64)

declare void @_ZNSt13runtime_errorC1EPKc(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef) unnamed_addr #4

declare i32 @__gxx_personality_v0(...)

declare void @__cxa_free_exception(ptr)

; Function Attrs: nounwind
declare void @_ZNSt13runtime_errorD1Ev(ptr noundef nonnull align 8 dereferenceable(16)) unnamed_addr #5

declare void @__cxa_throw(ptr, ptr, ptr)

; Function Attrs: mustprogress nounwind uwtable
define noundef zeroext i1 @_ZN6openmc10is_fissionEi(i32 noundef %mt) #2 {
entry:
  %mt.addr = alloca i32, align 4
  store i32 %mt, ptr %mt.addr, align 4, !tbaa !44
  %0 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp = icmp eq i32 %0, 18
  br i1 %cmp, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp1 = icmp eq i32 %1, 19
  br i1 %cmp1, label %lor.end, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp3 = icmp eq i32 %2, 20
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp5 = icmp eq i32 %3, 21
  br i1 %cmp5, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false4
  %4 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp6 = icmp eq i32 %4, 38
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  %5 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp6, %lor.rhs ]
  ret i1 %5
}

; Function Attrs: mustprogress nounwind uwtable
define noundef zeroext i1 @_ZN6openmc16is_disappearanceEi(i32 noundef %mt) #2 {
entry:
  %retval = alloca i1, align 1
  %mt.addr = alloca i32, align 4
  store i32 %mt, ptr %mt.addr, align 4, !tbaa !44
  %0 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp = icmp sge i32 %0, 101
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp1 = icmp sle i32 %1, 117
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  store i1 true, ptr %retval, align 1
  br label %return

if.else:                                          ; preds = %land.lhs.true, %entry
  %2 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp2 = icmp sge i32 %2, 600
  br i1 %cmp2, label %land.lhs.true3, label %if.else6

land.lhs.true3:                                   ; preds = %if.else
  %3 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp4 = icmp sle i32 %3, 849
  br i1 %cmp4, label %if.then5, label %if.else6

if.then5:                                         ; preds = %land.lhs.true3
  store i1 true, ptr %retval, align 1
  br label %return

if.else6:                                         ; preds = %land.lhs.true3, %if.else
  %4 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp7 = icmp eq i32 %4, 155
  br i1 %cmp7, label %if.then17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else6
  %5 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp8 = icmp eq i32 %5, 182
  br i1 %cmp8, label %if.then17, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %6 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp10 = icmp eq i32 %6, 191
  br i1 %cmp10, label %if.then17, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false9
  %7 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp12 = icmp eq i32 %7, 192
  br i1 %cmp12, label %if.then17, label %lor.lhs.false13

lor.lhs.false13:                                  ; preds = %lor.lhs.false11
  %8 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp14 = icmp eq i32 %8, 193
  br i1 %cmp14, label %if.then17, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false13
  %9 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp16 = icmp eq i32 %9, 197
  br i1 %cmp16, label %if.then17, label %if.else18

if.then17:                                        ; preds = %lor.lhs.false15, %lor.lhs.false13, %lor.lhs.false11, %lor.lhs.false9, %lor.lhs.false, %if.else6
  store i1 true, ptr %retval, align 1
  br label %return

if.else18:                                        ; preds = %lor.lhs.false15
  store i1 false, ptr %retval, align 1
  br label %return

return:                                           ; preds = %if.else18, %if.then17, %if.then5, %if.then
  %10 = load i1, ptr %retval, align 1
  ret i1 %10
}

; Function Attrs: mustprogress nounwind uwtable
define noundef zeroext i1 @_ZN6openmc20is_inelastic_scatterEi(i32 noundef %mt) #2 {
entry:
  %retval = alloca i1, align 1
  %mt.addr = alloca i32, align 4
  store i32 %mt, ptr %mt.addr, align 4, !tbaa !44
  %0 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp = icmp slt i32 %0, 100
  br i1 %cmp, label %if.then, label %if.else4

if.then:                                          ; preds = %entry
  %1 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %call = call noundef zeroext i1 @_ZN6openmc10is_fissionEi(i32 noundef %1)
  br i1 %call, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.then
  store i1 false, ptr %retval, align 1
  br label %return

if.else:                                          ; preds = %if.then
  %2 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp2 = icmp sge i32 %2, 5
  br i1 %cmp2, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.else
  %3 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp3 = icmp ne i32 %3, 27
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %4 = phi i1 [ false, %if.else ], [ %cmp3, %land.rhs ]
  store i1 %4, ptr %retval, align 1
  br label %return

if.else4:                                         ; preds = %entry
  %5 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp5 = icmp sle i32 %5, 200
  br i1 %cmp5, label %if.then6, label %if.else8

if.then6:                                         ; preds = %if.else4
  %6 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %call7 = call noundef zeroext i1 @_ZN6openmc16is_disappearanceEi(i32 noundef %6)
  %lnot = xor i1 %call7, true
  store i1 %lnot, ptr %retval, align 1
  br label %return

if.else8:                                         ; preds = %if.else4
  %7 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp9 = icmp sge i32 %7, 875
  br i1 %cmp9, label %land.lhs.true, label %if.else12

land.lhs.true:                                    ; preds = %if.else8
  %8 = load i32, ptr %mt.addr, align 4, !tbaa !44
  %cmp10 = icmp sle i32 %8, 891
  br i1 %cmp10, label %if.then11, label %if.else12

if.then11:                                        ; preds = %land.lhs.true
  store i1 true, ptr %retval, align 1
  br label %return

if.else12:                                        ; preds = %land.lhs.true, %if.else8
  store i1 false, ptr %retval, align 1
  br label %return

return:                                           ; preds = %if.else12, %if.then11, %if.then6, %land.end, %if.then1
  %9 = load i1, ptr %retval, align 1
  ret i1 %9
}

; Function Attrs: mustprogress uwtable
define void @_ZN6openmc13read_functionElPKc(ptr dead_on_unwind noalias writable sret(%"class.std::unique_ptr") align 8 %agg.result, i64 noundef %group, ptr noundef %name) #0 personality ptr @__gxx_personality_v0 {
entry:
  %result.ptr = alloca ptr, align 8
  %group.addr = alloca i64, align 8
  %name.addr = alloca ptr, align 8
  %dset = alloca i64, align 8
  %func_type = alloca %"class.std::__cxx11::basic_string", align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  %nrvo = alloca i1, align 1
  %ref.tmp = alloca %"class.std::unique_ptr.3", align 8
  %ref.tmp10 = alloca %"class.std::unique_ptr.11", align 8
  %ref.tmp18 = alloca %"class.std::unique_ptr.19", align 8
  %ref.tmp26 = alloca %"class.std::unique_ptr.27", align 8
  %ref.tmp31 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp32 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp33 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp38 = alloca %"class.std::__cxx11::basic_string", align 8
  %cleanup.isactive = alloca i1, align 1
  store ptr %agg.result, ptr %result.ptr, align 8
  store i64 %group, ptr %group.addr, align 8, !tbaa !54
  store ptr %name, ptr %name.addr, align 8, !tbaa !62
  call void @llvm.lifetime.start.p0(i64 8, ptr %dset) #6
  %0 = load i64, ptr %group.addr, align 8, !tbaa !54
  %1 = load ptr, ptr %name.addr, align 8, !tbaa !62
  %call = call i64 @open_dataset(i64 noundef %0, ptr noundef %1)
  store i64 %call, ptr %dset, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 32, ptr %func_type) #6
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev(ptr noundef nonnull align 8 dereferenceable(32) %func_type) #6
  %2 = load i64, ptr %dset, align 8, !tbaa !54
  invoke void @_ZN6openmc14read_attributeElPKcRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(i64 noundef %2, ptr noundef @.str.1, ptr noundef nonnull align 8 dereferenceable(32) %func_type)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store i1 false, ptr %nrvo, align 1
  call void @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEC2IS3_vEEv(ptr noundef nonnull align 8 dereferenceable(8) %agg.result) #6
  %call3 = invoke noundef zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(ptr noundef nonnull align 8 dereferenceable(32) %func_type, ptr noundef @.str.2)
          to label %invoke.cont2 unwind label %lpad1

invoke.cont2:                                     ; preds = %invoke.cont
  br i1 %call3, label %if.then, label %if.else

if.then:                                          ; preds = %invoke.cont2
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  invoke void @_ZSt11make_uniqueIN6openmc11Tabulated1DEJRlEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_(ptr dead_on_unwind writable sret(%"class.std::unique_ptr.3") align 8 %ref.tmp, ptr noundef nonnull align 8 dereferenceable(8) %dset)
          to label %invoke.cont5 unwind label %lpad4

invoke.cont5:                                     ; preds = %if.then
  %call6 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEaSINS0_11Tabulated1DES2_IS6_EEENSt9enable_ifIXsr6__and_ISt6__and_IJSt14is_convertibleINS_IT_T0_E7pointerEPS1_ESt6__not_ISt8is_arrayISB_EEEESt13is_assignableIRS3_OSC_EEE5valueERS4_E4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(8) %agg.result, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp) #6
  call void @_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  br label %if.end54

lpad:                                             ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  store ptr %4, ptr %exn.slot, align 8
  %5 = extractvalue { ptr, i32 } %3, 1
  store i32 %5, ptr %ehselector.slot, align 4
  br label %ehcleanup57

lpad1:                                            ; preds = %if.end54, %if.else22, %if.else14, %if.else, %invoke.cont
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  store ptr %7, ptr %exn.slot, align 8
  %8 = extractvalue { ptr, i32 } %6, 1
  store i32 %8, ptr %ehselector.slot, align 4
  br label %ehcleanup56

lpad4:                                            ; preds = %if.then
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  store ptr %10, ptr %exn.slot, align 8
  %11 = extractvalue { ptr, i32 } %9, 1
  store i32 %11, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  br label %ehcleanup56

if.else:                                          ; preds = %invoke.cont2
  %call8 = invoke noundef zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(ptr noundef nonnull align 8 dereferenceable(32) %func_type, ptr noundef @.str.3)
          to label %invoke.cont7 unwind label %lpad1

invoke.cont7:                                     ; preds = %if.else
  br i1 %call8, label %if.then9, label %if.else14

if.then9:                                         ; preds = %invoke.cont7
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp10) #6
  invoke void @_ZSt11make_uniqueIN6openmc10PolynomialEJRlEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_(ptr dead_on_unwind writable sret(%"class.std::unique_ptr.11") align 8 %ref.tmp10, ptr noundef nonnull align 8 dereferenceable(8) %dset)
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %if.then9
  %call13 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEaSINS0_10PolynomialES2_IS6_EEENSt9enable_ifIXsr6__and_ISt6__and_IJSt14is_convertibleINS_IT_T0_E7pointerEPS1_ESt6__not_ISt8is_arrayISB_EEEESt13is_assignableIRS3_OSC_EEE5valueERS4_E4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(8) %agg.result, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp10) #6
  call void @_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp10) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp10) #6
  br label %if.end53

lpad11:                                           ; preds = %if.then9
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  store ptr %13, ptr %exn.slot, align 8
  %14 = extractvalue { ptr, i32 } %12, 1
  store i32 %14, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp10) #6
  br label %ehcleanup56

if.else14:                                        ; preds = %invoke.cont7
  %call16 = invoke noundef zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(ptr noundef nonnull align 8 dereferenceable(32) %func_type, ptr noundef @.str.4)
          to label %invoke.cont15 unwind label %lpad1

invoke.cont15:                                    ; preds = %if.else14
  br i1 %call16, label %if.then17, label %if.else22

if.then17:                                        ; preds = %invoke.cont15
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp18) #6
  invoke void @_ZSt11make_uniqueIN6openmc17CoherentElasticXSEJRlEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_(ptr dead_on_unwind writable sret(%"class.std::unique_ptr.19") align 8 %ref.tmp18, ptr noundef nonnull align 8 dereferenceable(8) %dset)
          to label %invoke.cont20 unwind label %lpad19

invoke.cont20:                                    ; preds = %if.then17
  %call21 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEaSINS0_17CoherentElasticXSES2_IS6_EEENSt9enable_ifIXsr6__and_ISt6__and_IJSt14is_convertibleINS_IT_T0_E7pointerEPS1_ESt6__not_ISt8is_arrayISB_EEEESt13is_assignableIRS3_OSC_EEE5valueERS4_E4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(8) %agg.result, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp18) #6
  call void @_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp18) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp18) #6
  br label %if.end52

lpad19:                                           ; preds = %if.then17
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  store ptr %16, ptr %exn.slot, align 8
  %17 = extractvalue { ptr, i32 } %15, 1
  store i32 %17, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp18) #6
  br label %ehcleanup56

if.else22:                                        ; preds = %invoke.cont15
  %call24 = invoke noundef zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(ptr noundef nonnull align 8 dereferenceable(32) %func_type, ptr noundef @.str.5)
          to label %invoke.cont23 unwind label %lpad1

invoke.cont23:                                    ; preds = %if.else22
  br i1 %call24, label %if.then25, label %if.else30

if.then25:                                        ; preds = %invoke.cont23
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp26) #6
  invoke void @_ZSt11make_uniqueIN6openmc19IncoherentElasticXSEJRlEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_(ptr dead_on_unwind writable sret(%"class.std::unique_ptr.27") align 8 %ref.tmp26, ptr noundef nonnull align 8 dereferenceable(8) %dset)
          to label %invoke.cont28 unwind label %lpad27

invoke.cont28:                                    ; preds = %if.then25
  %call29 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEaSINS0_19IncoherentElasticXSES2_IS6_EEENSt9enable_ifIXsr6__and_ISt6__and_IJSt14is_convertibleINS_IT_T0_E7pointerEPS1_ESt6__not_ISt8is_arrayISB_EEEESt13is_assignableIRS3_OSC_EEE5valueERS4_E4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(8) %agg.result, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp26) #6
  call void @_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp26) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp26) #6
  br label %if.end

lpad27:                                           ; preds = %if.then25
  %18 = landingpad { ptr, i32 }
          cleanup
  %19 = extractvalue { ptr, i32 } %18, 0
  store ptr %19, ptr %exn.slot, align 8
  %20 = extractvalue { ptr, i32 } %18, 1
  store i32 %20, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp26) #6
  br label %ehcleanup56

if.else30:                                        ; preds = %invoke.cont23
  store i1 true, ptr %cleanup.isactive, align 1
  %exception = call ptr @__cxa_allocate_exception(i64 16) #6
  call void @llvm.lifetime.start.p0(i64 32, ptr %ref.tmp31) #6
  call void @llvm.lifetime.start.p0(i64 32, ptr %ref.tmp32) #6
  call void @llvm.lifetime.start.p0(i64 32, ptr %ref.tmp33) #6
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(ptr dead_on_unwind writable sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp33, ptr noundef @.str.6, ptr noundef nonnull align 8 dereferenceable(32) %func_type)
          to label %invoke.cont35 unwind label %lpad34

invoke.cont35:                                    ; preds = %if.else30
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_(ptr dead_on_unwind writable sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp32, ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp33, ptr noundef @.str.7)
          to label %invoke.cont37 unwind label %lpad36

invoke.cont37:                                    ; preds = %invoke.cont35
  call void @llvm.lifetime.start.p0(i64 32, ptr %ref.tmp38) #6
  %21 = load i64, ptr %dset, align 8, !tbaa !54
  invoke void @_ZN6openmc11object_nameB5cxx11El(ptr dead_on_unwind writable sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp38, i64 noundef %21)
          to label %invoke.cont40 unwind label %lpad39

invoke.cont40:                                    ; preds = %invoke.cont37
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_(ptr dead_on_unwind writable sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp31, ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp32, ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp38)
          to label %invoke.cont42 unwind label %lpad41

invoke.cont42:                                    ; preds = %invoke.cont40
  invoke void @_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %exception, ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp31)
          to label %invoke.cont44 unwind label %lpad43

invoke.cont44:                                    ; preds = %invoke.cont42
  store i1 false, ptr %cleanup.isactive, align 1
  invoke void @__cxa_throw(ptr %exception, ptr @_ZTISt13runtime_error, ptr @_ZNSt13runtime_errorD1Ev) #24
          to label %unreachable unwind label %lpad43

lpad34:                                           ; preds = %if.else30
  %22 = landingpad { ptr, i32 }
          cleanup
  %23 = extractvalue { ptr, i32 } %22, 0
  store ptr %23, ptr %exn.slot, align 8
  %24 = extractvalue { ptr, i32 } %22, 1
  store i32 %24, ptr %ehselector.slot, align 4
  br label %ehcleanup48

lpad36:                                           ; preds = %invoke.cont35
  %25 = landingpad { ptr, i32 }
          cleanup
  %26 = extractvalue { ptr, i32 } %25, 0
  store ptr %26, ptr %exn.slot, align 8
  %27 = extractvalue { ptr, i32 } %25, 1
  store i32 %27, ptr %ehselector.slot, align 4
  br label %ehcleanup47

lpad39:                                           ; preds = %invoke.cont37
  %28 = landingpad { ptr, i32 }
          cleanup
  %29 = extractvalue { ptr, i32 } %28, 0
  store ptr %29, ptr %exn.slot, align 8
  %30 = extractvalue { ptr, i32 } %28, 1
  store i32 %30, ptr %ehselector.slot, align 4
  br label %ehcleanup45

lpad41:                                           ; preds = %invoke.cont40
  %31 = landingpad { ptr, i32 }
          cleanup
  %32 = extractvalue { ptr, i32 } %31, 0
  store ptr %32, ptr %exn.slot, align 8
  %33 = extractvalue { ptr, i32 } %31, 1
  store i32 %33, ptr %ehselector.slot, align 4
  br label %ehcleanup

lpad43:                                           ; preds = %invoke.cont44, %invoke.cont42
  %34 = landingpad { ptr, i32 }
          cleanup
  %35 = extractvalue { ptr, i32 } %34, 0
  store ptr %35, ptr %exn.slot, align 8
  %36 = extractvalue { ptr, i32 } %34, 1
  store i32 %36, ptr %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp31) #6
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad43, %lpad41
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp38) #6
  br label %ehcleanup45

ehcleanup45:                                      ; preds = %ehcleanup, %lpad39
  call void @llvm.lifetime.end.p0(i64 32, ptr %ref.tmp38) #6
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp32) #6
  br label %ehcleanup47

ehcleanup47:                                      ; preds = %ehcleanup45, %lpad36
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp33) #6
  br label %ehcleanup48

ehcleanup48:                                      ; preds = %ehcleanup47, %lpad34
  call void @llvm.lifetime.end.p0(i64 32, ptr %ref.tmp33) #6
  call void @llvm.lifetime.end.p0(i64 32, ptr %ref.tmp32) #6
  call void @llvm.lifetime.end.p0(i64 32, ptr %ref.tmp31) #6
  %cleanup.is_active = load i1, ptr %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup48
  call void @__cxa_free_exception(ptr %exception) #6
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup48
  br label %ehcleanup56

if.end:                                           ; preds = %invoke.cont28
  br label %if.end52

if.end52:                                         ; preds = %if.end, %invoke.cont20
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %invoke.cont12
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %invoke.cont5
  %37 = load i64, ptr %dset, align 8, !tbaa !54
  invoke void @close_dataset(i64 noundef %37)
          to label %invoke.cont55 unwind label %lpad1

invoke.cont55:                                    ; preds = %if.end54
  store i1 true, ptr %nrvo, align 1
  %nrvo.val = load i1, ptr %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused

nrvo.unused:                                      ; preds = %invoke.cont55
  call void @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %agg.result) #6
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %invoke.cont55
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32) %func_type) #6
  call void @llvm.lifetime.end.p0(i64 32, ptr %func_type) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %dset) #6
  ret void

ehcleanup56:                                      ; preds = %cleanup.done, %lpad27, %lpad19, %lpad11, %lpad4, %lpad1
  call void @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %agg.result) #6
  br label %ehcleanup57

ehcleanup57:                                      ; preds = %ehcleanup56, %lpad
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32) %func_type) #6
  call void @llvm.lifetime.end.p0(i64 32, ptr %func_type) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %dset) #6
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup57
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val60 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val60

unreachable:                                      ; preds = %invoke.cont44
  unreachable
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr captures(none)) #7

declare i64 @open_dataset(i64 noundef, ptr noundef) #4

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev(ptr noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #2 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %ref.tmp = alloca %"class.std::allocator", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_dataplus = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 0
  %call = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  call void @_ZNSaIcEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_(ptr noundef nonnull align 8 dereferenceable(8) %_M_dataplus, ptr noundef %call, ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont2 unwind label %terminate.lpad

invoke.cont2:                                     ; preds = %invoke.cont
  call void @_ZNSt15__new_allocatorIcED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  %call3 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17_M_use_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1) #6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef 0)
          to label %invoke.cont4 unwind label %terminate.lpad

invoke.cont4:                                     ; preds = %invoke.cont2
  ret void

terminate.lpad:                                   ; preds = %invoke.cont2, %invoke.cont, %entry
  %0 = landingpad { ptr, i32 }
          catch ptr null
  %1 = extractvalue { ptr, i32 } %0, 0
  call void @__clang_call_terminate(ptr %1) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN6openmc14read_attributeElPKcRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(i64 noundef %obj_id, ptr noundef %name, ptr noundef nonnull align 8 dereferenceable(32) %str) #8 comdat personality ptr @__gxx_personality_v0 {
entry:
  %obj_id.addr = alloca i64, align 8
  %name.addr = alloca ptr, align 8
  %str.addr = alloca ptr, align 8
  %n = alloca i64, align 8
  %buffer = alloca ptr, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp2 = alloca %"class.std::allocator", align 1
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store i64 %obj_id, ptr %obj_id.addr, align 8, !tbaa !54
  store ptr %name, ptr %name.addr, align 8, !tbaa !62
  store ptr %str, ptr %str.addr, align 8, !tbaa !64
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #6
  %0 = load i64, ptr %obj_id.addr, align 8, !tbaa !54
  %1 = load ptr, ptr %name.addr, align 8, !tbaa !62
  %call = call i64 @attribute_typesize(i64 noundef %0, ptr noundef %1)
  store i64 %call, ptr %n, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %buffer) #6
  %2 = load i64, ptr %n, align 8, !tbaa !54
  %call1 = call noalias noundef nonnull ptr @_Znam(i64 noundef %2) #26
  store ptr %call1, ptr %buffer, align 8, !tbaa !62
  %3 = load i64, ptr %obj_id.addr, align 8, !tbaa !54
  %4 = load ptr, ptr %name.addr, align 8, !tbaa !62
  %5 = load i64, ptr %n, align 8, !tbaa !54
  %6 = load ptr, ptr %buffer, align 8, !tbaa !62
  call void @read_attr_string(i64 noundef %3, ptr noundef %4, i64 noundef %5, ptr noundef %6)
  call void @llvm.lifetime.start.p0(i64 32, ptr %ref.tmp) #6
  %7 = load ptr, ptr %buffer, align 8, !tbaa !62
  %8 = load i64, ptr %n, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp2) #6
  call void @_ZNSaIcEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp2) #6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcmRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp, ptr noundef %7, i64 noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %9 = load ptr, ptr %str.addr, align 8, !tbaa !64
  %call3 = call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_(ptr noundef nonnull align 8 dereferenceable(32) %9, ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp) #6
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp) #6
  call void @_ZNSt15__new_allocatorIcED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp2) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp2) #6
  call void @llvm.lifetime.end.p0(i64 32, ptr %ref.tmp) #6
  %10 = load ptr, ptr %buffer, align 8, !tbaa !62
  %isnull = icmp eq ptr %10, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %invoke.cont
  call void @_ZdaPv(ptr noundef %10) #23
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %invoke.cont
  call void @llvm.lifetime.end.p0(i64 8, ptr %buffer) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #6
  ret void

lpad:                                             ; preds = %entry
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  store ptr %12, ptr %exn.slot, align 8
  %13 = extractvalue { ptr, i32 } %11, 1
  store i32 %13, ptr %ehselector.slot, align 4
  call void @_ZNSt15__new_allocatorIcED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp2) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp2) #6
  call void @llvm.lifetime.end.p0(i64 32, ptr %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %buffer) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val4 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val4
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEC2IS3_vEEv(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !66
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr", ptr %this1, i32 0, i32 0
  call void @llvm.memset.p0.i64(ptr align 8 %_M_t, i8 0, i64 8, i1 false)
  call void @_ZNSt15__uniq_ptr_dataIN6openmc10Function1DESt14default_deleteIS1_ELb1ELb1EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(ptr noundef nonnull align 8 dereferenceable(32) %__lhs, ptr noundef %__rhs) #1 comdat {
entry:
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !64
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !62
  %0 = load ptr, ptr %__lhs.addr, align 8, !tbaa !64
  %1 = load ptr, ptr %__rhs.addr, align 8, !tbaa !62
  %call = call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1) #6
  %cmp = icmp eq i32 %call, 0
  ret i1 %cmp
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt11make_uniqueIN6openmc11Tabulated1DEJRlEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_(ptr dead_on_unwind noalias writable sret(%"class.std::unique_ptr.3") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(8) %__args) #8 comdat personality ptr @__gxx_personality_v0 {
entry:
  %result.ptr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !68
  %call = call noalias noundef nonnull ptr @_Znwm(i64 noundef 120) #26
  %0 = load ptr, ptr %__args.addr, align 8, !tbaa !68
  %1 = load i64, ptr %0, align 8, !tbaa !54
  invoke void @_ZN6openmc11Tabulated1DC1El(ptr noundef nonnull align 8 dereferenceable(120) %call, i64 noundef %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EEC2IS3_vEEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %agg.result, ptr noundef %call) #6
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  store ptr %3, ptr %exn.slot, align 8
  %4 = extractvalue { ptr, i32 } %2, 1
  store i32 %4, ptr %ehselector.slot, align 4
  call void @_ZdlPvm(ptr noundef %call, i64 noundef 120) #23
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val1 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEaSINS0_11Tabulated1DES2_IS6_EEENSt9enable_ifIXsr6__and_ISt6__and_IJSt14is_convertibleINS_IT_T0_E7pointerEPS1_ESt6__not_ISt8is_arrayISB_EEEESt13is_assignableIRS3_OSC_EEE5valueERS4_E4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(8) %__u) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__u.addr = alloca ptr, align 8
  %ref.tmp = alloca %"struct.std::default_delete", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !66
  store ptr %__u, ptr %__u.addr, align 8, !tbaa !70
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__u.addr, align 8, !tbaa !70
  %call = call noundef ptr @_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  call void @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE5resetEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this1, ptr noundef %call) #6
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  %1 = load ptr, ptr %__u.addr, align 8, !tbaa !70
  %call2 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %1) #6
  call void @_ZNSt14default_deleteIN6openmc10Function1DEEC2INS0_11Tabulated1DEvEERKS_IT_E(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp, ptr noundef nonnull align 1 dereferenceable(1) %call2) #6
  %call3 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  ret ptr %this1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__ptr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !70
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__ptr) #6
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.3", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  store ptr %call, ptr %__ptr, align 8, !tbaa !72
  %0 = load ptr, ptr %__ptr, align 8, !tbaa !72
  %1 = load ptr, ptr %0, align 8, !tbaa !24
  %cmp = icmp ne ptr %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  %2 = load ptr, ptr %__ptr, align 8, !tbaa !72
  %3 = load ptr, ptr %2, align 8, !tbaa !24
  invoke void @_ZNKSt14default_deleteIN6openmc11Tabulated1DEEclEPS1_(ptr noundef nonnull align 1 dereferenceable(1) %call2, ptr noundef %3)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %4 = load ptr, ptr %__ptr, align 8, !tbaa !72
  store ptr null, ptr %4, align 8, !tbaa !24
  call void @llvm.lifetime.end.p0(i64 8, ptr %__ptr) #6
  ret void

terminate.lpad:                                   ; preds = %if.then
  %5 = landingpad { ptr, i32 }
          catch ptr null
  %6 = extractvalue { ptr, i32 } %5, 0
  call void @__clang_call_terminate(ptr %6) #25
  unreachable
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr captures(none)) #7

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt11make_uniqueIN6openmc10PolynomialEJRlEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_(ptr dead_on_unwind noalias writable sret(%"class.std::unique_ptr.11") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(8) %__args) #8 comdat personality ptr @__gxx_personality_v0 {
entry:
  %result.ptr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !68
  %call = call noalias noundef nonnull ptr @_Znwm(i64 noundef 32) #26
  %0 = load ptr, ptr %__args.addr, align 8, !tbaa !68
  %1 = load i64, ptr %0, align 8, !tbaa !54
  invoke void @_ZN6openmc10PolynomialC1El(ptr noundef nonnull align 8 dereferenceable(32) %call, i64 noundef %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EEC2IS3_vEEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %agg.result, ptr noundef %call) #6
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  store ptr %3, ptr %exn.slot, align 8
  %4 = extractvalue { ptr, i32 } %2, 1
  store i32 %4, ptr %ehselector.slot, align 4
  call void @_ZdlPvm(ptr noundef %call, i64 noundef 32) #23
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val1 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEaSINS0_10PolynomialES2_IS6_EEENSt9enable_ifIXsr6__and_ISt6__and_IJSt14is_convertibleINS_IT_T0_E7pointerEPS1_ESt6__not_ISt8is_arrayISB_EEEESt13is_assignableIRS3_OSC_EEE5valueERS4_E4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(8) %__u) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__u.addr = alloca ptr, align 8
  %ref.tmp = alloca %"struct.std::default_delete", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !66
  store ptr %__u, ptr %__u.addr, align 8, !tbaa !75
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__u.addr, align 8, !tbaa !75
  %call = call noundef ptr @_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  call void @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE5resetEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this1, ptr noundef %call) #6
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  %1 = load ptr, ptr %__u.addr, align 8, !tbaa !75
  %call2 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %1) #6
  call void @_ZNSt14default_deleteIN6openmc10Function1DEEC2INS0_10PolynomialEvEERKS_IT_E(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp, ptr noundef nonnull align 1 dereferenceable(1) %call2) #6
  %call3 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  ret ptr %this1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__ptr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !75
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__ptr) #6
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.11", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  store ptr %call, ptr %__ptr, align 8, !tbaa !77
  %0 = load ptr, ptr %__ptr, align 8, !tbaa !77
  %1 = load ptr, ptr %0, align 8, !tbaa !11
  %cmp = icmp ne ptr %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  %2 = load ptr, ptr %__ptr, align 8, !tbaa !77
  %3 = load ptr, ptr %2, align 8, !tbaa !11
  invoke void @_ZNKSt14default_deleteIN6openmc10PolynomialEEclEPS1_(ptr noundef nonnull align 1 dereferenceable(1) %call2, ptr noundef %3)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %4 = load ptr, ptr %__ptr, align 8, !tbaa !77
  store ptr null, ptr %4, align 8, !tbaa !11
  call void @llvm.lifetime.end.p0(i64 8, ptr %__ptr) #6
  ret void

terminate.lpad:                                   ; preds = %if.then
  %5 = landingpad { ptr, i32 }
          catch ptr null
  %6 = extractvalue { ptr, i32 } %5, 0
  call void @__clang_call_terminate(ptr %6) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt11make_uniqueIN6openmc17CoherentElasticXSEJRlEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_(ptr dead_on_unwind noalias writable sret(%"class.std::unique_ptr.19") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(8) %__args) #8 comdat personality ptr @__gxx_personality_v0 {
entry:
  %result.ptr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !68
  %call = call noalias noundef nonnull ptr @_Znwm(i64 noundef 56) #26
  %0 = load ptr, ptr %__args.addr, align 8, !tbaa !68
  %1 = load i64, ptr %0, align 8, !tbaa !54
  invoke void @_ZN6openmc17CoherentElasticXSC1El(ptr noundef nonnull align 8 dereferenceable(56) %call, i64 noundef %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EEC2IS3_vEEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %agg.result, ptr noundef %call) #6
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  store ptr %3, ptr %exn.slot, align 8
  %4 = extractvalue { ptr, i32 } %2, 1
  store i32 %4, ptr %ehselector.slot, align 4
  call void @_ZdlPvm(ptr noundef %call, i64 noundef 56) #23
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val1 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEaSINS0_17CoherentElasticXSES2_IS6_EEENSt9enable_ifIXsr6__and_ISt6__and_IJSt14is_convertibleINS_IT_T0_E7pointerEPS1_ESt6__not_ISt8is_arrayISB_EEEESt13is_assignableIRS3_OSC_EEE5valueERS4_E4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(8) %__u) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__u.addr = alloca ptr, align 8
  %ref.tmp = alloca %"struct.std::default_delete", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !66
  store ptr %__u, ptr %__u.addr, align 8, !tbaa !79
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__u.addr, align 8, !tbaa !79
  %call = call noundef ptr @_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  call void @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE5resetEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this1, ptr noundef %call) #6
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  %1 = load ptr, ptr %__u.addr, align 8, !tbaa !79
  %call2 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %1) #6
  call void @_ZNSt14default_deleteIN6openmc10Function1DEEC2INS0_17CoherentElasticXSEvEERKS_IT_E(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp, ptr noundef nonnull align 1 dereferenceable(1) %call2) #6
  %call3 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  ret ptr %this1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__ptr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !79
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__ptr) #6
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.19", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  store ptr %call, ptr %__ptr, align 8, !tbaa !81
  %0 = load ptr, ptr %__ptr, align 8, !tbaa !81
  %1 = load ptr, ptr %0, align 8, !tbaa !52
  %cmp = icmp ne ptr %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  %2 = load ptr, ptr %__ptr, align 8, !tbaa !81
  %3 = load ptr, ptr %2, align 8, !tbaa !52
  invoke void @_ZNKSt14default_deleteIN6openmc17CoherentElasticXSEEclEPS1_(ptr noundef nonnull align 1 dereferenceable(1) %call2, ptr noundef %3)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %4 = load ptr, ptr %__ptr, align 8, !tbaa !81
  store ptr null, ptr %4, align 8, !tbaa !52
  call void @llvm.lifetime.end.p0(i64 8, ptr %__ptr) #6
  ret void

terminate.lpad:                                   ; preds = %if.then
  %5 = landingpad { ptr, i32 }
          catch ptr null
  %6 = extractvalue { ptr, i32 } %5, 0
  call void @__clang_call_terminate(ptr %6) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt11make_uniqueIN6openmc19IncoherentElasticXSEJRlEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_(ptr dead_on_unwind noalias writable sret(%"class.std::unique_ptr.27") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(8) %__args) #8 comdat personality ptr @__gxx_personality_v0 {
entry:
  %result.ptr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !68
  %call = call noalias noundef nonnull ptr @_Znwm(i64 noundef 24) #26
  %0 = load ptr, ptr %__args.addr, align 8, !tbaa !68
  %1 = load i64, ptr %0, align 8, !tbaa !54
  invoke void @_ZN6openmc19IncoherentElasticXSC1El(ptr noundef nonnull align 8 dereferenceable(24) %call, i64 noundef %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEC2IS3_vEEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %agg.result, ptr noundef %call) #6
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  store ptr %3, ptr %exn.slot, align 8
  %4 = extractvalue { ptr, i32 } %2, 1
  store i32 %4, ptr %ehselector.slot, align 4
  call void @_ZdlPvm(ptr noundef %call, i64 noundef 24) #23
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val1 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EEaSINS0_19IncoherentElasticXSES2_IS6_EEENSt9enable_ifIXsr6__and_ISt6__and_IJSt14is_convertibleINS_IT_T0_E7pointerEPS1_ESt6__not_ISt8is_arrayISB_EEEESt13is_assignableIRS3_OSC_EEE5valueERS4_E4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(8) %__u) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__u.addr = alloca ptr, align 8
  %ref.tmp = alloca %"struct.std::default_delete", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !66
  store ptr %__u, ptr %__u.addr, align 8, !tbaa !83
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__u.addr, align 8, !tbaa !83
  %call = call noundef ptr @_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  call void @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE5resetEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this1, ptr noundef %call) #6
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  %1 = load ptr, ptr %__u.addr, align 8, !tbaa !83
  %call2 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %1) #6
  call void @_ZNSt14default_deleteIN6openmc10Function1DEEC2INS0_19IncoherentElasticXSEvEERKS_IT_E(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp, ptr noundef nonnull align 1 dereferenceable(1) %call2) #6
  %call3 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  ret ptr %this1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__ptr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !83
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__ptr) #6
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.27", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  store ptr %call, ptr %__ptr, align 8, !tbaa !85
  %0 = load ptr, ptr %__ptr, align 8, !tbaa !85
  %1 = load ptr, ptr %0, align 8, !tbaa !55
  %cmp = icmp ne ptr %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  %2 = load ptr, ptr %__ptr, align 8, !tbaa !85
  %3 = load ptr, ptr %2, align 8, !tbaa !55
  invoke void @_ZNKSt14default_deleteIN6openmc19IncoherentElasticXSEEclEPS1_(ptr noundef nonnull align 1 dereferenceable(1) %call2, ptr noundef %3)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %4 = load ptr, ptr %__ptr, align 8, !tbaa !85
  store ptr null, ptr %4, align 8, !tbaa !55
  call void @llvm.lifetime.end.p0(i64 8, ptr %__ptr) #6
  ret void

terminate.lpad:                                   ; preds = %if.then
  %5 = landingpad { ptr, i32 }
          catch ptr null
  %6 = extractvalue { ptr, i32 } %5, 0
  call void @__clang_call_terminate(ptr %6) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_(ptr dead_on_unwind noalias writable sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(32) %__lhs, ptr noundef nonnull align 8 dereferenceable(32) %__rhs) #8 comdat {
entry:
  %result.ptr = alloca ptr, align 8
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  %__use_rhs = alloca i8, align 1
  %__size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !64
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !64
  call void @llvm.lifetime.start.p0(i64 1, ptr %__use_rhs) #6
  store i8 0, ptr %__use_rhs, align 1, !tbaa !87
  store i8 1, ptr %__use_rhs, align 1, !tbaa !87
  %0 = load i8, ptr %__use_rhs, align 1, !tbaa !87, !range !89, !noundef !90
  %loadedv = trunc i8 %0 to i1
  br i1 %loadedv, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %__size) #6
  %1 = load ptr, ptr %__lhs.addr, align 8, !tbaa !64
  %call = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %1) #6
  %2 = load ptr, ptr %__rhs.addr, align 8, !tbaa !64
  %call1 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %2) #6
  %add = add i64 %call, %call1
  store i64 %add, ptr %__size, align 8, !tbaa !54
  %3 = load i64, ptr %__size, align 8, !tbaa !54
  %4 = load ptr, ptr %__lhs.addr, align 8, !tbaa !64
  %call2 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv(ptr noundef nonnull align 8 dereferenceable(32) %4) #6
  %cmp = icmp ugt i64 %3, %call2
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %5 = load i64, ptr %__size, align 8, !tbaa !54
  %6 = load ptr, ptr %__rhs.addr, align 8, !tbaa !64
  %call3 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv(ptr noundef nonnull align 8 dereferenceable(32) %6) #6
  %cmp4 = icmp ule i64 %5, %call3
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %land.lhs.true
  %7 = load ptr, ptr %__rhs.addr, align 8, !tbaa !64
  %8 = load ptr, ptr %__lhs.addr, align 8, !tbaa !64
  %call6 = call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmRKS4_(ptr noundef nonnull align 8 dereferenceable(32) %7, i64 noundef 0, ptr noundef nonnull align 8 dereferenceable(32) %8)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_(ptr noundef nonnull align 8 dereferenceable(32) %agg.result, ptr noundef nonnull align 8 dereferenceable(32) %call6) #6
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true, %if.then
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__size) #6
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup9 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end7

if.end7:                                          ; preds = %cleanup.cont, %entry
  %9 = load ptr, ptr %__lhs.addr, align 8, !tbaa !64
  %10 = load ptr, ptr %__rhs.addr, align 8, !tbaa !64
  %call8 = call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %9, ptr noundef nonnull align 8 dereferenceable(32) %10)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_(ptr noundef nonnull align 8 dereferenceable(32) %agg.result, ptr noundef nonnull align 8 dereferenceable(32) %call8) #6
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup9

cleanup9:                                         ; preds = %if.end7, %cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr %__use_rhs) #6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_(ptr dead_on_unwind noalias writable sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(32) %__lhs, ptr noundef %__rhs) #8 comdat {
entry:
  %result.ptr = alloca ptr, align 8
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !64
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !62
  %0 = load ptr, ptr %__lhs.addr, align 8, !tbaa !64
  %1 = load ptr, ptr %__rhs.addr, align 8, !tbaa !62
  %call = call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_(ptr noundef nonnull align 8 dereferenceable(32) %agg.result, ptr noundef nonnull align 8 dereferenceable(32) %call) #6
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(ptr dead_on_unwind noalias writable sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, ptr noundef %__lhs, ptr noundef nonnull align 8 dereferenceable(32) %__rhs) #0 comdat personality ptr @__gxx_personality_v0 {
entry:
  %result.ptr = alloca ptr, align 8
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  %__len = alloca i64, align 8
  %nrvo = alloca i1, align 1
  %ref.tmp = alloca %"class.std::allocator", align 1
  %ref.tmp1 = alloca %"class.std::allocator", align 1
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !62
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !64
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #6
  %0 = load ptr, ptr %__lhs.addr, align 8, !tbaa !62
  %call = call noundef i64 @_ZNSt11char_traitsIcE6lengthEPKc(ptr noundef %0)
  store i64 %call, ptr %__len, align 8, !tbaa !54
  store i1 false, ptr %nrvo, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp1) #6
  %1 = load ptr, ptr %__rhs.addr, align 8, !tbaa !64
  call void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv(ptr dead_on_unwind writable sret(%"class.std::allocator") align 1 %ref.tmp1, ptr noundef nonnull align 8 dereferenceable(32) %1) #6
  invoke void @_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_(ptr dead_on_unwind writable sret(%"class.std::allocator") align 1 %ref.tmp, ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(32) %agg.result, ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @_ZNSt15__new_allocatorIcED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @_ZNSt15__new_allocatorIcED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp1) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp1) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  %2 = load i64, ptr %__len, align 8, !tbaa !54
  %3 = load ptr, ptr %__rhs.addr, align 8, !tbaa !64
  %call2 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %3) #6
  %add = add i64 %2, %call2
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %agg.result, i64 noundef %add)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont
  %4 = load ptr, ptr %__lhs.addr, align 8, !tbaa !62
  %5 = load i64, ptr %__len, align 8, !tbaa !54
  %call6 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %agg.result, ptr noundef %4, i64 noundef %5)
          to label %invoke.cont5 unwind label %lpad3

invoke.cont5:                                     ; preds = %invoke.cont4
  %6 = load ptr, ptr %__rhs.addr, align 8, !tbaa !64
  %call8 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %agg.result, ptr noundef nonnull align 8 dereferenceable(32) %6)
          to label %invoke.cont7 unwind label %lpad3

invoke.cont7:                                     ; preds = %invoke.cont5
  store i1 true, ptr %nrvo, align 1
  %nrvo.val = load i1, ptr %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused

lpad:                                             ; preds = %entry
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  store ptr %8, ptr %exn.slot, align 8
  %9 = extractvalue { ptr, i32 } %7, 1
  store i32 %9, ptr %ehselector.slot, align 4
  call void @_ZNSt15__new_allocatorIcED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp1) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp1) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  br label %ehcleanup

lpad3:                                            ; preds = %invoke.cont5, %invoke.cont4, %invoke.cont
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  store ptr %11, ptr %exn.slot, align 8
  %12 = extractvalue { ptr, i32 } %10, 1
  store i32 %12, ptr %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32) %agg.result) #6
  br label %ehcleanup

nrvo.unused:                                      ; preds = %invoke.cont7
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32) %agg.result) #6
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %invoke.cont7
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  ret void

ehcleanup:                                        ; preds = %lpad3, %lpad
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val9 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val9
}

declare void @_ZN6openmc11object_nameB5cxx11El(ptr dead_on_unwind writable sret(%"class.std::__cxx11::basic_string") align 8, i64 noundef) #4

declare void @_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef nonnull align 8 dereferenceable(32)) unnamed_addr #4

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #2 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %_M_dataplus = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 0
  call void @_ZNSt15__new_allocatorIcED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %_M_dataplus) #6
  ret void

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { ptr, i32 }
          catch ptr null
  %1 = extractvalue { ptr, i32 } %0, 0
  call void @__clang_call_terminate(ptr %1) #25
  unreachable
}

declare void @close_dataset(i64 noundef) #4

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__ptr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !66
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__ptr) #6
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  store ptr %call, ptr %__ptr, align 8, !tbaa !91
  %0 = load ptr, ptr %__ptr, align 8, !tbaa !91
  %1 = load ptr, ptr %0, align 8, !tbaa !60
  %cmp = icmp ne ptr %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  %2 = load ptr, ptr %__ptr, align 8, !tbaa !91
  %3 = load ptr, ptr %2, align 8, !tbaa !60
  call void @_ZNKSt14default_deleteIN6openmc10Function1DEEclEPS1_(ptr noundef nonnull align 1 dereferenceable(1) %call2, ptr noundef %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load ptr, ptr %__ptr, align 8, !tbaa !91
  store ptr null, ptr %4, align 8, !tbaa !60
  call void @llvm.lifetime.end.p0(i64 8, ptr %__ptr) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 2
  %arraydecay = getelementptr inbounds [16 x i8], ptr %0, i64 0, i64 0
  %call = call noundef ptr @_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc(ptr noundef nonnull align 1 dereferenceable(1) %arraydecay) #6
  ret ptr %call
}

; Function Attrs: noinline noreturn nounwind uwtable
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) #9 comdat {
  %2 = call ptr @__cxa_begin_catch(ptr %0) #6
  call void @_ZSt9terminatev() #25
  unreachable
}

declare ptr @__cxa_begin_catch(ptr)

declare void @_ZSt9terminatev()

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSaIcEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !93
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt15__new_allocatorIcEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__dat, ptr noundef nonnull align 1 dereferenceable(1) %__a) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__dat.addr = alloca ptr, align 8
  %__a.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !95
  store ptr %__dat, ptr %__dat.addr, align 8, !tbaa !62
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !93
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !93
  call void @_ZNSaIcEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  %_M_p = getelementptr inbounds nuw %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %__dat.addr, align 8, !tbaa !62
  store ptr %1, ptr %_M_p, align 8, !tbaa !97
  ret void
}

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define available_externally noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17_M_use_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #10 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(ptr noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %__n) #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %ref.tmp = alloca i8, align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %0)
  %call = call noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %arrayidx = getelementptr inbounds nuw i8, ptr %call, i64 %1
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  store i8 0, ptr %ref.tmp, align 1, !tbaa !99
  call void @_ZNSt11char_traitsIcE6assignERcRKc(ptr noundef nonnull align 1 dereferenceable(1) %arrayidx, ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc(ptr noundef nonnull align 1 dereferenceable(1) %__r) #2 comdat align 2 {
entry:
  %__r.addr = alloca ptr, align 8
  store ptr %__r, ptr %__r.addr, align 8, !tbaa !62
  %0 = load ptr, ptr %__r.addr, align 8, !tbaa !62
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIcEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !100
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIcEC2ERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %0) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !100
  store ptr %0, ptr %.addr, align 8, !tbaa !100
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm(ptr noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %__length) #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__length.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store i64 %__length, ptr %__length.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__length.addr, align 8, !tbaa !54
  %_M_string_length = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 1
  store i64 %0, ptr %_M_string_length, align 8, !tbaa !102
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt11char_traitsIcE6assignERcRKc(ptr noundef nonnull align 1 dereferenceable(1) %__c1, ptr noundef nonnull align 1 dereferenceable(1) %__c2) #2 comdat align 2 {
entry:
  %__c1.addr = alloca ptr, align 8
  %__c2.addr = alloca ptr, align 8
  store ptr %__c1, ptr %__c1.addr, align 8, !tbaa !62
  store ptr %__c2, ptr %__c2.addr, align 8, !tbaa !62
  %0 = load ptr, ptr %__c2.addr, align 8, !tbaa !62
  %1 = load i8, ptr %0, align 1, !tbaa !99
  %2 = load ptr, ptr %__c1.addr, align 8, !tbaa !62
  store i8 %1, ptr %2, align 1, !tbaa !99
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_dataplus = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 0
  %_M_p = getelementptr inbounds nuw %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", ptr %_M_dataplus, i32 0, i32 0
  %0 = load ptr, ptr %_M_p, align 8, !tbaa !104
  ret ptr %0
}

declare i64 @attribute_typesize(i64 noundef, ptr noundef) #4

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) #11

declare void @read_attr_string(i64 noundef, ptr noundef, i64 noundef, ptr noundef) #4

; Function Attrs: mustprogress uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcmRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %this, ptr noundef %__s, i64 noundef %__n, ptr noundef nonnull align 1 dereferenceable(1) %__a) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__s.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__a.addr = alloca ptr, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  %agg.tmp = alloca %"struct.std::forward_iterator_tag", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store ptr %__s, ptr %__s.addr, align 8, !tbaa !62
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !93
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_dataplus = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 0
  %call = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !93
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_(ptr noundef nonnull align 8 dereferenceable(8) %_M_dataplus, ptr noundef %call, ptr noundef nonnull align 1 dereferenceable(1) %0)
  %1 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp2 = icmp ugt i64 %2, 0
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  invoke void @_ZSt19__throw_logic_errorPKc(ptr noundef @.str.8) #24
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  unreachable

lpad:                                             ; preds = %if.end, %if.then
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  store ptr %4, ptr %exn.slot, align 8
  %5 = extractvalue { ptr, i32 } %3, 1
  store i32 %5, ptr %ehselector.slot, align 4
  call void @_ZNSt15__new_allocatorIcED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %_M_dataplus) #6
  br label %eh.resume

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  %7 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  %8 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i8, ptr %7, i64 %8
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %this1, ptr noundef %6, ptr noundef %add.ptr)
          to label %invoke.cont3 unwind label %lpad

invoke.cont3:                                     ; preds = %if.end
  ret void

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val4 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val4
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_(ptr noundef nonnull align 8 dereferenceable(32) %this, ptr noundef nonnull align 8 dereferenceable(32) %__str) #2 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__str.addr = alloca ptr, align 8
  %__data = alloca ptr, align 8
  %__capacity = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store ptr %__str, ptr %__str.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %call = invoke noundef zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  br i1 %call, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %invoke.cont
  %call3 = invoke noundef zeroext i1 @_ZN9__gnu_cxx14__alloc_traitsISaIcEcE15_S_always_equalEv()
          to label %invoke.cont2 unwind label %terminate.lpad

invoke.cont2:                                     ; preds = %land.lhs.true
  br i1 %call3, label %if.end, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %invoke.cont2
  %call5 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  %0 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call6 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(ptr noundef nonnull align 8 dereferenceable(32) %0)
  %call7 = call noundef zeroext i1 @_ZStneRKSaIcES1_(ptr noundef nonnull align 1 dereferenceable(1) %call5, ptr noundef nonnull align 1 dereferenceable(1) %call6) #6
  br i1 %call7, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true4
  %1 = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 2
  %2 = load i64, ptr %1, align 8, !tbaa !99
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %2) #6
  %call8 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(ptr noundef nonnull align 8 dereferenceable(32) %this1, ptr noundef %call8)
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef 0)
          to label %invoke.cont9 unwind label %terminate.lpad

invoke.cont9:                                     ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont9, %land.lhs.true4, %invoke.cont2, %invoke.cont
  %call10 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  %3 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call11 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(ptr noundef nonnull align 8 dereferenceable(32) %3)
  invoke void @_ZSt15__alloc_on_moveISaIcEEvRT_S2_(ptr noundef nonnull align 1 dereferenceable(1) %call10, ptr noundef nonnull align 1 dereferenceable(1) %call11)
          to label %invoke.cont12 unwind label %terminate.lpad

invoke.cont12:                                    ; preds = %if.end
  %4 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call14 = invoke noundef zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv(ptr noundef nonnull align 8 dereferenceable(32) %4)
          to label %invoke.cont13 unwind label %terminate.lpad

invoke.cont13:                                    ; preds = %invoke.cont12
  br i1 %call14, label %if.then15, label %if.else

if.then15:                                        ; preds = %invoke.cont13
  %5 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %cmp = icmp ne ptr %5, %this1
  %conv = zext i1 %cmp to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then16, label %if.end27

if.then16:                                        ; preds = %if.then15
  %6 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call17 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %6) #6
  %tobool18 = icmp ne i64 %call17, 0
  br i1 %tobool18, label %if.then19, label %if.end24

if.then19:                                        ; preds = %if.then16
  %call20 = call noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  %7 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call21 = call noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %7)
  %8 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call22 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %8) #6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm(ptr noundef %call20, ptr noundef %call21, i64 noundef %call22)
          to label %invoke.cont23 unwind label %terminate.lpad

invoke.cont23:                                    ; preds = %if.then19
  br label %if.end24

if.end24:                                         ; preds = %invoke.cont23, %if.then16
  %9 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call25 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %9) #6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %call25)
          to label %invoke.cont26 unwind label %terminate.lpad

invoke.cont26:                                    ; preds = %if.end24
  br label %if.end27

if.end27:                                         ; preds = %invoke.cont26, %if.then15
  br label %if.end39

if.else:                                          ; preds = %invoke.cont13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__data) #6
  store ptr null, ptr %__data, align 8, !tbaa !62
  call void @llvm.lifetime.start.p0(i64 8, ptr %__capacity) #6
  %call29 = invoke noundef zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
          to label %invoke.cont28 unwind label %terminate.lpad

invoke.cont28:                                    ; preds = %if.else
  br i1 %call29, label %if.end32, label %if.then30

if.then30:                                        ; preds = %invoke.cont28
  %call31 = call noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  store ptr %call31, ptr %__data, align 8, !tbaa !62
  %10 = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 2
  %11 = load i64, ptr %10, align 8, !tbaa !99
  store i64 %11, ptr %__capacity, align 8, !tbaa !54
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %invoke.cont28
  %12 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call33 = call noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %12)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(ptr noundef nonnull align 8 dereferenceable(32) %this1, ptr noundef %call33)
  %13 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call34 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv(ptr noundef nonnull align 8 dereferenceable(32) %13) #6
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %call34)
  %14 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %15 = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %14, i32 0, i32 2
  %16 = load i64, ptr %15, align 8, !tbaa !99
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %16)
  %17 = load ptr, ptr %__data, align 8, !tbaa !62
  %tobool35 = icmp ne ptr %17, null
  br i1 %tobool35, label %if.then36, label %if.else37

if.then36:                                        ; preds = %if.end32
  %18 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %19 = load ptr, ptr %__data, align 8, !tbaa !62
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(ptr noundef nonnull align 8 dereferenceable(32) %18, ptr noundef %19)
  %20 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %21 = load i64, ptr %__capacity, align 8, !tbaa !54
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(ptr noundef nonnull align 8 dereferenceable(32) %20, i64 noundef %21)
  br label %if.end38

if.else37:                                        ; preds = %if.end32
  %22 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %23 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %24 = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %23, i32 0, i32 2
  %arraydecay = getelementptr inbounds [16 x i8], ptr %24, i64 0, i64 0
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(ptr noundef nonnull align 8 dereferenceable(32) %22, ptr noundef %arraydecay)
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  call void @llvm.lifetime.end.p0(i64 8, ptr %__capacity) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__data) #6
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end27
  %25 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv(ptr noundef nonnull align 8 dereferenceable(32) %25) #6
  ret ptr %this1

terminate.lpad:                                   ; preds = %if.else, %if.end24, %if.then19, %invoke.cont12, %if.end, %if.then, %land.lhs.true, %entry
  %26 = landingpad { ptr, i32 }
          catch ptr null
  %27 = extractvalue { ptr, i32 } %26, 0
  call void @__clang_call_terminate(ptr %27) #25
  unreachable
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) #12

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__dat, ptr noundef nonnull align 1 dereferenceable(1) %__a) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__dat.addr = alloca ptr, align 8
  %__a.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !95
  store ptr %__dat, ptr %__dat.addr, align 8, !tbaa !62
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !93
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !93
  call void @_ZNSaIcEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  %_M_p = getelementptr inbounds nuw %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %__dat.addr, align 8, !tbaa !62
  store ptr %1, ptr %_M_p, align 8, !tbaa !97
  ret void
}

; Function Attrs: noreturn
declare void @_ZSt19__throw_logic_errorPKc(ptr noundef) #13

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %this, ptr noundef %__beg, ptr noundef %__end) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %0 = alloca %"struct.std::forward_iterator_tag", align 1
  %this.addr = alloca ptr, align 8
  %__beg.addr = alloca ptr, align 8
  %__end.addr = alloca ptr, align 8
  %__dnew = alloca i64, align 8
  %__guard = alloca %struct._Guard, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store ptr %__beg, ptr %__beg.addr, align 8, !tbaa !62
  store ptr %__end, ptr %__end.addr, align 8, !tbaa !62
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__dnew) #6
  %1 = load ptr, ptr %__beg.addr, align 8, !tbaa !62
  %2 = load ptr, ptr %__end.addr, align 8, !tbaa !62
  %call = call noundef i64 @_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_(ptr noundef %1, ptr noundef %2)
  store i64 %call, ptr %__dnew, align 8, !tbaa !54
  %3 = load i64, ptr %__dnew, align 8, !tbaa !54
  %cmp = icmp ugt i64 %3, 15
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call2 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %this1, ptr noundef nonnull align 8 dereferenceable(8) %__dnew, i64 noundef 0)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(ptr noundef nonnull align 8 dereferenceable(32) %this1, ptr noundef %call2)
  %4 = load i64, ptr %__dnew, align 8, !tbaa !54
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %4)
  br label %if.end

if.else:                                          ; preds = %entry
  %call3 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17_M_use_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1) #6
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.start.p0(i64 8, ptr %__guard) #6
  call void @_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC2EPS4_(ptr noundef nonnull align 8 dereferenceable(8) %__guard, ptr noundef %this1)
  %call4 = call noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  %5 = load ptr, ptr %__beg.addr, align 8, !tbaa !62
  %6 = load ptr, ptr %__end.addr, align 8, !tbaa !62
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_(ptr noundef %call4, ptr noundef %5, ptr noundef %6) #6
  %_M_guarded = getelementptr inbounds nuw %struct._Guard, ptr %__guard, i32 0, i32 0
  store ptr null, ptr %_M_guarded, align 8, !tbaa !105
  %7 = load i64, ptr %__dnew, align 8, !tbaa !54
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %7)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.end
  call void @_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %__guard) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__guard) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__dnew) #6
  ret void

lpad:                                             ; preds = %if.end
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  store ptr %9, ptr %exn.slot, align 8
  %10 = extractvalue { ptr, i32 } %8, 1
  store i32 %10, ptr %ehselector.slot, align 4
  call void @_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %__guard) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__guard) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__dnew) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val5 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val5
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIcED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !100
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef i64 @_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_(ptr noundef %__first, ptr noundef %__last) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  %undef.agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !62
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !62
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !62
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !62
  call void @_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %__first.addr)
  %call = call noundef i64 @_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(ptr noundef %0, ptr noundef %1)
  ret i64 %call
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(ptr noundef nonnull align 8 dereferenceable(32) %this, ptr noundef %__p) #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !62
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !62
  %_M_dataplus = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 0
  %_M_p = getelementptr inbounds nuw %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", ptr %_M_dataplus, i32 0, i32 0
  store ptr %0, ptr %_M_p, align 8, !tbaa !104
  ret void
}

declare noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) #4

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(ptr noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %__capacity) #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__capacity.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store i64 %__capacity, ptr %__capacity.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__capacity.addr, align 8, !tbaa !54
  %1 = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 2
  store i64 %0, ptr %1, align 8, !tbaa !99
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC2EPS4_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__s) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__s.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !107
  store ptr %__s, ptr %__s.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_guarded = getelementptr inbounds nuw %struct._Guard, ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__s.addr, align 8, !tbaa !64
  store ptr %0, ptr %_M_guarded, align 8, !tbaa !105
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_(ptr noundef %__p, ptr noundef %__k1, ptr noundef %__k2) #2 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %__p.addr = alloca ptr, align 8
  %__k1.addr = alloca ptr, align 8
  %__k2.addr = alloca ptr, align 8
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !62
  store ptr %__k1, ptr %__k1.addr, align 8, !tbaa !62
  store ptr %__k2, ptr %__k2.addr, align 8, !tbaa !62
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !62
  %1 = load ptr, ptr %__k1.addr, align 8, !tbaa !62
  %2 = load ptr, ptr %__k2.addr, align 8, !tbaa !62
  %3 = load ptr, ptr %__k1.addr, align 8, !tbaa !62
  %sub.ptr.lhs.cast = ptrtoint ptr %2 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm(ptr noundef %0, ptr noundef %1, i64 noundef %sub.ptr.sub)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %4 = landingpad { ptr, i32 }
          catch ptr null
  %5 = extractvalue { ptr, i32 } %4, 0
  call void @__clang_call_terminate(ptr %5) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !107
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_guarded = getelementptr inbounds nuw %struct._Guard, ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_guarded, align 8, !tbaa !105
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_guarded2 = getelementptr inbounds nuw %struct._Guard, ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %_M_guarded2, align 8, !tbaa !105
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(ptr noundef nonnull align 8 dereferenceable(32) %1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(ptr noundef %__first, ptr noundef %__last) #1 comdat {
entry:
  %0 = alloca %"struct.std::random_access_iterator_tag", align 1
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !62
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !62
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !62
  %2 = load ptr, ptr %__first.addr, align 8, !tbaa !62
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  ret i64 %sub.ptr.sub
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %0) #1 comdat {
entry:
  %.addr = alloca ptr, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !109
  ret void
}

; Function Attrs: mustprogress uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm(ptr noundef %__d, ptr noundef %__s, i64 noundef %__n) #0 align 2 {
entry:
  %__d.addr = alloca ptr, align 8
  %__s.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__d, ptr %__d.addr, align 8, !tbaa !62
  store ptr %__s, ptr %__s.addr, align 8, !tbaa !62
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp eq i64 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %__d.addr, align 8, !tbaa !62
  %2 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  call void @_ZNSt11char_traitsIcE6assignERcRKc(ptr noundef nonnull align 1 dereferenceable(1) %1, ptr noundef nonnull align 1 dereferenceable(1) %2) #6
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr %__d.addr, align 8, !tbaa !62
  %4 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  %5 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef ptr @_ZNSt11char_traitsIcE4copyEPcPKcm(ptr noundef %3, ptr noundef %4, i64 noundef %5)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt11char_traitsIcE4copyEPcPKcm(ptr noundef %__s1, ptr noundef %__s2, i64 noundef %__n) #2 comdat align 2 {
entry:
  %retval = alloca ptr, align 8
  %__s1.addr = alloca ptr, align 8
  %__s2.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__s1, ptr %__s1.addr, align 8, !tbaa !62
  store ptr %__s2, ptr %__s2.addr, align 8, !tbaa !62
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp eq i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %__s1.addr, align 8, !tbaa !62
  store ptr %1, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %__s1.addr, align 8, !tbaa !62
  %3 = load ptr, ptr %__s2.addr, align 8, !tbaa !62
  %4 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %2, ptr align 1 %3, i64 %4, i1 false)
  store ptr %2, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %5 = load ptr, ptr %retval, align 8
  ret ptr %5
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias writeonly captures(none), ptr noalias readonly captures(none), i64, i1 immarg) #14

; Function Attrs: mustprogress uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 2
  %1 = load i64, ptr %0, align 8, !tbaa !99
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %1) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress uwtable
define available_externally noundef zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  %call2 = call noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  %cmp = icmp eq ptr %call, %call2
  ret i1 %cmp
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm(ptr noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %__size) #2 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__size.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store i64 %__size, ptr %__size.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %call = invoke noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %call2 = call noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  %0 = load i64, ptr %__size.addr, align 8, !tbaa !54
  %add = add i64 %0, 1
  invoke void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(ptr noundef nonnull align 1 dereferenceable(1) %call, ptr noundef %call2, i64 noundef %add)
          to label %invoke.cont3 unwind label %terminate.lpad

invoke.cont3:                                     ; preds = %invoke.cont
  ret void

terminate.lpad:                                   ; preds = %invoke.cont, %entry
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  call void @__clang_call_terminate(ptr %2) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 2
  %arraydecay = getelementptr inbounds [16 x i8], ptr %0, i64 0, i64 0
  %call = call noundef ptr @_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_(ptr noundef nonnull align 1 dereferenceable(1) %arraydecay) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_(ptr noundef nonnull align 1 dereferenceable(1) %__r) #2 comdat align 2 {
entry:
  %__r.addr = alloca ptr, align 8
  store ptr %__r, ptr %__r.addr, align 8, !tbaa !62
  %0 = load ptr, ptr %__r.addr, align 8, !tbaa !62
  ret ptr %0
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(ptr noundef nonnull align 1 dereferenceable(1) %__a, ptr noundef %__p, i64 noundef %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !93
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !62
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !93
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !62
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @_ZNSt15__new_allocatorIcE10deallocateEPcm(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef %1, i64 noundef %2)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_dataplus = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 0
  ret ptr %_M_dataplus
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIcE10deallocateEPcm(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__p, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !100
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !62
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !62
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %mul = mul i64 %1, 1
  call void @_ZdlPvm(ptr noundef %0, i64 noundef %mul) #23
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPvm(ptr noundef, i64 noundef) #12

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZN9__gnu_cxx14__alloc_traitsISaIcEcE15_S_always_equalEv() #2 comdat align 2 {
entry:
  ret i1 true
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZStneRKSaIcES1_(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef nonnull align 1 dereferenceable(1) %1) #2 comdat {
entry:
  %.addr = alloca ptr, align 8
  %.addr1 = alloca ptr, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !93
  store ptr %1, ptr %.addr1, align 8, !tbaa !93
  ret i1 false
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt15__alloc_on_moveISaIcEEvRT_S2_(ptr noundef nonnull align 1 dereferenceable(1) %__one, ptr noundef nonnull align 1 dereferenceable(1) %__two) #1 comdat {
entry:
  %__one.addr = alloca ptr, align 8
  %__two.addr = alloca ptr, align 8
  store ptr %__one, ptr %__one.addr, align 8, !tbaa !93
  store ptr %__two, ptr %__two.addr, align 8, !tbaa !93
  %0 = load ptr, ptr %__two.addr, align 8, !tbaa !93
  %1 = load ptr, ptr %__one.addr, align 8, !tbaa !93
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i64 @llvm.expect.i64(i64, i64) #15

; Function Attrs: mustprogress nounwind uwtable
define available_externally noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_string_length = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 1
  %0 = load i64, ptr %_M_string_length, align 8, !tbaa !102
  ret i64 %0
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_string_length = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 1
  %0 = load i64, ptr %_M_string_length, align 8, !tbaa !102
  ret i64 %0
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #2 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef 0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { ptr, i32 }
          catch ptr null
  %1 = extractvalue { ptr, i32 } %0, 0
  call void @__clang_call_terminate(ptr %1) #25
  unreachable
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr writeonly captures(none), i8, i64, i1 immarg) #16

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__uniq_ptr_dataIN6openmc10Function1DESt14default_deleteIS1_ELb1ELb1EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !111
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !113
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl", ptr %this1, i32 0, i32 0
  call void @_ZNSt5tupleIJPN6openmc10Function1DESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJPN6openmc10Function1DESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !115
  %this1 = load ptr, ptr %this.addr, align 8
  invoke void @_ZNSt11_Tuple_implILm0EJPN6openmc10Function1DESt14default_deleteIS1_EEEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { ptr, i32 }
          catch ptr null
  %1 = extractvalue { ptr, i32 } %0, 0
  call void @__clang_call_terminate(ptr %1) #25
  unreachable
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJPN6openmc10Function1DESt14default_deleteIS1_EEEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !117
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10Function1DEEEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1)
  call void @_ZNSt10_Head_baseILm0EPN6openmc10Function1DELb0EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1)
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10Function1DEEEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !119
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc10Function1DEELb1EEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EPN6openmc10Function1DELb0EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !121
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_head_impl = getelementptr inbounds nuw %"struct.std::_Head_base.1", ptr %this1, i32 0, i32 0
  store ptr null, ptr %_M_head_impl, align 8, !tbaa !123
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc10Function1DEELb1EEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !125
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: nounwind
declare noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef) #5

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) #11

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EEC2IS3_vEEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__p) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !70
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !24
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.3", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !24
  invoke void @_ZNSt15__uniq_ptr_dataIN6openmc11Tabulated1DESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t, ptr noundef %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  call void @__clang_call_terminate(ptr %2) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZNSt15__uniq_ptr_dataIN6openmc11Tabulated1DESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %0) unnamed_addr #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !127
  store ptr %0, ptr %.addr, align 8, !tbaa !24
  %this1 = load ptr, ptr %this.addr, align 8
  %1 = load ptr, ptr %.addr, align 8, !tbaa !24
  call void @_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EEC2EPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this1, ptr noundef %1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EEC2EPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__p) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !129
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !24
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl.5", ptr %this1, i32 0, i32 0
  call void @_ZNSt5tupleIJPN6openmc11Tabulated1DESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !24
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr %0, ptr %call, align 8, !tbaa !24
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJPN6openmc11Tabulated1DESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !131
  %this1 = load ptr, ptr %this.addr, align 8
  invoke void @_ZNSt11_Tuple_implILm0EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { ptr, i32 }
          catch ptr null
  %1 = extractvalue { ptr, i32 } %0, 0
  call void @__clang_call_terminate(ptr %1) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !129
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl.5", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3getILm0EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !133
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc11Tabulated1DEEEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1)
  call void @_ZNSt10_Head_baseILm0EPN6openmc11Tabulated1DELb0EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1)
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc11Tabulated1DEEEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !135
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc11Tabulated1DEELb1EEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EPN6openmc11Tabulated1DELb0EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !137
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_head_impl = getelementptr inbounds nuw %"struct.std::_Head_base.10", ptr %this1, i32 0, i32 0
  store ptr null, ptr %_M_head_impl, align 8, !tbaa !139
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc11Tabulated1DEELb1EEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !141
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3getILm0EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !131
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !131
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt12__get_helperILm0EPN6openmc11Tabulated1DEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZSt12__get_helperILm0EPN6openmc11Tabulated1DEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !133
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !133
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt11_Tuple_implILm0EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEE7_M_headERS5_(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt11_Tuple_implILm0EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEE7_M_headERS5_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !133
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !133
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10_Head_baseILm0EPN6openmc11Tabulated1DELb0EE7_M_headERS3_(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10_Head_baseILm0EPN6openmc11Tabulated1DELb0EE7_M_headERS3_(ptr noundef nonnull align 8 dereferenceable(8) %__b) #2 comdat align 2 {
entry:
  %__b.addr = alloca ptr, align 8
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !137
  %0 = load ptr, ptr %__b.addr, align 8, !tbaa !137
  %_M_head_impl = getelementptr inbounds nuw %"struct.std::_Head_base.10", ptr %0, i32 0, i32 0
  ret ptr %_M_head_impl
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE5resetEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__p) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !66
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !60
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !60
  call void @_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE5resetEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t, ptr noundef %0) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !70
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.3", ptr %this1, i32 0, i32 0
  %call = call noundef ptr @_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !70
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.3", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE10_M_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt14default_deleteIN6openmc10Function1DEEC2INS0_11Tabulated1DEvEERKS_IT_E(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %0) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !143
  store ptr %0, ptr %.addr, align 8, !tbaa !145
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !66
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE10_M_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE5resetEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__p) #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__old_p = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !113
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !60
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__old_p) #6
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  %0 = load ptr, ptr %call, align 8, !tbaa !60
  store ptr %0, ptr %__old_p, align 8, !tbaa !60
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !60
  %call2 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr %1, ptr %call2, align 8, !tbaa !60
  %2 = load ptr, ptr %__old_p, align 8, !tbaa !60
  %tobool = icmp ne ptr %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call3 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE10_M_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  %3 = load ptr, ptr %__old_p, align 8, !tbaa !60
  invoke void @_ZNKSt14default_deleteIN6openmc10Function1DEEclEPS1_(ptr noundef nonnull align 1 dereferenceable(1) %call3, ptr noundef %3)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %__old_p) #6
  ret void

terminate.lpad:                                   ; preds = %if.then
  %4 = landingpad { ptr, i32 }
          catch ptr null
  %5 = extractvalue { ptr, i32 } %4, 0
  call void @__clang_call_terminate(ptr %5) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !113
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3getILm0EJPN6openmc10Function1DESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE10_M_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !113
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZSt3getILm1EJPN6openmc10Function1DESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNKSt14default_deleteIN6openmc10Function1DEEclEPS1_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__ptr) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__ptr.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !143
  store ptr %__ptr, ptr %__ptr.addr, align 8, !tbaa !60
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__ptr.addr, align 8, !tbaa !60
  %isnull = icmp eq ptr %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %vtable = load ptr, ptr %0, align 8, !tbaa !20
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 2
  %1 = load ptr, ptr %vfn, align 8
  call void %1(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3getILm0EJPN6openmc10Function1DESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !115
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !115
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt12__get_helperILm0EPN6openmc10Function1DEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZSt12__get_helperILm0EPN6openmc10Function1DEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !117
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !117
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt11_Tuple_implILm0EJPN6openmc10Function1DESt14default_deleteIS1_EEE7_M_headERS5_(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt11_Tuple_implILm0EJPN6openmc10Function1DESt14default_deleteIS1_EEE7_M_headERS5_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !117
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !117
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10_Head_baseILm0EPN6openmc10Function1DELb0EE7_M_headERS3_(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10_Head_baseILm0EPN6openmc10Function1DELb0EE7_M_headERS3_(ptr noundef nonnull align 8 dereferenceable(8) %__b) #2 comdat align 2 {
entry:
  %__b.addr = alloca ptr, align 8
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !121
  %0 = load ptr, ptr %__b.addr, align 8, !tbaa !121
  %_M_head_impl = getelementptr inbounds nuw %"struct.std::_Head_base.1", ptr %0, i32 0, i32 0
  ret ptr %_M_head_impl
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZSt3getILm1EJPN6openmc10Function1DESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !115
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !115
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZSt12__get_helperILm1ESt14default_deleteIN6openmc10Function1DEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZSt12__get_helperILm1ESt14default_deleteIN6openmc10Function1DEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(ptr noundef nonnull align 1 dereferenceable(1) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !119
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !119
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10Function1DEEEE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10Function1DEEEE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %__t) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !119
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !119
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc10Function1DEELb1EE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc10Function1DEELb1EE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %__b) #2 comdat align 2 {
entry:
  %__b.addr = alloca ptr, align 8
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !125
  %0 = load ptr, ptr %__b.addr, align 8, !tbaa !125
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !129
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__p) #6
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  %0 = load ptr, ptr %call, align 8, !tbaa !24
  store ptr %0, ptr %__p, align 8, !tbaa !24
  %call2 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr null, ptr %call2, align 8, !tbaa !24
  %1 = load ptr, ptr %__p, align 8, !tbaa !24
  call void @llvm.lifetime.end.p0(i64 8, ptr %__p) #6
  ret ptr %1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE10_M_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !129
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl.5", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZSt3getILm1EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZSt3getILm1EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !131
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !131
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZSt12__get_helperILm1ESt14default_deleteIN6openmc11Tabulated1DEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZSt12__get_helperILm1ESt14default_deleteIN6openmc11Tabulated1DEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(ptr noundef nonnull align 1 dereferenceable(1) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !135
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !135
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc11Tabulated1DEEEE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc11Tabulated1DEEEE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %__t) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !135
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !135
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc11Tabulated1DEELb1EE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc11Tabulated1DEELb1EE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %__b) #2 comdat align 2 {
entry:
  %__b.addr = alloca ptr, align 8
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !141
  %0 = load ptr, ptr %__b.addr, align 8, !tbaa !141
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNKSt14default_deleteIN6openmc11Tabulated1DEEclEPS1_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__ptr) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__ptr.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !145
  store ptr %__ptr, ptr %__ptr.addr, align 8, !tbaa !24
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__ptr.addr, align 8, !tbaa !24
  %isnull = icmp eq ptr %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %vtable = load ptr, ptr %0, align 8, !tbaa !20
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 2
  %1 = load ptr, ptr %vfn, align 8
  call void %1(ptr noundef nonnull align 8 dereferenceable(120) %0) #6
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EEC2IS3_vEEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__p) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !75
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !11
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.11", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !11
  invoke void @_ZNSt15__uniq_ptr_dataIN6openmc10PolynomialESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t, ptr noundef %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  call void @__clang_call_terminate(ptr %2) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZNSt15__uniq_ptr_dataIN6openmc10PolynomialESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %0) unnamed_addr #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !147
  store ptr %0, ptr %.addr, align 8, !tbaa !11
  %this1 = load ptr, ptr %this.addr, align 8
  %1 = load ptr, ptr %.addr, align 8, !tbaa !11
  call void @_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EEC2EPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this1, ptr noundef %1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EEC2EPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__p) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !149
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !11
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl.13", ptr %this1, i32 0, i32 0
  call void @_ZNSt5tupleIJPN6openmc10PolynomialESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !11
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr %0, ptr %call, align 8, !tbaa !11
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJPN6openmc10PolynomialESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !151
  %this1 = load ptr, ptr %this.addr, align 8
  invoke void @_ZNSt11_Tuple_implILm0EJPN6openmc10PolynomialESt14default_deleteIS1_EEEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { ptr, i32 }
          catch ptr null
  %1 = extractvalue { ptr, i32 } %0, 0
  call void @__clang_call_terminate(ptr %1) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !149
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl.13", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3getILm0EJPN6openmc10PolynomialESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJPN6openmc10PolynomialESt14default_deleteIS1_EEEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !153
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10PolynomialEEEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1)
  call void @_ZNSt10_Head_baseILm0EPN6openmc10PolynomialELb0EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1)
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10PolynomialEEEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !155
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc10PolynomialEELb1EEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EPN6openmc10PolynomialELb0EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !157
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_head_impl = getelementptr inbounds nuw %"struct.std::_Head_base.18", ptr %this1, i32 0, i32 0
  store ptr null, ptr %_M_head_impl, align 8, !tbaa !159
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc10PolynomialEELb1EEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !161
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3getILm0EJPN6openmc10PolynomialESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !151
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !151
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt12__get_helperILm0EPN6openmc10PolynomialEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZSt12__get_helperILm0EPN6openmc10PolynomialEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !153
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !153
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt11_Tuple_implILm0EJPN6openmc10PolynomialESt14default_deleteIS1_EEE7_M_headERS5_(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt11_Tuple_implILm0EJPN6openmc10PolynomialESt14default_deleteIS1_EEE7_M_headERS5_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !153
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !153
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10_Head_baseILm0EPN6openmc10PolynomialELb0EE7_M_headERS3_(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10_Head_baseILm0EPN6openmc10PolynomialELb0EE7_M_headERS3_(ptr noundef nonnull align 8 dereferenceable(8) %__b) #2 comdat align 2 {
entry:
  %__b.addr = alloca ptr, align 8
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !157
  %0 = load ptr, ptr %__b.addr, align 8, !tbaa !157
  %_M_head_impl = getelementptr inbounds nuw %"struct.std::_Head_base.18", ptr %0, i32 0, i32 0
  ret ptr %_M_head_impl
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !75
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.11", ptr %this1, i32 0, i32 0
  %call = call noundef ptr @_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !75
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.11", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE10_M_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt14default_deleteIN6openmc10Function1DEEC2INS0_10PolynomialEvEERKS_IT_E(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %0) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !143
  store ptr %0, ptr %.addr, align 8, !tbaa !163
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !149
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__p) #6
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  %0 = load ptr, ptr %call, align 8, !tbaa !11
  store ptr %0, ptr %__p, align 8, !tbaa !11
  %call2 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr null, ptr %call2, align 8, !tbaa !11
  %1 = load ptr, ptr %__p, align 8, !tbaa !11
  call void @llvm.lifetime.end.p0(i64 8, ptr %__p) #6
  ret ptr %1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE10_M_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !149
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl.13", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZSt3getILm1EJPN6openmc10PolynomialESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZSt3getILm1EJPN6openmc10PolynomialESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !151
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !151
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZSt12__get_helperILm1ESt14default_deleteIN6openmc10PolynomialEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZSt12__get_helperILm1ESt14default_deleteIN6openmc10PolynomialEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(ptr noundef nonnull align 1 dereferenceable(1) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !155
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !155
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10PolynomialEEEE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10PolynomialEEEE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %__t) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !155
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !155
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc10PolynomialEELb1EE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc10PolynomialEELb1EE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %__b) #2 comdat align 2 {
entry:
  %__b.addr = alloca ptr, align 8
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !161
  %0 = load ptr, ptr %__b.addr, align 8, !tbaa !161
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNKSt14default_deleteIN6openmc10PolynomialEEclEPS1_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__ptr) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__ptr.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !163
  store ptr %__ptr, ptr %__ptr.addr, align 8, !tbaa !11
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__ptr.addr, align 8, !tbaa !11
  %isnull = icmp eq ptr %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %vtable = load ptr, ptr %0, align 8, !tbaa !20
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 2
  %1 = load ptr, ptr %vfn, align 8
  call void %1(ptr noundef nonnull align 8 dereferenceable(32) %0) #6
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EEC2IS3_vEEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__p) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !79
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !52
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.19", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !52
  invoke void @_ZNSt15__uniq_ptr_dataIN6openmc17CoherentElasticXSESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t, ptr noundef %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  call void @__clang_call_terminate(ptr %2) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZNSt15__uniq_ptr_dataIN6openmc17CoherentElasticXSESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %0) unnamed_addr #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !165
  store ptr %0, ptr %.addr, align 8, !tbaa !52
  %this1 = load ptr, ptr %this.addr, align 8
  %1 = load ptr, ptr %.addr, align 8, !tbaa !52
  call void @_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EEC2EPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this1, ptr noundef %1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EEC2EPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__p) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !167
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !52
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl.21", ptr %this1, i32 0, i32 0
  call void @_ZNSt5tupleIJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !52
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr %0, ptr %call, align 8, !tbaa !52
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !169
  %this1 = load ptr, ptr %this.addr, align 8
  invoke void @_ZNSt11_Tuple_implILm0EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { ptr, i32 }
          catch ptr null
  %1 = extractvalue { ptr, i32 } %0, 0
  call void @__clang_call_terminate(ptr %1) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !167
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl.21", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3getILm0EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !171
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc17CoherentElasticXSEEEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1)
  call void @_ZNSt10_Head_baseILm0EPN6openmc17CoherentElasticXSELb0EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1)
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc17CoherentElasticXSEEEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !173
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc17CoherentElasticXSEELb1EEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EPN6openmc17CoherentElasticXSELb0EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !175
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_head_impl = getelementptr inbounds nuw %"struct.std::_Head_base.26", ptr %this1, i32 0, i32 0
  store ptr null, ptr %_M_head_impl, align 8, !tbaa !177
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc17CoherentElasticXSEELb1EEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !179
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3getILm0EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !169
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !169
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt12__get_helperILm0EPN6openmc17CoherentElasticXSEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZSt12__get_helperILm0EPN6openmc17CoherentElasticXSEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !171
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !171
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt11_Tuple_implILm0EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEE7_M_headERS5_(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt11_Tuple_implILm0EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEE7_M_headERS5_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !171
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !171
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10_Head_baseILm0EPN6openmc17CoherentElasticXSELb0EE7_M_headERS3_(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10_Head_baseILm0EPN6openmc17CoherentElasticXSELb0EE7_M_headERS3_(ptr noundef nonnull align 8 dereferenceable(8) %__b) #2 comdat align 2 {
entry:
  %__b.addr = alloca ptr, align 8
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !175
  %0 = load ptr, ptr %__b.addr, align 8, !tbaa !175
  %_M_head_impl = getelementptr inbounds nuw %"struct.std::_Head_base.26", ptr %0, i32 0, i32 0
  ret ptr %_M_head_impl
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !79
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.19", ptr %this1, i32 0, i32 0
  %call = call noundef ptr @_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !79
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.19", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE10_M_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt14default_deleteIN6openmc10Function1DEEC2INS0_17CoherentElasticXSEvEERKS_IT_E(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %0) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !143
  store ptr %0, ptr %.addr, align 8, !tbaa !181
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !167
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__p) #6
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  %0 = load ptr, ptr %call, align 8, !tbaa !52
  store ptr %0, ptr %__p, align 8, !tbaa !52
  %call2 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr null, ptr %call2, align 8, !tbaa !52
  %1 = load ptr, ptr %__p, align 8, !tbaa !52
  call void @llvm.lifetime.end.p0(i64 8, ptr %__p) #6
  ret ptr %1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE10_M_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !167
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl.21", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZSt3getILm1EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZSt3getILm1EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !169
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !169
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZSt12__get_helperILm1ESt14default_deleteIN6openmc17CoherentElasticXSEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZSt12__get_helperILm1ESt14default_deleteIN6openmc17CoherentElasticXSEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(ptr noundef nonnull align 1 dereferenceable(1) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !173
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !173
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc17CoherentElasticXSEEEE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc17CoherentElasticXSEEEE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %__t) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !173
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !173
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc17CoherentElasticXSEELb1EE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc17CoherentElasticXSEELb1EE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %__b) #2 comdat align 2 {
entry:
  %__b.addr = alloca ptr, align 8
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !179
  %0 = load ptr, ptr %__b.addr, align 8, !tbaa !179
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNKSt14default_deleteIN6openmc17CoherentElasticXSEEclEPS1_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__ptr) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__ptr.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !181
  store ptr %__ptr, ptr %__ptr.addr, align 8, !tbaa !52
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__ptr.addr, align 8, !tbaa !52
  %isnull = icmp eq ptr %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %vtable = load ptr, ptr %0, align 8, !tbaa !20
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 2
  %1 = load ptr, ptr %vfn, align 8
  call void %1(ptr noundef nonnull align 8 dereferenceable(56) %0) #6
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEC2IS3_vEEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__p) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !83
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !55
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.27", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !55
  invoke void @_ZNSt15__uniq_ptr_dataIN6openmc19IncoherentElasticXSESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t, ptr noundef %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  call void @__clang_call_terminate(ptr %2) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZNSt15__uniq_ptr_dataIN6openmc19IncoherentElasticXSESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %0) unnamed_addr #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !183
  store ptr %0, ptr %.addr, align 8, !tbaa !55
  %this1 = load ptr, ptr %this.addr, align 8
  %1 = load ptr, ptr %.addr, align 8, !tbaa !55
  call void @_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEC2EPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this1, ptr noundef %1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEC2EPS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__p) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !185
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !55
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl.29", ptr %this1, i32 0, i32 0
  call void @_ZNSt5tupleIJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !55
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr %0, ptr %call, align 8, !tbaa !55
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEEC2ILb1ETnNSt9enable_ifIXclsr17_TupleConstraintsIXT_ES2_S4_EE37__is_implicitly_default_constructibleEEbE4typeELb1EEEv(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !187
  %this1 = load ptr, ptr %this.addr, align 8
  invoke void @_ZNSt11_Tuple_implILm0EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { ptr, i32 }
          catch ptr null
  %1 = extractvalue { ptr, i32 } %0, 0
  call void @__clang_call_terminate(ptr %1) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !185
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl.29", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3getILm0EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !189
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc19IncoherentElasticXSEEEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1)
  call void @_ZNSt10_Head_baseILm0EPN6openmc19IncoherentElasticXSELb0EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1)
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc19IncoherentElasticXSEEEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !191
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc19IncoherentElasticXSEELb1EEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EPN6openmc19IncoherentElasticXSELb0EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !193
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_head_impl = getelementptr inbounds nuw %"struct.std::_Head_base.34", ptr %this1, i32 0, i32 0
  store ptr null, ptr %_M_head_impl, align 8, !tbaa !195
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc19IncoherentElasticXSEELb1EEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !197
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3getILm0EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !187
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !187
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt12__get_helperILm0EPN6openmc19IncoherentElasticXSEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZSt12__get_helperILm0EPN6openmc19IncoherentElasticXSEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !189
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !189
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt11_Tuple_implILm0EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEE7_M_headERS5_(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt11_Tuple_implILm0EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEE7_M_headERS5_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !189
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !189
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10_Head_baseILm0EPN6openmc19IncoherentElasticXSELb0EE7_M_headERS3_(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt10_Head_baseILm0EPN6openmc19IncoherentElasticXSELb0EE7_M_headERS3_(ptr noundef nonnull align 8 dereferenceable(8) %__b) #2 comdat align 2 {
entry:
  %__b.addr = alloca ptr, align 8
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !193
  %0 = load ptr, ptr %__b.addr, align 8, !tbaa !193
  %_M_head_impl = getelementptr inbounds nuw %"struct.std::_Head_base.34", ptr %0, i32 0, i32 0
  ret ptr %_M_head_impl
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !83
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.27", ptr %this1, i32 0, i32 0
  %call = call noundef ptr @_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE11get_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !83
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::unique_ptr.27", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE10_M_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt14default_deleteIN6openmc10Function1DEEC2INS0_19IncoherentElasticXSEvEERKS_IT_E(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %0) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !143
  store ptr %0, ptr %.addr, align 8, !tbaa !199
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE7releaseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !185
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__p) #6
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  %0 = load ptr, ptr %call, align 8, !tbaa !55
  store ptr %0, ptr %__p, align 8, !tbaa !55
  %call2 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE6_M_ptrEv(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr null, ptr %call2, align 8, !tbaa !55
  %1 = load ptr, ptr %__p, align 8, !tbaa !55
  call void @llvm.lifetime.end.p0(i64 8, ptr %__p) #6
  ret ptr %1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE10_M_deleterEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !185
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_t = getelementptr inbounds nuw %"class.std::__uniq_ptr_impl.29", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZSt3getILm1EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %_M_t) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZSt3getILm1EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(ptr noundef nonnull align 8 dereferenceable(8) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !187
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !187
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZSt12__get_helperILm1ESt14default_deleteIN6openmc19IncoherentElasticXSEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZSt12__get_helperILm1ESt14default_deleteIN6openmc19IncoherentElasticXSEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(ptr noundef nonnull align 1 dereferenceable(1) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !191
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !191
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc19IncoherentElasticXSEEEE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN6openmc19IncoherentElasticXSEEEE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %__t) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !191
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !191
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc19IncoherentElasticXSEELb1EE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt10_Head_baseILm1ESt14default_deleteIN6openmc19IncoherentElasticXSEELb1EE7_M_headERS4_(ptr noundef nonnull align 1 dereferenceable(1) %__b) #2 comdat align 2 {
entry:
  %__b.addr = alloca ptr, align 8
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !197
  %0 = load ptr, ptr %__b.addr, align 8, !tbaa !197
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNKSt14default_deleteIN6openmc19IncoherentElasticXSEEclEPS1_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__ptr) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__ptr.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !199
  store ptr %__ptr, ptr %__ptr.addr, align 8, !tbaa !55
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__ptr.addr, align 8, !tbaa !55
  %isnull = icmp eq ptr %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %vtable = load ptr, ptr %0, align 8, !tbaa !20
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 2
  %1 = load ptr, ptr %vfn, align 8
  call void %1(ptr noundef nonnull align 8 dereferenceable(24) %0) #6
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #2 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %call = invoke noundef zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  br i1 %call, label %cond.true, label %cond.false

cond.true:                                        ; preds = %invoke.cont
  br label %cond.end

cond.false:                                       ; preds = %invoke.cont
  %0 = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 2
  %1 = load i64, ptr %0, align 8, !tbaa !99
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 15, %cond.true ], [ %1, %cond.false ]
  ret i64 %cond

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

; Function Attrs: mustprogress uwtable
define available_externally noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmRKS4_(ptr noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %__pos1, ptr noundef nonnull align 8 dereferenceable(32) %__str) #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__pos1.addr = alloca i64, align 8
  %__str.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store i64 %__pos1, ptr %__pos1.addr, align 8, !tbaa !54
  store ptr %__str, ptr %__str.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__pos1.addr, align 8, !tbaa !54
  %1 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call = call noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %1)
  %2 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call2 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %2) #6
  %call3 = call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %0, i64 noundef 0, ptr noundef %call, i64 noundef %call2)
  ret ptr %call3
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_(ptr noundef nonnull align 8 dereferenceable(32) %this, ptr noundef nonnull align 8 dereferenceable(32) %__str) unnamed_addr #2 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__str.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store ptr %__str, ptr %__str.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_dataplus = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 0
  %call = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  %0 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call2 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(ptr noundef nonnull align 8 dereferenceable(32) %0)
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_(ptr noundef nonnull align 8 dereferenceable(8) %_M_dataplus, ptr noundef %call, ptr noundef nonnull align 1 dereferenceable(1) %call2)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %1 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call4 = invoke noundef zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv(ptr noundef nonnull align 8 dereferenceable(32) %1)
          to label %invoke.cont3 unwind label %terminate.lpad

invoke.cont3:                                     ; preds = %invoke.cont
  br i1 %call4, label %if.then, label %if.else

if.then:                                          ; preds = %invoke.cont3
  %2 = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 2
  %arraydecay = getelementptr inbounds [16 x i8], ptr %2, i64 0, i64 0
  %3 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %4 = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %3, i32 0, i32 2
  %arraydecay5 = getelementptr inbounds [16 x i8], ptr %4, i64 0, i64 0
  %5 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call6 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv(ptr noundef nonnull align 8 dereferenceable(32) %5) #6
  %add = add i64 %call6, 1
  %call7 = call noundef ptr @_ZNSt11char_traitsIcE4copyEPcPKcm(ptr noundef %arraydecay, ptr noundef %arraydecay5, i64 noundef %add)
  br label %if.end

if.else:                                          ; preds = %invoke.cont3
  %6 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call8 = call noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %6)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(ptr noundef nonnull align 8 dereferenceable(32) %this1, ptr noundef %call8)
  %7 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %8 = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %7, i32 0, i32 2
  %9 = load i64, ptr %8, align 8, !tbaa !99
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %9)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call9 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv(ptr noundef nonnull align 8 dereferenceable(32) %10) #6
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %call9)
  %11 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %12 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call10 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %12)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef %call10)
  %13 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(ptr noundef nonnull align 8 dereferenceable(32) %13, i64 noundef 0)
          to label %invoke.cont11 unwind label %terminate.lpad

invoke.cont11:                                    ; preds = %if.end
  ret void

terminate.lpad:                                   ; preds = %if.end, %invoke.cont, %entry
  %14 = landingpad { ptr, i32 }
          catch ptr null
  %15 = extractvalue { ptr, i32 } %14, 0
  call void @__clang_call_terminate(ptr %15) #25
  unreachable
}

; Function Attrs: mustprogress uwtable
define available_externally noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %this, ptr noundef nonnull align 8 dereferenceable(32) %__str) #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__str.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store ptr %__str, ptr %__str.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call = call noundef ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %0)
  %1 = load ptr, ptr %__str.addr, align 8, !tbaa !64
  %call2 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %1) #6
  %call3 = call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %this1, ptr noundef %call, i64 noundef %call2)
  ret ptr %call3
}

; Function Attrs: mustprogress uwtable
define available_externally noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %__pos, i64 noundef %__n1, ptr noundef %__s, i64 noundef %__n2) #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__pos.addr = alloca i64, align 8
  %__n1.addr = alloca i64, align 8
  %__s.addr = alloca ptr, align 8
  %__n2.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store i64 %__pos, ptr %__pos.addr, align 8, !tbaa !54
  store i64 %__n1, ptr %__n1.addr, align 8, !tbaa !54
  store ptr %__s, ptr %__s.addr, align 8, !tbaa !62
  store i64 %__n2, ptr %__n2.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__pos.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %0, ptr noundef @.str.9)
  %1 = load i64, ptr %__pos.addr, align 8, !tbaa !54
  %2 = load i64, ptr %__n1.addr, align 8, !tbaa !54
  %call2 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %1, i64 noundef %2) #6
  %3 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  %4 = load i64, ptr %__n2.addr, align 8, !tbaa !54
  %call3 = call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %call, i64 noundef %call2, ptr noundef %3, i64 noundef %4)
  ret ptr %call3
}

declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32), i64 noundef, i64 noundef, ptr noundef, i64 noundef) #4

; Function Attrs: mustprogress uwtable
define available_externally noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc(ptr noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %__pos, ptr noundef %__s) #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__pos.addr = alloca i64, align 8
  %__s.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store i64 %__pos, ptr %__pos.addr, align 8, !tbaa !54
  store ptr %__s, ptr %__s.addr, align 8, !tbaa !62
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__pos.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %this1) #6
  %cmp = icmp ugt i64 %0, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  %2 = load i64, ptr %__pos.addr, align 8, !tbaa !54
  %call2 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %this1) #6
  call void (ptr, ...) @_ZSt24__throw_out_of_range_fmtPKcz(ptr noundef @.str.10, ptr noundef %1, i64 noundef %2, i64 noundef %call2) #24
  unreachable

if.end:                                           ; preds = %entry
  %3 = load i64, ptr %__pos.addr, align 8, !tbaa !54
  ret i64 %3
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm(ptr noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %__pos, i64 noundef %__off) #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__pos.addr = alloca i64, align 8
  %__off.addr = alloca i64, align 8
  %__testoff = alloca i8, align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store i64 %__pos, ptr %__pos.addr, align 8, !tbaa !54
  store i64 %__off, ptr %__off.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 1, ptr %__testoff) #6
  %0 = load i64, ptr %__off.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %this1) #6
  %1 = load i64, ptr %__pos.addr, align 8, !tbaa !54
  %sub = sub i64 %call, %1
  %cmp = icmp ult i64 %0, %sub
  %storedv = zext i1 %cmp to i8
  store i8 %storedv, ptr %__testoff, align 1, !tbaa !87
  %2 = load i8, ptr %__testoff, align 1, !tbaa !87, !range !89, !noundef !90
  %loadedv = trunc i8 %2 to i1
  br i1 %loadedv, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i64, ptr %__off.addr, align 8, !tbaa !54
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call2 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %this1) #6
  %4 = load i64, ptr %__pos.addr, align 8, !tbaa !54
  %sub3 = sub i64 %call2, %4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %3, %cond.true ], [ %sub3, %cond.false ]
  call void @llvm.lifetime.end.p0(i64 1, ptr %__testoff) #6
  ret i64 %cond
}

; Function Attrs: noreturn
declare void @_ZSt24__throw_out_of_range_fmtPKcz(ptr noundef, ...) #13

; Function Attrs: mustprogress uwtable
define available_externally noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %this, ptr noundef %__s, i64 noundef %__n) #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__s.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store ptr %__s, ptr %__s.addr, align 8, !tbaa !62
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef 0, i64 noundef %0, ptr noundef @.str.11)
  %1 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %this1, ptr noundef %1, i64 noundef %2)
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define available_externally void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc(ptr noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %__n1, i64 noundef %__n2, ptr noundef %__s) #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n1.addr = alloca i64, align 8
  %__n2.addr = alloca i64, align 8
  %__s.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store i64 %__n1, ptr %__n1.addr, align 8, !tbaa !54
  store i64 %__n2, ptr %__n2.addr, align 8, !tbaa !54
  store ptr %__s, ptr %__s.addr, align 8, !tbaa !62
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %this1) #6
  %call2 = call noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %this1) #6
  %0 = load i64, ptr %__n1.addr, align 8, !tbaa !54
  %sub = sub i64 %call2, %0
  %sub3 = sub i64 %call, %sub
  %1 = load i64, ptr %__n2.addr, align 8, !tbaa !54
  %cmp = icmp ult i64 %sub3, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  call void @_ZSt20__throw_length_errorPKc(ptr noundef %2) #24
  unreachable

if.end:                                           ; preds = %entry
  ret void
}

declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef, i64 noundef) #4

; Function Attrs: mustprogress nounwind uwtable
define available_externally noundef i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #2 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %call = invoke noundef nonnull align 1 dereferenceable(1) ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %call2 = call noundef i64 @_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %call) #6
  %sub = sub i64 %call2, 1
  %div = udiv i64 %sub, 2
  ret i64 %div

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { ptr, i32 }
          catch ptr null
  %1 = extractvalue { ptr, i32 } %0, 0
  call void @__clang_call_terminate(ptr %1) #25
  unreachable
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(ptr noundef) #13

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %__a) #2 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !93
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !93
  %call = call noundef i64 @_ZNKSt15__new_allocatorIcE8max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret i64 %call
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally noundef nonnull align 1 dereferenceable(1) ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(ptr noundef nonnull align 8 dereferenceable(32) %this) #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_dataplus = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 0
  ret ptr %_M_dataplus
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt15__new_allocatorIcE8max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !100
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef i64 @_ZNKSt15__new_allocatorIcE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret i64 %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt15__new_allocatorIcE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !100
  %this1 = load ptr, ptr %this.addr, align 8
  ret i64 9223372036854775807
}

; Function Attrs: mustprogress uwtable
define available_externally noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc(ptr noundef nonnull align 8 dereferenceable(32) %this, ptr noundef %__s) #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__s.addr = alloca ptr, align 8
  %__n = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store ptr %__s, ptr %__s.addr, align 8, !tbaa !62
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__n) #6
  %0 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  %call = call noundef i64 @_ZNSt11char_traitsIcE6lengthEPKc(ptr noundef %0)
  store i64 %call, ptr %__n, align 8, !tbaa !54
  %1 = load i64, ptr %__n, align 8, !tbaa !54
  call void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef 0, i64 noundef %1, ptr noundef @.str.11)
  %2 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  %3 = load i64, ptr %__n, align 8, !tbaa !54
  %call2 = call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %this1, ptr noundef %2, i64 noundef %3)
  call void @llvm.lifetime.end.p0(i64 8, ptr %__n) #6
  ret ptr %call2
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNSt11char_traitsIcE6lengthEPKc(ptr noundef %__s) #2 comdat align 2 {
entry:
  %__s.addr = alloca ptr, align 8
  store ptr %__s, ptr %__s.addr, align 8, !tbaa !62
  %0 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  %call = call i64 @strlen(ptr noundef %0) #6
  ret i64 %call
}

; Function Attrs: nounwind
declare i64 @strlen(ptr noundef) #5

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_(ptr dead_on_unwind noalias writable sret(%"class.std::allocator") align 1 %agg.result, ptr noundef nonnull align 1 dereferenceable(1) %__a) #0 comdat align 2 {
entry:
  %result.ptr = alloca ptr, align 8
  %__a.addr = alloca ptr, align 8
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !93
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !93
  call void @_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_(ptr dead_on_unwind writable sret(%"class.std::allocator") align 1 %agg.result, ptr noundef nonnull align 1 dereferenceable(1) %0)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv(ptr dead_on_unwind noalias writable sret(%"class.std::allocator") align 1 %agg.result, ptr noundef nonnull align 8 dereferenceable(32) %this) #2 align 2 {
entry:
  %result.ptr = alloca ptr, align 8
  %this.addr = alloca ptr, align 8
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  call void @_ZNSaIcEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %agg.result, ptr noundef nonnull align 1 dereferenceable(1) %call) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(32) %this, ptr noundef nonnull align 1 dereferenceable(1) %__a) unnamed_addr #2 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__a.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !64
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !93
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_dataplus = getelementptr inbounds nuw %"class.std::__cxx11::basic_string", ptr %this1, i32 0, i32 0
  %call = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1)
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !93
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_(ptr noundef nonnull align 8 dereferenceable(8) %_M_dataplus, ptr noundef %call, ptr noundef nonnull align 1 dereferenceable(1) %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %call2 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17_M_use_local_dataEv(ptr noundef nonnull align 8 dereferenceable(32) %this1) #6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(ptr noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef 0)
          to label %invoke.cont3 unwind label %terminate.lpad

invoke.cont3:                                     ; preds = %invoke.cont
  ret void

terminate.lpad:                                   ; preds = %invoke.cont, %entry
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  call void @__clang_call_terminate(ptr %2) #25
  unreachable
}

declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32), i64 noundef) #4

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_(ptr dead_on_unwind noalias writable sret(%"class.std::allocator") align 1 %agg.result, ptr noundef nonnull align 1 dereferenceable(1) %__rhs) #2 comdat align 2 {
entry:
  %result.ptr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !93
  %0 = load ptr, ptr %__rhs.addr, align 8, !tbaa !93
  call void @_ZNSaIcEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %agg.result, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define available_externally void @_ZNSaIcEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %__a) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__a.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !93
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !93
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !93
  call void @_ZNSt15__new_allocatorIcEC2ERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret void
}

; Function Attrs: mustprogress uwtable
define void @_ZN6openmc10PolynomialC2El(ptr noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %dset) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %dset.addr = alloca i64, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %this, ptr %this.addr, align 8, !tbaa !11
  store i64 %dset, ptr %dset.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN6openmc10Function1DC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr getelementptr inbounds inrange(-16, 32) ({ [6 x ptr] }, ptr @_ZTVN6openmc10PolynomialE, i32 0, i32 0, i32 2), ptr %this1, align 8, !tbaa !20
  %coef_ = getelementptr inbounds nuw %"class.openmc::Polynomial", ptr %this1, i32 0, i32 1
  call void @_ZNSt6vectorIdSaIdEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %coef_) #6
  %0 = load i64, ptr %dset.addr, align 8, !tbaa !54
  %coef_2 = getelementptr inbounds nuw %"class.openmc::Polynomial", ptr %this1, i32 0, i32 1
  invoke void @_ZN6openmc12read_datasetIdEEvlRSt6vectorIT_SaIS2_EEb(i64 noundef %0, ptr noundef nonnull align 8 dereferenceable(24) %coef_2, i1 noundef zeroext false)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  store ptr %2, ptr %exn.slot, align 8
  %3 = extractvalue { ptr, i32 } %1, 1
  store i32 %3, ptr %ehselector.slot, align 4
  call void @_ZNSt6vectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %coef_) #6
  call void @_ZN6openmc10Function1DD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val3 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val3
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc10Function1DC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !60
  %this1 = load ptr, ptr %this.addr, align 8
  store ptr getelementptr inbounds inrange(-16, 32) ({ [6 x ptr] }, ptr @_ZTVN6openmc10Function1DE, i32 0, i32 0, i32 2), ptr %this1, align 8, !tbaa !20
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt12_Vector_baseIdSaIdEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZN6openmc12read_datasetIdEEvlRSt6vectorIT_SaIS2_EEb(i64 noundef %dset, ptr noundef nonnull align 8 dereferenceable(24) %vec, i1 noundef zeroext %indep) #0 comdat personality ptr @__gxx_personality_v0 {
entry:
  %dset.addr = alloca i64, align 8
  %vec.addr = alloca ptr, align 8
  %indep.addr = alloca i8, align 1
  %shape = alloca %"class.std::vector.56", align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store i64 %dset, ptr %dset.addr, align 8, !tbaa !54
  store ptr %vec, ptr %vec.addr, align 8, !tbaa !201
  %storedv = zext i1 %indep to i8
  store i8 %storedv, ptr %indep.addr, align 1, !tbaa !87
  call void @llvm.lifetime.start.p0(i64 24, ptr %shape) #6
  %0 = load i64, ptr %dset.addr, align 8, !tbaa !54
  call void @_ZN6openmc12object_shapeEl(ptr dead_on_unwind writable sret(%"class.std::vector.56") align 8 %shape, i64 noundef %0)
  %1 = load ptr, ptr %vec.addr, align 8, !tbaa !201
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt6vectorImSaImEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %shape, i64 noundef 0) #6
  %2 = load i64, ptr %call, align 8, !tbaa !54
  invoke void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %1, i64 noundef %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %3 = load i64, ptr %dset.addr, align 8, !tbaa !54
  %4 = load i64, ptr @_ZN6openmc9H5TypeMapIdE7type_idE, align 8, !tbaa !54
  %5 = load i8, ptr %indep.addr, align 1, !tbaa !87, !range !89, !noundef !90
  %loadedv = trunc i8 %5 to i1
  %6 = load ptr, ptr %vec.addr, align 8, !tbaa !201
  %call1 = call noundef ptr @_ZNSt6vectorIdSaIdEE4dataEv(ptr noundef nonnull align 8 dereferenceable(24) %6) #6
  invoke void @_ZN6openmc21read_dataset_lowlevelElPKcllbPv(i64 noundef %3, ptr noundef null, i64 noundef %4, i64 noundef 0, i1 noundef zeroext %loadedv, ptr noundef %call1)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %invoke.cont
  call void @_ZNSt6vectorImSaImEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %shape) #6
  call void @llvm.lifetime.end.p0(i64 24, ptr %shape) #6
  ret void

lpad:                                             ; preds = %invoke.cont, %entry
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  store ptr %8, ptr %exn.slot, align 8
  %9 = extractvalue { ptr, i32 } %7, 1
  store i32 %9, ptr %ehselector.slot, align 4
  call void @_ZNSt6vectorImSaImEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %shape) #6
  call void @llvm.lifetime.end.p0(i64 24, ptr %shape) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val3 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val3
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !203
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 1
  %1 = load ptr, ptr %_M_finish, align 8, !tbaa !204
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt12_Vector_baseIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  ret void

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc10Function1DD0Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !60
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.trap() #25
  unreachable
}

; Function Attrs: cold noreturn nounwind memory(inaccessiblemem: write)
declare void @llvm.trap() #17

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !205
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %_M_impl) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !207
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSaIdEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  call void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !209
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %this1, i32 0, i32 0
  store ptr null, ptr %_M_start, align 8, !tbaa !203
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %this1, i32 0, i32 1
  store ptr null, ptr %_M_finish, align 8, !tbaa !204
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %this1, i32 0, i32 2
  store ptr null, ptr %_M_end_of_storage, align 8, !tbaa !211
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIdEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !212
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

declare void @_ZN6openmc12object_shapeEl(ptr dead_on_unwind writable sret(%"class.std::vector.56") align 8, i64 noundef) #4

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__new_size) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__new_size.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  store i64 %__new_size, ptr %__new_size.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__new_size.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %cmp = icmp ugt i64 %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i64, ptr %__new_size.addr, align 8, !tbaa !54
  %call2 = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %sub = sub i64 %1, %call2
  call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %sub)
  br label %if.end6

if.else:                                          ; preds = %entry
  %2 = load i64, ptr %__new_size.addr, align 8, !tbaa !54
  %call3 = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %cmp4 = icmp ult i64 %2, %call3
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %3 = load ptr, ptr %_M_start, align 8, !tbaa !203
  %4 = load i64, ptr %__new_size.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw double, ptr %3, i64 %4
  call void @_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %add.ptr) #6
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt6vectorImSaImEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !214
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !216
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i64, ptr %0, i64 %1
  ret ptr %add.ptr
}

declare void @_ZN6openmc21read_dataset_lowlevelElPKcllbPv(i64 noundef, ptr noundef, i64 noundef, i64 noundef, i1 noundef zeroext, ptr noundef) #4

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt6vectorIdSaIdEE4dataEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !203
  %call = call noundef ptr @_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt6vectorImSaImEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !214
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !216
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 1
  %1 = load ptr, ptr %_M_finish, align 8, !tbaa !218
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  invoke void @_ZSt8_DestroyIPmmEvT_S1_RSaIT0_E(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt12_Vector_baseImSaImEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  ret void

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  %0 = load ptr, ptr %_M_finish, align 8, !tbaa !204
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 0
  %1 = load ptr, ptr %_M_start, align 8, !tbaa !203
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__size = alloca i64, align 8
  %__navail = alloca i64, align 8
  %__len = alloca i64, align 8
  %__new_start = alloca ptr, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end48

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %__size) #6
  %call = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  store i64 %call, ptr %__size, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__navail) #6
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 2
  %1 = load ptr, ptr %_M_end_of_storage, align 8, !tbaa !211
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 1
  %2 = load ptr, ptr %_M_finish, align 8, !tbaa !204
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, ptr %__navail, align 8, !tbaa !54
  %3 = load i64, ptr %__size, align 8, !tbaa !54
  %call3 = call noundef i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %cmp4 = icmp ugt i64 %3, %call3
  br i1 %cmp4, label %if.then7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %4 = load i64, ptr %__navail, align 8, !tbaa !54
  %call5 = call noundef i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %5 = load i64, ptr %__size, align 8, !tbaa !54
  %sub = sub i64 %call5, %5
  %cmp6 = icmp ugt i64 %4, %sub
  br i1 %cmp6, label %if.then7, label %if.end

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i64, ptr %__navail, align 8, !tbaa !54
  %7 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp8 = icmp uge i64 %6, %7
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end
  %_M_impl10 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish11 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl10, i32 0, i32 1
  %8 = load ptr, ptr %_M_finish11, align 8, !tbaa !204
  %9 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call12 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call13 = call noundef ptr @_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E(ptr noundef %8, i64 noundef %9, ptr noundef nonnull align 1 dereferenceable(1) %call12)
  %_M_impl14 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish15 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl14, i32 0, i32 1
  store ptr %call13, ptr %_M_finish15, align 8, !tbaa !204
  br label %if.end47

if.else:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #6
  %10 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call16 = call noundef i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %10, ptr noundef @.str.12)
  store i64 %call16, ptr %__len, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__new_start) #6
  %11 = load i64, ptr %__len, align 8, !tbaa !54
  %call17 = call noundef ptr @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %11)
  store ptr %call17, ptr %__new_start, align 8, !tbaa !219
  %12 = load ptr, ptr %__new_start, align 8, !tbaa !219
  %13 = load i64, ptr %__size, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw double, ptr %12, i64 %13
  %14 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call18 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call19 = invoke noundef ptr @_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E(ptr noundef %add.ptr, i64 noundef %14, ptr noundef nonnull align 1 dereferenceable(1) %call18)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.else
  br label %try.cont

lpad:                                             ; preds = %if.else
  %15 = landingpad { ptr, i32 }
          catch ptr null
  %16 = extractvalue { ptr, i32 } %15, 0
  store ptr %16, ptr %exn.slot, align 8
  %17 = extractvalue { ptr, i32 } %15, 1
  store i32 %17, ptr %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %18 = call ptr @__cxa_begin_catch(ptr %exn) #6
  %19 = load ptr, ptr %__new_start, align 8, !tbaa !219
  %20 = load i64, ptr %__len, align 8, !tbaa !54
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %19, i64 noundef %20)
          to label %invoke.cont21 unwind label %lpad20

invoke.cont21:                                    ; preds = %catch
  invoke void @__cxa_rethrow() #24
          to label %unreachable unwind label %lpad20

lpad20:                                           ; preds = %invoke.cont21, %catch
  %21 = landingpad { ptr, i32 }
          cleanup
  %22 = extractvalue { ptr, i32 } %21, 0
  store ptr %22, ptr %exn.slot, align 8
  %23 = extractvalue { ptr, i32 } %21, 1
  store i32 %23, ptr %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont22 unwind label %terminate.lpad

invoke.cont22:                                    ; preds = %lpad20
  call void @llvm.lifetime.end.p0(i64 8, ptr %__new_start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__navail) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__size) #6
  br label %eh.resume

try.cont:                                         ; preds = %invoke.cont
  %_M_impl23 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl23, i32 0, i32 0
  %24 = load ptr, ptr %_M_start, align 8, !tbaa !203
  %_M_impl24 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish25 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl24, i32 0, i32 1
  %25 = load ptr, ptr %_M_finish25, align 8, !tbaa !204
  %26 = load ptr, ptr %__new_start, align 8, !tbaa !219
  %call26 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call27 = call noundef ptr @_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_(ptr noundef %24, ptr noundef %25, ptr noundef %26, ptr noundef nonnull align 1 dereferenceable(1) %call26) #6
  %_M_impl28 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start29 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl28, i32 0, i32 0
  %27 = load ptr, ptr %_M_start29, align 8, !tbaa !203
  %_M_impl30 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_end_of_storage31 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl30, i32 0, i32 2
  %28 = load ptr, ptr %_M_end_of_storage31, align 8, !tbaa !211
  %_M_impl32 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start33 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl32, i32 0, i32 0
  %29 = load ptr, ptr %_M_start33, align 8, !tbaa !203
  %sub.ptr.lhs.cast34 = ptrtoint ptr %28 to i64
  %sub.ptr.rhs.cast35 = ptrtoint ptr %29 to i64
  %sub.ptr.sub36 = sub i64 %sub.ptr.lhs.cast34, %sub.ptr.rhs.cast35
  %sub.ptr.div37 = sdiv exact i64 %sub.ptr.sub36, 8
  call void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %27, i64 noundef %sub.ptr.div37)
  %30 = load ptr, ptr %__new_start, align 8, !tbaa !219
  %_M_impl38 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start39 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl38, i32 0, i32 0
  store ptr %30, ptr %_M_start39, align 8, !tbaa !203
  %31 = load ptr, ptr %__new_start, align 8, !tbaa !219
  %32 = load i64, ptr %__size, align 8, !tbaa !54
  %add.ptr40 = getelementptr inbounds nuw double, ptr %31, i64 %32
  %33 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %add.ptr41 = getelementptr inbounds nuw double, ptr %add.ptr40, i64 %33
  %_M_impl42 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish43 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl42, i32 0, i32 1
  store ptr %add.ptr41, ptr %_M_finish43, align 8, !tbaa !204
  %34 = load ptr, ptr %__new_start, align 8, !tbaa !219
  %35 = load i64, ptr %__len, align 8, !tbaa !54
  %add.ptr44 = getelementptr inbounds nuw double, ptr %34, i64 %35
  %_M_impl45 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_end_of_storage46 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl45, i32 0, i32 2
  store ptr %add.ptr44, ptr %_M_end_of_storage46, align 8, !tbaa !211
  call void @llvm.lifetime.end.p0(i64 8, ptr %__new_start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  br label %if.end47

if.end47:                                         ; preds = %try.cont, %if.then9
  call void @llvm.lifetime.end.p0(i64 8, ptr %__navail) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__size) #6
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %entry
  ret void

eh.resume:                                        ; preds = %invoke.cont22
  %exn49 = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn49, 0
  %lpad.val50 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val50

terminate.lpad:                                   ; preds = %lpad20
  %36 = landingpad { ptr, i32 }
          catch ptr null
  %37 = extractvalue { ptr, i32 } %36, 0
  call void @__clang_call_terminate(ptr %37) #25
  unreachable

unreachable:                                      ; preds = %invoke.cont21
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef %__pos) #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__pos.addr = alloca ptr, align 8
  %__n = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  store ptr %__pos, ptr %__pos.addr, align 8, !tbaa !219
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__n) #6
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  %0 = load ptr, ptr %_M_finish, align 8, !tbaa !204
  %1 = load ptr, ptr %__pos.addr, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, ptr %__n, align 8, !tbaa !54
  %2 = load i64, ptr %__n, align 8, !tbaa !54
  %tobool = icmp ne i64 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__pos.addr, align 8, !tbaa !219
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish3 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 1
  %4 = load ptr, ptr %_M_finish3, align 8, !tbaa !204
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(ptr noundef %3, ptr noundef %4, ptr noundef nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  %5 = load ptr, ptr %__pos.addr, align 8, !tbaa !219
  %_M_impl4 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish5 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl4, i32 0, i32 1
  store ptr %5, ptr %_M_finish5, align 8, !tbaa !204
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %__n) #6
  ret void

terminate.lpad:                                   ; preds = %if.then
  %6 = landingpad { ptr, i32 }
          catch ptr null
  %7 = extractvalue { ptr, i32 } %6, 0
  call void @__clang_call_terminate(ptr %7) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call2 = call noundef i64 @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %call) #6
  ret i64 %call2
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E(ptr noundef %__first, i64 noundef %__n, ptr noundef nonnull align 1 dereferenceable(1) %0) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %0, ptr %.addr, align 8, !tbaa !220
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef ptr @_ZSt25__uninitialized_default_nIPdmET_S1_T0_(ptr noundef %1, i64 noundef %2)
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !205
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  ret ptr %_M_impl
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n, ptr noundef %__s) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca ptr, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %__s, ptr %__s.addr, align 8, !tbaa !62
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call2 = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %sub = sub i64 %call, %call2
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp ult i64 %sub, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  call void @_ZSt20__throw_length_errorPKc(ptr noundef %1) #24
  unreachable

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #6
  %call3 = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %call4 = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  store i64 %call4, ptr %ref.tmp, align 8, !tbaa !54
  %call5 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3maxImERKT_S2_S2_(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp, ptr noundef nonnull align 8 dereferenceable(8) %__n.addr)
  %2 = load i64, ptr %call5, align 8, !tbaa !54
  %add = add i64 %call3, %2
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  store i64 %add, ptr %__len, align 8, !tbaa !54
  %3 = load i64, ptr %__len, align 8, !tbaa !54
  %call6 = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %cmp7 = icmp ult i64 %3, %call6
  br i1 %cmp7, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, ptr %__len, align 8, !tbaa !54
  %call8 = call noundef i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %cmp9 = icmp ugt i64 %4, %call8
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %call10 = call noundef i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %5 = load i64, ptr %__len, align 8, !tbaa !54
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %5, %cond.false ]
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  ret i64 %cond
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !205
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef ptr @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl, i64 noundef %1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call, %cond.true ], [ null, %cond.false ]
  ret ptr %cond
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef %__p, i64 noundef %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !205
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !219
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !219
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !219
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl, ptr noundef %1, i64 noundef %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result, ptr noundef nonnull align 1 dereferenceable(1) %__alloc) #2 comdat align 2 {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %__alloc.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !219
  store ptr %__alloc, ptr %__alloc.addr, align 8, !tbaa !220
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !219
  %3 = load ptr, ptr %__alloc.addr, align 8, !tbaa !220
  %call = call noundef ptr @_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 1 dereferenceable(1) %3) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %__a) #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %__a.addr = alloca ptr, align 8
  %__diffmax = alloca i64, align 8
  %__allocmax = alloca i64, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !220
  call void @llvm.lifetime.start.p0(i64 8, ptr %__diffmax) #6
  store i64 1152921504606846975, ptr %__diffmax, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__allocmax) #6
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !220
  %call = call noundef i64 @_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  store i64 %call, ptr %__allocmax, align 8, !tbaa !54
  %call1 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3minImERKT_S2_S2_(ptr noundef nonnull align 8 dereferenceable(8) %__diffmax, ptr noundef nonnull align 8 dereferenceable(8) %__allocmax)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %1 = load i64, ptr %call1, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr %__allocmax) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__diffmax) #6
  ret i64 %1

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !205
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  ret ptr %_M_impl
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %__a) #2 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !220
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !220
  %call = call noundef i64 @_ZNKSt15__new_allocatorIdE8max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret i64 %call
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3minImERKT_S2_S2_(ptr noundef nonnull align 8 dereferenceable(8) %__a, ptr noundef nonnull align 8 dereferenceable(8) %__b) #1 comdat {
entry:
  %retval = alloca ptr, align 8
  %__a.addr = alloca ptr, align 8
  %__b.addr = alloca ptr, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !68
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__b.addr, align 8, !tbaa !68
  %1 = load i64, ptr %0, align 8, !tbaa !54
  %2 = load ptr, ptr %__a.addr, align 8, !tbaa !68
  %3 = load i64, ptr %2, align 8, !tbaa !54
  %cmp = icmp ult i64 %1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %__b.addr, align 8, !tbaa !68
  store ptr %4, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %__a.addr, align 8, !tbaa !68
  store ptr %5, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load ptr, ptr %retval, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt15__new_allocatorIdE8max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !212
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef i64 @_ZNKSt15__new_allocatorIdE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret i64 %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt15__new_allocatorIdE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !212
  %this1 = load ptr, ptr %this.addr, align 8
  ret i64 1152921504606846975
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt25__uninitialized_default_nIPdmET_S1_T0_(ptr noundef %__first, i64 noundef %__n) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__can_fill = alloca i8, align 1
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 1, ptr %__can_fill) #6
  store i8 1, ptr %__can_fill, align 1, !tbaa !87
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef ptr @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_(ptr noundef %0, i64 noundef %1)
  call void @llvm.lifetime.end.p0(i64 1, ptr %__can_fill) #6
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_(ptr noundef %__first, i64 noundef %__n) #0 comdat align 2 {
entry:
  %__first.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__val = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp ugt i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %__val) #6
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  store ptr %1, ptr %__val, align 8, !tbaa !219
  %2 = load ptr, ptr %__val, align 8, !tbaa !219
  call void @_ZSt10_ConstructIdJEEvPT_DpOT0_(ptr noundef %2)
  %3 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %incdec.ptr = getelementptr inbounds nuw double, ptr %3, i32 1
  store ptr %incdec.ptr, ptr %__first.addr, align 8, !tbaa !219
  %4 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %5 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %sub = sub i64 %5, 1
  %6 = load ptr, ptr %__val, align 8, !tbaa !219
  %call = call noundef ptr @_ZSt6fill_nIPdmdET_S1_T0_RKT1_(ptr noundef %4, i64 noundef %sub, ptr noundef nonnull align 8 dereferenceable(8) %6)
  store ptr %call, ptr %__first.addr, align 8, !tbaa !219
  call void @llvm.lifetime.end.p0(i64 8, ptr %__val) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %7 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  ret ptr %7
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIdJEEvPT_DpOT0_(ptr noundef %__p) #1 comdat {
entry:
  %__p.addr = alloca ptr, align 8
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !219
  store double 0.000000e+00, ptr %0, align 8, !tbaa !16
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt6fill_nIPdmdET_S1_T0_RKT1_(ptr noundef %__first, i64 noundef %__n, ptr noundef nonnull align 8 dereferenceable(8) %__value) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__value.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  %undef.agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZSt17__size_to_integerm(i64 noundef %1)
  %2 = load ptr, ptr %__value.addr, align 8, !tbaa !219
  call void @_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_(ptr noundef nonnull align 8 dereferenceable(8) %__first.addr)
  %call1 = call noundef ptr @_ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag(ptr noundef %0, i64 noundef %call, ptr noundef nonnull align 8 dereferenceable(8) %2)
  ret ptr %call1
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag(ptr noundef %__first, i64 noundef %__n, ptr noundef nonnull align 8 dereferenceable(8) %__value) #8 comdat {
entry:
  %retval = alloca ptr, align 8
  %0 = alloca %"struct.std::random_access_iterator_tag", align 1
  %__first.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__value.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !219
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp ule i64 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  store ptr %2, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %4 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %5 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw double, ptr %4, i64 %5
  %6 = load ptr, ptr %__value.addr, align 8, !tbaa !219
  call void @_ZSt8__fill_aIPddEvT_S1_RKT0_(ptr noundef %3, ptr noundef %add.ptr, ptr noundef nonnull align 8 dereferenceable(8) %6)
  %7 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %8 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %add.ptr1 = getelementptr inbounds nuw double, ptr %7, i64 %8
  store ptr %add.ptr1, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %9 = load ptr, ptr %retval, align 8
  ret ptr %9
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZSt17__size_to_integerm(i64 noundef %__n) #1 comdat {
entry:
  %__n.addr = alloca i64, align 8
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  ret i64 %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_(ptr noundef nonnull align 8 dereferenceable(8) %0) #1 comdat {
entry:
  %.addr = alloca ptr, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !222
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt8__fill_aIPddEvT_S1_RKT0_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__value) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__value.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %2 = load ptr, ptr %__value.addr, align 8, !tbaa !219
  call void @_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2)
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__value) #1 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__value.addr = alloca ptr, align 8
  %__tmp = alloca double, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !219
  call void @llvm.lifetime.start.p0(i64 8, ptr %__tmp) #6
  %0 = load ptr, ptr %__value.addr, align 8, !tbaa !219
  %1 = load double, ptr %0, align 8, !tbaa !16
  store double %1, ptr %__tmp, align 8, !tbaa !16
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %3 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %cmp = icmp ne ptr %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load double, ptr %__tmp, align 8, !tbaa !16
  %5 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  store double %4, ptr %5, align 8, !tbaa !16
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %incdec.ptr = getelementptr inbounds nuw double, ptr %6, i32 1
  store ptr %incdec.ptr, ptr %__first.addr, align 8, !tbaa !219
  br label %for.cond, !llvm.loop !224

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__tmp) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3maxImERKT_S2_S2_(ptr noundef nonnull align 8 dereferenceable(8) %__a, ptr noundef nonnull align 8 dereferenceable(8) %__b) #1 comdat {
entry:
  %retval = alloca ptr, align 8
  %__a.addr = alloca ptr, align 8
  %__b.addr = alloca ptr, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !68
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !68
  %1 = load i64, ptr %0, align 8, !tbaa !54
  %2 = load ptr, ptr %__b.addr, align 8, !tbaa !68
  %3 = load i64, ptr %2, align 8, !tbaa !54
  %cmp = icmp ult i64 %1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %__b.addr, align 8, !tbaa !68
  store ptr %4, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %__a.addr, align 8, !tbaa !68
  store ptr %5, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load ptr, ptr %retval, align 8
  ret ptr %6
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m(ptr noundef nonnull align 1 dereferenceable(1) %__a, i64 noundef %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !220
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !220
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef ptr @_ZNSt15__new_allocatorIdE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef null)
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt15__new_allocatorIdE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %this, i64 noundef %__n, ptr noundef %0) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !212
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %0, ptr %.addr, align 8, !tbaa !225
  %this1 = load ptr, ptr %this.addr, align 8
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNKSt15__new_allocatorIdE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %cmp = icmp ugt i64 %1, %call
  %conv = zext i1 %cmp to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp2 = icmp ugt i64 %2, 2305843009213693951
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  call void @_ZSt28__throw_bad_array_new_lengthv() #24
  unreachable

if.end:                                           ; preds = %if.then
  call void @_ZSt17__throw_bad_allocv() #24
  unreachable

if.end4:                                          ; preds = %entry
  %3 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %mul = mul i64 %3, 8
  %call5 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %mul) #26
  ret ptr %call5
}

; Function Attrs: noreturn
declare void @_ZSt28__throw_bad_array_new_lengthv() #13

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #13

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm(ptr noundef nonnull align 1 dereferenceable(1) %__a, ptr noundef %__p, i64 noundef %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !220
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !219
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !220
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !219
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @_ZNSt15__new_allocatorIdE10deallocateEPdm(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef %1, i64 noundef %2)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIdE10deallocateEPdm(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__p, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !212
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !219
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !219
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %mul = mul i64 %1, 8
  call void @_ZdlPvm(ptr noundef %0, i64 noundef %mul) #23
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result, ptr noundef nonnull align 1 dereferenceable(1) %__alloc) #1 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %__alloc.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !219
  store ptr %__alloc, ptr %__alloc.addr, align 8, !tbaa !220
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %call = call noundef ptr @_ZSt12__niter_baseIPdET_S1_(ptr noundef %0) #6
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %call1 = call noundef ptr @_ZSt12__niter_baseIPdET_S1_(ptr noundef %1) #6
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !219
  %call2 = call noundef ptr @_ZSt12__niter_baseIPdET_S1_(ptr noundef %2) #6
  %3 = load ptr, ptr %__alloc.addr, align 8, !tbaa !220
  %call3 = call noundef ptr @_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E(ptr noundef %call, ptr noundef %call1, ptr noundef %call2, ptr noundef nonnull align 1 dereferenceable(1) %3) #6
  ret ptr %call3
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result, ptr noundef nonnull align 1 dereferenceable(1) %__alloc) #1 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %__alloc.addr = alloca ptr, align 8
  %__count = alloca i64, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !219
  store ptr %__alloc, ptr %__alloc.addr, align 8, !tbaa !220
  call void @llvm.lifetime.start.p0(i64 8, ptr %__count) #6
  %0 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, ptr %__count, align 8, !tbaa !54
  %2 = load i64, ptr %__count, align 8, !tbaa !54
  %cmp = icmp sgt i64 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__result.addr, align 8, !tbaa !219
  %4 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %5 = load i64, ptr %__count, align 8, !tbaa !54
  %mul = mul i64 %5, 8
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %3, ptr align 8 %4, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load ptr, ptr %__result.addr, align 8, !tbaa !219
  %7 = load i64, ptr %__count, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds double, ptr %6, i64 %7
  call void @llvm.lifetime.end.p0(i64 8, ptr %__count) #6
  ret ptr %add.ptr
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__niter_baseIPdET_S1_(ptr noundef %__it) #1 comdat {
entry:
  %__it.addr = alloca ptr, align 8
  store ptr %__it, ptr %__it.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__it.addr, align 8, !tbaa !219
  ret ptr %0
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr writeonly captures(none), ptr readonly captures(none), i64, i1 immarg) #14

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 1 dereferenceable(1) %0) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  store ptr %0, ptr %.addr, align 8, !tbaa !220
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %2 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  call void @_ZSt8_DestroyIPdEvT_S1_(ptr noundef %1, ptr noundef %2)
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt8_DestroyIPdEvT_S1_(ptr noundef %__first, ptr noundef %__last) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(ptr noundef %0, ptr noundef %1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(ptr noundef %0, ptr noundef %1) #2 comdat align 2 {
entry:
  %.addr = alloca ptr, align 8
  %.addr1 = alloca ptr, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !219
  store ptr %1, ptr %.addr1, align 8, !tbaa !219
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef %__ptr) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__ptr.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  store ptr %__ptr, ptr %__ptr.addr, align 8, !tbaa !219
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__ptr.addr, align 8, !tbaa !219
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt8_DestroyIPmmEvT_S1_RSaIT0_E(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 1 dereferenceable(1) %0) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %0, ptr %.addr, align 8, !tbaa !226
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  call void @_ZSt8_DestroyIPmEvT_S1_(ptr noundef %1, ptr noundef %2)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !228
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  ret ptr %_M_impl
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseImSaImEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !228
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !216
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 2
  %1 = load ptr, ptr %_M_end_of_storage, align 8, !tbaa !230
  %_M_impl3 = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %_M_start4 = getelementptr inbounds nuw %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data", ptr %_M_impl3, i32 0, i32 0
  %2 = load ptr, ptr %_M_start4, align 8, !tbaa !216
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  invoke void @_ZNSt12_Vector_baseImSaImEE13_M_deallocateEPmm(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %0, i64 noundef %sub.ptr.div)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  call void @_ZNSt15__new_allocatorImED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %_M_impl5) #6
  ret void

terminate.lpad:                                   ; preds = %entry
  %3 = landingpad { ptr, i32 }
          catch ptr null
  %4 = extractvalue { ptr, i32 } %3, 0
  call void @__clang_call_terminate(ptr %4) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt8_DestroyIPmEvT_S1_(ptr noundef %__first, ptr noundef %__last) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPmEEvT_S3_(ptr noundef %0, ptr noundef %1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPmEEvT_S3_(ptr noundef %0, ptr noundef %1) #2 comdat align 2 {
entry:
  %.addr = alloca ptr, align 8
  %.addr1 = alloca ptr, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !68
  store ptr %1, ptr %.addr1, align 8, !tbaa !68
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt12_Vector_baseImSaImEE13_M_deallocateEPmm(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef %__p, i64 noundef %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !228
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !68
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !68
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !68
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl, ptr noundef %1, i64 noundef %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(ptr noundef nonnull align 1 dereferenceable(1) %__a, ptr noundef %__p, i64 noundef %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !226
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !68
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !226
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !68
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @_ZNSt15__new_allocatorImE10deallocateEPmm(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef %1, i64 noundef %2)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorImE10deallocateEPmm(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__p, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !231
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !68
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !68
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %mul = mul i64 %1, 8
  call void @_ZdlPvm(ptr noundef %0, i64 noundef %mul) #23
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !205
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !203
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 2
  %1 = load ptr, ptr %_M_end_of_storage, align 8, !tbaa !211
  %_M_impl3 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start4 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl3, i32 0, i32 0
  %2 = load ptr, ptr %_M_start4, align 8, !tbaa !203
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %0, i64 noundef %sub.ptr.div)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  call void @_ZNSt15__new_allocatorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %_M_impl5) #6
  ret void

terminate.lpad:                                   ; preds = %entry
  %3 = landingpad { ptr, i32 }
          catch ptr null
  %4 = extractvalue { ptr, i32 } %3, 0
  call void @__clang_call_terminate(ptr %4) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNKSt6vectorIdSaIdEE7crbeginEv(ptr dead_on_unwind noalias writable sret(%"class.std::reverse_iterator") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %result.ptr = alloca ptr, align 8
  %this.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call ptr @_ZNKSt6vectorIdSaIdEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  %coerce.dive2 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive2, align 8
  call void @_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEC2ES7_(ptr noundef nonnull align 8 dereferenceable(8) %agg.result, ptr %0) #6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef zeroext i1 @_ZStneIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEbRKSt16reverse_iteratorIT_ESC_(ptr noundef nonnull align 8 dereferenceable(8) %__x, ptr noundef nonnull align 8 dereferenceable(8) %__y) #8 comdat {
entry:
  %__x.addr = alloca ptr, align 8
  %__y.addr = alloca ptr, align 8
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !233
  store ptr %__y, ptr %__y.addr, align 8, !tbaa !233
  %0 = load ptr, ptr %__x.addr, align 8, !tbaa !233
  %1 = load ptr, ptr %__y.addr, align 8, !tbaa !233
  %call = call noundef zeroext i1 @_ZSteqIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEbRKSt16reverse_iteratorIT_ESC_(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef nonnull align 8 dereferenceable(8) %1)
  %lnot = xor i1 %call, true
  ret i1 %lnot
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNKSt6vectorIdSaIdEE5crendEv(ptr dead_on_unwind noalias writable sret(%"class.std::reverse_iterator") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %result.ptr = alloca ptr, align 8
  %this.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call ptr @_ZNKSt6vectorIdSaIdEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  %coerce.dive2 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive2, align 8
  call void @_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEC2ES7_(ptr noundef nonnull align 8 dereferenceable(8) %agg.result, ptr %0) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !233
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__tmp) #6
  %current = getelementptr inbounds nuw %"class.std::reverse_iterator", ptr %this1, i32 0, i32 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__tmp, ptr align 8 %current, i64 8, i1 false), !tbaa.struct !235
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmmEv(ptr noundef nonnull align 8 dereferenceable(8) %__tmp) #6
  %call2 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %call) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__tmp) #6
  ret ptr %call2
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #18

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !233
  %this1 = load ptr, ptr %this.addr, align 8
  %current = getelementptr inbounds nuw %"class.std::reverse_iterator", ptr %this1, i32 0, i32 0
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmmEv(ptr noundef nonnull align 8 dereferenceable(8) %current) #6
  ret ptr %this1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNKSt6vectorIdSaIdEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_finish) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEC2ES7_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr %__x.coerce) unnamed_addr #2 comdat align 2 {
entry:
  %__x = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca ptr, align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %__x, i32 0, i32 0
  store ptr %__x.coerce, ptr %coerce.dive, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !233
  %this1 = load ptr, ptr %this.addr, align 8
  %current = getelementptr inbounds nuw %"class.std::reverse_iterator", ptr %this1, i32 0, i32 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %current, ptr align 8 %__x, i64 8, i1 false), !tbaa.struct !235
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(8) %__i) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__i.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !236
  store ptr %__i, ptr %__i.addr, align 8, !tbaa !222
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__i.addr, align 8, !tbaa !222
  %1 = load ptr, ptr %0, align 8, !tbaa !219
  store ptr %1, ptr %_M_current, align 8, !tbaa !238
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZSteqIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEbRKSt16reverse_iteratorIT_ESC_(ptr noundef nonnull align 8 dereferenceable(8) %__x, ptr noundef nonnull align 8 dereferenceable(8) %__y) #1 comdat {
entry:
  %__x.addr = alloca ptr, align 8
  %__y.addr = alloca ptr, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %ref.tmp1 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !233
  store ptr %__y, ptr %__y.addr, align 8, !tbaa !233
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %0 = load ptr, ptr %__x.addr, align 8, !tbaa !233
  %call = call ptr @_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %ref.tmp, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp1) #6
  %1 = load ptr, ptr %__y.addr, align 8, !tbaa !233
  %call2 = call ptr @_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %1) #6
  %coerce.dive3 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %ref.tmp1, i32 0, i32 0
  store ptr %call2, ptr %coerce.dive3, align 8
  %call4 = call noundef zeroext i1 @_ZN9__gnu_cxxeqIPKdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  ret i1 %call4
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZN9__gnu_cxxeqIPKdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(ptr noundef nonnull align 8 dereferenceable(8) %__lhs, ptr noundef nonnull align 8 dereferenceable(8) %__rhs) #1 comdat {
entry:
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !236
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !236
  %0 = load ptr, ptr %__lhs.addr, align 8, !tbaa !236
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  %1 = load ptr, ptr %call, align 8, !tbaa !219
  %2 = load ptr, ptr %__rhs.addr, align 8, !tbaa !236
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %2) #6
  %3 = load ptr, ptr %call1, align 8, !tbaa !219
  %cmp = icmp eq ptr %1, %3
  ret i1 %cmp
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !233
  %this1 = load ptr, ptr %this.addr, align 8
  %current = getelementptr inbounds nuw %"class.std::reverse_iterator", ptr %this1, i32 0, i32 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %retval, ptr align 8 %current, i64 8, i1 false), !tbaa.struct !235
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !236
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %this1, i32 0, i32 0
  ret ptr %_M_current
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNKSt6vectorIdSaIdEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_start) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmmEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !236
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_current, align 8, !tbaa !238
  %incdec.ptr = getelementptr inbounds double, ptr %0, i32 -1
  store ptr %incdec.ptr, ptr %_M_current, align 8, !tbaa !238
  ret ptr %this1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !236
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_current, align 8, !tbaa !238
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc10DataBuffer3addIiEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %this, i32 noundef %value) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %value.addr = alloca i32, align 4
  %ptr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !22
  store i32 %value, ptr %value.addr, align 4, !tbaa !44
  %this1 = load ptr, ptr %this.addr, align 8
  %mode_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 3
  %0 = load i32, ptr %mode_, align 8, !tbaa !240
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #6
  %data_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %data_, align 8, !tbaa !243
  %offset_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 2
  %2 = load i64, ptr %offset_, align 8, !tbaa !244
  %add.ptr = getelementptr inbounds nuw i8, ptr %1, i64 %2
  store ptr %add.ptr, ptr %ptr, align 8, !tbaa !245
  %3 = load i32, ptr %value.addr, align 4, !tbaa !44
  %4 = load ptr, ptr %ptr, align 8, !tbaa !245
  store i32 %3, ptr %4, align 4, !tbaa !44
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %offset_2 = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 2
  %5 = load i64, ptr %offset_2, align 8, !tbaa !244
  %add = add i64 %5, 4
  store i64 %add, ptr %offset_2, align 8, !tbaa !244
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc10DataBuffer3addIdEEvRKSt6vectorIT_SaIS3_EE(ptr noundef nonnull align 8 dereferenceable(28) %this, ptr noundef nonnull align 8 dereferenceable(24) %value) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !22
  store ptr %value, ptr %value.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %mode_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 3
  %0 = load i32, ptr %mode_, align 8, !tbaa !240
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %data_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %data_, align 8, !tbaa !243
  %offset_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 2
  %2 = load i64, ptr %offset_, align 8, !tbaa !244
  %add.ptr = getelementptr inbounds nuw i8, ptr %1, i64 %2
  %3 = load ptr, ptr %value.addr, align 8, !tbaa !201
  %call = call noundef ptr @_ZNKSt6vectorIdSaIdEE4dataEv(ptr noundef nonnull align 8 dereferenceable(24) %3) #6
  %4 = load ptr, ptr %value.addr, align 8, !tbaa !201
  %call2 = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %4) #6
  %mul = mul i64 8, %call2
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %add.ptr, ptr align 8 %call, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load ptr, ptr %value.addr, align 8, !tbaa !201
  %call3 = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %5) #6
  %mul4 = mul i64 8, %call3
  %offset_5 = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 2
  %6 = load i64, ptr %offset_5, align 8, !tbaa !244
  %add = add i64 %6, %mul4
  store i64 %add, ptr %offset_5, align 8, !tbaa !244
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNKSt6vectorIdSaIdEE4dataEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !203
  %call = call noundef ptr @_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define noundef double @_ZNK6openmc14PolynomialFlatclEd(ptr noundef nonnull align 8 dereferenceable(8) %this, double noundef %x) #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %x.addr = alloca double, align 8
  %y = alloca double, align 8
  %coef = alloca %"class.gsl::span", align 8
  %c = alloca %"class.std::reverse_iterator.61", align 8
  %ref.tmp = alloca %"class.std::reverse_iterator.61", align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !246
  store double %x, ptr %x.addr, align 8, !tbaa !16
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %y) #6
  store double 0.000000e+00, ptr %y, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 16, ptr %coef) #6
  %call = call { ptr, ptr } @_ZNK6openmc14PolynomialFlat4coefEv(ptr noundef nonnull align 8 dereferenceable(8) %this1)
  %0 = getelementptr inbounds nuw { ptr, ptr }, ptr %coef, i32 0, i32 0
  %1 = extractvalue { ptr, ptr } %call, 0
  store ptr %1, ptr %0, align 8
  %2 = getelementptr inbounds nuw { ptr, ptr }, ptr %coef, i32 0, i32 1
  %3 = extractvalue { ptr, ptr } %call, 1
  store ptr %3, ptr %2, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %c) #6
  call void @_ZNK3gsl4spanIKdE7crbeginEv(ptr dead_on_unwind writable sret(%"class.std::reverse_iterator.61") align 8 %c, ptr noundef nonnull align 8 dereferenceable(16) %coef) #6
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  call void @_ZNK3gsl4spanIKdE5crendEv(ptr dead_on_unwind writable sret(%"class.std::reverse_iterator.61") align 8 %ref.tmp, ptr noundef nonnull align 8 dereferenceable(16) %coef) #6
  %call2 = call noundef zeroext i1 @_ZStneIPKdEbRKSt16reverse_iteratorIT_ES6_(ptr noundef nonnull align 8 dereferenceable(8) %c, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp)
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  br i1 %call2, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %c) #6
  br label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load double, ptr %y, align 8, !tbaa !16
  %5 = load double, ptr %x.addr, align 8, !tbaa !16
  %call3 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt16reverse_iteratorIPKdEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %c)
  %6 = load double, ptr %call3, align 8, !tbaa !16
  %7 = call double @llvm.fmuladd.f64(double %4, double %5, double %6)
  store double %7, ptr %y, align 8, !tbaa !16
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %call4 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt16reverse_iteratorIPKdEppEv(ptr noundef nonnull align 8 dereferenceable(8) %c)
  br label %for.cond, !llvm.loop !248

for.end:                                          ; preds = %for.cond.cleanup
  %8 = load double, ptr %y, align 8, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 16, ptr %coef) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %y) #6
  ret double %8
}

; Function Attrs: mustprogress uwtable
define { ptr, ptr } @_ZNK6openmc14PolynomialFlat4coefEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #0 align 2 {
entry:
  %retval = alloca %"class.gsl::span", align 8
  %this.addr = alloca ptr, align 8
  %n = alloca i64, align 8
  %start = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !246
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #6
  %data_ = getelementptr inbounds nuw %"class.openmc::PolynomialFlat", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %data_, align 8, !tbaa !249
  %add.ptr = getelementptr inbounds i8, ptr %0, i64 4
  %1 = load i32, ptr %add.ptr, align 4, !tbaa !44
  %conv = sext i32 %1 to i64
  store i64 %conv, ptr %n, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #6
  %data_2 = getelementptr inbounds nuw %"class.openmc::PolynomialFlat", ptr %this1, i32 0, i32 0
  %2 = load ptr, ptr %data_2, align 8, !tbaa !249
  %add.ptr3 = getelementptr inbounds i8, ptr %2, i64 8
  store ptr %add.ptr3, ptr %start, align 8, !tbaa !219
  %3 = load ptr, ptr %start, align 8, !tbaa !219
  %4 = load i64, ptr %n, align 8, !tbaa !54
  call void @_ZN3gsl4spanIKdEC2EPS1_m(ptr noundef nonnull align 8 dereferenceable(16) %retval, ptr noundef %3, i64 noundef %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #6
  %5 = load { ptr, ptr }, ptr %retval, align 8
  ret { ptr, ptr } %5
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNK3gsl4spanIKdE7crbeginEv(ptr dead_on_unwind noalias writable sret(%"class.std::reverse_iterator.61") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %result.ptr = alloca ptr, align 8
  %this.addr = alloca ptr, align 8
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !251
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef ptr @_ZNK3gsl4spanIKdE4cendEv(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  call void @_ZNSt16reverse_iteratorIPKdEC2ES1_(ptr noundef nonnull align 8 dereferenceable(8) %agg.result, ptr noundef %call) #6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef zeroext i1 @_ZStneIPKdEbRKSt16reverse_iteratorIT_ES6_(ptr noundef nonnull align 8 dereferenceable(8) %__x, ptr noundef nonnull align 8 dereferenceable(8) %__y) #8 comdat {
entry:
  %__x.addr = alloca ptr, align 8
  %__y.addr = alloca ptr, align 8
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !253
  store ptr %__y, ptr %__y.addr, align 8, !tbaa !253
  %0 = load ptr, ptr %__x.addr, align 8, !tbaa !253
  %1 = load ptr, ptr %__y.addr, align 8, !tbaa !253
  %call = call noundef zeroext i1 @_ZSteqIPKdEbRKSt16reverse_iteratorIT_ES6_(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef nonnull align 8 dereferenceable(8) %1)
  %lnot = xor i1 %call, true
  ret i1 %lnot
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNK3gsl4spanIKdE5crendEv(ptr dead_on_unwind noalias writable sret(%"class.std::reverse_iterator.61") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %result.ptr = alloca ptr, align 8
  %this.addr = alloca ptr, align 8
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !251
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef ptr @_ZNK3gsl4spanIKdE6cbeginEv(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  call void @_ZNSt16reverse_iteratorIPKdEC2ES1_(ptr noundef nonnull align 8 dereferenceable(8) %agg.result, ptr noundef %call) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt16reverse_iteratorIPKdEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__tmp = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !253
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__tmp) #6
  %current = getelementptr inbounds nuw %"class.std::reverse_iterator.61", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %current, align 8, !tbaa !255
  store ptr %0, ptr %__tmp, align 8, !tbaa !219
  %1 = load ptr, ptr %__tmp, align 8, !tbaa !219
  %incdec.ptr = getelementptr inbounds double, ptr %1, i32 -1
  store ptr %incdec.ptr, ptr %__tmp, align 8, !tbaa !219
  call void @llvm.lifetime.end.p0(i64 8, ptr %__tmp) #6
  ret ptr %incdec.ptr
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt16reverse_iteratorIPKdEppEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !253
  %this1 = load ptr, ptr %this.addr, align 8
  %current = getelementptr inbounds nuw %"class.std::reverse_iterator.61", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %current, align 8, !tbaa !255
  %incdec.ptr = getelementptr inbounds double, ptr %0, i32 -1
  store ptr %incdec.ptr, ptr %current, align 8, !tbaa !255
  ret ptr %this1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNK3gsl4spanIKdE4cendEv(ptr noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !251
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef ptr @_ZNK3gsl4spanIKdE3endEv(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt16reverse_iteratorIPKdEC2ES1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %__x) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__x.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !253
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !219
  %this1 = load ptr, ptr %this.addr, align 8
  %current = getelementptr inbounds nuw %"class.std::reverse_iterator.61", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__x.addr, align 8, !tbaa !219
  store ptr %0, ptr %current, align 8, !tbaa !255
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNK3gsl4spanIKdE3endEv(ptr noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !251
  %this1 = load ptr, ptr %this.addr, align 8
  %last_ = getelementptr inbounds nuw %"class.gsl::span", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %last_, align 8, !tbaa !257
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZSteqIPKdEbRKSt16reverse_iteratorIT_ES6_(ptr noundef nonnull align 8 dereferenceable(8) %__x, ptr noundef nonnull align 8 dereferenceable(8) %__y) #1 comdat {
entry:
  %__x.addr = alloca ptr, align 8
  %__y.addr = alloca ptr, align 8
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !253
  store ptr %__y, ptr %__y.addr, align 8, !tbaa !253
  %0 = load ptr, ptr %__x.addr, align 8, !tbaa !253
  %call = call noundef ptr @_ZNKSt16reverse_iteratorIPKdE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  %1 = load ptr, ptr %__y.addr, align 8, !tbaa !253
  %call1 = call noundef ptr @_ZNKSt16reverse_iteratorIPKdE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %1) #6
  %cmp = icmp eq ptr %call, %call1
  ret i1 %cmp
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNKSt16reverse_iteratorIPKdE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !253
  %this1 = load ptr, ptr %this.addr, align 8
  %current = getelementptr inbounds nuw %"class.std::reverse_iterator.61", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %current, align 8, !tbaa !255
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNK3gsl4spanIKdE6cbeginEv(ptr noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !251
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef ptr @_ZNK3gsl4spanIKdE5beginEv(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNK3gsl4spanIKdE5beginEv(ptr noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !251
  %this1 = load ptr, ptr %this.addr, align 8
  %first_ = getelementptr inbounds nuw %"class.gsl::span", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %first_, align 8, !tbaa !259
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN3gsl4spanIKdEC2EPS1_m(ptr noundef nonnull align 8 dereferenceable(16) %this, ptr noundef %data_in, i64 noundef %size_in) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %data_in.addr = alloca ptr, align 8
  %size_in.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !251
  store ptr %data_in, ptr %data_in.addr, align 8, !tbaa !219
  store i64 %size_in, ptr %size_in.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %data_in.addr, align 8, !tbaa !219
  %first_ = getelementptr inbounds nuw %"class.gsl::span", ptr %this1, i32 0, i32 0
  store ptr %0, ptr %first_, align 8, !tbaa !259
  %1 = load ptr, ptr %data_in.addr, align 8, !tbaa !219
  %2 = load i64, ptr %size_in.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw double, ptr %1, i64 %2
  %last_ = getelementptr inbounds nuw %"class.gsl::span", ptr %this1, i32 0, i32 1
  store ptr %add.ptr, ptr %last_, align 8, !tbaa !257
  ret void
}

; Function Attrs: mustprogress uwtable
define void @_ZN6openmc11Tabulated1DC2El(ptr noundef nonnull align 8 dereferenceable(120) %this, i64 noundef %dset) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %dset.addr = alloca i64, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  %__range1 = alloca ptr, align 8
  %__begin1 = alloca %"class.__gnu_cxx::__normal_iterator.62", align 8
  %__end1 = alloca %"class.__gnu_cxx::__normal_iterator.62", align 8
  %b = alloca ptr, align 8
  %int_temp = alloca %"class.std::vector", align 8
  %__range114 = alloca ptr, align 8
  %__begin115 = alloca %"class.__gnu_cxx::__normal_iterator.62", align 8
  %__end118 = alloca %"class.__gnu_cxx::__normal_iterator.62", align 8
  %i = alloca i32, align 4
  %ref.tmp = alloca i32, align 4
  %arr = alloca %"class.xt::xarray_container", align 8
  %xs = alloca %"class.xt::xview", align 8
  %ref.tmp38 = alloca i32, align 4
  %ys = alloca %"class.xt::xview", align 8
  %ref.tmp41 = alloca i32, align 4
  %agg.tmp = alloca %"class.std::back_insert_iterator", align 8
  %coerce = alloca %"class.std::back_insert_iterator", align 8
  %agg.tmp57 = alloca %"class.std::back_insert_iterator", align 8
  %coerce65 = alloca %"class.std::back_insert_iterator", align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !24
  store i64 %dset, ptr %dset.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN6openmc10Function1DC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr getelementptr inbounds inrange(-16, 32) ({ [6 x ptr] }, ptr @_ZTVN6openmc11Tabulated1DE, i32 0, i32 0, i32 2), ptr %this1, align 8, !tbaa !20
  %n_regions_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 1
  store i64 0, ptr %n_regions_, align 8, !tbaa !46
  %nbt_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %nbt_) #6
  %int_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 3
  call void @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %int_) #6
  %x_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 5
  call void @_ZNSt6vectorIdSaIdEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %x_) #6
  %y_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 6
  call void @_ZNSt6vectorIdSaIdEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %y_) #6
  %0 = load i64, ptr %dset.addr, align 8, !tbaa !54
  %nbt_2 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 2
  invoke void @_ZN6openmc14read_attributeIiEEvlPKcRSt6vectorIT_SaIS4_EE(i64 noundef %0, ptr noundef @.str.13, ptr noundef nonnull align 8 dereferenceable(24) %nbt_2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %nbt_3 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 2
  %call = call noundef i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %nbt_3) #6
  %n_regions_4 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 1
  store i64 %call, ptr %n_regions_4, align 8, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 8, ptr %__range1) #6
  %nbt_5 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 2
  store ptr %nbt_5, ptr %__range1, align 8, !tbaa !260
  call void @llvm.lifetime.start.p0(i64 8, ptr %__begin1) #6
  %1 = load ptr, ptr %__range1, align 8, !tbaa !260
  %call6 = call ptr @_ZNSt6vectorIiSaIiEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %1) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %__begin1, i32 0, i32 0
  store ptr %call6, ptr %coerce.dive, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__end1) #6
  %2 = load ptr, ptr %__range1, align 8, !tbaa !260
  %call7 = call ptr @_ZNSt6vectorIiSaIiEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %2) #6
  %coerce.dive8 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %__end1, i32 0, i32 0
  store ptr %call7, ptr %coerce.dive8, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %invoke.cont
  %call9 = call noundef zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(ptr noundef nonnull align 8 dereferenceable(8) %__begin1, ptr noundef nonnull align 8 dereferenceable(8) %__end1) #6
  br i1 %call9, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__end1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__begin1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__range1) #6
  br label %for.end

lpad:                                             ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  store ptr %4, ptr %exn.slot, align 8
  %5 = extractvalue { ptr, i32 } %3, 1
  store i32 %5, ptr %ehselector.slot, align 4
  br label %ehcleanup75

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #6
  %call10 = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %__begin1) #6
  store ptr %call10, ptr %b, align 8, !tbaa !245
  %6 = load ptr, ptr %b, align 8, !tbaa !245
  %7 = load i32, ptr %6, align 4, !tbaa !44
  %dec = add nsw i32 %7, -1
  store i32 %dec, ptr %6, align 4, !tbaa !44
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #6
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %call11 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %__begin1) #6
  br label %for.cond

for.end:                                          ; preds = %for.cond.cleanup
  call void @llvm.lifetime.start.p0(i64 24, ptr %int_temp) #6
  call void @_ZNSt6vectorIiSaIiEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %int_temp) #6
  %8 = load i64, ptr %dset.addr, align 8, !tbaa !54
  invoke void @_ZN6openmc14read_attributeIiEEvlPKcRSt6vectorIT_SaIS4_EE(i64 noundef %8, ptr noundef @.str.14, ptr noundef nonnull align 8 dereferenceable(24) %int_temp)
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %for.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %__range114) #6
  store ptr %int_temp, ptr %__range114, align 8, !tbaa !260
  call void @llvm.lifetime.start.p0(i64 8, ptr %__begin115) #6
  %9 = load ptr, ptr %__range114, align 8, !tbaa !260
  %call16 = call ptr @_ZNSt6vectorIiSaIiEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %9) #6
  %coerce.dive17 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %__begin115, i32 0, i32 0
  store ptr %call16, ptr %coerce.dive17, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__end118) #6
  %10 = load ptr, ptr %__range114, align 8, !tbaa !260
  %call19 = call ptr @_ZNSt6vectorIiSaIiEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %10) #6
  %coerce.dive20 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %__end118, i32 0, i32 0
  store ptr %call19, ptr %coerce.dive20, align 8
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc31, %invoke.cont13
  %call22 = call noundef zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(ptr noundef nonnull align 8 dereferenceable(8) %__begin115, ptr noundef nonnull align 8 dereferenceable(8) %__end118) #6
  br i1 %call22, label %for.body24, label %for.cond.cleanup23

for.cond.cleanup23:                               ; preds = %for.cond21
  call void @llvm.lifetime.end.p0(i64 8, ptr %__end118) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__begin115) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__range114) #6
  br label %for.end33

lpad12:                                           ; preds = %for.end
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  store ptr %12, ptr %exn.slot, align 8
  %13 = extractvalue { ptr, i32 } %11, 1
  store i32 %13, ptr %ehselector.slot, align 4
  br label %ehcleanup73

for.body24:                                       ; preds = %for.cond21
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  %call25 = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %__begin115) #6
  %14 = load i32, ptr %call25, align 4, !tbaa !44
  store i32 %14, ptr %i, align 4, !tbaa !44
  %int_26 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 3
  call void @llvm.lifetime.start.p0(i64 4, ptr %ref.tmp) #6
  %15 = load i32, ptr %i, align 4, !tbaa !44
  %call29 = invoke noundef i32 @_ZN6openmc10int2interpEi(i32 noundef %15)
          to label %invoke.cont28 unwind label %lpad27

invoke.cont28:                                    ; preds = %for.body24
  store i32 %call29, ptr %ref.tmp, align 4, !tbaa !47
  invoke void @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE9push_backEOS1_(ptr noundef nonnull align 8 dereferenceable(24) %int_26, ptr noundef nonnull align 4 dereferenceable(4) %ref.tmp)
          to label %invoke.cont30 unwind label %lpad27

invoke.cont30:                                    ; preds = %invoke.cont28
  call void @llvm.lifetime.end.p0(i64 4, ptr %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  br label %for.inc31

for.inc31:                                        ; preds = %invoke.cont30
  %call32 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %__begin115) #6
  br label %for.cond21

lpad27:                                           ; preds = %invoke.cont28, %for.body24
  %16 = landingpad { ptr, i32 }
          cleanup
  %17 = extractvalue { ptr, i32 } %16, 0
  store ptr %17, ptr %exn.slot, align 8
  %18 = extractvalue { ptr, i32 } %16, 1
  store i32 %18, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__end118) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__begin115) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__range114) #6
  br label %ehcleanup73

for.end33:                                        ; preds = %for.cond.cleanup23
  call void @llvm.lifetime.start.p0(i64 240, ptr %arr) #6
  invoke void @_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEC2Ev(ptr noundef nonnull align 8 dereferenceable(240) %arr)
          to label %invoke.cont35 unwind label %lpad34

invoke.cont35:                                    ; preds = %for.end33
  %19 = load i64, ptr %dset.addr, align 8, !tbaa !54
  invoke void @_ZN6openmc12read_datasetIdEEvlRN2xt16xarray_containerINS1_7uvectorIT_SaIS4_EEELNS1_11layout_typeE1ENS1_7svectorINS6_9size_typeELm4ESaINSt6vectorIS4_S5_E9size_typeEELb1EEENS1_22xtensor_expression_tagEEEb(i64 noundef %19, ptr noundef nonnull align 8 dereferenceable(240) %arr, i1 noundef zeroext false)
          to label %invoke.cont37 unwind label %lpad36

invoke.cont37:                                    ; preds = %invoke.cont35
  call void @llvm.lifetime.start.p0(i64 72, ptr %xs) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ref.tmp38) #6
  store i32 0, ptr %ref.tmp38, align 4, !tbaa !44
  invoke void @_ZN2xt4viewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEDaOT_DpOT0_(ptr dead_on_unwind writable sret(%"class.xt::xview") align 8 %xs, ptr noundef nonnull align 8 dereferenceable(240) %arr, ptr noundef nonnull align 4 dereferenceable(4) %ref.tmp38)
          to label %invoke.cont40 unwind label %lpad39

invoke.cont40:                                    ; preds = %invoke.cont37
  call void @llvm.lifetime.end.p0(i64 4, ptr %ref.tmp38) #6
  call void @llvm.lifetime.start.p0(i64 72, ptr %ys) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ref.tmp41) #6
  store i32 1, ptr %ref.tmp41, align 4, !tbaa !44
  invoke void @_ZN2xt4viewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEDaOT_DpOT0_(ptr dead_on_unwind writable sret(%"class.xt::xview") align 8 %ys, ptr noundef nonnull align 8 dereferenceable(240) %arr, ptr noundef nonnull align 4 dereferenceable(4) %ref.tmp41)
          to label %invoke.cont43 unwind label %lpad42

invoke.cont43:                                    ; preds = %invoke.cont40
  call void @llvm.lifetime.end.p0(i64 4, ptr %ref.tmp41) #6
  %call44 = call noundef ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE5beginILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEv(ptr noundef nonnull align 1 dereferenceable(1) %xs) #6
  %call45 = call noundef ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE3endILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEv(ptr noundef nonnull align 1 dereferenceable(1) %xs) #6
  %x_46 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 5
  %call49 = invoke ptr @_ZSt13back_inserterISt6vectorIdSaIdEEESt20back_insert_iteratorIT_ERS4_(ptr noundef nonnull align 8 dereferenceable(24) %x_46)
          to label %invoke.cont48 unwind label %lpad47

invoke.cont48:                                    ; preds = %invoke.cont43
  %coerce.dive50 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp, i32 0, i32 0
  store ptr %call49, ptr %coerce.dive50, align 8
  %coerce.dive51 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp, i32 0, i32 0
  %20 = load ptr, ptr %coerce.dive51, align 8
  %call53 = invoke ptr @_ZSt4copyIPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET0_T_S7_S6_(ptr noundef %call44, ptr noundef %call45, ptr %20)
          to label %invoke.cont52 unwind label %lpad47

invoke.cont52:                                    ; preds = %invoke.cont48
  %coerce.dive54 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %coerce, i32 0, i32 0
  store ptr %call53, ptr %coerce.dive54, align 8
  %call55 = call noundef ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE5beginILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEv(ptr noundef nonnull align 1 dereferenceable(1) %ys) #6
  %call56 = call noundef ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE3endILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEv(ptr noundef nonnull align 1 dereferenceable(1) %ys) #6
  %y_58 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 6
  %call60 = invoke ptr @_ZSt13back_inserterISt6vectorIdSaIdEEESt20back_insert_iteratorIT_ERS4_(ptr noundef nonnull align 8 dereferenceable(24) %y_58)
          to label %invoke.cont59 unwind label %lpad47

invoke.cont59:                                    ; preds = %invoke.cont52
  %coerce.dive61 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp57, i32 0, i32 0
  store ptr %call60, ptr %coerce.dive61, align 8
  %coerce.dive62 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp57, i32 0, i32 0
  %21 = load ptr, ptr %coerce.dive62, align 8
  %call64 = invoke ptr @_ZSt4copyIPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET0_T_S7_S6_(ptr noundef %call55, ptr noundef %call56, ptr %21)
          to label %invoke.cont63 unwind label %lpad47

invoke.cont63:                                    ; preds = %invoke.cont59
  %coerce.dive66 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %coerce65, i32 0, i32 0
  store ptr %call64, ptr %coerce.dive66, align 8
  %x_67 = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 5
  %call68 = call noundef i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %x_67) #6
  %n_pairs_ = getelementptr inbounds nuw %"class.openmc::Tabulated1D", ptr %this1, i32 0, i32 4
  store i64 %call68, ptr %n_pairs_, align 8, !tbaa !26
  call void @_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(65) %ys) #6
  call void @llvm.lifetime.end.p0(i64 72, ptr %ys) #6
  call void @_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(65) %xs) #6
  call void @llvm.lifetime.end.p0(i64 72, ptr %xs) #6
  call void @_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEED2Ev(ptr noundef nonnull align 8 dereferenceable(240) %arr) #6
  call void @llvm.lifetime.end.p0(i64 240, ptr %arr) #6
  call void @_ZNSt6vectorIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %int_temp) #6
  call void @llvm.lifetime.end.p0(i64 24, ptr %int_temp) #6
  ret void

lpad34:                                           ; preds = %for.end33
  %22 = landingpad { ptr, i32 }
          cleanup
  %23 = extractvalue { ptr, i32 } %22, 0
  store ptr %23, ptr %exn.slot, align 8
  %24 = extractvalue { ptr, i32 } %22, 1
  store i32 %24, ptr %ehselector.slot, align 4
  br label %ehcleanup72

lpad36:                                           ; preds = %invoke.cont35
  %25 = landingpad { ptr, i32 }
          cleanup
  %26 = extractvalue { ptr, i32 } %25, 0
  store ptr %26, ptr %exn.slot, align 8
  %27 = extractvalue { ptr, i32 } %25, 1
  store i32 %27, ptr %ehselector.slot, align 4
  br label %ehcleanup71

lpad39:                                           ; preds = %invoke.cont37
  %28 = landingpad { ptr, i32 }
          cleanup
  %29 = extractvalue { ptr, i32 } %28, 0
  store ptr %29, ptr %exn.slot, align 8
  %30 = extractvalue { ptr, i32 } %28, 1
  store i32 %30, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %ref.tmp38) #6
  br label %ehcleanup70

lpad42:                                           ; preds = %invoke.cont40
  %31 = landingpad { ptr, i32 }
          cleanup
  %32 = extractvalue { ptr, i32 } %31, 0
  store ptr %32, ptr %exn.slot, align 8
  %33 = extractvalue { ptr, i32 } %31, 1
  store i32 %33, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %ref.tmp41) #6
  br label %ehcleanup

lpad47:                                           ; preds = %invoke.cont59, %invoke.cont52, %invoke.cont48, %invoke.cont43
  %34 = landingpad { ptr, i32 }
          cleanup
  %35 = extractvalue { ptr, i32 } %34, 0
  store ptr %35, ptr %exn.slot, align 8
  %36 = extractvalue { ptr, i32 } %34, 1
  store i32 %36, ptr %ehselector.slot, align 4
  call void @_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(65) %ys) #6
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad47, %lpad42
  call void @llvm.lifetime.end.p0(i64 72, ptr %ys) #6
  call void @_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(65) %xs) #6
  br label %ehcleanup70

ehcleanup70:                                      ; preds = %ehcleanup, %lpad39
  call void @llvm.lifetime.end.p0(i64 72, ptr %xs) #6
  br label %ehcleanup71

ehcleanup71:                                      ; preds = %ehcleanup70, %lpad36
  call void @_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEED2Ev(ptr noundef nonnull align 8 dereferenceable(240) %arr) #6
  br label %ehcleanup72

ehcleanup72:                                      ; preds = %ehcleanup71, %lpad34
  call void @llvm.lifetime.end.p0(i64 240, ptr %arr) #6
  br label %ehcleanup73

ehcleanup73:                                      ; preds = %ehcleanup72, %lpad27, %lpad12
  call void @_ZNSt6vectorIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %int_temp) #6
  call void @llvm.lifetime.end.p0(i64 24, ptr %int_temp) #6
  br label %ehcleanup75

ehcleanup75:                                      ; preds = %ehcleanup73, %lpad
  call void @_ZNSt6vectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %y_) #6
  call void @_ZNSt6vectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %x_) #6
  call void @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %int_) #6
  call void @_ZNSt6vectorIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %nbt_) #6
  call void @_ZN6openmc10Function1DD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup75
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val80 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val80
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZN6openmc14read_attributeIiEEvlPKcRSt6vectorIT_SaIS4_EE(i64 noundef %obj_id, ptr noundef %name, ptr noundef nonnull align 8 dereferenceable(24) %vec) #0 comdat personality ptr @__gxx_personality_v0 {
entry:
  %obj_id.addr = alloca i64, align 8
  %name.addr = alloca ptr, align 8
  %vec.addr = alloca ptr, align 8
  %shape = alloca %"class.std::vector.56", align 8
  %size = alloca i64, align 8
  %__range2 = alloca ptr, align 8
  %__begin2 = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %__end2 = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %x = alloca i64, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store i64 %obj_id, ptr %obj_id.addr, align 8, !tbaa !54
  store ptr %name, ptr %name.addr, align 8, !tbaa !62
  store ptr %vec, ptr %vec.addr, align 8, !tbaa !260
  call void @llvm.lifetime.start.p0(i64 24, ptr %shape) #6
  %0 = load i64, ptr %obj_id.addr, align 8, !tbaa !54
  %1 = load ptr, ptr %name.addr, align 8, !tbaa !62
  call void @_ZN6openmc15attribute_shapeElPKc(ptr dead_on_unwind writable sret(%"class.std::vector.56") align 8 %shape, i64 noundef %0, ptr noundef %1)
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #6
  store i64 1, ptr %size, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__range2) #6
  store ptr %shape, ptr %__range2, align 8, !tbaa !214
  call void @llvm.lifetime.start.p0(i64 8, ptr %__begin2) #6
  %2 = load ptr, ptr %__range2, align 8, !tbaa !214
  %call = call ptr @_ZNSt6vectorImSaImEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %2) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %__begin2, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__end2) #6
  %3 = load ptr, ptr %__range2, align 8, !tbaa !214
  %call1 = call ptr @_ZNSt6vectorImSaImEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %3) #6
  %coerce.dive2 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %__end2, i32 0, i32 0
  store ptr %call1, ptr %coerce.dive2, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %call3 = call noundef zeroext i1 @_ZN9__gnu_cxxneIPmSt6vectorImSaImEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(ptr noundef nonnull align 8 dereferenceable(8) %__begin2, ptr noundef nonnull align 8 dereferenceable(8) %__end2) #6
  br i1 %call3, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__end2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__begin2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__range2) #6
  br label %for.end

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #6
  %call4 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %__begin2) #6
  %4 = load i64, ptr %call4, align 8, !tbaa !54
  store i64 %4, ptr %x, align 8, !tbaa !54
  %5 = load i64, ptr %x, align 8, !tbaa !54
  %6 = load i64, ptr %size, align 8, !tbaa !54
  %mul = mul i64 %6, %5
  store i64 %mul, ptr %size, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #6
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %call5 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %__begin2) #6
  br label %for.cond

for.end:                                          ; preds = %for.cond.cleanup
  %7 = load ptr, ptr %vec.addr, align 8, !tbaa !260
  %8 = load i64, ptr %size, align 8, !tbaa !54
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %7, i64 noundef %8)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.end
  %9 = load i64, ptr %obj_id.addr, align 8, !tbaa !54
  %10 = load ptr, ptr %name.addr, align 8, !tbaa !62
  %11 = load i64, ptr @_ZN6openmc9H5TypeMapIiE7type_idE, align 8, !tbaa !54
  %12 = load ptr, ptr %vec.addr, align 8, !tbaa !260
  %call6 = call noundef ptr @_ZNSt6vectorIiSaIiEE4dataEv(ptr noundef nonnull align 8 dereferenceable(24) %12) #6
  invoke void @_ZN6openmc9read_attrElPKclPv(i64 noundef %9, ptr noundef %10, i64 noundef %11, ptr noundef %call6)
          to label %invoke.cont7 unwind label %lpad

invoke.cont7:                                     ; preds = %invoke.cont
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #6
  call void @_ZNSt6vectorImSaImEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %shape) #6
  call void @llvm.lifetime.end.p0(i64 24, ptr %shape) #6
  ret void

lpad:                                             ; preds = %invoke.cont, %for.end
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  store ptr %14, ptr %exn.slot, align 8
  %15 = extractvalue { ptr, i32 } %13, 1
  store i32 %15, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #6
  call void @_ZNSt6vectorImSaImEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %shape) #6
  call void @llvm.lifetime.end.p0(i64 24, ptr %shape) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val8 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val8
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  %0 = load ptr, ptr %_M_finish, align 8, !tbaa !262
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 0
  %1 = load ptr, ptr %_M_start, align 8, !tbaa !263
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  ret i64 %sub.ptr.div
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNSt6vectorIiSaIiEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.62", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_start) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNSt6vectorIiSaIiEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.62", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_finish) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(ptr noundef nonnull align 8 dereferenceable(8) %__lhs, ptr noundef nonnull align 8 dereferenceable(8) %__rhs) #1 comdat {
entry:
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !264
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !264
  %0 = load ptr, ptr %__lhs.addr, align 8, !tbaa !264
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  %1 = load ptr, ptr %call, align 8, !tbaa !245
  %2 = load ptr, ptr %__rhs.addr, align 8, !tbaa !264
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %2) #6
  %3 = load ptr, ptr %call1, align 8, !tbaa !245
  %cmp = icmp ne ptr %1, %3
  ret i1 %cmp
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !264
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_current, align 8, !tbaa !266
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !264
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_current, align 8, !tbaa !266
  %incdec.ptr = getelementptr inbounds nuw i32, ptr %0, i32 1
  store ptr %incdec.ptr, ptr %_M_current, align 8, !tbaa !266
  ret ptr %this1
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE9push_backEOS1_(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 4 dereferenceable(4) %__x) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__x.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !225
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__x.addr, align 8, !tbaa !225
  %call = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE12emplace_backIJS1_EEERS1_DpOT_(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef nonnull align 4 dereferenceable(4) %0)
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEC2Ev(ptr noundef nonnull align 8 dereferenceable(240) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca %"class.std::allocator.45", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !268
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(196) %this1) #6
  %0 = getelementptr inbounds i8, ptr %this1, i64 200
  invoke void @_ZN2xt19xcontainer_semanticINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %m_storage = getelementptr inbounds nuw %"class.xt::xarray_container", ptr %this1, i32 0, i32 2
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  store double 0.000000e+00, ptr %ref.tmp, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp2) #6
  call void @_ZNSaIdEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp2) #6
  invoke void @_ZN2xt7uvectorIdSaIdEEC2EmRKdRKS1_(ptr noundef nonnull align 8 dereferenceable(24) %m_storage, i64 noundef 1, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp, ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp2)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont
  call void @_ZNSt15__new_allocatorIdED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp2) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  ret void

lpad:                                             ; preds = %entry
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  store ptr %2, ptr %exn.slot, align 8
  %3 = extractvalue { ptr, i32 } %1, 1
  store i32 %3, ptr %ehselector.slot, align 4
  br label %ehcleanup

lpad3:                                            ; preds = %invoke.cont
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  store ptr %5, ptr %exn.slot, align 8
  %6 = extractvalue { ptr, i32 } %4, 1
  store i32 %6, ptr %ehselector.slot, align 4
  call void @_ZNSt15__new_allocatorIdED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp2) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  %7 = getelementptr inbounds i8, ptr %this1, i64 200
  call void @_ZN2xt20xsharable_expressionINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %7) #6
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad3, %lpad
  call void @_ZN2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(196) %this1) #6
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val5 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val5
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZN6openmc12read_datasetIdEEvlRN2xt16xarray_containerINS1_7uvectorIT_SaIS4_EEELNS1_11layout_typeE1ENS1_7svectorINS6_9size_typeELm4ESaINSt6vectorIS4_S5_E9size_typeEELb1EEENS1_22xtensor_expression_tagEEEb(i64 noundef %dset, ptr noundef nonnull align 8 dereferenceable(240) %arr, i1 noundef zeroext %indep) #0 comdat personality ptr @__gxx_personality_v0 {
entry:
  %dset.addr = alloca i64, align 8
  %arr.addr = alloca ptr, align 8
  %indep.addr = alloca i8, align 1
  %shape = alloca %"class.std::vector.56", align 8
  %size = alloca i64, align 8
  %__range2 = alloca ptr, align 8
  %__begin2 = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %__end2 = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %x = alloca i64, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store i64 %dset, ptr %dset.addr, align 8, !tbaa !54
  store ptr %arr, ptr %arr.addr, align 8, !tbaa !268
  %storedv = zext i1 %indep to i8
  store i8 %storedv, ptr %indep.addr, align 1, !tbaa !87
  call void @llvm.lifetime.start.p0(i64 24, ptr %shape) #6
  %0 = load i64, ptr %dset.addr, align 8, !tbaa !54
  call void @_ZN6openmc12object_shapeEl(ptr dead_on_unwind writable sret(%"class.std::vector.56") align 8 %shape, i64 noundef %0)
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #6
  store i64 1, ptr %size, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__range2) #6
  store ptr %shape, ptr %__range2, align 8, !tbaa !214
  call void @llvm.lifetime.start.p0(i64 8, ptr %__begin2) #6
  %1 = load ptr, ptr %__range2, align 8, !tbaa !214
  %call = call ptr @_ZNSt6vectorImSaImEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %1) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %__begin2, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__end2) #6
  %2 = load ptr, ptr %__range2, align 8, !tbaa !214
  %call1 = call ptr @_ZNSt6vectorImSaImEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %2) #6
  %coerce.dive2 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %__end2, i32 0, i32 0
  store ptr %call1, ptr %coerce.dive2, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %call3 = call noundef zeroext i1 @_ZN9__gnu_cxxneIPmSt6vectorImSaImEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(ptr noundef nonnull align 8 dereferenceable(8) %__begin2, ptr noundef nonnull align 8 dereferenceable(8) %__end2) #6
  br i1 %call3, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__end2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__begin2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__range2) #6
  br label %for.end

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #6
  %call4 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %__begin2) #6
  %3 = load i64, ptr %call4, align 8, !tbaa !54
  store i64 %3, ptr %x, align 8, !tbaa !54
  %4 = load i64, ptr %x, align 8, !tbaa !54
  %5 = load i64, ptr %size, align 8, !tbaa !54
  %mul = mul i64 %5, %4
  store i64 %mul, ptr %size, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #6
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %call5 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %__begin2) #6
  br label %for.cond

for.end:                                          ; preds = %for.cond.cleanup
  %6 = load ptr, ptr %arr.addr, align 8, !tbaa !268
  invoke void @_ZN2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE6resizeIRSt6vectorImS7_EEEvOT_b(ptr noundef nonnull align 8 dereferenceable(196) %6, ptr noundef nonnull align 8 dereferenceable(24) %shape, i1 noundef zeroext false)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.end
  %7 = load i64, ptr %dset.addr, align 8, !tbaa !54
  %8 = load i64, ptr @_ZN6openmc9H5TypeMapIdE7type_idE, align 8, !tbaa !54
  %9 = load i8, ptr %indep.addr, align 1, !tbaa !87, !range !89, !noundef !90
  %loadedv = trunc i8 %9 to i1
  %10 = load ptr, ptr %arr.addr, align 8, !tbaa !268
  %call6 = call noundef ptr @_ZN2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE4dataEv(ptr noundef nonnull align 1 dereferenceable(1) %10) #6
  invoke void @_ZN6openmc21read_dataset_lowlevelElPKcllbPv(i64 noundef %7, ptr noundef null, i64 noundef %8, i64 noundef 0, i1 noundef zeroext %loadedv, ptr noundef %call6)
          to label %invoke.cont7 unwind label %lpad

invoke.cont7:                                     ; preds = %invoke.cont
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #6
  call void @_ZNSt6vectorImSaImEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %shape) #6
  call void @llvm.lifetime.end.p0(i64 24, ptr %shape) #6
  ret void

lpad:                                             ; preds = %invoke.cont, %for.end
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  store ptr %12, ptr %exn.slot, align 8
  %13 = extractvalue { ptr, i32 } %11, 1
  store i32 %13, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #6
  call void @_ZNSt6vectorImSaImEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %shape) #6
  call void @llvm.lifetime.end.p0(i64 24, ptr %shape) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val8 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val8
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt4viewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEDaOT_DpOT0_(ptr dead_on_unwind noalias writable sret(%"class.xt::xview") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(240) %e, ptr noundef nonnull align 4 dereferenceable(4) %slices) #8 comdat {
entry:
  %result.ptr = alloca ptr, align 8
  %e.addr = alloca ptr, align 8
  %slices.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.std::integer_sequence", align 1
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %e, ptr %e.addr, align 8, !tbaa !268
  store ptr %slices, ptr %slices.addr, align 8, !tbaa !245
  %0 = load ptr, ptr %e.addr, align 8, !tbaa !268
  %1 = load ptr, ptr %slices.addr, align 8, !tbaa !245
  call void @_ZN2xt6detail14make_view_implIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJLm0EEJiEEEDaOT_St16integer_sequenceImJXspT0_EEEDpOT1_(ptr dead_on_unwind writable sret(%"class.xt::xview") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(240) %0, ptr noundef nonnull align 4 dereferenceable(4) %1)
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr ptr @_ZSt4copyIPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET0_T_S7_S6_(ptr noundef %__first, ptr noundef %__last, ptr %__result.coerce) #8 comdat {
entry:
  %retval = alloca %"class.std::back_insert_iterator", align 8
  %__result = alloca %"class.std::back_insert_iterator", align 8
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.std::back_insert_iterator", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %__result, i32 0, i32 0
  store ptr %__result.coerce, ptr %coerce.dive, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %call = call noundef ptr @_ZSt12__miter_baseIPdET_S1_(ptr noundef %0)
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %call1 = call noundef ptr @_ZSt12__miter_baseIPdET_S1_(ptr noundef %1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %__result, i64 8, i1 false)
  %coerce.dive2 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive2, align 8
  %call3 = call ptr @_ZSt13__copy_move_aILb0EPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET1_T0_S7_S6_(ptr noundef %call, ptr noundef %call1, ptr %2)
  %coerce.dive4 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %retval, i32 0, i32 0
  store ptr %call3, ptr %coerce.dive4, align 8
  %coerce.dive5 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %retval, i32 0, i32 0
  %3 = load ptr, ptr %coerce.dive5, align 8
  ret ptr %3
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE5beginILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #1 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %ref.tmp = alloca %class.anon, align 8
  %ref.tmp2 = alloca %class.anon.88, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !270
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %0 = getelementptr inbounds nuw %class.anon, ptr %ref.tmp, i32 0, i32 0
  store ptr %this1, ptr %0, align 8, !tbaa !272
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp2) #6
  %1 = getelementptr inbounds nuw %class.anon.88, ptr %ref.tmp2, i32 0, i32 0
  store ptr %this1, ptr %1, align 8, !tbaa !274
  %call = invoke noundef ptr @_ZN3xtl3mpl9static_ifILb1EZN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEE5beginILS9_1EEENSt11conditionalIXeqT_L_ZNSH_13static_layoutEEEPdNS2_9xiteratorINS2_8xstepperISG_EEPNS2_13sequence_viewISC_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_ZNSI_ILS9_1EEEST_vEUlSU_E0_EEDcRKT0_RKT1_(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp2)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  ret ptr %call

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE3endILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #1 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %ref.tmp = alloca %class.anon.89, align 8
  %ref.tmp2 = alloca %class.anon.90, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !270
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %0 = getelementptr inbounds nuw %class.anon.89, ptr %ref.tmp, i32 0, i32 0
  store ptr %this1, ptr %0, align 8, !tbaa !276
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp2) #6
  %1 = getelementptr inbounds nuw %class.anon.90, ptr %ref.tmp2, i32 0, i32 0
  store ptr %this1, ptr %1, align 8, !tbaa !278
  %call = invoke noundef ptr @_ZN3xtl3mpl9static_ifILb1EZN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEE3endILS9_1EEENSt11conditionalIXeqT_L_ZNSH_13static_layoutEEEPdNS2_9xiteratorINS2_8xstepperISG_EEPNS2_13sequence_viewISC_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_ZNSI_ILS9_1EEEST_vEUlSU_E0_EEDcRKT0_RKT1_(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp2)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  ret ptr %call

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr ptr @_ZSt13back_inserterISt6vectorIdSaIdEEESt20back_insert_iteratorIT_ERS4_(ptr noundef nonnull align 8 dereferenceable(24) %__x) #8 comdat {
entry:
  %retval = alloca %"class.std::back_insert_iterator", align 8
  %__x.addr = alloca ptr, align 8
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !201
  %0 = load ptr, ptr %__x.addr, align 8, !tbaa !201
  call void @_ZNSt20back_insert_iteratorISt6vectorIdSaIdEEEC2ERS2_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(24) %0)
  %coerce.dive = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %retval, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive, align 8
  ret ptr %1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !280
  %this1 = load ptr, ptr %this.addr, align 8
  %p_shared = getelementptr inbounds nuw %"class.xt::xsharable_expression.65", ptr %this1, i32 0, i32 0
  call void @_ZNSt12__shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEELN9__gnu_cxx12_Lock_policyE2EED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %p_shared) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEED2Ev(ptr noundef nonnull align 8 dereferenceable(240) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !268
  %this1 = load ptr, ptr %this.addr, align 8
  %m_storage = getelementptr inbounds nuw %"class.xt::xarray_container", ptr %this1, i32 0, i32 2
  call void @_ZN2xt7uvectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %m_storage) #6
  %0 = getelementptr inbounds i8, ptr %this1, i64 200
  call void @_ZN2xt20xsharable_expressionINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) #6
  call void @_ZN2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(196) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !263
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 1
  %1 = load ptr, ptr %_M_finish, align 8, !tbaa !262
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  ret void

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !282
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 1
  %1 = load ptr, ptr %_M_finish, align 8, !tbaa !283
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  invoke void @_ZSt8_DestroyIPN6openmc13InterpolationES1_EvT_S3_RSaIT0_E(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  ret void

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !284
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %_M_impl) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !286
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSaIiEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  call void @_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !288
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt15__new_allocatorIiEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !290
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %this1, i32 0, i32 0
  store ptr null, ptr %_M_start, align 8, !tbaa !263
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %this1, i32 0, i32 1
  store ptr null, ptr %_M_finish, align 8, !tbaa !262
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %this1, i32 0, i32 2
  store ptr null, ptr %_M_end_of_storage, align 8, !tbaa !292
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIiEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !293
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !295
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE12_Vector_implC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %_M_impl) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE12_Vector_implC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !297
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSaIN6openmc13InterpolationEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  call void @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE17_Vector_impl_dataC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSaIN6openmc13InterpolationEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !299
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt15__new_allocatorIN6openmc13InterpolationEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE17_Vector_impl_dataC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !301
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %this1, i32 0, i32 0
  store ptr null, ptr %_M_start, align 8, !tbaa !282
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %this1, i32 0, i32 1
  store ptr null, ptr %_M_finish, align 8, !tbaa !283
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %this1, i32 0, i32 2
  store ptr null, ptr %_M_end_of_storage, align 8, !tbaa !303
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIN6openmc13InterpolationEEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !304
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

declare void @_ZN6openmc15attribute_shapeElPKc(ptr dead_on_unwind writable sret(%"class.std::vector.56") align 8, i64 noundef, ptr noundef) #4

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNSt6vectorImSaImEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !214
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_start) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNSt6vectorImSaImEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !214
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_finish) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZN9__gnu_cxxneIPmSt6vectorImSaImEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(ptr noundef nonnull align 8 dereferenceable(8) %__lhs, ptr noundef nonnull align 8 dereferenceable(8) %__rhs) #1 comdat {
entry:
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !306
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !306
  %0 = load ptr, ptr %__lhs.addr, align 8, !tbaa !306
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  %1 = load ptr, ptr %call, align 8, !tbaa !68
  %2 = load ptr, ptr %__rhs.addr, align 8, !tbaa !306
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %2) #6
  %3 = load ptr, ptr %call1, align 8, !tbaa !68
  %cmp = icmp ne ptr %1, %3
  ret i1 %cmp
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !306
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_current, align 8, !tbaa !308
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !306
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_current, align 8, !tbaa !308
  %incdec.ptr = getelementptr inbounds nuw i64, ptr %0, i32 1
  store ptr %incdec.ptr, ptr %_M_current, align 8, !tbaa !308
  ret ptr %this1
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__new_size) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__new_size.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  store i64 %__new_size, ptr %__new_size.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__new_size.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %cmp = icmp ugt i64 %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i64, ptr %__new_size.addr, align 8, !tbaa !54
  %call2 = call noundef i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %sub = sub i64 %1, %call2
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %sub)
  br label %if.end6

if.else:                                          ; preds = %entry
  %2 = load i64, ptr %__new_size.addr, align 8, !tbaa !54
  %call3 = call noundef i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %cmp4 = icmp ult i64 %2, %call3
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %3 = load ptr, ptr %_M_start, align 8, !tbaa !263
  %4 = load i64, ptr %__new_size.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i32, ptr %3, i64 %4
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %add.ptr) #6
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void
}

declare void @_ZN6openmc9read_attrElPKclPv(i64 noundef, ptr noundef, i64 noundef, ptr noundef) #4

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt6vectorIiSaIiEE4dataEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !263
  %call = call noundef ptr @_ZNKSt6vectorIiSaIiEE11_M_data_ptrIiEEPT_S4_(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(8) %__i) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__i.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !306
  store ptr %__i, ptr %__i.addr, align 8, !tbaa !310
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__i.addr, align 8, !tbaa !310
  %1 = load ptr, ptr %0, align 8, !tbaa !68
  store ptr %1, ptr %_M_current, align 8, !tbaa !308
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !306
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %this1, i32 0, i32 0
  ret ptr %_M_current
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__size = alloca i64, align 8
  %__navail = alloca i64, align 8
  %__len = alloca i64, align 8
  %__new_start = alloca ptr, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end48

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %__size) #6
  %call = call noundef i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  store i64 %call, ptr %__size, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__navail) #6
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 2
  %1 = load ptr, ptr %_M_end_of_storage, align 8, !tbaa !292
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 1
  %2 = load ptr, ptr %_M_finish, align 8, !tbaa !262
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  store i64 %sub.ptr.div, ptr %__navail, align 8, !tbaa !54
  %3 = load i64, ptr %__size, align 8, !tbaa !54
  %call3 = call noundef i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %cmp4 = icmp ugt i64 %3, %call3
  br i1 %cmp4, label %if.then7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %4 = load i64, ptr %__navail, align 8, !tbaa !54
  %call5 = call noundef i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %5 = load i64, ptr %__size, align 8, !tbaa !54
  %sub = sub i64 %call5, %5
  %cmp6 = icmp ugt i64 %4, %sub
  br i1 %cmp6, label %if.then7, label %if.end

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i64, ptr %__navail, align 8, !tbaa !54
  %7 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp8 = icmp uge i64 %6, %7
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end
  %_M_impl10 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish11 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl10, i32 0, i32 1
  %8 = load ptr, ptr %_M_finish11, align 8, !tbaa !262
  %9 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call12 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call13 = call noundef ptr @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(ptr noundef %8, i64 noundef %9, ptr noundef nonnull align 1 dereferenceable(1) %call12)
  %_M_impl14 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish15 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl14, i32 0, i32 1
  store ptr %call13, ptr %_M_finish15, align 8, !tbaa !262
  br label %if.end47

if.else:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #6
  %10 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call16 = call noundef i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %10, ptr noundef @.str.12)
  store i64 %call16, ptr %__len, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__new_start) #6
  %11 = load i64, ptr %__len, align 8, !tbaa !54
  %call17 = call noundef ptr @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %11)
  store ptr %call17, ptr %__new_start, align 8, !tbaa !245
  %12 = load ptr, ptr %__new_start, align 8, !tbaa !245
  %13 = load i64, ptr %__size, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i32, ptr %12, i64 %13
  %14 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call18 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call19 = invoke noundef ptr @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(ptr noundef %add.ptr, i64 noundef %14, ptr noundef nonnull align 1 dereferenceable(1) %call18)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.else
  br label %try.cont

lpad:                                             ; preds = %if.else
  %15 = landingpad { ptr, i32 }
          catch ptr null
  %16 = extractvalue { ptr, i32 } %15, 0
  store ptr %16, ptr %exn.slot, align 8
  %17 = extractvalue { ptr, i32 } %15, 1
  store i32 %17, ptr %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %18 = call ptr @__cxa_begin_catch(ptr %exn) #6
  %19 = load ptr, ptr %__new_start, align 8, !tbaa !245
  %20 = load i64, ptr %__len, align 8, !tbaa !54
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %19, i64 noundef %20)
          to label %invoke.cont21 unwind label %lpad20

invoke.cont21:                                    ; preds = %catch
  invoke void @__cxa_rethrow() #24
          to label %unreachable unwind label %lpad20

lpad20:                                           ; preds = %invoke.cont21, %catch
  %21 = landingpad { ptr, i32 }
          cleanup
  %22 = extractvalue { ptr, i32 } %21, 0
  store ptr %22, ptr %exn.slot, align 8
  %23 = extractvalue { ptr, i32 } %21, 1
  store i32 %23, ptr %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont22 unwind label %terminate.lpad

invoke.cont22:                                    ; preds = %lpad20
  call void @llvm.lifetime.end.p0(i64 8, ptr %__new_start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__navail) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__size) #6
  br label %eh.resume

try.cont:                                         ; preds = %invoke.cont
  %_M_impl23 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl23, i32 0, i32 0
  %24 = load ptr, ptr %_M_start, align 8, !tbaa !263
  %_M_impl24 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish25 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl24, i32 0, i32 1
  %25 = load ptr, ptr %_M_finish25, align 8, !tbaa !262
  %26 = load ptr, ptr %__new_start, align 8, !tbaa !245
  %call26 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call27 = call noundef ptr @_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_(ptr noundef %24, ptr noundef %25, ptr noundef %26, ptr noundef nonnull align 1 dereferenceable(1) %call26) #6
  %_M_impl28 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start29 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl28, i32 0, i32 0
  %27 = load ptr, ptr %_M_start29, align 8, !tbaa !263
  %_M_impl30 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_end_of_storage31 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl30, i32 0, i32 2
  %28 = load ptr, ptr %_M_end_of_storage31, align 8, !tbaa !292
  %_M_impl32 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start33 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl32, i32 0, i32 0
  %29 = load ptr, ptr %_M_start33, align 8, !tbaa !263
  %sub.ptr.lhs.cast34 = ptrtoint ptr %28 to i64
  %sub.ptr.rhs.cast35 = ptrtoint ptr %29 to i64
  %sub.ptr.sub36 = sub i64 %sub.ptr.lhs.cast34, %sub.ptr.rhs.cast35
  %sub.ptr.div37 = sdiv exact i64 %sub.ptr.sub36, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %27, i64 noundef %sub.ptr.div37)
  %30 = load ptr, ptr %__new_start, align 8, !tbaa !245
  %_M_impl38 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start39 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl38, i32 0, i32 0
  store ptr %30, ptr %_M_start39, align 8, !tbaa !263
  %31 = load ptr, ptr %__new_start, align 8, !tbaa !245
  %32 = load i64, ptr %__size, align 8, !tbaa !54
  %add.ptr40 = getelementptr inbounds nuw i32, ptr %31, i64 %32
  %33 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %add.ptr41 = getelementptr inbounds nuw i32, ptr %add.ptr40, i64 %33
  %_M_impl42 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish43 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl42, i32 0, i32 1
  store ptr %add.ptr41, ptr %_M_finish43, align 8, !tbaa !262
  %34 = load ptr, ptr %__new_start, align 8, !tbaa !245
  %35 = load i64, ptr %__len, align 8, !tbaa !54
  %add.ptr44 = getelementptr inbounds nuw i32, ptr %34, i64 %35
  %_M_impl45 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_end_of_storage46 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl45, i32 0, i32 2
  store ptr %add.ptr44, ptr %_M_end_of_storage46, align 8, !tbaa !292
  call void @llvm.lifetime.end.p0(i64 8, ptr %__new_start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  br label %if.end47

if.end47:                                         ; preds = %try.cont, %if.then9
  call void @llvm.lifetime.end.p0(i64 8, ptr %__navail) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__size) #6
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %entry
  ret void

eh.resume:                                        ; preds = %invoke.cont22
  %exn49 = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn49, 0
  %lpad.val50 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val50

terminate.lpad:                                   ; preds = %lpad20
  %36 = landingpad { ptr, i32 }
          catch ptr null
  %37 = extractvalue { ptr, i32 } %36, 0
  call void @__clang_call_terminate(ptr %37) #25
  unreachable

unreachable:                                      ; preds = %invoke.cont21
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef %__pos) #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__pos.addr = alloca ptr, align 8
  %__n = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  store ptr %__pos, ptr %__pos.addr, align 8, !tbaa !245
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__n) #6
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  %0 = load ptr, ptr %_M_finish, align 8, !tbaa !262
  %1 = load ptr, ptr %__pos.addr, align 8, !tbaa !245
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  store i64 %sub.ptr.div, ptr %__n, align 8, !tbaa !54
  %2 = load i64, ptr %__n, align 8, !tbaa !54
  %tobool = icmp ne i64 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__pos.addr, align 8, !tbaa !245
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish3 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 1
  %4 = load ptr, ptr %_M_finish3, align 8, !tbaa !262
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(ptr noundef %3, ptr noundef %4, ptr noundef nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  %5 = load ptr, ptr %__pos.addr, align 8, !tbaa !245
  %_M_impl4 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish5 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl4, i32 0, i32 1
  store ptr %5, ptr %_M_finish5, align 8, !tbaa !262
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %__n) #6
  ret void

terminate.lpad:                                   ; preds = %if.then
  %6 = landingpad { ptr, i32 }
          catch ptr null
  %7 = extractvalue { ptr, i32 } %6, 0
  call void @__clang_call_terminate(ptr %7) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call2 = call noundef i64 @_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %call) #6
  ret i64 %call2
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(ptr noundef %__first, i64 noundef %__n, ptr noundef nonnull align 1 dereferenceable(1) %0) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !245
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %0, ptr %.addr, align 8, !tbaa !288
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef ptr @_ZSt25__uninitialized_default_nIPimET_S1_T0_(ptr noundef %1, i64 noundef %2)
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !284
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  ret ptr %_M_impl
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n, ptr noundef %__s) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca ptr, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %__s, ptr %__s.addr, align 8, !tbaa !62
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call2 = call noundef i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %sub = sub i64 %call, %call2
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp ult i64 %sub, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  call void @_ZSt20__throw_length_errorPKc(ptr noundef %1) #24
  unreachable

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #6
  %call3 = call noundef i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %call4 = call noundef i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  store i64 %call4, ptr %ref.tmp, align 8, !tbaa !54
  %call5 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3maxImERKT_S2_S2_(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp, ptr noundef nonnull align 8 dereferenceable(8) %__n.addr)
  %2 = load i64, ptr %call5, align 8, !tbaa !54
  %add = add i64 %call3, %2
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  store i64 %add, ptr %__len, align 8, !tbaa !54
  %3 = load i64, ptr %__len, align 8, !tbaa !54
  %call6 = call noundef i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %cmp7 = icmp ult i64 %3, %call6
  br i1 %cmp7, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, ptr %__len, align 8, !tbaa !54
  %call8 = call noundef i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %cmp9 = icmp ugt i64 %4, %call8
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %call10 = call noundef i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %5 = load i64, ptr %__len, align 8, !tbaa !54
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %5, %cond.false ]
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  ret i64 %cond
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !284
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef ptr @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl, i64 noundef %1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call, %cond.true ], [ null, %cond.false ]
  ret ptr %cond
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef %__p, i64 noundef %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !284
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !245
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !245
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !245
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl, ptr noundef %1, i64 noundef %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result, ptr noundef nonnull align 1 dereferenceable(1) %__alloc) #2 comdat align 2 {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %__alloc.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !245
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !245
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !245
  store ptr %__alloc, ptr %__alloc.addr, align 8, !tbaa !288
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !245
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !245
  %3 = load ptr, ptr %__alloc.addr, align 8, !tbaa !288
  %call = call noundef ptr @_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 1 dereferenceable(1) %3) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %__a) #2 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__diffmax = alloca i64, align 8
  %__allocmax = alloca i64, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !288
  call void @llvm.lifetime.start.p0(i64 8, ptr %__diffmax) #6
  store i64 2305843009213693951, ptr %__diffmax, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__allocmax) #6
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !288
  %call = call noundef i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  store i64 %call, ptr %__allocmax, align 8, !tbaa !54
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3minImERKT_S2_S2_(ptr noundef nonnull align 8 dereferenceable(8) %__diffmax, ptr noundef nonnull align 8 dereferenceable(8) %__allocmax)
  %1 = load i64, ptr %call1, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr %__allocmax) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__diffmax) #6
  ret i64 %1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !284
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  ret ptr %_M_impl
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %__a) #2 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !288
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !288
  %call = call noundef i64 @_ZNKSt15__new_allocatorIiE8max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret i64 %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt15__new_allocatorIiE8max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !293
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef i64 @_ZNKSt15__new_allocatorIiE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret i64 %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt15__new_allocatorIiE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !293
  %this1 = load ptr, ptr %this.addr, align 8
  ret i64 2305843009213693951
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt25__uninitialized_default_nIPimET_S1_T0_(ptr noundef %__first, i64 noundef %__n) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__can_fill = alloca i8, align 1
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !245
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 1, ptr %__can_fill) #6
  store i8 1, ptr %__can_fill, align 1, !tbaa !87
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef ptr @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(ptr noundef %0, i64 noundef %1)
  call void @llvm.lifetime.end.p0(i64 1, ptr %__can_fill) #6
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(ptr noundef %__first, i64 noundef %__n) #0 comdat align 2 {
entry:
  %__first.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__val = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !245
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp ugt i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %__val) #6
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  store ptr %1, ptr %__val, align 8, !tbaa !245
  %2 = load ptr, ptr %__val, align 8, !tbaa !245
  call void @_ZSt10_ConstructIiJEEvPT_DpOT0_(ptr noundef %2)
  %3 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %incdec.ptr = getelementptr inbounds nuw i32, ptr %3, i32 1
  store ptr %incdec.ptr, ptr %__first.addr, align 8, !tbaa !245
  %4 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %5 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %sub = sub i64 %5, 1
  %6 = load ptr, ptr %__val, align 8, !tbaa !245
  %call = call noundef ptr @_ZSt6fill_nIPimiET_S1_T0_RKT1_(ptr noundef %4, i64 noundef %sub, ptr noundef nonnull align 4 dereferenceable(4) %6)
  store ptr %call, ptr %__first.addr, align 8, !tbaa !245
  call void @llvm.lifetime.end.p0(i64 8, ptr %__val) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %7 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  ret ptr %7
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIiJEEvPT_DpOT0_(ptr noundef %__p) #1 comdat {
entry:
  %__p.addr = alloca ptr, align 8
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !245
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !245
  store i32 0, ptr %0, align 4, !tbaa !44
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt6fill_nIPimiET_S1_T0_RKT1_(ptr noundef %__first, i64 noundef %__n, ptr noundef nonnull align 4 dereferenceable(4) %__value) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__value.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  %undef.agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !245
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !245
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZSt17__size_to_integerm(i64 noundef %1)
  %2 = load ptr, ptr %__value.addr, align 8, !tbaa !245
  call void @_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_(ptr noundef nonnull align 8 dereferenceable(8) %__first.addr)
  %call1 = call noundef ptr @_ZSt10__fill_n_aIPimiET_S1_T0_RKT1_St26random_access_iterator_tag(ptr noundef %0, i64 noundef %call, ptr noundef nonnull align 4 dereferenceable(4) %2)
  ret ptr %call1
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt10__fill_n_aIPimiET_S1_T0_RKT1_St26random_access_iterator_tag(ptr noundef %__first, i64 noundef %__n, ptr noundef nonnull align 4 dereferenceable(4) %__value) #8 comdat {
entry:
  %retval = alloca ptr, align 8
  %0 = alloca %"struct.std::random_access_iterator_tag", align 1
  %__first.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__value.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !245
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !245
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp ule i64 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  store ptr %2, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %4 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %5 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i32, ptr %4, i64 %5
  %6 = load ptr, ptr %__value.addr, align 8, !tbaa !245
  call void @_ZSt8__fill_aIPiiEvT_S1_RKT0_(ptr noundef %3, ptr noundef %add.ptr, ptr noundef nonnull align 4 dereferenceable(4) %6)
  %7 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %8 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %add.ptr1 = getelementptr inbounds nuw i32, ptr %7, i64 %8
  store ptr %add.ptr1, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %9 = load ptr, ptr %retval, align 8
  ret ptr %9
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_(ptr noundef nonnull align 8 dereferenceable(8) %0) #1 comdat {
entry:
  %.addr = alloca ptr, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !312
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt8__fill_aIPiiEvT_S1_RKT0_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 4 dereferenceable(4) %__value) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__value.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !245
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !245
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !245
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !245
  %2 = load ptr, ptr %__value.addr, align 8, !tbaa !245
  call void @_ZSt9__fill_a1IPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(4) %2)
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt9__fill_a1IPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 4 dereferenceable(4) %__value) #1 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__value.addr = alloca ptr, align 8
  %__tmp = alloca i32, align 4
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !245
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !245
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !245
  call void @llvm.lifetime.start.p0(i64 4, ptr %__tmp) #6
  %0 = load ptr, ptr %__value.addr, align 8, !tbaa !245
  %1 = load i32, ptr %0, align 4, !tbaa !44
  store i32 %1, ptr %__tmp, align 4, !tbaa !44
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %3 = load ptr, ptr %__last.addr, align 8, !tbaa !245
  %cmp = icmp ne ptr %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32, ptr %__tmp, align 4, !tbaa !44
  %5 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  store i32 %4, ptr %5, align 4, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %incdec.ptr = getelementptr inbounds nuw i32, ptr %6, i32 1
  store ptr %incdec.ptr, ptr %__first.addr, align 8, !tbaa !245
  br label %for.cond, !llvm.loop !314

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr %__tmp) #6
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(ptr noundef nonnull align 1 dereferenceable(1) %__a, i64 noundef %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !288
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !288
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef ptr @_ZNSt15__new_allocatorIiE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef null)
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt15__new_allocatorIiE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %this, i64 noundef %__n, ptr noundef %0) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !293
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %0, ptr %.addr, align 8, !tbaa !225
  %this1 = load ptr, ptr %this.addr, align 8
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNKSt15__new_allocatorIiE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %cmp = icmp ugt i64 %1, %call
  %conv = zext i1 %cmp to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp2 = icmp ugt i64 %2, 4611686018427387903
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  call void @_ZSt28__throw_bad_array_new_lengthv() #24
  unreachable

if.end:                                           ; preds = %if.then
  call void @_ZSt17__throw_bad_allocv() #24
  unreachable

if.end4:                                          ; preds = %entry
  %3 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %mul = mul i64 %3, 4
  %call5 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %mul) #26
  ret ptr %call5
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(ptr noundef nonnull align 1 dereferenceable(1) %__a, ptr noundef %__p, i64 noundef %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !288
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !245
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !288
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !245
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @_ZNSt15__new_allocatorIiE10deallocateEPim(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef %1, i64 noundef %2)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIiE10deallocateEPim(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__p, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !293
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !245
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !245
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %mul = mul i64 %1, 4
  call void @_ZdlPvm(ptr noundef %0, i64 noundef %mul) #23
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result, ptr noundef nonnull align 1 dereferenceable(1) %__alloc) #1 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %__alloc.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !245
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !245
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !245
  store ptr %__alloc, ptr %__alloc.addr, align 8, !tbaa !288
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %call = call noundef ptr @_ZSt12__niter_baseIPiET_S1_(ptr noundef %0) #6
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !245
  %call1 = call noundef ptr @_ZSt12__niter_baseIPiET_S1_(ptr noundef %1) #6
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !245
  %call2 = call noundef ptr @_ZSt12__niter_baseIPiET_S1_(ptr noundef %2) #6
  %3 = load ptr, ptr %__alloc.addr, align 8, !tbaa !288
  %call3 = call noundef ptr @_ZSt14__relocate_a_1IiiENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E(ptr noundef %call, ptr noundef %call1, ptr noundef %call2, ptr noundef nonnull align 1 dereferenceable(1) %3) #6
  ret ptr %call3
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt14__relocate_a_1IiiENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result, ptr noundef nonnull align 1 dereferenceable(1) %__alloc) #1 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %__alloc.addr = alloca ptr, align 8
  %__count = alloca i64, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !245
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !245
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !245
  store ptr %__alloc, ptr %__alloc.addr, align 8, !tbaa !288
  call void @llvm.lifetime.start.p0(i64 8, ptr %__count) #6
  %0 = load ptr, ptr %__last.addr, align 8, !tbaa !245
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  store i64 %sub.ptr.div, ptr %__count, align 8, !tbaa !54
  %2 = load i64, ptr %__count, align 8, !tbaa !54
  %cmp = icmp sgt i64 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__result.addr, align 8, !tbaa !245
  %4 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %5 = load i64, ptr %__count, align 8, !tbaa !54
  %mul = mul i64 %5, 4
  call void @llvm.memmove.p0.p0.i64(ptr align 4 %3, ptr align 4 %4, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load ptr, ptr %__result.addr, align 8, !tbaa !245
  %7 = load i64, ptr %__count, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds i32, ptr %6, i64 %7
  call void @llvm.lifetime.end.p0(i64 8, ptr %__count) #6
  ret ptr %add.ptr
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__niter_baseIPiET_S1_(ptr noundef %__it) #1 comdat {
entry:
  %__it.addr = alloca ptr, align 8
  store ptr %__it, ptr %__it.addr, align 8, !tbaa !245
  %0 = load ptr, ptr %__it.addr, align 8, !tbaa !245
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 1 dereferenceable(1) %0) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !245
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !245
  store ptr %0, ptr %.addr, align 8, !tbaa !288
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %2 = load ptr, ptr %__last.addr, align 8, !tbaa !245
  call void @_ZSt8_DestroyIPiEvT_S1_(ptr noundef %1, ptr noundef %2)
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(ptr noundef %__first, ptr noundef %__last) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !245
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !245
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !245
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !245
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(ptr noundef %0, ptr noundef %1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(ptr noundef %0, ptr noundef %1) #2 comdat align 2 {
entry:
  %.addr = alloca ptr, align 8
  %.addr1 = alloca ptr, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !245
  store ptr %1, ptr %.addr1, align 8, !tbaa !245
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNKSt6vectorIiSaIiEE11_M_data_ptrIiEEPT_S4_(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef %__ptr) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__ptr.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  store ptr %__ptr, ptr %__ptr.addr, align 8, !tbaa !245
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__ptr.addr, align 8, !tbaa !245
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(8) %__i) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__i.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !264
  store ptr %__i, ptr %__i.addr, align 8, !tbaa !312
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__i.addr, align 8, !tbaa !312
  %1 = load ptr, ptr %0, align 8, !tbaa !245
  store ptr %1, ptr %_M_current, align 8, !tbaa !266
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !264
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %this1, i32 0, i32 0
  ret ptr %_M_current
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE12emplace_backIJS1_EEERS1_DpOT_(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 4 dereferenceable(4) %__args) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.81", align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !225
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  %0 = load ptr, ptr %_M_finish, align 8, !tbaa !283
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 2
  %1 = load ptr, ptr %_M_end_of_storage, align 8, !tbaa !303
  %cmp = icmp ne ptr %0, %1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %_M_impl3 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_impl4 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_finish5 = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl4, i32 0, i32 1
  %2 = load ptr, ptr %_M_finish5, align 8, !tbaa !283
  %3 = load ptr, ptr %__args.addr, align 8, !tbaa !225
  call void @_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl3, ptr noundef %2, ptr noundef nonnull align 4 dereferenceable(4) %3) #6
  %_M_impl6 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_finish7 = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl6, i32 0, i32 1
  %4 = load ptr, ptr %_M_finish7, align 8, !tbaa !283
  %incdec.ptr = getelementptr inbounds nuw i32, ptr %4, i32 1
  store ptr %incdec.ptr, ptr %_M_finish7, align 8, !tbaa !283
  br label %if.end

if.else:                                          ; preds = %entry
  %call = call ptr @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %agg.tmp, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  %5 = load ptr, ptr %__args.addr, align 8, !tbaa !225
  %coerce.dive8 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %agg.tmp, i32 0, i32 0
  %6 = load ptr, ptr %coerce.dive8, align 8
  call void @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr %6, ptr noundef nonnull align 4 dereferenceable(4) %5)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call9 = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE4backEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  ret ptr %call9
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %__a, ptr noundef %__p, ptr noundef nonnull align 4 dereferenceable(4) %__args) #2 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !299
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !225
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !225
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !299
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !225
  %2 = load ptr, ptr %__args.addr, align 8, !tbaa !225
  call void @_ZNSt15__new_allocatorIN6openmc13InterpolationEE9constructIS1_JS1_EEEvPT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(4) %2) #6
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr %__position.coerce, ptr noundef nonnull align 4 dereferenceable(4) %__args) #0 comdat align 2 {
entry:
  %__position = alloca %"class.__gnu_cxx::__normal_iterator.81", align 8
  %this.addr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  %__len = alloca i64, align 8
  %__old_start = alloca ptr, align 8
  %__old_finish = alloca ptr, align 8
  %__elems_before = alloca i64, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator.81", align 8
  %__new_start = alloca ptr, align 8
  %__new_finish = alloca ptr, align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %__position, i32 0, i32 0
  store ptr %__position.coerce, ptr %coerce.dive, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !225
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #6
  %call = call noundef i64 @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef 1, ptr noundef @.str.15)
  store i64 %call, ptr %__len, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__old_start) #6
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !282
  store ptr %0, ptr %__old_start, align 8, !tbaa !225
  call void @llvm.lifetime.start.p0(i64 8, ptr %__old_finish) #6
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 1
  %1 = load ptr, ptr %_M_finish, align 8, !tbaa !283
  store ptr %1, ptr %__old_finish, align 8, !tbaa !225
  call void @llvm.lifetime.start.p0(i64 8, ptr %__elems_before) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %call3 = call ptr @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %ref.tmp, i32 0, i32 0
  store ptr %call3, ptr %coerce.dive4, align 8
  %call5 = call noundef i64 @_ZN9__gnu_cxxmiIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(ptr noundef nonnull align 8 dereferenceable(8) %__position, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  store i64 %call5, ptr %__elems_before, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__new_start) #6
  %2 = load i64, ptr %__len, align 8, !tbaa !54
  %call6 = call noundef ptr @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE11_M_allocateEm(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %2)
  store ptr %call6, ptr %__new_start, align 8, !tbaa !225
  call void @llvm.lifetime.start.p0(i64 8, ptr %__new_finish) #6
  %3 = load ptr, ptr %__new_start, align 8, !tbaa !225
  store ptr %3, ptr %__new_finish, align 8, !tbaa !225
  %_M_impl7 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %4 = load ptr, ptr %__new_start, align 8, !tbaa !225
  %5 = load i64, ptr %__elems_before, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i32, ptr %4, i64 %5
  %6 = load ptr, ptr %__args.addr, align 8, !tbaa !225
  call void @_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl7, ptr noundef %add.ptr, ptr noundef nonnull align 4 dereferenceable(4) %6) #6
  store ptr null, ptr %__new_finish, align 8, !tbaa !225
  %7 = load ptr, ptr %__old_start, align 8, !tbaa !225
  %call8 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %__position) #6
  %8 = load ptr, ptr %call8, align 8, !tbaa !225
  %9 = load ptr, ptr %__new_start, align 8, !tbaa !225
  %call9 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call10 = call noundef ptr @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_(ptr noundef %7, ptr noundef %8, ptr noundef %9, ptr noundef nonnull align 1 dereferenceable(1) %call9) #6
  store ptr %call10, ptr %__new_finish, align 8, !tbaa !225
  %10 = load ptr, ptr %__new_finish, align 8, !tbaa !225
  %incdec.ptr = getelementptr inbounds nuw i32, ptr %10, i32 1
  store ptr %incdec.ptr, ptr %__new_finish, align 8, !tbaa !225
  %call11 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %__position) #6
  %11 = load ptr, ptr %call11, align 8, !tbaa !225
  %12 = load ptr, ptr %__old_finish, align 8, !tbaa !225
  %13 = load ptr, ptr %__new_finish, align 8, !tbaa !225
  %call12 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call13 = call noundef ptr @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_(ptr noundef %11, ptr noundef %12, ptr noundef %13, ptr noundef nonnull align 1 dereferenceable(1) %call12) #6
  store ptr %call13, ptr %__new_finish, align 8, !tbaa !225
  %14 = load ptr, ptr %__old_start, align 8, !tbaa !225
  %_M_impl14 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl14, i32 0, i32 2
  %15 = load ptr, ptr %_M_end_of_storage, align 8, !tbaa !303
  %16 = load ptr, ptr %__old_start, align 8, !tbaa !225
  %sub.ptr.lhs.cast = ptrtoint ptr %15 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %16 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  call void @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE13_M_deallocateEPS1_m(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %14, i64 noundef %sub.ptr.div)
  %17 = load ptr, ptr %__new_start, align 8, !tbaa !225
  %_M_impl15 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_start16 = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl15, i32 0, i32 0
  store ptr %17, ptr %_M_start16, align 8, !tbaa !282
  %18 = load ptr, ptr %__new_finish, align 8, !tbaa !225
  %_M_impl17 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_finish18 = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl17, i32 0, i32 1
  store ptr %18, ptr %_M_finish18, align 8, !tbaa !283
  %19 = load ptr, ptr %__new_start, align 8, !tbaa !225
  %20 = load i64, ptr %__len, align 8, !tbaa !54
  %add.ptr19 = getelementptr inbounds nuw i32, ptr %19, i64 %20
  %_M_impl20 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_end_of_storage21 = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl20, i32 0, i32 2
  store ptr %add.ptr19, ptr %_M_end_of_storage21, align 8, !tbaa !303
  call void @llvm.lifetime.end.p0(i64 8, ptr %__new_finish) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__new_start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__elems_before) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__old_finish) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__old_start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.81", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_finish) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE4backEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator.81", align 8
  %ref.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator.81", align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp2) #6
  %call = call ptr @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %ref.tmp2, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  %call3 = call ptr @_ZNK9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEmiEl(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp2, i64 noundef 1) #6
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %ref.tmp, i32 0, i32 0
  store ptr %call3, ptr %coerce.dive4, align 8
  %call5 = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  ret ptr %call5
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIN6openmc13InterpolationEE9constructIS1_JS1_EEEvPT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__p, ptr noundef nonnull align 4 dereferenceable(4) %__args) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !304
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !225
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !225
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !225
  %1 = load ptr, ptr %__args.addr, align 8, !tbaa !225
  %2 = load i32, ptr %1, align 4, !tbaa !47
  store i32 %2, ptr %0, align 4, !tbaa !47
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef i64 @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n, ptr noundef %__s) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca ptr, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %__s, ptr %__s.addr, align 8, !tbaa !62
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef i64 @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call2 = call noundef i64 @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %sub = sub i64 %call, %call2
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp ult i64 %sub, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %__s.addr, align 8, !tbaa !62
  call void @_ZSt20__throw_length_errorPKc(ptr noundef %1) #24
  unreachable

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #6
  %call3 = call noundef i64 @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %call4 = call noundef i64 @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  store i64 %call4, ptr %ref.tmp, align 8, !tbaa !54
  %call5 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3maxImERKT_S2_S2_(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp, ptr noundef nonnull align 8 dereferenceable(8) %__n.addr)
  %2 = load i64, ptr %call5, align 8, !tbaa !54
  %add = add i64 %call3, %2
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  store i64 %add, ptr %__len, align 8, !tbaa !54
  %3 = load i64, ptr %__len, align 8, !tbaa !54
  %call6 = call noundef i64 @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %cmp7 = icmp ult i64 %3, %call6
  br i1 %cmp7, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, ptr %__len, align 8, !tbaa !54
  %call8 = call noundef i64 @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %cmp9 = icmp ugt i64 %4, %call8
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %call10 = call noundef i64 @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %5 = load i64, ptr %__len, align 8, !tbaa !54
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %5, %cond.false ]
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  ret i64 %cond
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZN9__gnu_cxxmiIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(ptr noundef nonnull align 8 dereferenceable(8) %__lhs, ptr noundef nonnull align 8 dereferenceable(8) %__rhs) #1 comdat {
entry:
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !315
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !315
  %0 = load ptr, ptr %__lhs.addr, align 8, !tbaa !315
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  %1 = load ptr, ptr %call, align 8, !tbaa !225
  %2 = load ptr, ptr %__rhs.addr, align 8, !tbaa !315
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %2) #6
  %3 = load ptr, ptr %call1, align 8, !tbaa !225
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  ret i64 %sub.ptr.div
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.81", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_start) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE11_M_allocateEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !295
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef ptr @_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE8allocateERS2_m(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl, i64 noundef %1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call, %cond.true ], [ null, %cond.false ]
  ret ptr %cond
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result, ptr noundef nonnull align 1 dereferenceable(1) %__alloc) #2 comdat align 2 {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %__alloc.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !225
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !225
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !225
  store ptr %__alloc, ptr %__alloc.addr, align 8, !tbaa !299
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !225
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !225
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !225
  %3 = load ptr, ptr %__alloc.addr, align 8, !tbaa !299
  %call = call noundef ptr @_ZSt12__relocate_aIPN6openmc13InterpolationES2_SaIS1_EET0_T_S5_S4_RT1_(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 1 dereferenceable(1) %3) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !315
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %this1, i32 0, i32 0
  ret ptr %_M_current
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !295
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  ret ptr %_M_impl
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE13_M_deallocateEPS1_m(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef %__p, i64 noundef %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !295
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !225
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !225
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !225
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE10deallocateERS2_PS1_m(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl, ptr noundef %1, i64 noundef %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNKSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call2 = call noundef i64 @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE11_S_max_sizeERKS2_(ptr noundef nonnull align 1 dereferenceable(1) %call) #6
  ret i64 %call2
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  %0 = load ptr, ptr %_M_finish, align 8, !tbaa !283
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 0
  %1 = load ptr, ptr %_M_start, align 8, !tbaa !282
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  ret i64 %sub.ptr.div
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNSt6vectorIN6openmc13InterpolationESaIS1_EE11_S_max_sizeERKS2_(ptr noundef nonnull align 1 dereferenceable(1) %__a) #2 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__diffmax = alloca i64, align 8
  %__allocmax = alloca i64, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !299
  call void @llvm.lifetime.start.p0(i64 8, ptr %__diffmax) #6
  store i64 2305843009213693951, ptr %__diffmax, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__allocmax) #6
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !299
  %call = call noundef i64 @_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE8max_sizeERKS2_(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  store i64 %call, ptr %__allocmax, align 8, !tbaa !54
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3minImERKT_S2_S2_(ptr noundef nonnull align 8 dereferenceable(8) %__diffmax, ptr noundef nonnull align 8 dereferenceable(8) %__allocmax)
  %1 = load i64, ptr %call1, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr %__allocmax) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__diffmax) #6
  ret i64 %1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNKSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !295
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  ret ptr %_M_impl
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE8max_sizeERKS2_(ptr noundef nonnull align 1 dereferenceable(1) %__a) #2 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !299
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !299
  %call = call noundef i64 @_ZNKSt15__new_allocatorIN6openmc13InterpolationEE8max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret i64 %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt15__new_allocatorIN6openmc13InterpolationEE8max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !304
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef i64 @_ZNKSt15__new_allocatorIN6openmc13InterpolationEE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret i64 %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt15__new_allocatorIN6openmc13InterpolationEE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !304
  %this1 = load ptr, ptr %this.addr, align 8
  ret i64 2305843009213693951
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(8) %__i) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__i.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !315
  store ptr %__i, ptr %__i.addr, align 8, !tbaa !317
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__i.addr, align 8, !tbaa !317
  %1 = load ptr, ptr %0, align 8, !tbaa !225
  store ptr %1, ptr %_M_current, align 8, !tbaa !318
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE8allocateERS2_m(ptr noundef nonnull align 1 dereferenceable(1) %__a, i64 noundef %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !299
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !299
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef ptr @_ZNSt15__new_allocatorIN6openmc13InterpolationEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef null)
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt15__new_allocatorIN6openmc13InterpolationEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %this, i64 noundef %__n, ptr noundef %0) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !304
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %0, ptr %.addr, align 8, !tbaa !225
  %this1 = load ptr, ptr %this.addr, align 8
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNKSt15__new_allocatorIN6openmc13InterpolationEE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %cmp = icmp ugt i64 %1, %call
  %conv = zext i1 %cmp to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp2 = icmp ugt i64 %2, 4611686018427387903
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  call void @_ZSt28__throw_bad_array_new_lengthv() #24
  unreachable

if.end:                                           ; preds = %if.then
  call void @_ZSt17__throw_bad_allocv() #24
  unreachable

if.end4:                                          ; preds = %entry
  %3 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %mul = mul i64 %3, 4
  %call5 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %mul) #26
  ret ptr %call5
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__relocate_aIPN6openmc13InterpolationES2_SaIS1_EET0_T_S5_S4_RT1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result, ptr noundef nonnull align 1 dereferenceable(1) %__alloc) #1 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %__alloc.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !225
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !225
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !225
  store ptr %__alloc, ptr %__alloc.addr, align 8, !tbaa !299
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !225
  %call = call noundef ptr @_ZSt12__niter_baseIPN6openmc13InterpolationEET_S3_(ptr noundef %0) #6
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !225
  %call1 = call noundef ptr @_ZSt12__niter_baseIPN6openmc13InterpolationEET_S3_(ptr noundef %1) #6
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !225
  %call2 = call noundef ptr @_ZSt12__niter_baseIPN6openmc13InterpolationEET_S3_(ptr noundef %2) #6
  %3 = load ptr, ptr %__alloc.addr, align 8, !tbaa !299
  %call3 = call noundef ptr @_ZSt14__relocate_a_1IN6openmc13InterpolationES1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E(ptr noundef %call, ptr noundef %call1, ptr noundef %call2, ptr noundef nonnull align 1 dereferenceable(1) %3) #6
  ret ptr %call3
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt14__relocate_a_1IN6openmc13InterpolationES1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result, ptr noundef nonnull align 1 dereferenceable(1) %__alloc) #1 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %__alloc.addr = alloca ptr, align 8
  %__count = alloca i64, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !225
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !225
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !225
  store ptr %__alloc, ptr %__alloc.addr, align 8, !tbaa !299
  call void @llvm.lifetime.start.p0(i64 8, ptr %__count) #6
  %0 = load ptr, ptr %__last.addr, align 8, !tbaa !225
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !225
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  store i64 %sub.ptr.div, ptr %__count, align 8, !tbaa !54
  %2 = load i64, ptr %__count, align 8, !tbaa !54
  %cmp = icmp sgt i64 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__result.addr, align 8, !tbaa !225
  %4 = load ptr, ptr %__first.addr, align 8, !tbaa !225
  %5 = load i64, ptr %__count, align 8, !tbaa !54
  %mul = mul i64 %5, 4
  call void @llvm.memmove.p0.p0.i64(ptr align 4 %3, ptr align 4 %4, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load ptr, ptr %__result.addr, align 8, !tbaa !225
  %7 = load i64, ptr %__count, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds i32, ptr %6, i64 %7
  call void @llvm.lifetime.end.p0(i64 8, ptr %__count) #6
  ret ptr %add.ptr
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__niter_baseIPN6openmc13InterpolationEET_S3_(ptr noundef %__it) #1 comdat {
entry:
  %__it.addr = alloca ptr, align 8
  store ptr %__it, ptr %__it.addr, align 8, !tbaa !225
  %0 = load ptr, ptr %__it.addr, align 8, !tbaa !225
  ret ptr %0
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN6openmc13InterpolationEEE10deallocateERS2_PS1_m(ptr noundef nonnull align 1 dereferenceable(1) %__a, ptr noundef %__p, i64 noundef %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !299
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !225
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !299
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !225
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @_ZNSt15__new_allocatorIN6openmc13InterpolationEE10deallocateEPS1_m(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef %1, i64 noundef %2)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIN6openmc13InterpolationEE10deallocateEPS1_m(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__p, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !304
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !225
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !225
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %mul = mul i64 %1, 4
  call void @_ZdlPvm(ptr noundef %0, i64 noundef %mul) #23
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNK9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEmiEl(ptr noundef nonnull align 8 dereferenceable(8) %this, i64 noundef %__n) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.81", align 8
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %ref.tmp = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !315
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_current, align 8, !tbaa !318
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %idx.neg = sub i64 0, %1
  %add.ptr = getelementptr inbounds i32, ptr %0, i64 %idx.neg
  store ptr %add.ptr, ptr %ref.tmp, align 8, !tbaa !225
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %retval, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !315
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.81", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_current, align 8, !tbaa !318
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(196) %this) unnamed_addr #1 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %ref.tmp = alloca %"class.xt::svector", align 8
  %ref.tmp4 = alloca %"class.xt::svector.63", align 8
  %ref.tmp9 = alloca %"class.xt::svector.63", align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !320
  %this1 = load ptr, ptr %this.addr, align 8
  %m_shape = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 0
  call void @_ZN2xt7svectorImLm4ESaImELb1EEC2Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_shape) #6
  %m_strides = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 1
  call void @_ZN2xt7svectorIlLm4ESaIlELb1EEC2Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_strides) #6
  %m_backstrides = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 2
  call void @_ZN2xt7svectorIlLm4ESaIlELb1EEC2Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_backstrides) #6
  %m_layout = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 3
  store i32 1, ptr %m_layout, align 8, !tbaa !322
  call void @llvm.lifetime.start.p0(i64 64, ptr %ref.tmp) #6
  %call = call noundef i64 @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE9dimensionEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  invoke void @_ZN3xtl13make_sequenceIN2xt7svectorImLm4ESaImELb1EEEEET_NS5_9size_typeENS5_10value_typeE(ptr dead_on_unwind writable sret(%"class.xt::svector") align 8 %ref.tmp, i64 noundef %call, i64 noundef 0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %m_shape2 = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 0
  %call3 = call noundef nonnull align 8 dereferenceable(64) ptr @_ZN2xt7svectorImLm4ESaImELb1EEaSEOS2_(ptr noundef nonnull align 8 dereferenceable(64) %m_shape2, ptr noundef nonnull align 8 dereferenceable(64) %ref.tmp) #6
  call void @_ZN2xt7svectorImLm4ESaImELb1EED2Ev(ptr noundef nonnull align 8 dereferenceable(64) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 64, ptr %ref.tmp) #6
  call void @llvm.lifetime.start.p0(i64 64, ptr %ref.tmp4) #6
  %call5 = call noundef i64 @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE9dimensionEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  invoke void @_ZN3xtl13make_sequenceIN2xt7svectorIlLm4ESaIlELb1EEEEET_NS5_9size_typeENS5_10value_typeE(ptr dead_on_unwind writable sret(%"class.xt::svector.63") align 8 %ref.tmp4, i64 noundef %call5, i64 noundef 0)
          to label %invoke.cont6 unwind label %terminate.lpad

invoke.cont6:                                     ; preds = %invoke.cont
  %m_strides7 = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 1
  %call8 = call noundef nonnull align 8 dereferenceable(64) ptr @_ZN2xt7svectorIlLm4ESaIlELb1EEaSEOS2_(ptr noundef nonnull align 8 dereferenceable(64) %m_strides7, ptr noundef nonnull align 8 dereferenceable(64) %ref.tmp4) #6
  call void @_ZN2xt7svectorIlLm4ESaIlELb1EED2Ev(ptr noundef nonnull align 8 dereferenceable(64) %ref.tmp4) #6
  call void @llvm.lifetime.end.p0(i64 64, ptr %ref.tmp4) #6
  call void @llvm.lifetime.start.p0(i64 64, ptr %ref.tmp9) #6
  %call10 = call noundef i64 @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE9dimensionEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  invoke void @_ZN3xtl13make_sequenceIN2xt7svectorIlLm4ESaIlELb1EEEEET_NS5_9size_typeENS5_10value_typeE(ptr dead_on_unwind writable sret(%"class.xt::svector.63") align 8 %ref.tmp9, i64 noundef %call10, i64 noundef 0)
          to label %invoke.cont11 unwind label %terminate.lpad

invoke.cont11:                                    ; preds = %invoke.cont6
  %m_backstrides12 = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 2
  %call13 = call noundef nonnull align 8 dereferenceable(64) ptr @_ZN2xt7svectorIlLm4ESaIlELb1EEaSEOS2_(ptr noundef nonnull align 8 dereferenceable(64) %m_backstrides12, ptr noundef nonnull align 8 dereferenceable(64) %ref.tmp9) #6
  call void @_ZN2xt7svectorIlLm4ESaIlELb1EED2Ev(ptr noundef nonnull align 8 dereferenceable(64) %ref.tmp9) #6
  call void @llvm.lifetime.end.p0(i64 64, ptr %ref.tmp9) #6
  ret void

terminate.lpad:                                   ; preds = %invoke.cont6, %invoke.cont, %entry
  %0 = landingpad { ptr, i32 }
          catch ptr null
  %1 = extractvalue { ptr, i32 } %0, 0
  call void @__clang_call_terminate(ptr %1) #25
  unreachable
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZN2xt19xcontainer_semanticINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !329
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN2xt14xsemantic_baseINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSaIdEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !220
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt15__new_allocatorIdEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7uvectorIdSaIdEEC2EmRKdRKS1_(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %count, ptr noundef nonnull align 8 dereferenceable(8) %value, ptr noundef nonnull align 1 dereferenceable(1) %alloc) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %count.addr = alloca i64, align 8
  %value.addr = alloca ptr, align 8
  %alloc.addr = alloca ptr, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %this, ptr %this.addr, align 8, !tbaa !331
  store i64 %count, ptr %count.addr, align 8, !tbaa !54
  store ptr %value, ptr %value.addr, align 8, !tbaa !219
  store ptr %alloc, ptr %alloc.addr, align 8, !tbaa !220
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %alloc.addr, align 8, !tbaa !220
  call void @_ZNSaIdEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  %p_begin = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 1
  store ptr null, ptr %p_begin, align 8, !tbaa !333
  %p_end = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 2
  store ptr null, ptr %p_end, align 8, !tbaa !336
  %1 = load i64, ptr %count.addr, align 8, !tbaa !54
  %cmp = icmp ne i64 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %count.addr, align 8, !tbaa !54
  %call = invoke noundef ptr @_ZNSt15__new_allocatorIdE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %this1, i64 noundef %2, ptr noundef null)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  %p_begin2 = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 1
  store ptr %call, ptr %p_begin2, align 8, !tbaa !333
  %p_begin3 = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 1
  %3 = load ptr, ptr %p_begin3, align 8, !tbaa !333
  %4 = load i64, ptr %count.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw double, ptr %3, i64 %4
  %p_end4 = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 2
  store ptr %add.ptr, ptr %p_end4, align 8, !tbaa !336
  %p_begin5 = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 1
  %5 = load ptr, ptr %p_begin5, align 8, !tbaa !333
  %p_end6 = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 2
  %6 = load ptr, ptr %p_end6, align 8, !tbaa !336
  %7 = load ptr, ptr %value.addr, align 8, !tbaa !219
  invoke void @_ZSt18uninitialized_fillIPddEvT_S1_RKT0_(ptr noundef %5, ptr noundef %6, ptr noundef nonnull align 8 dereferenceable(8) %7)
          to label %invoke.cont7 unwind label %lpad

invoke.cont7:                                     ; preds = %invoke.cont
  br label %if.end

lpad:                                             ; preds = %invoke.cont, %if.then
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  store ptr %9, ptr %exn.slot, align 8
  %10 = extractvalue { ptr, i32 } %8, 1
  store i32 %10, ptr %ehselector.slot, align 4
  call void @_ZNSt15__new_allocatorIdED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  br label %eh.resume

if.end:                                           ; preds = %invoke.cont7, %entry
  ret void

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val8 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val8
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIdED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !212
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt20xsharable_expressionINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !337
  %this1 = load ptr, ptr %this.addr, align 8
  %p_shared = getelementptr inbounds nuw %"class.xt::xsharable_expression", ptr %this1, i32 0, i32 0
  call void @_ZNSt12__shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEELN9__gnu_cxx12_Lock_policyE2EED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %p_shared) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(196) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !320
  %this1 = load ptr, ptr %this.addr, align 8
  %m_backstrides = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 2
  call void @_ZN2xt7svectorIlLm4ESaIlELb1EED2Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_backstrides) #6
  %m_strides = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 1
  call void @_ZN2xt7svectorIlLm4ESaIlELb1EED2Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_strides) #6
  %m_shape = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 0
  call void @_ZN2xt7svectorImLm4ESaImELb1EED2Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_shape) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt7svectorImLm4ESaImELb1EEC2Ev(ptr noundef nonnull align 8 dereferenceable(64) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %ref.tmp = alloca %"class.std::allocator.58", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  call void @_ZNSaImEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @_ZN2xt7svectorImLm4ESaImELb1EEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(64) %this1, ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @_ZNSt15__new_allocatorImED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt7svectorIlLm4ESaIlELb1EEC2Ev(ptr noundef nonnull align 8 dereferenceable(64) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %ref.tmp = alloca %"class.std::allocator.82", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  call void @_ZNSaIlEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @_ZN2xt7svectorIlLm4ESaIlELb1EEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(64) %this1, ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @_ZNSt15__new_allocatorIlED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN3xtl13make_sequenceIN2xt7svectorImLm4ESaImELb1EEEEET_NS5_9size_typeENS5_10value_typeE(ptr dead_on_unwind noalias writable sret(%"class.xt::svector") align 8 %agg.result, i64 noundef %size, i64 noundef %v) #8 comdat {
entry:
  %result.ptr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %v.addr = alloca i64, align 8
  store ptr %agg.result, ptr %result.ptr, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !54
  store i64 %v, ptr %v.addr, align 8, !tbaa !54
  %0 = load i64, ptr %size.addr, align 8, !tbaa !54
  %1 = load i64, ptr %v.addr, align 8, !tbaa !54
  call void @_ZN3xtl6detail16sequence_builderIN2xt7svectorImLm4ESaImELb1EEEE4makeEmm(ptr dead_on_unwind writable sret(%"class.xt::svector") align 8 %agg.result, i64 noundef %0, i64 noundef %1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE9dimensionEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !343
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE5shapeEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %call2 = call noundef i64 @_ZNK2xt7svectorImLm4ESaImELb1EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(64) %call)
  ret i64 %call2
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(64) ptr @_ZN2xt7svectorImLm4ESaImELb1EEaSEOS2_(ptr noundef nonnull align 8 dereferenceable(64) %this, ptr noundef nonnull align 8 dereferenceable(64) %rhs) #1 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %rhs.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  store ptr %rhs, ptr %rhs.addr, align 8, !tbaa !339
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %rhs.addr, align 8, !tbaa !339
  %call = call noundef ptr @_ZN2xt7svectorImLm4ESaImELb1EE5beginEv(ptr noundef nonnull align 8 dereferenceable(64) %0)
  %1 = load ptr, ptr %rhs.addr, align 8, !tbaa !339
  %call2 = call noundef ptr @_ZN2xt7svectorImLm4ESaImELb1EE3endEv(ptr noundef nonnull align 8 dereferenceable(64) %1)
  invoke void @_ZN2xt7svectorImLm4ESaImELb1EE6assignIPmEEvT_S5_(ptr noundef nonnull align 8 dereferenceable(64) %this1, ptr noundef %call, ptr noundef %call2)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret ptr %this1

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt7svectorImLm4ESaImELb1EED2Ev(ptr noundef nonnull align 8 dereferenceable(64) %this) unnamed_addr #1 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  %this1 = load ptr, ptr %this.addr, align 8
  %call = invoke noundef zeroext i1 @_ZN2xt7svectorImLm4ESaImELb1EE8on_stackEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %invoke.cont
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %m_begin, align 8, !tbaa !345
  %m_capacity = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 3
  %1 = load ptr, ptr %m_capacity, align 8, !tbaa !346
  %m_begin2 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %2 = load ptr, ptr %m_begin2, align 8, !tbaa !345
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  invoke void @_ZN2xt6detail23safe_destroy_deallocateISaImEEEvRT_NSt16allocator_traitsIS3_E7pointerENS6_9size_typeE(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef %0, i64 noundef %sub.ptr.div)
          to label %invoke.cont3 unwind label %terminate.lpad

invoke.cont3:                                     ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont3, %invoke.cont
  call void @_ZNSt15__new_allocatorImED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret void

terminate.lpad:                                   ; preds = %if.then, %entry
  %3 = landingpad { ptr, i32 }
          catch ptr null
  %4 = extractvalue { ptr, i32 } %3, 0
  call void @__clang_call_terminate(ptr %4) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN3xtl13make_sequenceIN2xt7svectorIlLm4ESaIlELb1EEEEET_NS5_9size_typeENS5_10value_typeE(ptr dead_on_unwind noalias writable sret(%"class.xt::svector.63") align 8 %agg.result, i64 noundef %size, i64 noundef %v) #8 comdat {
entry:
  %result.ptr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %v.addr = alloca i64, align 8
  store ptr %agg.result, ptr %result.ptr, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !54
  store i64 %v, ptr %v.addr, align 8, !tbaa !54
  %0 = load i64, ptr %size.addr, align 8, !tbaa !54
  %1 = load i64, ptr %v.addr, align 8, !tbaa !54
  call void @_ZN3xtl6detail16sequence_builderIN2xt7svectorIlLm4ESaIlELb1EEEE4makeEml(ptr dead_on_unwind writable sret(%"class.xt::svector.63") align 8 %agg.result, i64 noundef %0, i64 noundef %1)
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(64) ptr @_ZN2xt7svectorIlLm4ESaIlELb1EEaSEOS2_(ptr noundef nonnull align 8 dereferenceable(64) %this, ptr noundef nonnull align 8 dereferenceable(64) %rhs) #1 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %rhs.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  store ptr %rhs, ptr %rhs.addr, align 8, !tbaa !341
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %rhs.addr, align 8, !tbaa !341
  %call = call noundef ptr @_ZN2xt7svectorIlLm4ESaIlELb1EE5beginEv(ptr noundef nonnull align 8 dereferenceable(64) %0)
  %1 = load ptr, ptr %rhs.addr, align 8, !tbaa !341
  %call2 = call noundef ptr @_ZN2xt7svectorIlLm4ESaIlELb1EE3endEv(ptr noundef nonnull align 8 dereferenceable(64) %1)
  invoke void @_ZN2xt7svectorIlLm4ESaIlELb1EE6assignIPlEEvT_S5_(ptr noundef nonnull align 8 dereferenceable(64) %this1, ptr noundef %call, ptr noundef %call2)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret ptr %this1

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt7svectorIlLm4ESaIlELb1EED2Ev(ptr noundef nonnull align 8 dereferenceable(64) %this) unnamed_addr #1 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  %this1 = load ptr, ptr %this.addr, align 8
  %call = invoke noundef zeroext i1 @_ZN2xt7svectorIlLm4ESaIlELb1EE8on_stackEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %invoke.cont
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %m_begin, align 8, !tbaa !347
  %m_capacity = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 3
  %1 = load ptr, ptr %m_capacity, align 8, !tbaa !348
  %m_begin2 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %2 = load ptr, ptr %m_begin2, align 8, !tbaa !347
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  invoke void @_ZN2xt6detail23safe_destroy_deallocateISaIlEEEvRT_NSt16allocator_traitsIS3_E7pointerENS6_9size_typeE(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef %0, i64 noundef %sub.ptr.div)
          to label %invoke.cont3 unwind label %terminate.lpad

invoke.cont3:                                     ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont3, %invoke.cont
  call void @_ZNSt15__new_allocatorIlED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret void

terminate.lpad:                                   ; preds = %if.then, %entry
  %3 = landingpad { ptr, i32 }
          catch ptr null
  %4 = extractvalue { ptr, i32 } %3, 0
  call void @__clang_call_terminate(ptr %4) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSaImEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !226
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt15__new_allocatorImEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt7svectorImLm4ESaImELb1EEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(64) %this, ptr noundef nonnull align 1 dereferenceable(1) %alloc) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %alloc.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  store ptr %alloc, ptr %alloc.addr, align 8, !tbaa !226
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %alloc.addr, align 8, !tbaa !226
  call void @_ZNSaImEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %m_data = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 4
  %call = call noundef ptr @_ZSt5beginImLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data) #6
  store ptr %call, ptr %m_begin, align 8, !tbaa !345
  %m_end = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 2
  %m_data2 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 4
  %call3 = call noundef ptr @_ZSt5beginImLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data2) #6
  store ptr %call3, ptr %m_end, align 8, !tbaa !349
  %m_capacity = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 3
  %m_data4 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 4
  %call5 = call noundef ptr @_ZSt3endImLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data4) #6
  store ptr %call5, ptr %m_capacity, align 8, !tbaa !346
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorImED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !231
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorImEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !231
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSaImEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %__a) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__a.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !226
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !226
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !226
  call void @_ZNSt15__new_allocatorImEC2ERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt5beginImLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %__arr) #1 comdat {
entry:
  %__arr.addr = alloca ptr, align 8
  store ptr %__arr, ptr %__arr.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__arr.addr, align 8, !tbaa !68
  %arraydecay = getelementptr inbounds [4 x i64], ptr %0, i64 0, i64 0
  ret ptr %arraydecay
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt3endImLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %__arr) #1 comdat {
entry:
  %__arr.addr = alloca ptr, align 8
  store ptr %__arr, ptr %__arr.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__arr.addr, align 8, !tbaa !68
  %arraydecay = getelementptr inbounds [4 x i64], ptr %0, i64 0, i64 0
  %add.ptr = getelementptr inbounds nuw i64, ptr %arraydecay, i64 4
  ret ptr %add.ptr
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorImEC2ERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %0) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !231
  store ptr %0, ptr %.addr, align 8, !tbaa !231
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSaIlEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !350
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt15__new_allocatorIlEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt7svectorIlLm4ESaIlELb1EEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(64) %this, ptr noundef nonnull align 1 dereferenceable(1) %alloc) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %alloc.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  store ptr %alloc, ptr %alloc.addr, align 8, !tbaa !350
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %alloc.addr, align 8, !tbaa !350
  call void @_ZNSaIlEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %m_data = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 4
  %call = call noundef ptr @_ZSt5beginIlLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data) #6
  store ptr %call, ptr %m_begin, align 8, !tbaa !347
  %m_end = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 2
  %m_data2 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 4
  %call3 = call noundef ptr @_ZSt5beginIlLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data2) #6
  store ptr %call3, ptr %m_end, align 8, !tbaa !352
  %m_capacity = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 3
  %m_data4 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 4
  %call5 = call noundef ptr @_ZSt3endIlLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data4) #6
  store ptr %call5, ptr %m_capacity, align 8, !tbaa !348
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIlED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !353
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIlEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !353
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSaIlEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %__a) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__a.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !350
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !350
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !350
  call void @_ZNSt15__new_allocatorIlEC2ERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt5beginIlLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %__arr) #1 comdat {
entry:
  %__arr.addr = alloca ptr, align 8
  store ptr %__arr, ptr %__arr.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__arr.addr, align 8, !tbaa !68
  %arraydecay = getelementptr inbounds [4 x i64], ptr %0, i64 0, i64 0
  ret ptr %arraydecay
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt3endIlLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %__arr) #1 comdat {
entry:
  %__arr.addr = alloca ptr, align 8
  store ptr %__arr, ptr %__arr.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__arr.addr, align 8, !tbaa !68
  %arraydecay = getelementptr inbounds [4 x i64], ptr %0, i64 0, i64 0
  %add.ptr = getelementptr inbounds nuw i64, ptr %arraydecay, i64 4
  ret ptr %add.ptr
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIlEC2ERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %0) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !353
  store ptr %0, ptr %.addr, align 8, !tbaa !353
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN3xtl6detail16sequence_builderIN2xt7svectorImLm4ESaImELb1EEEE4makeEmm(ptr dead_on_unwind noalias writable sret(%"class.xt::svector") align 8 %agg.result, i64 noundef %size, i64 noundef %v) #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %result.ptr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %v.addr = alloca i64, align 8
  %ref.tmp = alloca %"class.std::allocator.58", align 1
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %agg.result, ptr %result.ptr, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !54
  store i64 %v, ptr %v.addr, align 8, !tbaa !54
  %0 = load i64, ptr %size.addr, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  call void @_ZNSaImEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  invoke void @_ZN2xt7svectorImLm4ESaImELb1EEC2EmRKmRKS1_(ptr noundef nonnull align 8 dereferenceable(64) %agg.result, i64 noundef %0, ptr noundef nonnull align 8 dereferenceable(8) %v.addr, ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt15__new_allocatorImED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  ret void

lpad:                                             ; preds = %entry
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  store ptr %2, ptr %exn.slot, align 8
  %3 = extractvalue { ptr, i32 } %1, 1
  store i32 %3, ptr %ehselector.slot, align 4
  call void @_ZNSt15__new_allocatorImED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val1 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val1
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7svectorImLm4ESaImELb1EEC2EmRKmRKS1_(ptr noundef nonnull align 8 dereferenceable(64) %this, i64 noundef %n, ptr noundef nonnull align 8 dereferenceable(8) %v, ptr noundef nonnull align 1 dereferenceable(1) %alloc) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %n.addr = alloca i64, align 8
  %v.addr = alloca ptr, align 8
  %alloc.addr = alloca ptr, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  store i64 %n, ptr %n.addr, align 8, !tbaa !54
  store ptr %v, ptr %v.addr, align 8, !tbaa !68
  store ptr %alloc, ptr %alloc.addr, align 8, !tbaa !226
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %alloc.addr, align 8, !tbaa !226
  call void @_ZNSaImEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %m_data = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 4
  %call = call noundef ptr @_ZSt5beginImLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data) #6
  store ptr %call, ptr %m_begin, align 8, !tbaa !345
  %m_end = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 2
  %m_data2 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 4
  %call3 = call noundef ptr @_ZSt5beginImLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data2) #6
  store ptr %call3, ptr %m_end, align 8, !tbaa !349
  %m_capacity = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 3
  %m_data4 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 4
  %call5 = call noundef ptr @_ZSt3endImLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data4) #6
  store ptr %call5, ptr %m_capacity, align 8, !tbaa !346
  %1 = load i64, ptr %n.addr, align 8, !tbaa !54
  %2 = load ptr, ptr %v.addr, align 8, !tbaa !68
  invoke void @_ZN2xt7svectorImLm4ESaImELb1EE6assignEmRKm(ptr noundef nonnull align 8 dereferenceable(64) %this1, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  store ptr %4, ptr %exn.slot, align 8
  %5 = extractvalue { ptr, i32 } %3, 1
  store i32 %5, ptr %ehselector.slot, align 4
  call void @_ZNSt15__new_allocatorImED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val6 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val6
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7svectorImLm4ESaImELb1EE6assignEmRKm(ptr noundef nonnull align 8 dereferenceable(64) %this, i64 noundef %n, ptr noundef nonnull align 8 dereferenceable(8) %v) #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %n.addr = alloca i64, align 8
  %v.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  store i64 %n, ptr %n.addr, align 8, !tbaa !54
  store ptr %v, ptr %v.addr, align 8, !tbaa !68
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %n.addr, align 8, !tbaa !54
  %cmp = icmp ugt i64 %0, 4
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i64, ptr %n.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNK2xt7svectorImLm4ESaImELb1EE8capacityEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  %cmp2 = icmp ugt i64 %1, %call
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load i64, ptr %n.addr, align 8, !tbaa !54
  call void @_ZN2xt7svectorImLm4ESaImELb1EE4growEm(ptr noundef nonnull align 8 dereferenceable(64) %this1, i64 noundef %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %3 = load ptr, ptr %m_begin, align 8, !tbaa !345
  %4 = load i64, ptr %n.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i64, ptr %3, i64 %4
  %m_end = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 2
  store ptr %add.ptr, ptr %m_end, align 8, !tbaa !349
  %call3 = call noundef ptr @_ZN2xt7svectorImLm4ESaImELb1EE5beginEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  %call4 = call noundef ptr @_ZN2xt7svectorImLm4ESaImELb1EE3endEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  %5 = load ptr, ptr %v.addr, align 8, !tbaa !68
  call void @_ZSt4fillIPmmEvT_S1_RKT0_(ptr noundef %call3, ptr noundef %call4, ptr noundef nonnull align 8 dereferenceable(8) %5)
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNK2xt7svectorImLm4ESaImELb1EE8capacityEv(ptr noundef nonnull align 8 dereferenceable(64) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  %this1 = load ptr, ptr %this.addr, align 8
  %m_capacity = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 3
  %0 = load ptr, ptr %m_capacity, align 8, !tbaa !346
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %1 = load ptr, ptr %m_begin, align 8, !tbaa !345
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7svectorImLm4ESaImELb1EE4growEm(ptr noundef nonnull align 8 dereferenceable(64) %this, i64 noundef %min_capacity) #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %min_capacity.addr = alloca i64, align 8
  %current_size = alloca i64, align 8
  %new_capacity = alloca i64, align 8
  %new_alloc = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  store i64 %min_capacity, ptr %min_capacity.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %current_size) #6
  %call = call noundef i64 @_ZNK2xt7svectorImLm4ESaImELb1EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  store i64 %call, ptr %current_size, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_capacity) #6
  %0 = load i64, ptr %current_size, align 8, !tbaa !54
  %mul = mul i64 2, %0
  %add = add i64 %mul, 1
  store i64 %add, ptr %new_capacity, align 8, !tbaa !54
  %1 = load i64, ptr %new_capacity, align 8, !tbaa !54
  %2 = load i64, ptr %min_capacity.addr, align 8, !tbaa !54
  %cmp = icmp ult i64 %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i64, ptr %min_capacity.addr, align 8, !tbaa !54
  store i64 %3, ptr %new_capacity, align 8, !tbaa !54
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_alloc) #6
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %4 = load ptr, ptr %m_begin, align 8, !tbaa !345
  %m_data = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 4
  %arrayidx = getelementptr inbounds [4 x i64], ptr %m_data, i64 0, i64 0
  %cmp2 = icmp eq ptr %4, %arrayidx
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %5 = load i64, ptr %new_capacity, align 8, !tbaa !54
  %call4 = call noundef ptr @_ZNSt15__new_allocatorImE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %this1, i64 noundef %5, ptr noundef null)
  store ptr %call4, ptr %new_alloc, align 8, !tbaa !68
  %m_begin5 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %6 = load ptr, ptr %m_begin5, align 8, !tbaa !345
  %m_end = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 2
  %7 = load ptr, ptr %m_end, align 8, !tbaa !349
  %8 = load ptr, ptr %new_alloc, align 8, !tbaa !68
  %call6 = call noundef ptr @_ZSt18uninitialized_copyIPmS0_ET0_T_S2_S1_(ptr noundef %6, ptr noundef %7, ptr noundef %8)
  br label %if.end13

if.else:                                          ; preds = %if.end
  %9 = load i64, ptr %new_capacity, align 8, !tbaa !54
  %call7 = call noundef ptr @_ZNSt15__new_allocatorImE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %this1, i64 noundef %9, ptr noundef null)
  store ptr %call7, ptr %new_alloc, align 8, !tbaa !68
  %m_begin8 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %10 = load ptr, ptr %m_begin8, align 8, !tbaa !345
  %m_end9 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 2
  %11 = load ptr, ptr %m_end9, align 8, !tbaa !349
  %12 = load ptr, ptr %new_alloc, align 8, !tbaa !68
  %call10 = call noundef ptr @_ZSt18uninitialized_copyIPmS0_ET0_T_S2_S1_(ptr noundef %10, ptr noundef %11, ptr noundef %12)
  %m_begin11 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %13 = load ptr, ptr %m_begin11, align 8, !tbaa !345
  %m_capacity = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 3
  %14 = load ptr, ptr %m_capacity, align 8, !tbaa !346
  %m_begin12 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %15 = load ptr, ptr %m_begin12, align 8, !tbaa !345
  %sub.ptr.lhs.cast = ptrtoint ptr %14 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %15 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  call void @_ZNSt15__new_allocatorImE10deallocateEPmm(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef %13, i64 noundef %sub.ptr.div)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then3
  %16 = load ptr, ptr %new_alloc, align 8, !tbaa !68
  %17 = load i64, ptr %current_size, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i64, ptr %16, i64 %17
  %m_end14 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 2
  store ptr %add.ptr, ptr %m_end14, align 8, !tbaa !349
  %18 = load ptr, ptr %new_alloc, align 8, !tbaa !68
  %m_begin15 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  store ptr %18, ptr %m_begin15, align 8, !tbaa !345
  %19 = load ptr, ptr %new_alloc, align 8, !tbaa !68
  %20 = load i64, ptr %new_capacity, align 8, !tbaa !54
  %add.ptr16 = getelementptr inbounds nuw i64, ptr %19, i64 %20
  %m_capacity17 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 3
  store ptr %add.ptr16, ptr %m_capacity17, align 8, !tbaa !346
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_alloc) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_capacity) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %current_size) #6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt4fillIPmmEvT_S1_RKT0_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__value) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__value.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__value.addr, align 8, !tbaa !68
  call void @_ZSt8__fill_aIPmmEvT_S1_RKT0_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2)
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZN2xt7svectorImLm4ESaImELb1EE5beginEv(ptr noundef nonnull align 8 dereferenceable(64) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  %this1 = load ptr, ptr %this.addr, align 8
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %m_begin, align 8, !tbaa !345
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZN2xt7svectorImLm4ESaImELb1EE3endEv(ptr noundef nonnull align 8 dereferenceable(64) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  %this1 = load ptr, ptr %this.addr, align 8
  %m_end = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 2
  %0 = load ptr, ptr %m_end, align 8, !tbaa !349
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNK2xt7svectorImLm4ESaImELb1EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(64) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  %this1 = load ptr, ptr %this.addr, align 8
  %m_end = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 2
  %0 = load ptr, ptr %m_end, align 8, !tbaa !349
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %1 = load ptr, ptr %m_begin, align 8, !tbaa !345
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt15__new_allocatorImE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %this, i64 noundef %__n, ptr noundef %0) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !231
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %0, ptr %.addr, align 8, !tbaa !225
  %this1 = load ptr, ptr %this.addr, align 8
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNKSt15__new_allocatorImE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %cmp = icmp ugt i64 %1, %call
  %conv = zext i1 %cmp to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp2 = icmp ugt i64 %2, 2305843009213693951
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  call void @_ZSt28__throw_bad_array_new_lengthv() #24
  unreachable

if.end:                                           ; preds = %if.then
  call void @_ZSt17__throw_bad_allocv() #24
  unreachable

if.end4:                                          ; preds = %entry
  %3 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %mul = mul i64 %3, 8
  %call5 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %mul) #26
  ret ptr %call5
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt18uninitialized_copyIPmS0_ET0_T_S2_S1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %__can_memmove = alloca i8, align 1
  %__assignable = alloca i8, align 1
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 1, ptr %__can_memmove) #6
  store i8 1, ptr %__can_memmove, align 1, !tbaa !87
  call void @llvm.lifetime.start.p0(i64 1, ptr %__assignable) #6
  store i8 1, ptr %__assignable, align 1, !tbaa !87
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPmS2_EET0_T_S4_S3_(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  call void @llvm.lifetime.end.p0(i64 1, ptr %__assignable) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %__can_memmove) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt15__new_allocatorImE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !231
  %this1 = load ptr, ptr %this.addr, align 8
  ret i64 1152921504606846975
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPmS2_EET0_T_S4_S3_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #0 comdat align 2 {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZSt4copyIPmS0_ET0_T_S2_S1_(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  ret ptr %call
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt4copyIPmS0_ET0_T_S2_S1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZSt12__miter_baseIPmET_S1_(ptr noundef %0)
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %call1 = call noundef ptr @_ZSt12__miter_baseIPmET_S1_(ptr noundef %1)
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call2 = call noundef ptr @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(ptr noundef %call, ptr noundef %call1, ptr noundef %2)
  ret ptr %call2
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZSt12__niter_baseIPmET_S1_(ptr noundef %0) #6
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %call1 = call noundef ptr @_ZSt12__niter_baseIPmET_S1_(ptr noundef %1) #6
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call2 = call noundef ptr @_ZSt12__niter_baseIPmET_S1_(ptr noundef %2) #6
  %call3 = call noundef ptr @_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_(ptr noundef %call, ptr noundef %call1, ptr noundef %call2)
  %call4 = call noundef ptr @_ZSt12__niter_wrapIPmET_RKS1_S1_(ptr noundef nonnull align 8 dereferenceable(8) %__result.addr, ptr noundef %call3)
  ret ptr %call4
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__miter_baseIPmET_S1_(ptr noundef %__it) #1 comdat {
entry:
  %__it.addr = alloca ptr, align 8
  store ptr %__it, ptr %__it.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__it.addr, align 8, !tbaa !68
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__niter_wrapIPmET_RKS1_S1_(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef %__res) #1 comdat {
entry:
  %.addr = alloca ptr, align 8
  %__res.addr = alloca ptr, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !310
  store ptr %__res, ptr %__res.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__res.addr, align 8, !tbaa !68
  ret ptr %1
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  ret ptr %call
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__niter_baseIPmET_S1_(ptr noundef %__it) #1 comdat {
entry:
  %__it.addr = alloca ptr, align 8
  store ptr %__it, ptr %__it.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__it.addr, align 8, !tbaa !68
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #2 comdat align 2 {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %_Num = alloca i64, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 8, ptr %_Num) #6
  %0 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, ptr %_Num, align 8, !tbaa !54
  %2 = load i64, ptr %_Num, align 8, !tbaa !54
  %tobool = icmp ne i64 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %4 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %5 = load i64, ptr %_Num, align 8, !tbaa !54
  %mul = mul i64 8, %5
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %3, ptr align 8 %4, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %7 = load i64, ptr %_Num, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds i64, ptr %6, i64 %7
  call void @llvm.lifetime.end.p0(i64 8, ptr %_Num) #6
  ret ptr %add.ptr
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt8__fill_aIPmmEvT_S1_RKT0_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__value) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__value.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__value.addr, align 8, !tbaa !68
  call void @_ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2)
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__value) #1 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__value.addr = alloca ptr, align 8
  %__tmp = alloca i64, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 8, ptr %__tmp) #6
  %0 = load ptr, ptr %__value.addr, align 8, !tbaa !68
  %1 = load i64, ptr %0, align 8, !tbaa !54
  store i64 %1, ptr %__tmp, align 8, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %3 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %cmp = icmp ne ptr %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i64, ptr %__tmp, align 8, !tbaa !54
  %5 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  store i64 %4, ptr %5, align 8, !tbaa !54
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %incdec.ptr = getelementptr inbounds nuw i64, ptr %6, i32 1
  store ptr %incdec.ptr, ptr %__first.addr, align 8, !tbaa !68
  br label %for.cond, !llvm.loop !355

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__tmp) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE5shapeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !343
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 8 dereferenceable(240) ptr @_ZNKR2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %call2 = call noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE10shape_implEv(ptr noundef nonnull align 8 dereferenceable(196) %call) #6
  ret ptr %call2
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(240) ptr @_ZNKR2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !343
  %this1 = load ptr, ptr %this.addr, align 8
  ret ptr %this1
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE10shape_implEv(ptr noundef nonnull align 8 dereferenceable(196) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !320
  %this1 = load ptr, ptr %this.addr, align 8
  %m_shape = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 0
  ret ptr %m_shape
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7svectorImLm4ESaImELb1EE6assignIPmEEvT_S5_(ptr noundef nonnull align 8 dereferenceable(64) %this, ptr noundef %other_begin, ptr noundef %other_end) #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %other_begin.addr = alloca ptr, align 8
  %other_end.addr = alloca ptr, align 8
  %size = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  store ptr %other_begin, ptr %other_begin.addr, align 8, !tbaa !68
  store ptr %other_end, ptr %other_end.addr, align 8, !tbaa !68
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #6
  %0 = load ptr, ptr %other_end.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %other_begin.addr, align 8, !tbaa !68
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, ptr %size, align 8, !tbaa !54
  %2 = load i64, ptr %size, align 8, !tbaa !54
  %cmp = icmp ugt i64 %2, 4
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i64, ptr %size, align 8, !tbaa !54
  %call = call noundef i64 @_ZNK2xt7svectorImLm4ESaImELb1EE8capacityEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  %cmp2 = icmp ugt i64 %3, %call
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %4 = load i64, ptr %size, align 8, !tbaa !54
  call void @_ZN2xt7svectorImLm4ESaImELb1EE4growEm(ptr noundef nonnull align 8 dereferenceable(64) %this1, i64 noundef %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load ptr, ptr %other_begin.addr, align 8, !tbaa !68
  %6 = load ptr, ptr %other_end.addr, align 8, !tbaa !68
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %7 = load ptr, ptr %m_begin, align 8, !tbaa !345
  %call3 = call noundef ptr @_ZSt18uninitialized_copyIPmS0_ET0_T_S2_S1_(ptr noundef %5, ptr noundef %6, ptr noundef %7)
  %m_begin4 = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %8 = load ptr, ptr %m_begin4, align 8, !tbaa !345
  %9 = load i64, ptr %size, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i64, ptr %8, i64 %9
  %m_end = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 2
  store ptr %add.ptr, ptr %m_end, align 8, !tbaa !349
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZN2xt7svectorImLm4ESaImELb1EE8on_stackEv(ptr noundef nonnull align 8 dereferenceable(64) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  %this1 = load ptr, ptr %this.addr, align 8
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %m_begin, align 8, !tbaa !345
  %m_data = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 4
  %arrayidx = getelementptr inbounds [4 x i64], ptr %m_data, i64 0, i64 0
  %cmp = icmp eq ptr %0, %arrayidx
  ret i1 %cmp
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt6detail23safe_destroy_deallocateISaImEEEvRT_NSt16allocator_traitsIS3_E7pointerENS6_9size_typeE(ptr noundef nonnull align 1 dereferenceable(1) %alloc, ptr noundef %ptr, i64 noundef %size) #8 comdat {
entry:
  %alloc.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  store ptr %alloc, ptr %alloc.addr, align 8, !tbaa !226
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !68
  store i64 %size, ptr %size.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %ptr.addr, align 8, !tbaa !68
  %cmp = icmp ne ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %alloc.addr, align 8, !tbaa !226
  %2 = load ptr, ptr %ptr.addr, align 8, !tbaa !68
  %3 = load i64, ptr %size.addr, align 8, !tbaa !54
  call void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(ptr noundef nonnull align 1 dereferenceable(1) %1, ptr noundef %2, i64 noundef %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN3xtl6detail16sequence_builderIN2xt7svectorIlLm4ESaIlELb1EEEE4makeEml(ptr dead_on_unwind noalias writable sret(%"class.xt::svector.63") align 8 %agg.result, i64 noundef %size, i64 noundef %v) #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %result.ptr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %v.addr = alloca i64, align 8
  %ref.tmp = alloca %"class.std::allocator.82", align 1
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %agg.result, ptr %result.ptr, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !54
  store i64 %v, ptr %v.addr, align 8, !tbaa !54
  %0 = load i64, ptr %size.addr, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  call void @_ZNSaIlEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  invoke void @_ZN2xt7svectorIlLm4ESaIlELb1EEC2EmRKlRKS1_(ptr noundef nonnull align 8 dereferenceable(64) %agg.result, i64 noundef %0, ptr noundef nonnull align 8 dereferenceable(8) %v.addr, ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt15__new_allocatorIlED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  ret void

lpad:                                             ; preds = %entry
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  store ptr %2, ptr %exn.slot, align 8
  %3 = extractvalue { ptr, i32 } %1, 1
  store i32 %3, ptr %ehselector.slot, align 4
  call void @_ZNSt15__new_allocatorIlED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val1 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val1
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7svectorIlLm4ESaIlELb1EEC2EmRKlRKS1_(ptr noundef nonnull align 8 dereferenceable(64) %this, i64 noundef %n, ptr noundef nonnull align 8 dereferenceable(8) %v, ptr noundef nonnull align 1 dereferenceable(1) %alloc) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %n.addr = alloca i64, align 8
  %v.addr = alloca ptr, align 8
  %alloc.addr = alloca ptr, align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  store i64 %n, ptr %n.addr, align 8, !tbaa !54
  store ptr %v, ptr %v.addr, align 8, !tbaa !68
  store ptr %alloc, ptr %alloc.addr, align 8, !tbaa !350
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %alloc.addr, align 8, !tbaa !350
  call void @_ZNSaIlEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %m_data = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 4
  %call = call noundef ptr @_ZSt5beginIlLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data) #6
  store ptr %call, ptr %m_begin, align 8, !tbaa !347
  %m_end = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 2
  %m_data2 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 4
  %call3 = call noundef ptr @_ZSt5beginIlLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data2) #6
  store ptr %call3, ptr %m_end, align 8, !tbaa !352
  %m_capacity = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 3
  %m_data4 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 4
  %call5 = call noundef ptr @_ZSt3endIlLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data4) #6
  store ptr %call5, ptr %m_capacity, align 8, !tbaa !348
  %1 = load i64, ptr %n.addr, align 8, !tbaa !54
  %2 = load ptr, ptr %v.addr, align 8, !tbaa !68
  invoke void @_ZN2xt7svectorIlLm4ESaIlELb1EE6assignEmRKl(ptr noundef nonnull align 8 dereferenceable(64) %this1, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  store ptr %4, ptr %exn.slot, align 8
  %5 = extractvalue { ptr, i32 } %3, 1
  store i32 %5, ptr %ehselector.slot, align 4
  call void @_ZNSt15__new_allocatorIlED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val6 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val6
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7svectorIlLm4ESaIlELb1EE6assignEmRKl(ptr noundef nonnull align 8 dereferenceable(64) %this, i64 noundef %n, ptr noundef nonnull align 8 dereferenceable(8) %v) #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %n.addr = alloca i64, align 8
  %v.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  store i64 %n, ptr %n.addr, align 8, !tbaa !54
  store ptr %v, ptr %v.addr, align 8, !tbaa !68
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %n.addr, align 8, !tbaa !54
  %cmp = icmp ugt i64 %0, 4
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i64, ptr %n.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNK2xt7svectorIlLm4ESaIlELb1EE8capacityEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  %cmp2 = icmp ugt i64 %1, %call
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load i64, ptr %n.addr, align 8, !tbaa !54
  call void @_ZN2xt7svectorIlLm4ESaIlELb1EE4growEm(ptr noundef nonnull align 8 dereferenceable(64) %this1, i64 noundef %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %3 = load ptr, ptr %m_begin, align 8, !tbaa !347
  %4 = load i64, ptr %n.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i64, ptr %3, i64 %4
  %m_end = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 2
  store ptr %add.ptr, ptr %m_end, align 8, !tbaa !352
  %call3 = call noundef ptr @_ZN2xt7svectorIlLm4ESaIlELb1EE5beginEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  %call4 = call noundef ptr @_ZN2xt7svectorIlLm4ESaIlELb1EE3endEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  %5 = load ptr, ptr %v.addr, align 8, !tbaa !68
  call void @_ZSt4fillIPllEvT_S1_RKT0_(ptr noundef %call3, ptr noundef %call4, ptr noundef nonnull align 8 dereferenceable(8) %5)
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNK2xt7svectorIlLm4ESaIlELb1EE8capacityEv(ptr noundef nonnull align 8 dereferenceable(64) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  %this1 = load ptr, ptr %this.addr, align 8
  %m_capacity = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 3
  %0 = load ptr, ptr %m_capacity, align 8, !tbaa !348
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %1 = load ptr, ptr %m_begin, align 8, !tbaa !347
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7svectorIlLm4ESaIlELb1EE4growEm(ptr noundef nonnull align 8 dereferenceable(64) %this, i64 noundef %min_capacity) #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %min_capacity.addr = alloca i64, align 8
  %current_size = alloca i64, align 8
  %new_capacity = alloca i64, align 8
  %new_alloc = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  store i64 %min_capacity, ptr %min_capacity.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %current_size) #6
  %call = call noundef i64 @_ZNK2xt7svectorIlLm4ESaIlELb1EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  store i64 %call, ptr %current_size, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_capacity) #6
  %0 = load i64, ptr %current_size, align 8, !tbaa !54
  %mul = mul i64 2, %0
  %add = add i64 %mul, 1
  store i64 %add, ptr %new_capacity, align 8, !tbaa !54
  %1 = load i64, ptr %new_capacity, align 8, !tbaa !54
  %2 = load i64, ptr %min_capacity.addr, align 8, !tbaa !54
  %cmp = icmp ult i64 %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i64, ptr %min_capacity.addr, align 8, !tbaa !54
  store i64 %3, ptr %new_capacity, align 8, !tbaa !54
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_alloc) #6
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %4 = load ptr, ptr %m_begin, align 8, !tbaa !347
  %m_data = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 4
  %arrayidx = getelementptr inbounds [4 x i64], ptr %m_data, i64 0, i64 0
  %cmp2 = icmp eq ptr %4, %arrayidx
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %5 = load i64, ptr %new_capacity, align 8, !tbaa !54
  %call4 = call noundef ptr @_ZNSt15__new_allocatorIlE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %this1, i64 noundef %5, ptr noundef null)
  store ptr %call4, ptr %new_alloc, align 8, !tbaa !68
  %m_begin5 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %6 = load ptr, ptr %m_begin5, align 8, !tbaa !347
  %m_end = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 2
  %7 = load ptr, ptr %m_end, align 8, !tbaa !352
  %8 = load ptr, ptr %new_alloc, align 8, !tbaa !68
  %call6 = call noundef ptr @_ZSt18uninitialized_copyIPlS0_ET0_T_S2_S1_(ptr noundef %6, ptr noundef %7, ptr noundef %8)
  br label %if.end13

if.else:                                          ; preds = %if.end
  %9 = load i64, ptr %new_capacity, align 8, !tbaa !54
  %call7 = call noundef ptr @_ZNSt15__new_allocatorIlE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %this1, i64 noundef %9, ptr noundef null)
  store ptr %call7, ptr %new_alloc, align 8, !tbaa !68
  %m_begin8 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %10 = load ptr, ptr %m_begin8, align 8, !tbaa !347
  %m_end9 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 2
  %11 = load ptr, ptr %m_end9, align 8, !tbaa !352
  %12 = load ptr, ptr %new_alloc, align 8, !tbaa !68
  %call10 = call noundef ptr @_ZSt18uninitialized_copyIPlS0_ET0_T_S2_S1_(ptr noundef %10, ptr noundef %11, ptr noundef %12)
  %m_begin11 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %13 = load ptr, ptr %m_begin11, align 8, !tbaa !347
  %m_capacity = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 3
  %14 = load ptr, ptr %m_capacity, align 8, !tbaa !348
  %m_begin12 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %15 = load ptr, ptr %m_begin12, align 8, !tbaa !347
  %sub.ptr.lhs.cast = ptrtoint ptr %14 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %15 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  call void @_ZNSt15__new_allocatorIlE10deallocateEPlm(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef %13, i64 noundef %sub.ptr.div)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then3
  %16 = load ptr, ptr %new_alloc, align 8, !tbaa !68
  %17 = load i64, ptr %current_size, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i64, ptr %16, i64 %17
  %m_end14 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 2
  store ptr %add.ptr, ptr %m_end14, align 8, !tbaa !352
  %18 = load ptr, ptr %new_alloc, align 8, !tbaa !68
  %m_begin15 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  store ptr %18, ptr %m_begin15, align 8, !tbaa !347
  %19 = load ptr, ptr %new_alloc, align 8, !tbaa !68
  %20 = load i64, ptr %new_capacity, align 8, !tbaa !54
  %add.ptr16 = getelementptr inbounds nuw i64, ptr %19, i64 %20
  %m_capacity17 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 3
  store ptr %add.ptr16, ptr %m_capacity17, align 8, !tbaa !348
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_alloc) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_capacity) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %current_size) #6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt4fillIPllEvT_S1_RKT0_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__value) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__value.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__value.addr, align 8, !tbaa !68
  call void @_ZSt8__fill_aIPllEvT_S1_RKT0_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2)
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZN2xt7svectorIlLm4ESaIlELb1EE5beginEv(ptr noundef nonnull align 8 dereferenceable(64) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  %this1 = load ptr, ptr %this.addr, align 8
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %m_begin, align 8, !tbaa !347
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZN2xt7svectorIlLm4ESaIlELb1EE3endEv(ptr noundef nonnull align 8 dereferenceable(64) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  %this1 = load ptr, ptr %this.addr, align 8
  %m_end = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 2
  %0 = load ptr, ptr %m_end, align 8, !tbaa !352
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNK2xt7svectorIlLm4ESaIlELb1EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(64) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  %this1 = load ptr, ptr %this.addr, align 8
  %m_end = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 2
  %0 = load ptr, ptr %m_end, align 8, !tbaa !352
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %1 = load ptr, ptr %m_begin, align 8, !tbaa !347
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt15__new_allocatorIlE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %this, i64 noundef %__n, ptr noundef %0) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !353
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  store ptr %0, ptr %.addr, align 8, !tbaa !225
  %this1 = load ptr, ptr %this.addr, align 8
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNKSt15__new_allocatorIlE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %cmp = icmp ugt i64 %1, %call
  %conv = zext i1 %cmp to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp2 = icmp ugt i64 %2, 2305843009213693951
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  call void @_ZSt28__throw_bad_array_new_lengthv() #24
  unreachable

if.end:                                           ; preds = %if.then
  call void @_ZSt17__throw_bad_allocv() #24
  unreachable

if.end4:                                          ; preds = %entry
  %3 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %mul = mul i64 %3, 8
  %call5 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %mul) #26
  ret ptr %call5
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt18uninitialized_copyIPlS0_ET0_T_S2_S1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %__can_memmove = alloca i8, align 1
  %__assignable = alloca i8, align 1
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 1, ptr %__can_memmove) #6
  store i8 1, ptr %__can_memmove, align 1, !tbaa !87
  call void @llvm.lifetime.start.p0(i64 1, ptr %__assignable) #6
  store i8 1, ptr %__assignable, align 1, !tbaa !87
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPlS2_EET0_T_S4_S3_(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  call void @llvm.lifetime.end.p0(i64 1, ptr %__assignable) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %__can_memmove) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIlE10deallocateEPlm(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__p, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !353
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !68
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !68
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %mul = mul i64 %1, 8
  call void @_ZdlPvm(ptr noundef %0, i64 noundef %mul) #23
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt15__new_allocatorIlE11_M_max_sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !353
  %this1 = load ptr, ptr %this.addr, align 8
  ret i64 1152921504606846975
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPlS2_EET0_T_S4_S3_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #0 comdat align 2 {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZSt4copyIPlS0_ET0_T_S2_S1_(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  ret ptr %call
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt4copyIPlS0_ET0_T_S2_S1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZSt12__miter_baseIPlET_S1_(ptr noundef %0)
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %call1 = call noundef ptr @_ZSt12__miter_baseIPlET_S1_(ptr noundef %1)
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call2 = call noundef ptr @_ZSt13__copy_move_aILb0EPlS0_ET1_T0_S2_S1_(ptr noundef %call, ptr noundef %call1, ptr noundef %2)
  ret ptr %call2
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt13__copy_move_aILb0EPlS0_ET1_T0_S2_S1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZSt12__niter_baseIPlET_S1_(ptr noundef %0) #6
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %call1 = call noundef ptr @_ZSt12__niter_baseIPlET_S1_(ptr noundef %1) #6
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call2 = call noundef ptr @_ZSt12__niter_baseIPlET_S1_(ptr noundef %2) #6
  %call3 = call noundef ptr @_ZSt14__copy_move_a1ILb0EPlS0_ET1_T0_S2_S1_(ptr noundef %call, ptr noundef %call1, ptr noundef %call2)
  %call4 = call noundef ptr @_ZSt12__niter_wrapIPlET_RKS1_S1_(ptr noundef nonnull align 8 dereferenceable(8) %__result.addr, ptr noundef %call3)
  ret ptr %call4
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__miter_baseIPlET_S1_(ptr noundef %__it) #1 comdat {
entry:
  %__it.addr = alloca ptr, align 8
  store ptr %__it, ptr %__it.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__it.addr, align 8, !tbaa !68
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__niter_wrapIPlET_RKS1_S1_(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef %__res) #1 comdat {
entry:
  %.addr = alloca ptr, align 8
  %__res.addr = alloca ptr, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !310
  store ptr %__res, ptr %__res.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__res.addr, align 8, !tbaa !68
  ret ptr %1
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt14__copy_move_a1ILb0EPlS0_ET1_T0_S2_S1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZSt14__copy_move_a2ILb0EPlS0_ET1_T0_S2_S1_(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  ret ptr %call
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__niter_baseIPlET_S1_(ptr noundef %__it) #1 comdat {
entry:
  %__it.addr = alloca ptr, align 8
  store ptr %__it, ptr %__it.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__it.addr, align 8, !tbaa !68
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt14__copy_move_a2ILb0EPlS0_ET1_T0_S2_S1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #2 comdat align 2 {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  %_Num = alloca i64, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 8, ptr %_Num) #6
  %0 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, ptr %_Num, align 8, !tbaa !54
  %2 = load i64, ptr %_Num, align 8, !tbaa !54
  %tobool = icmp ne i64 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %4 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %5 = load i64, ptr %_Num, align 8, !tbaa !54
  %mul = mul i64 8, %5
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %3, ptr align 8 %4, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %7 = load i64, ptr %_Num, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds i64, ptr %6, i64 %7
  call void @llvm.lifetime.end.p0(i64 8, ptr %_Num) #6
  ret ptr %add.ptr
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt8__fill_aIPllEvT_S1_RKT0_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__value) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__value.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__value.addr, align 8, !tbaa !68
  call void @_ZSt9__fill_a1IPllEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2)
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt9__fill_a1IPllEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__value) #1 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__value.addr = alloca ptr, align 8
  %__tmp = alloca i64, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 8, ptr %__tmp) #6
  %0 = load ptr, ptr %__value.addr, align 8, !tbaa !68
  %1 = load i64, ptr %0, align 8, !tbaa !54
  store i64 %1, ptr %__tmp, align 8, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %3 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %cmp = icmp ne ptr %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i64, ptr %__tmp, align 8, !tbaa !54
  %5 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  store i64 %4, ptr %5, align 8, !tbaa !54
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %incdec.ptr = getelementptr inbounds nuw i64, ptr %6, i32 1
  store ptr %incdec.ptr, ptr %__first.addr, align 8, !tbaa !68
  br label %for.cond, !llvm.loop !356

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__tmp) #6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7svectorIlLm4ESaIlELb1EE6assignIPlEEvT_S5_(ptr noundef nonnull align 8 dereferenceable(64) %this, ptr noundef %other_begin, ptr noundef %other_end) #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %other_begin.addr = alloca ptr, align 8
  %other_end.addr = alloca ptr, align 8
  %size = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  store ptr %other_begin, ptr %other_begin.addr, align 8, !tbaa !68
  store ptr %other_end, ptr %other_end.addr, align 8, !tbaa !68
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #6
  %0 = load ptr, ptr %other_end.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %other_begin.addr, align 8, !tbaa !68
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, ptr %size, align 8, !tbaa !54
  %2 = load i64, ptr %size, align 8, !tbaa !54
  %cmp = icmp ugt i64 %2, 4
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i64, ptr %size, align 8, !tbaa !54
  %call = call noundef i64 @_ZNK2xt7svectorIlLm4ESaIlELb1EE8capacityEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  %cmp2 = icmp ugt i64 %3, %call
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %4 = load i64, ptr %size, align 8, !tbaa !54
  call void @_ZN2xt7svectorIlLm4ESaIlELb1EE4growEm(ptr noundef nonnull align 8 dereferenceable(64) %this1, i64 noundef %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load ptr, ptr %other_begin.addr, align 8, !tbaa !68
  %6 = load ptr, ptr %other_end.addr, align 8, !tbaa !68
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %7 = load ptr, ptr %m_begin, align 8, !tbaa !347
  %call3 = call noundef ptr @_ZSt18uninitialized_copyIPlS0_ET0_T_S2_S1_(ptr noundef %5, ptr noundef %6, ptr noundef %7)
  %m_begin4 = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %8 = load ptr, ptr %m_begin4, align 8, !tbaa !347
  %9 = load i64, ptr %size, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i64, ptr %8, i64 %9
  %m_end = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 2
  store ptr %add.ptr, ptr %m_end, align 8, !tbaa !352
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZN2xt7svectorIlLm4ESaIlELb1EE8on_stackEv(ptr noundef nonnull align 8 dereferenceable(64) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  %this1 = load ptr, ptr %this.addr, align 8
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %m_begin, align 8, !tbaa !347
  %m_data = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 4
  %arrayidx = getelementptr inbounds [4 x i64], ptr %m_data, i64 0, i64 0
  %cmp = icmp eq ptr %0, %arrayidx
  ret i1 %cmp
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt6detail23safe_destroy_deallocateISaIlEEEvRT_NSt16allocator_traitsIS3_E7pointerENS6_9size_typeE(ptr noundef nonnull align 1 dereferenceable(1) %alloc, ptr noundef %ptr, i64 noundef %size) #8 comdat {
entry:
  %alloc.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  store ptr %alloc, ptr %alloc.addr, align 8, !tbaa !350
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !68
  store i64 %size, ptr %size.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %ptr.addr, align 8, !tbaa !68
  %cmp = icmp ne ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %alloc.addr, align 8, !tbaa !350
  %2 = load ptr, ptr %ptr.addr, align 8, !tbaa !68
  %3 = load i64, ptr %size.addr, align 8, !tbaa !54
  call void @_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm(ptr noundef nonnull align 1 dereferenceable(1) %1, ptr noundef %2, i64 noundef %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm(ptr noundef nonnull align 1 dereferenceable(1) %__a, ptr noundef %__p, i64 noundef %__n) #2 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !350
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !68
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !350
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !68
  %2 = load i64, ptr %__n.addr, align 8, !tbaa !54
  call void @_ZNSt15__new_allocatorIlE10deallocateEPlm(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef %1, i64 noundef %2)
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZN2xt14xsemantic_baseINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !357
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN2xt20xsharable_expressionINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this1)
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt20xsharable_expressionINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !337
  %this1 = load ptr, ptr %this.addr, align 8
  %p_shared = getelementptr inbounds nuw %"class.xt::xsharable_expression", ptr %this1, i32 0, i32 0
  call void @_ZNSt10shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEEC2EDn(ptr noundef nonnull align 8 dereferenceable(16) %p_shared, ptr null) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEEC2EDn(ptr noundef nonnull align 8 dereferenceable(16) %this, ptr %0) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !359
  store ptr %0, ptr %.addr, align 8, !tbaa !361
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt10shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !359
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt12__shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEELN9__gnu_cxx12_Lock_policyE2EEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12__shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEELN9__gnu_cxx12_Lock_policyE2EEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !363
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_ptr = getelementptr inbounds nuw %"class.std::__shared_ptr", ptr %this1, i32 0, i32 0
  store ptr null, ptr %_M_ptr, align 8, !tbaa !365
  %_M_refcount = getelementptr inbounds nuw %"class.std::__shared_ptr", ptr %this1, i32 0, i32 1
  call void @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %_M_refcount) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !369
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_pi = getelementptr inbounds nuw %"class.std::__shared_count", ptr %this1, i32 0, i32 0
  store ptr null, ptr %_M_pi, align 8, !tbaa !371
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSaIdEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %__a) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__a.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !220
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !220
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !220
  call void @_ZNSt15__new_allocatorIdEC2ERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt18uninitialized_fillIPddEvT_S1_RKT0_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__x) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__x.addr = alloca ptr, align 8
  %__can_fill = alloca i8, align 1
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !219
  call void @llvm.lifetime.start.p0(i64 1, ptr %__can_fill) #6
  store i8 1, ptr %__can_fill, align 1, !tbaa !87
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %2 = load ptr, ptr %__x.addr, align 8, !tbaa !219
  call void @_ZNSt20__uninitialized_fillILb1EE13__uninit_fillIPddEEvT_S3_RKT0_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0(i64 1, ptr %__can_fill) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIdEC2ERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %0) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !212
  store ptr %0, ptr %.addr, align 8, !tbaa !212
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt20__uninitialized_fillILb1EE13__uninit_fillIPddEEvT_S3_RKT0_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__x) #0 comdat align 2 {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__x.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %2 = load ptr, ptr %__x.addr, align 8, !tbaa !219
  call void @_ZSt4fillIPddEvT_S1_RKT0_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2)
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt4fillIPddEvT_S1_RKT0_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__value) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__value.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %2 = load ptr, ptr %__value.addr, align 8, !tbaa !219
  call void @_ZSt8__fill_aIPddEvT_S1_RKT0_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12__shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEELN9__gnu_cxx12_Lock_policyE2EED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !363
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_refcount = getelementptr inbounds nuw %"class.std::__shared_ptr", ptr %this1, i32 0, i32 1
  call void @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %_M_refcount) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !369
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_pi = getelementptr inbounds nuw %"class.std::__shared_count", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_pi, align 8, !tbaa !371
  %cmp = icmp ne ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_pi2 = getelementptr inbounds nuw %"class.std::__shared_count", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %_M_pi2, align 8, !tbaa !371
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv(ptr noundef nonnull align 8 dereferenceable(16) %1) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv(ptr noundef nonnull align 8 dereferenceable(16) %this) #1 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__lock_free = alloca i8, align 1
  %__double_word = alloca i8, align 1
  %__aligned = alloca i8, align 1
  %__wordbits = alloca i32, align 4
  %__shiftbits = alloca i32, align 4
  %__unique_ref = alloca i64, align 8
  %__both_counts = alloca ptr, align 8
  %atomic-temp = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %this, ptr %this.addr, align 8, !tbaa !372
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 1, ptr %__lock_free) #6
  store i8 1, ptr %__lock_free, align 1, !tbaa !87
  call void @llvm.lifetime.start.p0(i64 1, ptr %__double_word) #6
  store i8 1, ptr %__double_word, align 1, !tbaa !87
  call void @llvm.lifetime.start.p0(i64 1, ptr %__aligned) #6
  store i8 1, ptr %__aligned, align 1, !tbaa !87
  call void @llvm.lifetime.start.p0(i64 4, ptr %__wordbits) #6
  store i32 32, ptr %__wordbits, align 4, !tbaa !44
  call void @llvm.lifetime.start.p0(i64 4, ptr %__shiftbits) #6
  store i32 32, ptr %__shiftbits, align 4, !tbaa !44
  call void @llvm.lifetime.start.p0(i64 8, ptr %__unique_ref) #6
  store i64 4294967297, ptr %__unique_ref, align 8, !tbaa !373
  call void @llvm.lifetime.start.p0(i64 8, ptr %__both_counts) #6
  %_M_use_count = getelementptr inbounds nuw %"class.std::_Sp_counted_base", ptr %this1, i32 0, i32 1
  store ptr %_M_use_count, ptr %__both_counts, align 8, !tbaa !375
  %0 = load ptr, ptr %__both_counts, align 8, !tbaa !375
  %1 = load atomic i64, ptr %0 acquire, align 8
  store i64 %1, ptr %atomic-temp, align 8
  %2 = load i64, ptr %atomic-temp, align 8, !tbaa !373
  %cmp = icmp eq i64 %2, 4294967297
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_use_count2 = getelementptr inbounds nuw %"class.std::_Sp_counted_base", ptr %this1, i32 0, i32 1
  store i32 0, ptr %_M_use_count2, align 8, !tbaa !377
  %_M_weak_count = getelementptr inbounds nuw %"class.std::_Sp_counted_base", ptr %this1, i32 0, i32 2
  store i32 0, ptr %_M_weak_count, align 4, !tbaa !379
  %vtable = load ptr, ptr %this1, align 8, !tbaa !20
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 2
  %3 = load ptr, ptr %vfn, align 8
  call void %3(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  %vtable3 = load ptr, ptr %this1, align 8, !tbaa !20
  %vfn4 = getelementptr inbounds ptr, ptr %vtable3, i64 3
  %4 = load ptr, ptr %vfn4, align 8
  call void %4(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %_M_use_count5 = getelementptr inbounds nuw %"class.std::_Sp_counted_base", ptr %this1, i32 0, i32 1
  %call = invoke noundef i32 @_ZN9__gnu_cxx27__exchange_and_add_dispatchEPii(ptr noundef %_M_use_count5, i32 noundef -1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.end
  %cmp6 = icmp eq i32 %call, 1
  %cmp6.expval = call i1 @llvm.expect.i1(i1 %cmp6, i1 false)
  br i1 %cmp6.expval, label %if.then7, label %if.end8

if.then7:                                         ; preds = %invoke.cont
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end8:                                          ; preds = %invoke.cont
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then7, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %__both_counts) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__unique_ref) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %__shiftbits) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %__wordbits) #6
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup12 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup12

cleanup12:                                        ; preds = %cleanup.cont, %cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr %__aligned) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %__double_word) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %__lock_free) #6
  %cleanup.dest15 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest15, label %unreachable [
    i32 0, label %cleanup.cont16
    i32 1, label %cleanup.cont16
  ]

cleanup.cont16:                                   ; preds = %cleanup12, %cleanup12
  ret void

terminate.lpad:                                   ; preds = %if.end
  %5 = landingpad { ptr, i32 }
          catch ptr null
  %6 = extractvalue { ptr, i32 } %5, 0
  call void @__clang_call_terminate(ptr %6) #25
  unreachable

unreachable:                                      ; preds = %cleanup12
  unreachable
}

; Function Attrs: alwaysinline mustprogress uwtable
define linkonce_odr noundef i32 @_ZN9__gnu_cxx27__exchange_and_add_dispatchEPii(ptr noundef %__mem, i32 noundef %__val) #19 comdat {
entry:
  %retval = alloca i32, align 4
  %__mem.addr = alloca ptr, align 8
  %__val.addr = alloca i32, align 4
  store ptr %__mem, ptr %__mem.addr, align 8, !tbaa !245
  store i32 %__val, ptr %__val.addr, align 4, !tbaa !44
  %call = call noundef zeroext i1 @_ZN9__gnu_cxx20__is_single_threadedEv() #6
  br i1 %call, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %__mem.addr, align 8, !tbaa !245
  %1 = load i32, ptr %__val.addr, align 4, !tbaa !44
  %call1 = call noundef i32 @_ZN9__gnu_cxx25__exchange_and_add_singleEPii(ptr noundef %0, i32 noundef %1)
  store i32 %call1, ptr %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %2 = load ptr, ptr %__mem.addr, align 8, !tbaa !245
  %3 = load i32, ptr %__val.addr, align 4, !tbaa !44
  %call2 = call noundef i32 @_ZN9__gnu_cxx18__exchange_and_addEPVii(ptr noundef %2, i32 noundef %3)
  store i32 %call2, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, ptr %retval, align 4
  ret i32 %4
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #15

; Function Attrs: mustprogress noinline nounwind uwtable
define linkonce_odr void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %this) #20 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !372
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  ret void
}

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZN9__gnu_cxx20__is_single_threadedEv() #10 comdat personality ptr @__gxx_personality_v0 {
entry:
  %call = invoke noundef i32 @_ZL18__gthread_active_pv()
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  ret i1 %lnot

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { ptr, i32 }
          catch ptr null
  %1 = extractvalue { ptr, i32 } %0, 0
  call void @__clang_call_terminate(ptr %1) #25
  unreachable
}

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define linkonce_odr noundef i32 @_ZN9__gnu_cxx25__exchange_and_add_singleEPii(ptr noundef %__mem, i32 noundef %__val) #10 comdat {
entry:
  %__mem.addr = alloca ptr, align 8
  %__val.addr = alloca i32, align 4
  %__result = alloca i32, align 4
  store ptr %__mem, ptr %__mem.addr, align 8, !tbaa !245
  store i32 %__val, ptr %__val.addr, align 4, !tbaa !44
  call void @llvm.lifetime.start.p0(i64 4, ptr %__result) #6
  %0 = load ptr, ptr %__mem.addr, align 8, !tbaa !245
  %1 = load i32, ptr %0, align 4, !tbaa !44
  store i32 %1, ptr %__result, align 4, !tbaa !44
  %2 = load i32, ptr %__val.addr, align 4, !tbaa !44
  %3 = load ptr, ptr %__mem.addr, align 8, !tbaa !245
  %4 = load i32, ptr %3, align 4, !tbaa !44
  %add = add nsw i32 %4, %2
  store i32 %add, ptr %3, align 4, !tbaa !44
  %5 = load i32, ptr %__result, align 4, !tbaa !44
  call void @llvm.lifetime.end.p0(i64 4, ptr %__result) #6
  ret i32 %5
}

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define linkonce_odr noundef i32 @_ZN9__gnu_cxx18__exchange_and_addEPVii(ptr noundef %__mem, i32 noundef %__val) #10 comdat {
entry:
  %__mem.addr = alloca ptr, align 8
  %__val.addr = alloca i32, align 4
  %.atomictmp = alloca i32, align 4
  %atomic-temp = alloca i32, align 4
  store ptr %__mem, ptr %__mem.addr, align 8, !tbaa !245
  store i32 %__val, ptr %__val.addr, align 4, !tbaa !44
  %0 = load ptr, ptr %__mem.addr, align 8, !tbaa !245
  %1 = load i32, ptr %__val.addr, align 4, !tbaa !44
  store i32 %1, ptr %.atomictmp, align 4, !tbaa !44
  %2 = load i32, ptr %.atomictmp, align 4
  %3 = atomicrmw volatile add ptr %0, i32 %2 acq_rel, align 4
  store i32 %3, ptr %atomic-temp, align 4
  %4 = load i32, ptr %atomic-temp, align 4, !tbaa !44
  ret i32 %4
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define internal noundef i32 @_ZL18__gthread_active_pv() #1 {
entry:
  %cmp = icmp ne ptr @__pthread_key_create, null
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind
declare extern_weak noundef i32 @__pthread_key_create(ptr noundef, ptr noundef) #5

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv(ptr noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !372
  %this1 = load ptr, ptr %this.addr, align 8
  %vtable = load ptr, ptr %this1, align 8, !tbaa !20
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 2
  %0 = load ptr, ptr %vfn, align 8
  call void %0(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  %_M_weak_count = getelementptr inbounds nuw %"class.std::_Sp_counted_base", ptr %this1, i32 0, i32 2
  %call = invoke noundef i32 @_ZN9__gnu_cxx27__exchange_and_add_dispatchEPii(ptr noundef %_M_weak_count, i32 noundef -1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %cmp = icmp eq i32 %call, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont
  %vtable2 = load ptr, ptr %this1, align 8, !tbaa !20
  %vfn3 = getelementptr inbounds ptr, ptr %vtable2, i64 3
  %1 = load ptr, ptr %vfn3, align 8
  call void %1(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %invoke.cont
  ret void

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE6resizeIRSt6vectorImS7_EEEvOT_b(ptr noundef nonnull align 8 dereferenceable(196) %this, ptr noundef nonnull align 8 dereferenceable(24) %shape, i1 noundef zeroext %force) #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %shape.addr = alloca ptr, align 8
  %force.addr = alloca i8, align 1
  %dim = alloca i64, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %agg.tmp4 = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %layout = alloca i32, align 4
  %ref.tmp = alloca %"class.xt::svector", align 8
  %data_size = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !320
  store ptr %shape, ptr %shape.addr, align 8, !tbaa !214
  %storedv = zext i1 %force to i8
  store i8 %storedv, ptr %force.addr, align 1, !tbaa !87
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %dim) #6
  %0 = load ptr, ptr %shape.addr, align 8, !tbaa !214
  %call = call noundef i64 @_ZNKSt6vectorImSaImEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %0) #6
  store i64 %call, ptr %dim, align 8, !tbaa !54
  %m_shape = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 0
  %call2 = call noundef i64 @_ZNK2xt7svectorImLm4ESaImELb1EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(64) %m_shape)
  %1 = load i64, ptr %dim, align 8, !tbaa !54
  %cmp = icmp ne i64 %call2, %1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %shape.addr, align 8, !tbaa !214
  %call3 = call ptr @_ZSt5beginISt6vectorImSaImEEEDTcldtfp_5beginEERT_(ptr noundef nonnull align 8 dereferenceable(24) %2)
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %agg.tmp, i32 0, i32 0
  store ptr %call3, ptr %coerce.dive, align 8
  %3 = load ptr, ptr %shape.addr, align 8, !tbaa !214
  %call5 = call ptr @_ZSt3endISt6vectorImSaImEEEDTcldtfp_3endEERT_(ptr noundef nonnull align 8 dereferenceable(24) %3)
  %coerce.dive6 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %agg.tmp4, i32 0, i32 0
  store ptr %call5, ptr %coerce.dive6, align 8
  %m_shape7 = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 0
  %call8 = call noundef ptr @_ZSt5beginIN2xt7svectorImLm4ESaImELb1EEEEDTcldtfp_5beginEERT_(ptr noundef nonnull align 8 dereferenceable(64) %m_shape7)
  %coerce.dive9 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %agg.tmp, i32 0, i32 0
  %4 = load ptr, ptr %coerce.dive9, align 8
  %coerce.dive10 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %agg.tmp4, i32 0, i32 0
  %5 = load ptr, ptr %coerce.dive10, align 8
  %call11 = call noundef zeroext i1 @_ZSt5equalIN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEES2_EbT_S7_T0_(ptr %4, ptr %5, ptr noundef %call8)
  br i1 %call11, label %lor.lhs.false12, label %if.then

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %6 = load i8, ptr %force.addr, align 1, !tbaa !87, !range !89, !noundef !90
  %loadedv = trunc i8 %6 to i1
  br i1 %loadedv, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false12, %lor.lhs.false, %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr %layout) #6
  %m_layout = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 3
  %7 = load i32, ptr %m_layout, align 8, !tbaa !322
  store i32 %7, ptr %layout, align 4, !tbaa !380
  call void @llvm.lifetime.start.p0(i64 64, ptr %ref.tmp) #6
  %8 = load ptr, ptr %shape.addr, align 8, !tbaa !214
  call void @_ZN3xtl16forward_sequenceIN2xt7svectorImLm4ESaImELb1EEERSt6vectorImS3_EEEDcRNSt16remove_referenceIT0_E4typeE(ptr dead_on_unwind writable sret(%"class.xt::svector") align 8 %ref.tmp, ptr noundef nonnull align 8 dereferenceable(24) %8)
  %m_shape13 = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 0
  %call14 = call noundef nonnull align 8 dereferenceable(64) ptr @_ZN2xt7svectorImLm4ESaImELb1EEaSEOS2_(ptr noundef nonnull align 8 dereferenceable(64) %m_shape13, ptr noundef nonnull align 8 dereferenceable(64) %ref.tmp) #6
  call void @_ZN2xt7svectorImLm4ESaImELb1EED2Ev(ptr noundef nonnull align 8 dereferenceable(64) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 64, ptr %ref.tmp) #6
  %m_strides = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 1
  %9 = load i64, ptr %dim, align 8, !tbaa !54
  %call15 = call noundef zeroext i1 @_ZN2xt16resize_containerINS_7svectorIlLm4ESaIlELb1EEEEEbRT_NS4_9size_typeE(ptr noundef nonnull align 8 dereferenceable(64) %m_strides, i64 noundef %9)
  %m_backstrides = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 2
  %10 = load i64, ptr %dim, align 8, !tbaa !54
  %call16 = call noundef zeroext i1 @_ZN2xt16resize_containerINS_7svectorIlLm4ESaIlELb1EEEEEbRT_NS4_9size_typeE(ptr noundef nonnull align 8 dereferenceable(64) %m_backstrides, i64 noundef %10)
  call void @llvm.lifetime.start.p0(i64 8, ptr %data_size) #6
  %m_shape17 = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 0
  %11 = load i32, ptr %layout, align 4, !tbaa !380
  %m_strides18 = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 1
  %m_backstrides19 = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 2
  %call20 = call noundef i64 @_ZN2xt15compute_stridesILNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS2_IlLm4ESaIlELb1EEES6_EEmRKT0_S1_RT1_RT2_(ptr noundef nonnull align 8 dereferenceable(64) %m_shape17, i32 noundef %11, ptr noundef nonnull align 8 dereferenceable(64) %m_strides18, ptr noundef nonnull align 8 dereferenceable(64) %m_backstrides19)
  store i64 %call20, ptr %data_size, align 8, !tbaa !54
  %call21 = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE7storageEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %12 = load i64, ptr %data_size, align 8, !tbaa !54
  call void @_ZN2xt6detail21resize_data_containerINS_7uvectorIdSaIdEEEmEEvRT_T0_(ptr noundef nonnull align 8 dereferenceable(24) %call21, i64 noundef %12)
  call void @llvm.lifetime.end.p0(i64 8, ptr %data_size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %layout) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false12
  call void @llvm.lifetime.end.p0(i64 8, ptr %dim) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZN2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE4dataEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !343
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE7storageEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %call2 = call noundef ptr @_ZN2xt7uvectorIdSaIdEE4dataEv(ptr noundef nonnull align 8 dereferenceable(24) %call) #6
  ret ptr %call2
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt6vectorImSaImEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !214
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  %0 = load ptr, ptr %_M_finish, align 8, !tbaa !218
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 0
  %1 = load ptr, ptr %_M_start, align 8, !tbaa !216
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef zeroext i1 @_ZSt5equalIN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEES2_EbT_S7_T0_(ptr %__first1.coerce, ptr %__last1.coerce, ptr noundef %__first2) #8 comdat {
entry:
  %__first1 = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %__last1 = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %__first2.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %__first1, i32 0, i32 0
  store ptr %__first1.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %__last1, i32 0, i32 0
  store ptr %__last1.coerce, ptr %coerce.dive1, align 8
  store ptr %__first2, ptr %__first2.addr, align 8, !tbaa !68
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %__first1, i64 8, i1 false), !tbaa.struct !381
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp2, ptr align 8 %__last1, i64 8, i1 false), !tbaa.struct !381
  %0 = load ptr, ptr %__first2.addr, align 8, !tbaa !68
  %coerce.dive3 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %agg.tmp, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %agg.tmp2, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive4, align 8
  %call = call noundef zeroext i1 @_ZSt11__equal_auxIN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEES2_EbT_S7_T0_(ptr %1, ptr %2, ptr noundef %0)
  ret i1 %call
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr ptr @_ZSt5beginISt6vectorImSaImEEEDTcldtfp_5beginEERT_(ptr noundef nonnull align 8 dereferenceable(24) %__cont) #1 comdat {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %__cont.addr = alloca ptr, align 8
  store ptr %__cont, ptr %__cont.addr, align 8, !tbaa !214
  %0 = load ptr, ptr %__cont.addr, align 8, !tbaa !214
  %call = call ptr @_ZNSt6vectorImSaImEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %0) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %retval, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %retval, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive1, align 8
  ret ptr %1
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr ptr @_ZSt3endISt6vectorImSaImEEEDTcldtfp_3endEERT_(ptr noundef nonnull align 8 dereferenceable(24) %__cont) #1 comdat {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %__cont.addr = alloca ptr, align 8
  store ptr %__cont, ptr %__cont.addr, align 8, !tbaa !214
  %0 = load ptr, ptr %__cont.addr, align 8, !tbaa !214
  %call = call ptr @_ZNSt6vectorImSaImEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %0) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %retval, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %retval, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive1, align 8
  ret ptr %1
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt5beginIN2xt7svectorImLm4ESaImELb1EEEEDTcldtfp_5beginEERT_(ptr noundef nonnull align 8 dereferenceable(64) %__cont) #1 comdat {
entry:
  %__cont.addr = alloca ptr, align 8
  store ptr %__cont, ptr %__cont.addr, align 8, !tbaa !339
  %0 = load ptr, ptr %__cont.addr, align 8, !tbaa !339
  %call = call noundef ptr @_ZN2xt7svectorImLm4ESaImELb1EE5beginEv(ptr noundef nonnull align 8 dereferenceable(64) %0)
  ret ptr %call
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN3xtl16forward_sequenceIN2xt7svectorImLm4ESaImELb1EEERSt6vectorImS3_EEEDcRNSt16remove_referenceIT0_E4typeE(ptr dead_on_unwind noalias writable sret(%"class.xt::svector") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(24) %s) #8 comdat {
entry:
  %result.ptr = alloca ptr, align 8
  %s.addr = alloca ptr, align 8
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %s, ptr %s.addr, align 8, !tbaa !214
  %0 = load ptr, ptr %s.addr, align 8, !tbaa !214
  call void @_ZN3xtl6detail23sequence_forwarder_implIN2xt7svectorImLm4ESaImELb1EEESt6vectorImS4_EvE7forwardIS7_EEDaRKT_(ptr dead_on_unwind writable sret(%"class.xt::svector") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(24) %0)
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef zeroext i1 @_ZN2xt16resize_containerINS_7svectorIlLm4ESaIlELb1EEEEEbRT_NS4_9size_typeE(ptr noundef nonnull align 8 dereferenceable(64) %c, i64 noundef %size) #8 comdat {
entry:
  %c.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  store ptr %c, ptr %c.addr, align 8, !tbaa !341
  store i64 %size, ptr %size.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %c.addr, align 8, !tbaa !341
  %1 = load i64, ptr %size.addr, align 8, !tbaa !54
  call void @_ZN2xt7svectorIlLm4ESaIlELb1EE6resizeEm(ptr noundef nonnull align 8 dereferenceable(64) %0, i64 noundef %1)
  ret i1 true
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef i64 @_ZN2xt15compute_stridesILNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS2_IlLm4ESaIlELb1EEES6_EEmRKT0_S1_RT1_RT2_(ptr noundef nonnull align 8 dereferenceable(64) %shape, i32 noundef %l, ptr noundef nonnull align 8 dereferenceable(64) %strides, ptr noundef nonnull align 8 dereferenceable(64) %backstrides) #8 comdat {
entry:
  %shape.addr = alloca ptr, align 8
  %l.addr = alloca i32, align 4
  %strides.addr = alloca ptr, align 8
  %backstrides.addr = alloca ptr, align 8
  store ptr %shape, ptr %shape.addr, align 8, !tbaa !339
  store i32 %l, ptr %l.addr, align 4, !tbaa !380
  store ptr %strides, ptr %strides.addr, align 8, !tbaa !341
  store ptr %backstrides, ptr %backstrides.addr, align 8, !tbaa !341
  %0 = load ptr, ptr %shape.addr, align 8, !tbaa !339
  %1 = load i32, ptr %l.addr, align 4, !tbaa !380
  %2 = load ptr, ptr %strides.addr, align 8, !tbaa !341
  %3 = load ptr, ptr %backstrides.addr, align 8, !tbaa !341
  %call = call noundef i64 @_ZN2xt6detail15compute_stridesILNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS3_IlLm4ESaIlELb1EEEPS7_EEmRKT0_S2_RT1_T2_(ptr noundef nonnull align 8 dereferenceable(64) %0, i32 noundef %1, ptr noundef nonnull align 8 dereferenceable(64) %2, ptr noundef %3)
  ret i64 %call
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt6detail21resize_data_containerINS_7uvectorIdSaIdEEEmEEvRT_T0_(ptr noundef nonnull align 8 dereferenceable(24) %c, i64 noundef %size) #8 comdat {
entry:
  %c.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  store ptr %c, ptr %c.addr, align 8, !tbaa !331
  store i64 %size, ptr %size.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %c.addr, align 8, !tbaa !331
  %1 = load i64, ptr %size.addr, align 8, !tbaa !54
  %call = call noundef zeroext i1 @_ZN2xt16resize_containerINS_7uvectorIdSaIdEEEEEbRT_NS4_9size_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1)
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(24) ptr @_ZN2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE7storageEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !343
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 8 dereferenceable(240) ptr @_ZNR2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %call2 = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEE12storage_implEv(ptr noundef nonnull align 8 dereferenceable(240) %call) #6
  ret ptr %call2
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef zeroext i1 @_ZSt11__equal_auxIN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEES2_EbT_S7_T0_(ptr %__first1.coerce, ptr %__last1.coerce, ptr noundef %__first2) #8 comdat {
entry:
  %__first1 = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %__last1 = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %__first2.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %agg.tmp3 = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %__first1, i32 0, i32 0
  store ptr %__first1.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %__last1, i32 0, i32 0
  store ptr %__last1.coerce, ptr %coerce.dive1, align 8
  store ptr %__first2, ptr %__first2.addr, align 8, !tbaa !68
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %__first1, i64 8, i1 false), !tbaa.struct !381
  %coerce.dive2 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %agg.tmp, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive2, align 8
  %call = call noundef ptr @_ZSt12__niter_baseIPmSt6vectorImSaImEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(ptr %0) #6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp3, ptr align 8 %__last1, i64 8, i1 false), !tbaa.struct !381
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %agg.tmp3, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive4, align 8
  %call5 = call noundef ptr @_ZSt12__niter_baseIPmSt6vectorImSaImEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(ptr %1) #6
  %2 = load ptr, ptr %__first2.addr, align 8, !tbaa !68
  %call6 = call noundef ptr @_ZSt12__niter_baseIPmET_S1_(ptr noundef %2) #6
  %call7 = call noundef zeroext i1 @_ZSt12__equal_aux1IPmS0_EbT_S1_T0_(ptr noundef %call, ptr noundef %call5, ptr noundef %call6)
  ret i1 %call7
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef zeroext i1 @_ZSt12__equal_aux1IPmS0_EbT_S1_T0_(ptr noundef %__first1, ptr noundef %__last1, ptr noundef %__first2) #8 comdat {
entry:
  %__first1.addr = alloca ptr, align 8
  %__last1.addr = alloca ptr, align 8
  %__first2.addr = alloca ptr, align 8
  %__simple = alloca i8, align 1
  store ptr %__first1, ptr %__first1.addr, align 8, !tbaa !68
  store ptr %__last1, ptr %__last1.addr, align 8, !tbaa !68
  store ptr %__first2, ptr %__first2.addr, align 8, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 1, ptr %__simple) #6
  store i8 1, ptr %__simple, align 1, !tbaa !87
  %0 = load ptr, ptr %__first1.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last1.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__first2.addr, align 8, !tbaa !68
  %call = call noundef zeroext i1 @_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  call void @llvm.lifetime.end.p0(i64 1, ptr %__simple) #6
  ret i1 %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__niter_baseIPmSt6vectorImSaImEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(ptr %__it.coerce) #2 comdat {
entry:
  %__it = alloca %"class.__gnu_cxx::__normal_iterator.80", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.80", ptr %__it, i32 0, i32 0
  store ptr %__it.coerce, ptr %coerce.dive, align 8
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %__it) #6
  %0 = load ptr, ptr %call, align 8, !tbaa !68
  ret ptr %0
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef zeroext i1 @_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_(ptr noundef %__first1, ptr noundef %__last1, ptr noundef %__first2) #0 comdat align 2 {
entry:
  %retval = alloca i1, align 1
  %__first1.addr = alloca ptr, align 8
  %__last1.addr = alloca ptr, align 8
  %__first2.addr = alloca ptr, align 8
  %__len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__first1, ptr %__first1.addr, align 8, !tbaa !68
  store ptr %__last1, ptr %__last1.addr, align 8, !tbaa !68
  store ptr %__first2, ptr %__first2.addr, align 8, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #6
  %0 = load ptr, ptr %__last1.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__first1.addr, align 8, !tbaa !68
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, ptr %__len, align 8, !tbaa !54
  %2 = load i64, ptr %__len, align 8, !tbaa !54
  %tobool = icmp ne i64 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__first1.addr, align 8, !tbaa !68
  %4 = load ptr, ptr %__first2.addr, align 8, !tbaa !68
  %5 = load i64, ptr %__len, align 8, !tbaa !54
  %call = call noundef i32 @_ZSt8__memcmpImmEiPKT_PKT0_m(ptr noundef %3, ptr noundef %4, i64 noundef %5)
  %tobool1 = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool1, true
  store i1 %lnot, ptr %retval, align 1
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  store i1 true, ptr %retval, align 1
  br label %return

return:                                           ; preds = %cleanup.cont, %cleanup
  %6 = load i1, ptr %retval, align 1
  ret i1 %6

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i32 @_ZSt8__memcmpImmEiPKT_PKT0_m(ptr noundef %__first1, ptr noundef %__first2, i64 noundef %__num) #1 comdat {
entry:
  %__first1.addr = alloca ptr, align 8
  %__first2.addr = alloca ptr, align 8
  %__num.addr = alloca i64, align 8
  store ptr %__first1, ptr %__first1.addr, align 8, !tbaa !68
  store ptr %__first2, ptr %__first2.addr, align 8, !tbaa !68
  store i64 %__num, ptr %__num.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %__first1.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__first2.addr, align 8, !tbaa !68
  %2 = load i64, ptr %__num.addr, align 8, !tbaa !54
  %mul = mul i64 8, %2
  %call = call i32 @memcmp(ptr noundef %0, ptr noundef %1, i64 noundef %mul) #6
  ret i32 %call
}

; Function Attrs: nounwind
declare i32 @memcmp(ptr noundef, ptr noundef, i64 noundef) #5

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN3xtl6detail23sequence_forwarder_implIN2xt7svectorImLm4ESaImELb1EEESt6vectorImS4_EvE7forwardIS7_EEDaRKT_(ptr dead_on_unwind noalias writable sret(%"class.xt::svector") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(24) %r) #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %result.ptr = alloca ptr, align 8
  %r.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %agg.tmp1 = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %ref.tmp = alloca %"class.std::allocator.58", align 1
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !214
  %0 = load ptr, ptr %r.addr, align 8, !tbaa !214
  %call = call ptr @_ZSt5beginISt6vectorImSaImEEEDTcldtfp_5beginEERKT_(ptr noundef nonnull align 8 dereferenceable(24) %0)
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  %1 = load ptr, ptr %r.addr, align 8, !tbaa !214
  %call2 = call ptr @_ZSt3endISt6vectorImSaImEEEDTcldtfp_3endEERKT_(ptr noundef nonnull align 8 dereferenceable(24) %1)
  %coerce.dive3 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp1, i32 0, i32 0
  store ptr %call2, ptr %coerce.dive3, align 8
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  call void @_ZNSaImEC2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive4, align 8
  %coerce.dive5 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp1, i32 0, i32 0
  %3 = load ptr, ptr %coerce.dive5, align 8
  invoke void @_ZN2xt7svectorImLm4ESaImELb1EEC2IN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImS1_EEEvEET_SB_RKS1_(ptr noundef nonnull align 8 dereferenceable(64) %agg.result, ptr %2, ptr %3, ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt15__new_allocatorImED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  ret void

lpad:                                             ; preds = %entry
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  store ptr %5, ptr %exn.slot, align 8
  %6 = extractvalue { ptr, i32 } %4, 1
  store i32 %6, ptr %ehselector.slot, align 4
  call void @_ZNSt15__new_allocatorImED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val6 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val6
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr ptr @_ZSt5beginISt6vectorImSaImEEEDTcldtfp_5beginEERKT_(ptr noundef nonnull align 8 dereferenceable(24) %__cont) #1 comdat {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %__cont.addr = alloca ptr, align 8
  store ptr %__cont, ptr %__cont.addr, align 8, !tbaa !214
  %0 = load ptr, ptr %__cont.addr, align 8, !tbaa !214
  %call = call ptr @_ZNKSt6vectorImSaImEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %0) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %retval, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %retval, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive1, align 8
  ret ptr %1
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr ptr @_ZSt3endISt6vectorImSaImEEEDTcldtfp_3endEERKT_(ptr noundef nonnull align 8 dereferenceable(24) %__cont) #1 comdat {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %__cont.addr = alloca ptr, align 8
  store ptr %__cont, ptr %__cont.addr, align 8, !tbaa !214
  %0 = load ptr, ptr %__cont.addr, align 8, !tbaa !214
  %call = call ptr @_ZNKSt6vectorImSaImEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %0) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %retval, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %retval, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive1, align 8
  ret ptr %1
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7svectorImLm4ESaImELb1EEC2IN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImS1_EEEvEET_SB_RKS1_(ptr noundef nonnull align 8 dereferenceable(64) %this, ptr %begin.coerce, ptr %end.coerce, ptr noundef nonnull align 1 dereferenceable(1) %alloc) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %begin = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %end = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %this.addr = alloca ptr, align 8
  %alloc.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %agg.tmp7 = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %begin, i32 0, i32 0
  store ptr %begin.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %end, i32 0, i32 0
  store ptr %end.coerce, ptr %coerce.dive1, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  store ptr %alloc, ptr %alloc.addr, align 8, !tbaa !226
  %this2 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %alloc.addr, align 8, !tbaa !226
  call void @_ZNSaImEC2ERKS_(ptr noundef nonnull align 1 dereferenceable(1) %this2, ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this2, i32 0, i32 1
  %m_data = getelementptr inbounds nuw %"class.xt::svector", ptr %this2, i32 0, i32 4
  %call = call noundef ptr @_ZSt5beginImLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data) #6
  store ptr %call, ptr %m_begin, align 8, !tbaa !345
  %m_end = getelementptr inbounds nuw %"class.xt::svector", ptr %this2, i32 0, i32 2
  %m_data3 = getelementptr inbounds nuw %"class.xt::svector", ptr %this2, i32 0, i32 4
  %call4 = call noundef ptr @_ZSt5beginImLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data3) #6
  store ptr %call4, ptr %m_end, align 8, !tbaa !349
  %m_capacity = getelementptr inbounds nuw %"class.xt::svector", ptr %this2, i32 0, i32 3
  %m_data5 = getelementptr inbounds nuw %"class.xt::svector", ptr %this2, i32 0, i32 4
  %call6 = call noundef ptr @_ZSt3endImLm4EEPT_RAT0__S0_(ptr noundef nonnull align 8 dereferenceable(32) %m_data5) #6
  store ptr %call6, ptr %m_capacity, align 8, !tbaa !346
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %begin, i64 8, i1 false), !tbaa.struct !381
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp7, ptr align 8 %end, i64 8, i1 false), !tbaa.struct !381
  %coerce.dive8 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive8, align 8
  %coerce.dive9 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp7, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive9, align 8
  invoke void @_ZN2xt7svectorImLm4ESaImELb1EE6assignIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImS1_EEEEEvT_SB_(ptr noundef nonnull align 8 dereferenceable(64) %this2, ptr %1, ptr %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  store ptr %4, ptr %exn.slot, align 8
  %5 = extractvalue { ptr, i32 } %3, 1
  store i32 %5, ptr %ehselector.slot, align 4
  call void @_ZNSt15__new_allocatorImED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this2) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val10 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val10
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNKSt6vectorImSaImEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !214
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEC2ERKS2_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_start) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEC2ERKS2_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(8) %__i) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__i.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !382
  store ptr %__i, ptr %__i.addr, align 8, !tbaa !310
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__i.addr, align 8, !tbaa !310
  %1 = load ptr, ptr %0, align 8, !tbaa !68
  store ptr %1, ptr %_M_current, align 8, !tbaa !384
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNKSt6vectorImSaImEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !214
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.57", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEC2ERKS2_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_finish) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7svectorImLm4ESaImELb1EE6assignIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImS1_EEEEEvT_SB_(ptr noundef nonnull align 8 dereferenceable(64) %this, ptr %other_begin.coerce, ptr %other_end.coerce) #8 comdat align 2 {
entry:
  %other_begin = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %other_end = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %this.addr = alloca ptr, align 8
  %size = alloca i64, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %agg.tmp5 = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %other_begin, i32 0, i32 0
  store ptr %other_begin.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %other_end, i32 0, i32 0
  store ptr %other_end.coerce, ptr %coerce.dive1, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  %this2 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #6
  %call = call noundef i64 @_ZN9__gnu_cxxmiIPKmSt6vectorImSaImEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(ptr noundef nonnull align 8 dereferenceable(8) %other_end, ptr noundef nonnull align 8 dereferenceable(8) %other_begin) #6
  store i64 %call, ptr %size, align 8, !tbaa !54
  %0 = load i64, ptr %size, align 8, !tbaa !54
  %cmp = icmp ugt i64 %0, 4
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i64, ptr %size, align 8, !tbaa !54
  %call3 = call noundef i64 @_ZNK2xt7svectorImLm4ESaImELb1EE8capacityEv(ptr noundef nonnull align 8 dereferenceable(64) %this2)
  %cmp4 = icmp ugt i64 %1, %call3
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load i64, ptr %size, align 8, !tbaa !54
  call void @_ZN2xt7svectorImLm4ESaImELb1EE4growEm(ptr noundef nonnull align 8 dereferenceable(64) %this2, i64 noundef %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %other_begin, i64 8, i1 false), !tbaa.struct !381
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp5, ptr align 8 %other_end, i64 8, i1 false), !tbaa.struct !381
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this2, i32 0, i32 1
  %3 = load ptr, ptr %m_begin, align 8, !tbaa !345
  %coerce.dive6 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp, i32 0, i32 0
  %4 = load ptr, ptr %coerce.dive6, align 8
  %coerce.dive7 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp5, i32 0, i32 0
  %5 = load ptr, ptr %coerce.dive7, align 8
  %call8 = call noundef ptr @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET0_T_SA_S9_(ptr %4, ptr %5, ptr noundef %3)
  %m_begin9 = getelementptr inbounds nuw %"class.xt::svector", ptr %this2, i32 0, i32 1
  %6 = load ptr, ptr %m_begin9, align 8, !tbaa !345
  %7 = load i64, ptr %size, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i64, ptr %6, i64 %7
  %m_end = getelementptr inbounds nuw %"class.xt::svector", ptr %this2, i32 0, i32 2
  store ptr %add.ptr, ptr %m_end, align 8, !tbaa !349
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZN9__gnu_cxxmiIPKmSt6vectorImSaImEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(ptr noundef nonnull align 8 dereferenceable(8) %__lhs, ptr noundef nonnull align 8 dereferenceable(8) %__rhs) #1 comdat {
entry:
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !382
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !382
  %0 = load ptr, ptr %__lhs.addr, align 8, !tbaa !382
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  %1 = load ptr, ptr %call, align 8, !tbaa !68
  %2 = load ptr, ptr %__rhs.addr, align 8, !tbaa !382
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %2) #6
  %3 = load ptr, ptr %call1, align 8, !tbaa !68
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET0_T_SA_S9_(ptr %__first.coerce, ptr %__last.coerce, ptr noundef %__result) #8 comdat {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %__result.addr = alloca ptr, align 8
  %__can_memmove = alloca i8, align 1
  %__assignable = alloca i8, align 1
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %__first, i32 0, i32 0
  store ptr %__first.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %__last, i32 0, i32 0
  store ptr %__last.coerce, ptr %coerce.dive1, align 8
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 1, ptr %__can_memmove) #6
  store i8 1, ptr %__can_memmove, align 1, !tbaa !87
  call void @llvm.lifetime.start.p0(i64 1, ptr %__assignable) #6
  store i8 1, ptr %__assignable, align 1, !tbaa !87
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %__first, i64 8, i1 false), !tbaa.struct !381
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp2, ptr align 8 %__last, i64 8, i1 false), !tbaa.struct !381
  %0 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %coerce.dive3 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp2, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive4, align 8
  %call = call noundef ptr @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmEET0_T_SC_SB_(ptr %1, ptr %2, ptr noundef %0)
  call void @llvm.lifetime.end.p0(i64 1, ptr %__assignable) #6
  call void @llvm.lifetime.end.p0(i64 1, ptr %__can_memmove) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !382
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %this1, i32 0, i32 0
  ret ptr %_M_current
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmEET0_T_SC_SB_(ptr %__first.coerce, ptr %__last.coerce, ptr noundef %__result) #0 comdat align 2 {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %__result.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %__first, i32 0, i32 0
  store ptr %__first.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %__last, i32 0, i32 0
  store ptr %__last.coerce, ptr %coerce.dive1, align 8
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %__first, i64 8, i1 false), !tbaa.struct !381
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp2, ptr align 8 %__last, i64 8, i1 false), !tbaa.struct !381
  %0 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %coerce.dive3 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp2, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive4, align 8
  %call = call noundef ptr @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET0_T_SA_S9_(ptr %1, ptr %2, ptr noundef %0)
  ret ptr %call
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET0_T_SA_S9_(ptr %__first.coerce, ptr %__last.coerce, ptr noundef %__result) #8 comdat {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %__result.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %agg.tmp5 = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %agg.tmp6 = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %__first, i32 0, i32 0
  store ptr %__first.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %__last, i32 0, i32 0
  store ptr %__last.coerce, ptr %coerce.dive1, align 8
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp2, ptr align 8 %__first, i64 8, i1 false), !tbaa.struct !381
  %coerce.dive3 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp2, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive3, align 8
  %call = call ptr @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEET_S8_(ptr %0)
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp, i32 0, i32 0
  store ptr %call, ptr %coerce.dive4, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp6, ptr align 8 %__last, i64 8, i1 false), !tbaa.struct !381
  %coerce.dive7 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp6, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive7, align 8
  %call8 = call ptr @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEET_S8_(ptr %1)
  %coerce.dive9 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp5, i32 0, i32 0
  store ptr %call8, ptr %coerce.dive9, align 8
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %coerce.dive10 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp, i32 0, i32 0
  %3 = load ptr, ptr %coerce.dive10, align 8
  %coerce.dive11 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp5, i32 0, i32 0
  %4 = load ptr, ptr %coerce.dive11, align 8
  %call12 = call noundef ptr @_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET1_T0_SA_S9_(ptr %3, ptr %4, ptr noundef %2)
  ret ptr %call12
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET1_T0_SA_S9_(ptr %__first.coerce, ptr %__last.coerce, ptr noundef %__result) #8 comdat {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %__result.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %agg.tmp3 = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %__first, i32 0, i32 0
  store ptr %__first.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %__last, i32 0, i32 0
  store ptr %__last.coerce, ptr %coerce.dive1, align 8
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %__first, i64 8, i1 false), !tbaa.struct !381
  %coerce.dive2 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive2, align 8
  %call = call noundef ptr @_ZSt12__niter_baseIPKmSt6vectorImSaImEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(ptr %0) #6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp3, ptr align 8 %__last, i64 8, i1 false), !tbaa.struct !381
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %agg.tmp3, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive4, align 8
  %call5 = call noundef ptr @_ZSt12__niter_baseIPKmSt6vectorImSaImEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(ptr %1) #6
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call6 = call noundef ptr @_ZSt12__niter_baseIPmET_S1_(ptr noundef %2) #6
  %call7 = call noundef ptr @_ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_(ptr noundef %call, ptr noundef %call5, ptr noundef %call6)
  %call8 = call noundef ptr @_ZSt12__niter_wrapIPmET_RKS1_S1_(ptr noundef nonnull align 8 dereferenceable(8) %__result.addr, ptr noundef %call7)
  ret ptr %call8
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr ptr @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEET_S8_(ptr %__it.coerce) #1 comdat {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %__it = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %__it, i32 0, i32 0
  store ptr %__it.coerce, ptr %coerce.dive, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %retval, ptr align 8 %__it, i64 8, i1 false), !tbaa.struct !381
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive1, align 8
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__niter_baseIPKmSt6vectorImSaImEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(ptr %__it.coerce) #2 comdat {
entry:
  %__it = alloca %"class.__gnu_cxx::__normal_iterator.85", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.85", ptr %__it, i32 0, i32 0
  store ptr %__it.coerce, ptr %coerce.dive, align 8
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %__it) #6
  %0 = load ptr, ptr %call, align 8, !tbaa !68
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) #1 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__result.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store ptr %__result, ptr %__result.addr, align 8, !tbaa !68
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %2 = load ptr, ptr %__result.addr, align 8, !tbaa !68
  %call = call noundef ptr @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZN2xt7svectorIlLm4ESaIlELb1EE6resizeEm(ptr noundef nonnull align 8 dereferenceable(64) %this, i64 noundef %n) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %n.addr = alloca i64, align 8
  %old_size = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  store i64 %n, ptr %n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %n.addr, align 8, !tbaa !54
  %cmp = icmp ugt i64 %0, 4
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i64, ptr %n.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNK2xt7svectorIlLm4ESaIlELb1EE8capacityEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  %cmp2 = icmp ugt i64 %1, %call
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load i64, ptr %n.addr, align 8, !tbaa !54
  call void @_ZN2xt7svectorIlLm4ESaIlELb1EE4growEm(ptr noundef nonnull align 8 dereferenceable(64) %this1, i64 noundef %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %old_size) #6
  %call3 = call noundef i64 @_ZNK2xt7svectorIlLm4ESaIlELb1EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  store i64 %call3, ptr %old_size, align 8, !tbaa !54
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %3 = load ptr, ptr %m_begin, align 8, !tbaa !347
  %4 = load i64, ptr %n.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i64, ptr %3, i64 %4
  %m_end = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 2
  store ptr %add.ptr, ptr %m_end, align 8, !tbaa !352
  %5 = load i64, ptr %old_size, align 8, !tbaa !54
  %call4 = call noundef i64 @_ZNK2xt7svectorIlLm4ESaIlELb1EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  %cmp5 = icmp ult i64 %5, %call4
  br i1 %cmp5, label %if.then6, label %if.end10

if.then6:                                         ; preds = %if.end
  %call7 = call noundef ptr @_ZN2xt7svectorIlLm4ESaIlELb1EE5beginEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  %6 = load i64, ptr %old_size, align 8, !tbaa !54
  %add.ptr8 = getelementptr inbounds nuw i64, ptr %call7, i64 %6
  %call9 = call noundef ptr @_ZN2xt7svectorIlLm4ESaIlELb1EE3endEv(ptr noundef nonnull align 8 dereferenceable(64) %this1)
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  store i64 0, ptr %ref.tmp, align 8, !tbaa !54
  call void @_ZSt4fillIPllEvT_S1_RKT0_(ptr noundef %add.ptr8, ptr noundef %call9, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp)
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  br label %if.end10

if.end10:                                         ; preds = %if.then6, %if.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %old_size) #6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef i64 @_ZN2xt6detail15compute_stridesILNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS3_IlLm4ESaIlELb1EEEPS7_EEmRKT0_S2_RT1_T2_(ptr noundef nonnull align 8 dereferenceable(64) %shape, i32 noundef %l, ptr noundef nonnull align 8 dereferenceable(64) %strides, ptr noundef %bs) #8 comdat {
entry:
  %shape.addr = alloca ptr, align 8
  %l.addr = alloca i32, align 4
  %strides.addr = alloca ptr, align 8
  %bs.addr = alloca ptr, align 8
  %data_size = alloca i64, align 8
  %i = alloca i64, align 8
  store ptr %shape, ptr %shape.addr, align 8, !tbaa !339
  store i32 %l, ptr %l.addr, align 4, !tbaa !380
  store ptr %strides, ptr %strides.addr, align 8, !tbaa !341
  store ptr %bs, ptr %bs.addr, align 8, !tbaa !341
  call void @llvm.lifetime.start.p0(i64 8, ptr %data_size) #6
  store i64 1, ptr %data_size, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #6
  %0 = load ptr, ptr %shape.addr, align 8, !tbaa !339
  %call = call noundef i64 @_ZNK2xt7svectorImLm4ESaImELb1EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(64) %0)
  store i64 %call, ptr %i, align 8, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, ptr %i, align 8, !tbaa !54
  %cmp = icmp ne i64 %1, 0
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #6
  br label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i64, ptr %data_size, align 8, !tbaa !54
  %3 = load ptr, ptr %strides.addr, align 8, !tbaa !341
  %4 = load i64, ptr %i, align 8, !tbaa !54
  %sub = sub i64 %4, 1
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN2xt7svectorIlLm4ESaIlELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %3, i64 noundef %sub)
  store i64 %2, ptr %call1, align 8, !tbaa !54
  %5 = load ptr, ptr %strides.addr, align 8, !tbaa !341
  %6 = load i64, ptr %i, align 8, !tbaa !54
  %sub2 = sub i64 %6, 1
  %call3 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN2xt7svectorIlLm4ESaIlELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %5, i64 noundef %sub2)
  %7 = load i64, ptr %call3, align 8, !tbaa !54
  %8 = load ptr, ptr %shape.addr, align 8, !tbaa !339
  %9 = load i64, ptr %i, align 8, !tbaa !54
  %sub4 = sub i64 %9, 1
  %call5 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK2xt7svectorImLm4ESaImELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %8, i64 noundef %sub4)
  %10 = load i64, ptr %call5, align 8, !tbaa !54
  %mul = mul nsw i64 %7, %10
  store i64 %mul, ptr %data_size, align 8, !tbaa !54
  %11 = load ptr, ptr %shape.addr, align 8, !tbaa !339
  %12 = load ptr, ptr %strides.addr, align 8, !tbaa !341
  %13 = load ptr, ptr %bs.addr, align 8, !tbaa !341
  %14 = load i64, ptr %i, align 8, !tbaa !54
  %sub6 = sub i64 %14, 1
  call void @_ZN2xt6detail13adapt_stridesINS_7svectorImLm4ESaImELb1EEENS2_IlLm4ESaIlELb1EEEPS6_EEvRKT_RT0_T1_NSB_9size_typeE(ptr noundef nonnull align 8 dereferenceable(64) %11, ptr noundef nonnull align 8 dereferenceable(64) %12, ptr noundef %13, i64 noundef %sub6) #6
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i64, ptr %i, align 8, !tbaa !54
  %dec = add i64 %15, -1
  store i64 %dec, ptr %i, align 8, !tbaa !54
  br label %for.cond, !llvm.loop !386

for.end:                                          ; preds = %for.cond.cleanup
  %16 = load i64, ptr %data_size, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr %data_size) #6
  ret i64 %16
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZN2xt7svectorIlLm4ESaIlELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %this, i64 noundef %idx) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %idx.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  store i64 %idx, ptr %idx.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %m_begin, align 8, !tbaa !347
  %1 = load i64, ptr %idx.addr, align 8, !tbaa !54
  %arrayidx = getelementptr inbounds nuw i64, ptr %0, i64 %1
  ret ptr %arrayidx
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK2xt7svectorImLm4ESaImELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %this, i64 noundef %idx) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %idx.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  store i64 %idx, ptr %idx.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %m_begin, align 8, !tbaa !345
  %1 = load i64, ptr %idx.addr, align 8, !tbaa !54
  %arrayidx = getelementptr inbounds nuw i64, ptr %0, i64 %1
  ret ptr %arrayidx
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt6detail13adapt_stridesINS_7svectorImLm4ESaImELb1EEENS2_IlLm4ESaIlELb1EEEPS6_EEvRKT_RT0_T1_NSB_9size_typeE(ptr noundef nonnull align 8 dereferenceable(64) %shape, ptr noundef nonnull align 8 dereferenceable(64) %strides, ptr noundef %backstrides, i64 noundef %i) #1 comdat {
entry:
  %shape.addr = alloca ptr, align 8
  %strides.addr = alloca ptr, align 8
  %backstrides.addr = alloca ptr, align 8
  %i.addr = alloca i64, align 8
  store ptr %shape, ptr %shape.addr, align 8, !tbaa !339
  store ptr %strides, ptr %strides.addr, align 8, !tbaa !341
  store ptr %backstrides, ptr %backstrides.addr, align 8, !tbaa !341
  store i64 %i, ptr %i.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %shape.addr, align 8, !tbaa !339
  %1 = load i64, ptr %i.addr, align 8, !tbaa !54
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK2xt7svectorImLm4ESaImELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %0, i64 noundef %1)
  %2 = load i64, ptr %call, align 8, !tbaa !54
  %cmp = icmp eq i64 %2, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %strides.addr, align 8, !tbaa !341
  %4 = load i64, ptr %i.addr, align 8, !tbaa !54
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN2xt7svectorIlLm4ESaIlELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %3, i64 noundef %4)
  store i64 0, ptr %call1, align 8, !tbaa !54
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load ptr, ptr %strides.addr, align 8, !tbaa !341
  %6 = load i64, ptr %i.addr, align 8, !tbaa !54
  %call2 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN2xt7svectorIlLm4ESaIlELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %5, i64 noundef %6)
  %7 = load i64, ptr %call2, align 8, !tbaa !54
  %8 = load ptr, ptr %shape.addr, align 8, !tbaa !339
  %9 = load i64, ptr %i.addr, align 8, !tbaa !54
  %call3 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK2xt7svectorImLm4ESaImELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %8, i64 noundef %9)
  %10 = load i64, ptr %call3, align 8, !tbaa !54
  %sub = sub i64 %10, 1
  %mul = mul nsw i64 %7, %sub
  %11 = load ptr, ptr %backstrides.addr, align 8, !tbaa !341
  %12 = load i64, ptr %i.addr, align 8, !tbaa !54
  %call4 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN2xt7svectorIlLm4ESaIlELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %11, i64 noundef %12)
  store i64 %mul, ptr %call4, align 8, !tbaa !54
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef zeroext i1 @_ZN2xt16resize_containerINS_7uvectorIdSaIdEEEEEbRT_NS4_9size_typeE(ptr noundef nonnull align 8 dereferenceable(24) %c, i64 noundef %size) #8 comdat {
entry:
  %c.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  store ptr %c, ptr %c.addr, align 8, !tbaa !331
  store i64 %size, ptr %size.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %c.addr, align 8, !tbaa !331
  %1 = load i64, ptr %size.addr, align 8, !tbaa !54
  call void @_ZN2xt7uvectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1)
  ret i1 true
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7uvectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %size) #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !331
  store i64 %size, ptr %size.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %size.addr, align 8, !tbaa !54
  call void @_ZN2xt7uvectorIdSaIdEE11resize_implEm(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %0)
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt7uvectorIdSaIdEE11resize_implEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %new_size) #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %new_size.addr = alloca i64, align 8
  %old_size = alloca i64, align 8
  %old_begin = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !331
  store i64 %new_size, ptr %new_size.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %old_size) #6
  %call = call noundef i64 @_ZNK2xt7uvectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  store i64 %call, ptr %old_size, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %old_begin) #6
  %p_begin = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %p_begin, align 8, !tbaa !333
  store ptr %0, ptr %old_begin, align 8, !tbaa !219
  %1 = load i64, ptr %new_size.addr, align 8, !tbaa !54
  %2 = load i64, ptr %old_size, align 8, !tbaa !54
  %cmp = icmp ne i64 %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i64, ptr %new_size.addr, align 8, !tbaa !54
  %call2 = call noundef ptr @_ZN2xt6detail18safe_init_allocateISaIdEEENSt16allocator_traitsIT_E7pointerERS4_NS5_9size_typeE(ptr noundef nonnull align 1 dereferenceable(1) %this1, i64 noundef %3)
  %p_begin3 = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 1
  store ptr %call2, ptr %p_begin3, align 8, !tbaa !333
  %p_begin4 = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 1
  %4 = load ptr, ptr %p_begin4, align 8, !tbaa !333
  %5 = load i64, ptr %new_size.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw double, ptr %4, i64 %5
  %p_end = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 2
  store ptr %add.ptr, ptr %p_end, align 8, !tbaa !336
  %6 = load ptr, ptr %old_begin, align 8, !tbaa !219
  %7 = load i64, ptr %old_size, align 8, !tbaa !54
  call void @_ZN2xt6detail23safe_destroy_deallocateISaIdEEEvRT_NSt16allocator_traitsIS3_E7pointerENS6_9size_typeE(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef %6, i64 noundef %7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %old_begin) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %old_size) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNK2xt7uvectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !331
  %this1 = load ptr, ptr %this.addr, align 8
  %p_end = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 2
  %0 = load ptr, ptr %p_end, align 8, !tbaa !336
  %p_begin = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 1
  %1 = load ptr, ptr %p_begin, align 8, !tbaa !333
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZN2xt6detail18safe_init_allocateISaIdEEENSt16allocator_traitsIT_E7pointerERS4_NS5_9size_typeE(ptr noundef nonnull align 1 dereferenceable(1) %alloc, i64 noundef %size) #8 comdat {
entry:
  %alloc.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %res = alloca ptr, align 8
  store ptr %alloc, ptr %alloc.addr, align 8, !tbaa !220
  store i64 %size, ptr %size.addr, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #6
  %0 = load ptr, ptr %alloc.addr, align 8, !tbaa !220
  %1 = load i64, ptr %size.addr, align 8, !tbaa !54
  %call = call noundef ptr @_ZNSt15__new_allocatorIdE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef null)
  store ptr %call, ptr %res, align 8, !tbaa !219
  %2 = load ptr, ptr %res, align 8, !tbaa !219
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #6
  ret ptr %2
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt6detail23safe_destroy_deallocateISaIdEEEvRT_NSt16allocator_traitsIS3_E7pointerENS6_9size_typeE(ptr noundef nonnull align 1 dereferenceable(1) %alloc, ptr noundef %ptr, i64 noundef %size) #8 comdat {
entry:
  %alloc.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  store ptr %alloc, ptr %alloc.addr, align 8, !tbaa !220
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !219
  store i64 %size, ptr %size.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %ptr.addr, align 8, !tbaa !219
  %cmp = icmp ne ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %alloc.addr, align 8, !tbaa !220
  %2 = load ptr, ptr %ptr.addr, align 8, !tbaa !219
  %3 = load i64, ptr %size.addr, align 8, !tbaa !54
  call void @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm(ptr noundef nonnull align 1 dereferenceable(1) %1, ptr noundef %2, i64 noundef %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(240) ptr @_ZNR2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !343
  %this1 = load ptr, ptr %this.addr, align 8
  ret ptr %this1
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(24) ptr @_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEE12storage_implEv(ptr noundef nonnull align 8 dereferenceable(240) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !268
  %this1 = load ptr, ptr %this.addr, align 8
  %m_storage = getelementptr inbounds nuw %"class.xt::xarray_container", ptr %this1, i32 0, i32 2
  ret ptr %m_storage
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZN2xt7uvectorIdSaIdEE4dataEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !331
  %this1 = load ptr, ptr %this.addr, align 8
  %p_begin = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %p_begin, align 8, !tbaa !333
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN2xt6detail14make_view_implIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJLm0EEJiEEEDaOT_St16integer_sequenceImJXspT0_EEEDpOT1_(ptr dead_on_unwind noalias writable sret(%"class.xt::xview") align 8 %agg.result, ptr noundef nonnull align 8 dereferenceable(240) %e, ptr noundef nonnull align 4 dereferenceable(4) %slices) #8 comdat {
entry:
  %result.ptr = alloca ptr, align 8
  %0 = alloca %"struct.std::integer_sequence", align 1
  %e.addr = alloca ptr, align 8
  %slices.addr = alloca ptr, align 8
  %ref.tmp = alloca i64, align 8
  store ptr %agg.result, ptr %result.ptr, align 8
  store ptr %e, ptr %e.addr, align 8, !tbaa !268
  store ptr %slices, ptr %slices.addr, align 8, !tbaa !245
  %1 = load ptr, ptr %e.addr, align 8, !tbaa !268
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %2 = load ptr, ptr %e.addr, align 8, !tbaa !268
  %3 = load ptr, ptr %slices.addr, align 8, !tbaa !245
  %call = call noundef i64 @_ZN2xt6detail26get_underlying_shape_indexINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEmm(i64 noundef 0)
  %call1 = call noundef i64 @_ZN2xt24get_slice_implementationINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEiEEDaRT_OT0_m(ptr noundef nonnull align 8 dereferenceable(240) %2, ptr noundef nonnull align 4 dereferenceable(4) %3, i64 noundef %call)
  store i64 %call1, ptr %ref.tmp, align 8, !tbaa !54
  call void @_ZN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEC2ISB_lJEEEOT_OT0_DpOT1_(ptr noundef nonnull align 8 dereferenceable(65) %agg.result, ptr noundef nonnull align 8 dereferenceable(240) %1, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef i64 @_ZN2xt24get_slice_implementationINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEiEEDaRT_OT0_m(ptr noundef nonnull align 8 dereferenceable(240) %e, ptr noundef nonnull align 4 dereferenceable(4) %slice, i64 noundef %index) #8 comdat {
entry:
  %e.addr = alloca ptr, align 8
  %slice.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  %getter = alloca %"struct.xt::detail::slice_implementation_getter", align 1
  store ptr %e, ptr %e.addr, align 8, !tbaa !268
  store ptr %slice, ptr %slice.addr, align 8, !tbaa !245
  store i64 %index, ptr %index.addr, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 1, ptr %getter) #6
  %0 = load ptr, ptr %e.addr, align 8, !tbaa !268
  %1 = load ptr, ptr %slice.addr, align 8, !tbaa !245
  %2 = load i64, ptr %index.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNK2xt6detail27slice_implementation_getterIiEclINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEiEEDcRT_OT0_m(ptr noundef nonnull align 1 dereferenceable(1) %getter, ptr noundef nonnull align 8 dereferenceable(240) %0, ptr noundef nonnull align 4 dereferenceable(4) %1, i64 noundef %2)
  call void @llvm.lifetime.end.p0(i64 1, ptr %getter) #6
  ret i64 %call
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef i64 @_ZN2xt6detail26get_underlying_shape_indexINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEmm(i64 noundef %I) #8 comdat {
entry:
  %I.addr = alloca i64, align 8
  store i64 %I, ptr %I.addr, align 8, !tbaa !54
  %0 = load i64, ptr %I.addr, align 8, !tbaa !54
  %1 = load i64, ptr %I.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZN2xt20newaxis_count_beforeIJiEEEmm(i64 noundef %1)
  %sub = sub i64 %0, %call
  ret i64 %sub
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEC2ISB_lJEEEOT_OT0_DpOT1_(ptr noundef nonnull align 8 dereferenceable(65) %this, ptr noundef nonnull align 8 dereferenceable(240) %e, ptr noundef nonnull align 8 dereferenceable(8) %first_slice) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %e.addr = alloca ptr, align 8
  %first_slice.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.std::integral_constant", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !387
  store ptr %e, ptr %e.addr, align 8, !tbaa !268
  store ptr %first_slice, ptr %first_slice.addr, align 8, !tbaa !68
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %e.addr, align 8, !tbaa !268
  %1 = load ptr, ptr %first_slice.addr, align 8, !tbaa !68
  call void @_ZN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEC2ISB_lJEEESt17integral_constantIbLb1EEOT_OT0_DpOT1_(ptr noundef nonnull align 8 dereferenceable(65) %this1, ptr noundef nonnull align 8 dereferenceable(240) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) #6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef i64 @_ZNK2xt6detail27slice_implementation_getterIiEclINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEiEEDcRT_OT0_m(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 8 dereferenceable(240) %e, ptr noundef nonnull align 4 dereferenceable(4) %slice, i64 noundef %index) #8 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %e.addr = alloca ptr, align 8
  %slice.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  %agg.tmp = alloca %"struct.std::integral_constant", align 1
  %ref.tmp = alloca %"struct.xtl::is_signed", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !389
  store ptr %e, ptr %e.addr, align 8, !tbaa !268
  store ptr %slice, ptr %slice.addr, align 8, !tbaa !245
  store i64 %index, ptr %index.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %e.addr, align 8, !tbaa !268
  %1 = load ptr, ptr %slice.addr, align 8, !tbaa !245
  %2 = load i64, ptr %index.addr, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  %call = call noundef i64 @_ZNK2xt6detail27slice_implementation_getterIiE9get_sliceINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEiEEDcRT_OT0_mSt17integral_constantIbLb1EE(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef nonnull align 8 dereferenceable(240) %0, ptr noundef nonnull align 4 dereferenceable(4) %1, i64 noundef %2)
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  ret i64 %call
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef i64 @_ZNK2xt6detail27slice_implementation_getterIiE9get_sliceINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEiEEDcRT_OT0_mSt17integral_constantIbLb1EE(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 8 dereferenceable(240) %e, ptr noundef nonnull align 4 dereferenceable(4) %slice, i64 noundef %index) #8 comdat align 2 {
entry:
  %0 = alloca %"struct.std::integral_constant", align 1
  %this.addr = alloca ptr, align 8
  %e.addr = alloca ptr, align 8
  %slice.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !389
  store ptr %e, ptr %e.addr, align 8, !tbaa !268
  store ptr %slice, ptr %slice.addr, align 8, !tbaa !245
  store i64 %index, ptr %index.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %1 = load ptr, ptr %slice.addr, align 8, !tbaa !245
  %2 = load i32, ptr %1, align 4, !tbaa !44
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load ptr, ptr %slice.addr, align 8, !tbaa !245
  %4 = load i32, ptr %3, align 4, !tbaa !44
  %conv = sext i32 %4 to i64
  %5 = load ptr, ptr %e.addr, align 8, !tbaa !268
  %6 = load i64, ptr %index.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZNK2xt17xconst_accessibleINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE5shapeEm(ptr noundef nonnull align 1 dereferenceable(1) %5, i64 noundef %6)
  %add = add nsw i64 %conv, %call
  br label %cond.end

cond.false:                                       ; preds = %entry
  %7 = load ptr, ptr %slice.addr, align 8, !tbaa !245
  %8 = load i32, ptr %7, align 4, !tbaa !44
  %conv2 = sext i32 %8 to i64
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %conv2, %cond.false ]
  ret i64 %cond
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNK2xt17xconst_accessibleINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE5shapeEm(ptr noundef nonnull align 1 dereferenceable(1) %this, i64 noundef %index) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !391
  store i64 %index, ptr %index.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 8 dereferenceable(240) ptr @_ZNK2xt17xconst_accessibleINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %call2 = call noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE5shapeEv(ptr noundef nonnull align 1 dereferenceable(1) %call) #6
  %0 = load i64, ptr %index.addr, align 8, !tbaa !54
  %call3 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK2xt7svectorImLm4ESaImELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %call2, i64 noundef %0)
  %1 = load i64, ptr %call3, align 8, !tbaa !54
  ret i64 %1
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(240) ptr @_ZNK2xt17xconst_accessibleINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !391
  %this1 = load ptr, ptr %this.addr, align 8
  ret ptr %this1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZN2xt20newaxis_count_beforeIJiEEEmm(i64 noundef %i) #2 comdat {
entry:
  %i.addr = alloca i64, align 8
  store i64 %i, ptr %i.addr, align 8, !tbaa !54
  %0 = load i64, ptr %i.addr, align 8, !tbaa !54
  %call = call noundef i64 @_ZN2xt6detail18newaxis_count_implIiJvEE5countEm(i64 noundef %0) #6
  ret i64 %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZN2xt6detail18newaxis_count_implIiJvEE5countEm(i64 noundef %i) #2 comdat align 2 {
entry:
  %i.addr = alloca i64, align 8
  store i64 %i, ptr %i.addr, align 8, !tbaa !54
  %0 = load i64, ptr %i.addr, align 8, !tbaa !54
  %tobool = icmp ne i64 %0, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i64, ptr %i.addr, align 8, !tbaa !54
  %sub = sub i64 %1, 1
  %call = call noundef i64 @_ZN2xt6detail18newaxis_count_implIvJEE5countEm(i64 noundef %sub) #6
  %add = add i64 %call, 0
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ 0, %cond.false ]
  ret i64 %cond
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZN2xt6detail18newaxis_count_implIvJEE5countEm(i64 noundef %0) #2 comdat align 2 {
entry:
  %.addr = alloca i64, align 8
  store i64 %0, ptr %.addr, align 8, !tbaa !54
  ret i64 0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEC2ISB_lJEEESt17integral_constantIbLb1EEOT_OT0_DpOT1_(ptr noundef nonnull align 8 dereferenceable(65) %this, ptr noundef nonnull align 8 dereferenceable(240) %e, ptr noundef nonnull align 8 dereferenceable(8) %first_slice) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %0 = alloca %"struct.std::integral_constant", align 1
  %this.addr = alloca ptr, align 8
  %e.addr = alloca ptr, align 8
  %first_slice.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.std::integral_constant", align 1
  %ref.tmp = alloca %"struct.xt::detail::is_sequence_view", align 1
  %agg.tmp9 = alloca %"struct.std::integer_sequence", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !387
  store ptr %e, ptr %e.addr, align 8, !tbaa !268
  store ptr %first_slice, ptr %first_slice.addr, align 8, !tbaa !68
  %this1 = load ptr, ptr %this.addr, align 8
  invoke void @_ZN2xt14xview_semanticINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %m_e = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 1
  %1 = load ptr, ptr %e.addr, align 8, !tbaa !268
  store ptr %1, ptr %m_e, align 8, !tbaa !268
  %m_slices = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 2
  %2 = load ptr, ptr %first_slice.addr, align 8, !tbaa !68
  call void @_ZNSt5tupleIJiEEC2IJlELb1ETnNSt9enable_ifIXclsr4_TCCIXT0_EEE29__is_implicitly_constructibleIDpT_EEEbE4typeELb1EEEDpOS3_(ptr noundef nonnull align 4 dereferenceable(4) %m_slices, ptr noundef nonnull align 8 dereferenceable(8) %2) #6
  %m_shape = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 4
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  %call = invoke ptr @_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE13compute_shapeESt17integral_constantIbLb1EE(ptr noundef nonnull align 8 dereferenceable(65) %this1)
          to label %invoke.cont2 unwind label %terminate.lpad

invoke.cont2:                                     ; preds = %invoke.cont
  %coerce.dive = getelementptr inbounds nuw %"class.xt::sequence_view", ptr %m_shape, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  %m_strides = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 5
  %m_e3 = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 1
  %3 = load ptr, ptr %m_e3, align 8, !tbaa !393
  %call4 = call noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE7stridesEv(ptr noundef nonnull align 1 dereferenceable(1) %3) #6
  invoke void @_ZN2xt13sequence_viewINS_7svectorIlLm4ESaIlELb1EEELl1ELln1EEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %m_strides, ptr noundef nonnull align 8 dereferenceable(64) %call4)
          to label %invoke.cont5 unwind label %terminate.lpad

invoke.cont5:                                     ; preds = %invoke.cont2
  %m_backstrides = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 6
  %m_e6 = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 1
  %4 = load ptr, ptr %m_e6, align 8, !tbaa !393
  %call7 = call noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE11backstridesEv(ptr noundef nonnull align 1 dereferenceable(1) %4) #6
  invoke void @_ZN2xt13sequence_viewINS_7svectorIlLm4ESaIlELb1EEELl1ELln1EEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %m_backstrides, ptr noundef nonnull align 8 dereferenceable(64) %call7)
          to label %invoke.cont8 unwind label %terminate.lpad

invoke.cont8:                                     ; preds = %invoke.cont5
  %m_data_offset = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 7
  %call10 = call noundef i64 @_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE16data_offset_implIJLm0EEEEmSt16integer_sequenceImJXspT_EEE(ptr noundef nonnull align 8 dereferenceable(65) %this1) #6
  store i64 %call10, ptr %m_data_offset, align 8, !tbaa !405
  %m_strides_computed = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 8
  store i8 1, ptr %m_strides_computed, align 8, !tbaa !406
  ret void

terminate.lpad:                                   ; preds = %invoke.cont5, %invoke.cont2, %invoke.cont, %entry
  %5 = landingpad { ptr, i32 }
          catch ptr null
  %6 = extractvalue { ptr, i32 } %5, 0
  call void @__clang_call_terminate(ptr %6) #25
  unreachable
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZN2xt14xview_semanticINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !407
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN2xt14xsemantic_baseINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJiEEC2IJlELb1ETnNSt9enable_ifIXclsr4_TCCIXT0_EEE29__is_implicitly_constructibleIDpT_EEEbE4typeELb1EEEDpOS3_(ptr noundef nonnull align 4 dereferenceable(4) %this, ptr noundef nonnull align 8 dereferenceable(8) %__elements) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %__elements.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !409
  store ptr %__elements, ptr %__elements.addr, align 8, !tbaa !68
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__elements.addr, align 8, !tbaa !68
  invoke void @_ZNSt11_Tuple_implILm0EJiEEC2IlEEOT_(ptr noundef nonnull align 4 dereferenceable(4) %this1, ptr noundef nonnull align 8 dereferenceable(8) %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  call void @__clang_call_terminate(ptr %2) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr ptr @_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE13compute_shapeESt17integral_constantIbLb1EE(ptr noundef nonnull align 8 dereferenceable(65) %this) #8 comdat align 2 {
entry:
  %retval = alloca %"class.xt::sequence_view", align 8
  %0 = alloca %"struct.std::integral_constant", align 1
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !387
  %this1 = load ptr, ptr %this.addr, align 8
  %m_e = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 1
  %1 = load ptr, ptr %m_e, align 8, !tbaa !393
  %call = call noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE5shapeEv(ptr noundef nonnull align 1 dereferenceable(1) %1) #6
  call void @_ZN2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(64) %call)
  %coerce.dive = getelementptr inbounds nuw %"class.xt::sequence_view", ptr %retval, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE7stridesEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !343
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 8 dereferenceable(240) ptr @_ZNKR2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %call2 = call noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12strides_implEv(ptr noundef nonnull align 8 dereferenceable(196) %call) #6
  ret ptr %call2
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt13sequence_viewINS_7svectorIlLm4ESaIlELb1EEELl1ELln1EEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(64) %container) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %container.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !411
  store ptr %container, ptr %container.addr, align 8, !tbaa !341
  %this1 = load ptr, ptr %this.addr, align 8
  %m_sequence = getelementptr inbounds nuw %"class.xt::sequence_view.78", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %container.addr, align 8, !tbaa !341
  store ptr %0, ptr %m_sequence, align 8, !tbaa !341
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE11backstridesEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !343
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 8 dereferenceable(240) ptr @_ZNKR2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %call2 = call noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE16backstrides_implEv(ptr noundef nonnull align 8 dereferenceable(196) %call) #6
  ret ptr %call2
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE16data_offset_implIJLm0EEEEmSt16integer_sequenceImJXspT_EEE(ptr noundef nonnull align 8 dereferenceable(65) %this) #1 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %0 = alloca %"struct.std::integer_sequence", align 1
  %this.addr = alloca ptr, align 8
  %temp = alloca %"struct.std::array.86", align 8
  %result = alloca i64, align 8
  %i = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  %ref.tmp3 = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !387
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %temp) #6
  %_M_elems = getelementptr inbounds nuw %"struct.std::array.86", ptr %temp, i32 0, i32 0
  %m_slices = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 2
  %call = call noundef nonnull align 4 dereferenceable(4) ptr @_ZSt3getILm0EJiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(ptr noundef nonnull align 4 dereferenceable(4) %m_slices) #6
  %call2 = call noundef i64 @_ZN2xt5valueIiiEENSt9enable_ifIXntsr9is_xsliceIT_EE5valueEmE4typeERKS2_T0_(ptr noundef nonnull align 4 dereferenceable(4) %call, i32 noundef 0) #6
  store i64 %call2, ptr %_M_elems, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #6
  store i64 0, ptr %result, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #6
  store i64 0, ptr %i, align 8, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, ptr %i, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  store i64 1, ptr %ref.tmp, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp3) #6
  %m_e = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 1
  %2 = load ptr, ptr %m_e, align 8, !tbaa !393
  %call4 = call noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE7stridesEv(ptr noundef nonnull align 1 dereferenceable(1) %2) #6
  %call5 = call noundef i64 @_ZNK2xt7svectorIlLm4ESaIlELb1EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(64) %call4)
  store i64 %call5, ptr %ref.tmp3, align 8, !tbaa !54
  %call6 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3minImERKT_S2_S2_(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp3)
  %3 = load i64, ptr %call6, align 8, !tbaa !54
  %cmp = icmp ult i64 %1, %3
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp3) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i64, ptr %i, align 8, !tbaa !54
  %call7 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt5arrayIlLm1EEixEm(ptr noundef nonnull align 8 dereferenceable(8) %temp, i64 noundef %4) #6
  %5 = load i64, ptr %call7, align 8, !tbaa !54
  %m_e8 = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 1
  %6 = load ptr, ptr %m_e8, align 8, !tbaa !393
  %call9 = call noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE7stridesEv(ptr noundef nonnull align 1 dereferenceable(1) %6) #6
  %7 = load i64, ptr %i, align 8, !tbaa !54
  %8 = load i64, ptr %i, align 8, !tbaa !54
  %call10 = call noundef i64 @_ZN2xt20newaxis_count_beforeIJiEEEmm(i64 noundef %8)
  %sub = sub i64 %7, %call10
  %call11 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNK2xt7svectorIlLm4ESaIlELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %call9, i64 noundef %sub)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %for.body
  %9 = load i64, ptr %call11, align 8, !tbaa !54
  %mul = mul nsw i64 %5, %9
  %10 = load i64, ptr %result, align 8, !tbaa !54
  %add = add nsw i64 %10, %mul
  store i64 %add, ptr %result, align 8, !tbaa !54
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont
  %11 = load i64, ptr %i, align 8, !tbaa !54
  %inc = add i64 %11, 1
  store i64 %inc, ptr %i, align 8, !tbaa !54
  br label %for.cond, !llvm.loop !413

for.end:                                          ; preds = %for.cond
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc17, %for.end
  %12 = load i64, ptr %i, align 8, !tbaa !54
  %cmp13 = icmp ult i64 %12, 1
  br i1 %cmp13, label %for.body14, label %for.end19

for.body14:                                       ; preds = %for.cond12
  %13 = load i64, ptr %i, align 8, !tbaa !54
  %call15 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt5arrayIlLm1EEixEm(ptr noundef nonnull align 8 dereferenceable(8) %temp, i64 noundef %13) #6
  %14 = load i64, ptr %call15, align 8, !tbaa !54
  %15 = load i64, ptr %result, align 8, !tbaa !54
  %add16 = add nsw i64 %15, %14
  store i64 %add16, ptr %result, align 8, !tbaa !54
  br label %for.inc17

for.inc17:                                        ; preds = %for.body14
  %16 = load i64, ptr %i, align 8, !tbaa !54
  %inc18 = add i64 %16, 1
  store i64 %inc18, ptr %i, align 8, !tbaa !54
  br label %for.cond12, !llvm.loop !414

for.end19:                                        ; preds = %for.cond12
  %17 = load i64, ptr %result, align 8, !tbaa !54
  %m_e20 = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 1
  %18 = load ptr, ptr %m_e20, align 8, !tbaa !393
  %call21 = call noundef i64 @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE11data_offsetEv(ptr noundef nonnull align 1 dereferenceable(1) %18) #6
  %add22 = add i64 %17, %call21
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %temp) #6
  ret i64 %add22

terminate.lpad:                                   ; preds = %for.body
  %19 = landingpad { ptr, i32 }
          catch ptr null
  %20 = extractvalue { ptr, i32 } %19, 0
  call void @__clang_call_terminate(ptr %20) #25
  unreachable
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZN2xt14xsemantic_baseINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !415
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this1)
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !280
  %this1 = load ptr, ptr %this.addr, align 8
  %p_shared = getelementptr inbounds nuw %"class.xt::xsharable_expression.65", ptr %this1, i32 0, i32 0
  call void @_ZNSt10shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEEEC2EDn(ptr noundef nonnull align 8 dereferenceable(16) %p_shared, ptr null) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEEEC2EDn(ptr noundef nonnull align 8 dereferenceable(16) %this, ptr %0) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !417
  store ptr %0, ptr %.addr, align 8, !tbaa !361
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt10shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEEEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !417
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZNSt12__shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEELN9__gnu_cxx12_Lock_policyE2EEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this1) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12__shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEELN9__gnu_cxx12_Lock_policyE2EEC2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !419
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_ptr = getelementptr inbounds nuw %"class.std::__shared_ptr.68", ptr %this1, i32 0, i32 0
  store ptr null, ptr %_M_ptr, align 8, !tbaa !421
  %_M_refcount = getelementptr inbounds nuw %"class.std::__shared_ptr.68", ptr %this1, i32 0, i32 1
  call void @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %_M_refcount) #6
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJiEEC2IlEEOT_(ptr noundef nonnull align 4 dereferenceable(4) %this, ptr noundef nonnull align 8 dereferenceable(8) %__head) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__head.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !422
  store ptr %__head, ptr %__head.addr, align 8, !tbaa !68
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__head.addr, align 8, !tbaa !68
  call void @_ZNSt10_Head_baseILm0EiLb0EEC2IlEEOT_(ptr noundef nonnull align 4 dereferenceable(4) %this1, ptr noundef nonnull align 8 dereferenceable(8) %0)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EiLb0EEC2IlEEOT_(ptr noundef nonnull align 4 dereferenceable(4) %this, ptr noundef nonnull align 8 dereferenceable(8) %__h) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__h.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !424
  store ptr %__h, ptr %__h.addr, align 8, !tbaa !68
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_head_impl = getelementptr inbounds nuw %"struct.std::_Head_base.77", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__h.addr, align 8, !tbaa !68
  %1 = load i64, ptr %0, align 8, !tbaa !54
  %conv = trunc i64 %1 to i32
  store i32 %conv, ptr %_M_head_impl, align 4, !tbaa !426
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(64) %container) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %container.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !427
  store ptr %container, ptr %container.addr, align 8, !tbaa !339
  %this1 = load ptr, ptr %this.addr, align 8
  %m_sequence = getelementptr inbounds nuw %"class.xt::sequence_view", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %container.addr, align 8, !tbaa !339
  store ptr %0, ptr %m_sequence, align 8, !tbaa !339
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE12strides_implEv(ptr noundef nonnull align 8 dereferenceable(196) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !320
  %this1 = load ptr, ptr %this.addr, align 8
  %m_strides = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 1
  ret ptr %m_strides
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(64) ptr @_ZNK2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE16backstrides_implEv(ptr noundef nonnull align 8 dereferenceable(196) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !320
  %this1 = load ptr, ptr %this.addr, align 8
  %m_backstrides = getelementptr inbounds nuw %"class.xt::xstrided_container", ptr %this1, i32 0, i32 2
  ret ptr %m_backstrides
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZN2xt5valueIiiEENSt9enable_ifIXntsr9is_xsliceIT_EE5valueEmE4typeERKS2_T0_(ptr noundef nonnull align 4 dereferenceable(4) %s, i32 noundef %0) #1 comdat {
entry:
  %s.addr = alloca ptr, align 8
  %.addr = alloca i32, align 4
  store ptr %s, ptr %s.addr, align 8, !tbaa !245
  store i32 %0, ptr %.addr, align 4, !tbaa !44
  %1 = load ptr, ptr %s.addr, align 8, !tbaa !245
  %2 = load i32, ptr %1, align 4, !tbaa !44
  %conv = sext i32 %2 to i64
  ret i64 %conv
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZSt3getILm0EJiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(ptr noundef nonnull align 4 dereferenceable(4) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !409
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !409
  %call = call noundef nonnull align 4 dereferenceable(4) ptr @_ZSt12__get_helperILm0EiJEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE(ptr noundef nonnull align 4 dereferenceable(4) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt5arrayIlLm1EEixEm(ptr noundef nonnull align 8 dereferenceable(8) %this, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !429
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_elems = getelementptr inbounds nuw %"struct.std::array.86", ptr %this1, i32 0, i32 0
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt14__array_traitsIlLm1EE6_S_refERA1_Klm(ptr noundef nonnull align 8 dereferenceable(8) %_M_elems, i64 noundef %0) #6
  ret ptr %call
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK2xt7svectorIlLm4ESaIlELb1EEixEm(ptr noundef nonnull align 8 dereferenceable(64) %this, i64 noundef %idx) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %idx.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !341
  store i64 %idx, ptr %idx.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %m_begin = getelementptr inbounds nuw %"class.xt::svector.63", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %m_begin, align 8, !tbaa !347
  %1 = load i64, ptr %idx.addr, align 8, !tbaa !54
  %arrayidx = getelementptr inbounds nuw i64, ptr %0, i64 %1
  ret ptr %arrayidx
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNK2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE11data_offsetEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !343
  %this1 = load ptr, ptr %this.addr, align 8
  ret i64 0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZSt12__get_helperILm0EiJEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE(ptr noundef nonnull align 4 dereferenceable(4) %__t) #2 comdat {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !422
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !422
  %call = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNSt11_Tuple_implILm0EJiEE7_M_headERKS0_(ptr noundef nonnull align 4 dereferenceable(4) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZNSt11_Tuple_implILm0EJiEE7_M_headERKS0_(ptr noundef nonnull align 4 dereferenceable(4) %__t) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !422
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !422
  %call = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNSt10_Head_baseILm0EiLb0EE7_M_headERKS0_(ptr noundef nonnull align 4 dereferenceable(4) %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZNSt10_Head_baseILm0EiLb0EE7_M_headERKS0_(ptr noundef nonnull align 4 dereferenceable(4) %__b) #2 comdat align 2 {
entry:
  %__b.addr = alloca ptr, align 8
  store ptr %__b, ptr %__b.addr, align 8, !tbaa !424
  %0 = load ptr, ptr %__b.addr, align 8, !tbaa !424
  %_M_head_impl = getelementptr inbounds nuw %"struct.std::_Head_base.77", ptr %0, i32 0, i32 0
  ret ptr %_M_head_impl
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt14__array_traitsIlLm1EE6_S_refERA1_Klm(ptr noundef nonnull align 8 dereferenceable(8) %__t, i64 noundef %__n) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !68
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !68
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %arrayidx = getelementptr inbounds nuw [1 x i64], ptr %0, i64 0, i64 %1
  ret ptr %arrayidx
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr ptr @_ZSt13__copy_move_aILb0EPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET1_T0_S7_S6_(ptr noundef %__first, ptr noundef %__last, ptr %__result.coerce) #8 comdat {
entry:
  %retval = alloca %"class.std::back_insert_iterator", align 8
  %__result = alloca %"class.std::back_insert_iterator", align 8
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.std::back_insert_iterator", align 8
  %agg.tmp2 = alloca %"class.std::back_insert_iterator", align 8
  %agg.tmp3 = alloca %"class.std::back_insert_iterator", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %__result, i32 0, i32 0
  store ptr %__result.coerce, ptr %coerce.dive, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %call = call noundef ptr @_ZSt12__niter_baseIPdET_S1_(ptr noundef %0) #6
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %call1 = call noundef ptr @_ZSt12__niter_baseIPdET_S1_(ptr noundef %1) #6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp3, ptr align 8 %__result, i64 8, i1 false)
  %coerce.dive4 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp3, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive4, align 8
  %call5 = call ptr @_ZSt12__niter_baseISt20back_insert_iteratorISt6vectorIdSaIdEEEET_S5_(ptr %2) #6
  %coerce.dive6 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp2, i32 0, i32 0
  store ptr %call5, ptr %coerce.dive6, align 8
  %coerce.dive7 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp2, i32 0, i32 0
  %3 = load ptr, ptr %coerce.dive7, align 8
  %call8 = call ptr @_ZSt14__copy_move_a1ILb0EPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET1_T0_S7_S6_(ptr noundef %call, ptr noundef %call1, ptr %3)
  %coerce.dive9 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp, i32 0, i32 0
  store ptr %call8, ptr %coerce.dive9, align 8
  %coerce.dive10 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp, i32 0, i32 0
  %4 = load ptr, ptr %coerce.dive10, align 8
  %call11 = call ptr @_ZSt12__niter_wrapISt20back_insert_iteratorISt6vectorIdSaIdEEEET_RKS5_S5_(ptr noundef nonnull align 8 dereferenceable(8) %__result, ptr %4)
  %coerce.dive12 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %retval, i32 0, i32 0
  store ptr %call11, ptr %coerce.dive12, align 8
  %coerce.dive13 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %retval, i32 0, i32 0
  %5 = load ptr, ptr %coerce.dive13, align 8
  ret ptr %5
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZSt12__miter_baseIPdET_S1_(ptr noundef %__it) #1 comdat {
entry:
  %__it.addr = alloca ptr, align 8
  store ptr %__it, ptr %__it.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__it.addr, align 8, !tbaa !219
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr ptr @_ZSt12__niter_wrapISt20back_insert_iteratorISt6vectorIdSaIdEEEET_RKS5_S5_(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr %__res.coerce) #1 comdat {
entry:
  %retval = alloca %"class.std::back_insert_iterator", align 8
  %__res = alloca %"class.std::back_insert_iterator", align 8
  %.addr = alloca ptr, align 8
  %coerce.dive = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %__res, i32 0, i32 0
  store ptr %__res.coerce, ptr %coerce.dive, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !431
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %retval, ptr align 8 %__res, i64 8, i1 false)
  %coerce.dive1 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %retval, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive1, align 8
  ret ptr %1
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr ptr @_ZSt14__copy_move_a1ILb0EPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET1_T0_S7_S6_(ptr noundef %__first, ptr noundef %__last, ptr %__result.coerce) #8 comdat {
entry:
  %retval = alloca %"class.std::back_insert_iterator", align 8
  %__result = alloca %"class.std::back_insert_iterator", align 8
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.std::back_insert_iterator", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %__result, i32 0, i32 0
  store ptr %__result.coerce, ptr %coerce.dive, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %__result, i64 8, i1 false)
  %coerce.dive1 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive1, align 8
  %call = call ptr @_ZSt14__copy_move_a2ILb0EPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET1_T0_S7_S6_(ptr noundef %0, ptr noundef %1, ptr %2)
  %coerce.dive2 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %retval, i32 0, i32 0
  store ptr %call, ptr %coerce.dive2, align 8
  %coerce.dive3 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %retval, i32 0, i32 0
  %3 = load ptr, ptr %coerce.dive3, align 8
  ret ptr %3
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr ptr @_ZSt12__niter_baseISt20back_insert_iteratorISt6vectorIdSaIdEEEET_S5_(ptr %__it.coerce) #1 comdat {
entry:
  %retval = alloca %"class.std::back_insert_iterator", align 8
  %__it = alloca %"class.std::back_insert_iterator", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %__it, i32 0, i32 0
  store ptr %__it.coerce, ptr %coerce.dive, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %retval, ptr align 8 %__it, i64 8, i1 false)
  %coerce.dive1 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive1, align 8
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr ptr @_ZSt14__copy_move_a2ILb0EPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET1_T0_S7_S6_(ptr noundef %__first, ptr noundef %__last, ptr %__result.coerce) #8 comdat {
entry:
  %retval = alloca %"class.std::back_insert_iterator", align 8
  %__result = alloca %"class.std::back_insert_iterator", align 8
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.std::back_insert_iterator", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %__result, i32 0, i32 0
  store ptr %__result.coerce, ptr %coerce.dive, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %__result, i64 8, i1 false)
  %coerce.dive1 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive1, align 8
  %call = call ptr @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPdSt20back_insert_iteratorISt6vectorIdSaIdEEEEET0_T_SA_S9_(ptr noundef %0, ptr noundef %1, ptr %2)
  %coerce.dive2 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %retval, i32 0, i32 0
  store ptr %call, ptr %coerce.dive2, align 8
  %coerce.dive3 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %retval, i32 0, i32 0
  %3 = load ptr, ptr %coerce.dive3, align 8
  ret ptr %3
}

; Function Attrs: mustprogress uwtable
define linkonce_odr ptr @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPdSt20back_insert_iteratorISt6vectorIdSaIdEEEEET0_T_SA_S9_(ptr noundef %__first, ptr noundef %__last, ptr %__result.coerce) #0 comdat align 2 {
entry:
  %retval = alloca %"class.std::back_insert_iterator", align 8
  %__result = alloca %"class.std::back_insert_iterator", align 8
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__n = alloca i64, align 8
  %coerce.dive = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %__result, i32 0, i32 0
  store ptr %__result.coerce, ptr %coerce.dive, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  call void @llvm.lifetime.start.p0(i64 8, ptr %__n) #6
  %0 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, ptr %__n, align 8, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, ptr %__n, align 8, !tbaa !54
  %cmp = icmp sgt i64 %2, 0
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__n) #6
  br label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt20back_insert_iteratorISt6vectorIdSaIdEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %__result)
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt20back_insert_iteratorISt6vectorIdSaIdEEEaSERKd(ptr noundef nonnull align 8 dereferenceable(8) %call, ptr noundef nonnull align 8 dereferenceable(8) %3)
  %4 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %incdec.ptr = getelementptr inbounds nuw double, ptr %4, i32 1
  store ptr %incdec.ptr, ptr %__first.addr, align 8, !tbaa !219
  %call2 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt20back_insert_iteratorISt6vectorIdSaIdEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %__result)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i64, ptr %__n, align 8, !tbaa !54
  %dec = add nsw i64 %5, -1
  store i64 %dec, ptr %__n, align 8, !tbaa !54
  br label %for.cond, !llvm.loop !433

for.end:                                          ; preds = %for.cond.cleanup
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %retval, ptr align 8 %__result, i64 8, i1 false)
  %coerce.dive3 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %retval, i32 0, i32 0
  %6 = load ptr, ptr %coerce.dive3, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt20back_insert_iteratorISt6vectorIdSaIdEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !431
  %this1 = load ptr, ptr %this.addr, align 8
  ret ptr %this1
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt20back_insert_iteratorISt6vectorIdSaIdEEEaSERKd(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(8) %__value) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__value.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !431
  store ptr %__value, ptr %__value.addr, align 8, !tbaa !219
  %this1 = load ptr, ptr %this.addr, align 8
  %container = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %container, align 8, !tbaa !434
  %1 = load ptr, ptr %__value.addr, align 8, !tbaa !219
  call void @_ZNSt6vectorIdSaIdEE9push_backERKd(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(8) %1)
  ret ptr %this1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt20back_insert_iteratorISt6vectorIdSaIdEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !431
  %this1 = load ptr, ptr %this.addr, align 8
  ret ptr %this1
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE9push_backERKd(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 8 dereferenceable(8) %__x) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__x.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.87", align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !219
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  %0 = load ptr, ptr %_M_finish, align 8, !tbaa !204
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 2
  %1 = load ptr, ptr %_M_end_of_storage, align 8, !tbaa !211
  %cmp = icmp ne ptr %0, %1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %_M_impl3 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_impl4 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish5 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl4, i32 0, i32 1
  %2 = load ptr, ptr %_M_finish5, align 8, !tbaa !204
  %3 = load ptr, ptr %__x.addr, align 8, !tbaa !219
  call void @_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl3, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(8) %3) #6
  %_M_impl6 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish7 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl6, i32 0, i32 1
  %4 = load ptr, ptr %_M_finish7, align 8, !tbaa !204
  %incdec.ptr = getelementptr inbounds nuw double, ptr %4, i32 1
  store ptr %incdec.ptr, ptr %_M_finish7, align 8, !tbaa !204
  br label %if.end

if.else:                                          ; preds = %entry
  %call = call ptr @_ZNSt6vectorIdSaIdEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.87", ptr %agg.tmp, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  %5 = load ptr, ptr %__x.addr, align 8, !tbaa !219
  %coerce.dive8 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.87", ptr %agg.tmp, i32 0, i32 0
  %6 = load ptr, ptr %coerce.dive8, align 8
  call void @_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr %6, ptr noundef nonnull align 8 dereferenceable(8) %5)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %__a, ptr noundef %__p, ptr noundef nonnull align 8 dereferenceable(8) %__args) #2 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !220
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !219
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !220
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !219
  %2 = load ptr, ptr %__args.addr, align 8, !tbaa !219
  call void @_ZNSt15__new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2) #6
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr %__position.coerce, ptr noundef nonnull align 8 dereferenceable(8) %__args) #0 comdat align 2 {
entry:
  %__position = alloca %"class.__gnu_cxx::__normal_iterator.87", align 8
  %this.addr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  %__len = alloca i64, align 8
  %__old_start = alloca ptr, align 8
  %__old_finish = alloca ptr, align 8
  %__elems_before = alloca i64, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator.87", align 8
  %__new_start = alloca ptr, align 8
  %__new_finish = alloca ptr, align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.87", ptr %__position, i32 0, i32 0
  store ptr %__position.coerce, ptr %coerce.dive, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !219
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #6
  %call = call noundef i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef 1, ptr noundef @.str.15)
  store i64 %call, ptr %__len, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__old_start) #6
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !203
  store ptr %0, ptr %__old_start, align 8, !tbaa !219
  call void @llvm.lifetime.start.p0(i64 8, ptr %__old_finish) #6
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 1
  %1 = load ptr, ptr %_M_finish, align 8, !tbaa !204
  store ptr %1, ptr %__old_finish, align 8, !tbaa !219
  call void @llvm.lifetime.start.p0(i64 8, ptr %__elems_before) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %call3 = call ptr @_ZNSt6vectorIdSaIdEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.87", ptr %ref.tmp, i32 0, i32 0
  store ptr %call3, ptr %coerce.dive4, align 8
  %call5 = call noundef i64 @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(ptr noundef nonnull align 8 dereferenceable(8) %__position, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  store i64 %call5, ptr %__elems_before, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__new_start) #6
  %2 = load i64, ptr %__len, align 8, !tbaa !54
  %call6 = call noundef ptr @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %2)
  store ptr %call6, ptr %__new_start, align 8, !tbaa !219
  call void @llvm.lifetime.start.p0(i64 8, ptr %__new_finish) #6
  %3 = load ptr, ptr %__new_start, align 8, !tbaa !219
  store ptr %3, ptr %__new_finish, align 8, !tbaa !219
  %_M_impl7 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %4 = load ptr, ptr %__new_start, align 8, !tbaa !219
  %5 = load i64, ptr %__elems_before, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw double, ptr %4, i64 %5
  %6 = load ptr, ptr %__args.addr, align 8, !tbaa !219
  call void @_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl7, ptr noundef %add.ptr, ptr noundef nonnull align 8 dereferenceable(8) %6) #6
  store ptr null, ptr %__new_finish, align 8, !tbaa !219
  %7 = load ptr, ptr %__old_start, align 8, !tbaa !219
  %call8 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %__position) #6
  %8 = load ptr, ptr %call8, align 8, !tbaa !219
  %9 = load ptr, ptr %__new_start, align 8, !tbaa !219
  %call9 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call10 = call noundef ptr @_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_(ptr noundef %7, ptr noundef %8, ptr noundef %9, ptr noundef nonnull align 1 dereferenceable(1) %call9) #6
  store ptr %call10, ptr %__new_finish, align 8, !tbaa !219
  %10 = load ptr, ptr %__new_finish, align 8, !tbaa !219
  %incdec.ptr = getelementptr inbounds nuw double, ptr %10, i32 1
  store ptr %incdec.ptr, ptr %__new_finish, align 8, !tbaa !219
  %call11 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %__position) #6
  %11 = load ptr, ptr %call11, align 8, !tbaa !219
  %12 = load ptr, ptr %__old_finish, align 8, !tbaa !219
  %13 = load ptr, ptr %__new_finish, align 8, !tbaa !219
  %call12 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call13 = call noundef ptr @_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_(ptr noundef %11, ptr noundef %12, ptr noundef %13, ptr noundef nonnull align 1 dereferenceable(1) %call12) #6
  store ptr %call13, ptr %__new_finish, align 8, !tbaa !219
  %14 = load ptr, ptr %__old_start, align 8, !tbaa !219
  %_M_impl14 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl14, i32 0, i32 2
  %15 = load ptr, ptr %_M_end_of_storage, align 8, !tbaa !211
  %16 = load ptr, ptr %__old_start, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %15 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %16 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  call void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %14, i64 noundef %sub.ptr.div)
  %17 = load ptr, ptr %__new_start, align 8, !tbaa !219
  %_M_impl15 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start16 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl15, i32 0, i32 0
  store ptr %17, ptr %_M_start16, align 8, !tbaa !203
  %18 = load ptr, ptr %__new_finish, align 8, !tbaa !219
  %_M_impl17 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish18 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl17, i32 0, i32 1
  store ptr %18, ptr %_M_finish18, align 8, !tbaa !204
  %19 = load ptr, ptr %__new_start, align 8, !tbaa !219
  %20 = load i64, ptr %__len, align 8, !tbaa !54
  %add.ptr19 = getelementptr inbounds nuw double, ptr %19, i64 %20
  %_M_impl20 = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_end_of_storage21 = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl20, i32 0, i32 2
  store ptr %add.ptr19, ptr %_M_end_of_storage21, align 8, !tbaa !211
  call void @llvm.lifetime.end.p0(i64 8, ptr %__new_finish) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__new_start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__elems_before) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__old_finish) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__old_start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNSt6vectorIdSaIdEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.87", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_finish) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.87", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__p, ptr noundef nonnull align 8 dereferenceable(8) %__args) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !212
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !219
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !219
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__args.addr, align 8, !tbaa !219
  %2 = load double, ptr %1, align 8, !tbaa !16
  store double %2, ptr %0, align 8, !tbaa !16
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(ptr noundef nonnull align 8 dereferenceable(8) %__lhs, ptr noundef nonnull align 8 dereferenceable(8) %__rhs) #1 comdat {
entry:
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !436
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !436
  %0 = load ptr, ptr %__lhs.addr, align 8, !tbaa !436
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  %1 = load ptr, ptr %call, align 8, !tbaa !219
  %2 = load ptr, ptr %__rhs.addr, align 8, !tbaa !436
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %2) #6
  %3 = load ptr, ptr %call1, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNSt6vectorIdSaIdEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.87", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_start) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.87", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !436
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.87", ptr %this1, i32 0, i32 0
  ret ptr %_M_current
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(8) %__i) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__i.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !436
  store ptr %__i, ptr %__i.addr, align 8, !tbaa !222
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.87", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__i.addr, align 8, !tbaa !222
  %1 = load ptr, ptr %0, align 8, !tbaa !219
  store ptr %1, ptr %_M_current, align 8, !tbaa !438
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZN3xtl3mpl9static_ifILb1EZN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEE5beginILS9_1EEENSt11conditionalIXeqT_L_ZNSH_13static_layoutEEEPdNS2_9xiteratorINS2_8xstepperISG_EEPNS2_13sequence_viewISC_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_ZNSI_ILS9_1EEEST_vEUlSU_E0_EEDcRKT0_RKT1_(ptr noundef nonnull align 8 dereferenceable(8) %tf, ptr noundef nonnull align 8 dereferenceable(8) %ff) #0 comdat {
entry:
  %tf.addr = alloca ptr, align 8
  %ff.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.std::integral_constant", align 1
  store ptr %tf, ptr %tf.addr, align 8, !tbaa !225
  store ptr %ff, ptr %ff.addr, align 8, !tbaa !225
  %0 = load ptr, ptr %tf.addr, align 8, !tbaa !225
  %1 = load ptr, ptr %ff.addr, align 8, !tbaa !225
  %call = call noundef ptr @_ZN3xtl3mpl9static_ifIZN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEE5beginILS9_1EEENSt11conditionalIXeqT_L_ZNSH_13static_layoutEEEPdNS2_9xiteratorINS2_8xstepperISG_EEPNS2_13sequence_viewISC_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_ZNSI_ILS9_1EEEST_vEUlSU_E0_EEDcSt17integral_constantIbLb1EERKSU_RKT0_(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef nonnull align 8 dereferenceable(8) %1)
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZN3xtl3mpl9static_ifIZN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEE5beginILS9_1EEENSt11conditionalIXeqT_L_ZNSH_13static_layoutEEEPdNS2_9xiteratorINS2_8xstepperISG_EEPNS2_13sequence_viewISC_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_ZNSI_ILS9_1EEEST_vEUlSU_E0_EEDcSt17integral_constantIbLb1EERKSU_RKT0_(ptr noundef nonnull align 8 dereferenceable(8) %tf, ptr noundef nonnull align 8 dereferenceable(8) %0) #0 comdat {
entry:
  %1 = alloca %"struct.std::integral_constant", align 1
  %tf.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.xtl::identity", align 1
  store ptr %tf, ptr %tf.addr, align 8, !tbaa !225
  store ptr %0, ptr %.addr, align 8, !tbaa !225
  %2 = load ptr, ptr %tf.addr, align 8, !tbaa !225
  %call = call noundef ptr @_ZZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE5beginILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEvENKUlT_E_clIN3xtl8identityEEEDaSR_(ptr noundef nonnull align 8 dereferenceable(8) %2)
  ret ptr %call
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE5beginILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEvENKUlT_E_clIN3xtl8identityEEEDaSR_(ptr noundef nonnull align 8 dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %self = alloca %"struct.xtl::identity", align 1
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !225
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = getelementptr inbounds nuw %class.anon, ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %0, align 8, !tbaa !272
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNK3xtl8identityclIRN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEEEEEOT_SK_(ptr noundef nonnull align 1 dereferenceable(1) %self, ptr noundef nonnull align 1 dereferenceable(1) %1)
  %call2 = call noundef nonnull align 8 dereferenceable(65) ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %call)
  %call3 = call noundef ptr @_ZN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE13storage_beginISA_EENSt9enable_ifIXaasr18has_data_interfaceIT_EE5valueL_ZNSC_15is_strided_viewEEEPdE4typeEv(ptr noundef nonnull align 8 dereferenceable(65) %call2)
  ret ptr %call3
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 1 dereferenceable(1) ptr @_ZNK3xtl8identityclIRN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEEEEEOT_SK_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 1 dereferenceable(1) %x) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !440
  store ptr %x, ptr %x.addr, align 8, !tbaa !270
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %x.addr, align 8, !tbaa !270
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(65) ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !270
  %this1 = load ptr, ptr %this.addr, align 8
  ret ptr %this1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE13storage_beginISA_EENSt9enable_ifIXaasr18has_data_interfaceIT_EE5valueL_ZNSC_15is_strided_viewEEEPdE4typeEv(ptr noundef nonnull align 8 dereferenceable(65) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !387
  %this1 = load ptr, ptr %this.addr, align 8
  %m_e = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %m_e, align 8, !tbaa !393
  %call = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE7storageEv(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  %call2 = call noundef ptr @_ZN2xt7uvectorIdSaIdEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %call) #6
  %call3 = call noundef i64 @_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE11data_offsetISA_EENSt9enable_ifIXaasr18has_data_interfaceIT_EE5valueL_ZNSC_15is_strided_viewEEEmE4typeEv(ptr noundef nonnull align 8 dereferenceable(65) %this1) #6
  %add.ptr = getelementptr inbounds nuw double, ptr %call2, i64 %call3
  ret ptr %add.ptr
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZN2xt7uvectorIdSaIdEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !331
  %this1 = load ptr, ptr %this.addr, align 8
  %p_begin = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %p_begin, align 8, !tbaa !333
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE11data_offsetISA_EENSt9enable_ifIXaasr18has_data_interfaceIT_EE5valueL_ZNSC_15is_strided_viewEEEmE4typeEv(ptr noundef nonnull align 8 dereferenceable(65) %this) #1 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.std::integral_constant", align 1
  store ptr %this, ptr %this.addr, align 8, !tbaa !387
  %this1 = load ptr, ptr %this.addr, align 8
  %m_strides_computed = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 8
  %0 = load i8, ptr %m_strides_computed, align 8, !tbaa !406, !range !89, !noundef !90
  %loadedv = trunc i8 %0 to i1
  br i1 %loadedv, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  invoke void @_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE15compute_stridesESt17integral_constantIbLb1EE(ptr noundef nonnull align 8 dereferenceable(65) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %m_data_offset = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 7
  %1 = load i64, ptr %m_data_offset, align 8, !tbaa !405
  ret i64 %1

terminate.lpad:                                   ; preds = %if.then
  %2 = landingpad { ptr, i32 }
          catch ptr null
  %3 = extractvalue { ptr, i32 } %2, 0
  call void @__clang_call_terminate(ptr %3) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE15compute_stridesESt17integral_constantIbLb1EE(ptr noundef nonnull align 8 dereferenceable(65) %this) #1 comdat align 2 {
entry:
  %0 = alloca %"struct.std::integral_constant", align 1
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !387
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZN3xtl3mpl9static_ifILb1EZN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEE3endILS9_1EEENSt11conditionalIXeqT_L_ZNSH_13static_layoutEEEPdNS2_9xiteratorINS2_8xstepperISG_EEPNS2_13sequence_viewISC_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_ZNSI_ILS9_1EEEST_vEUlSU_E0_EEDcRKT0_RKT1_(ptr noundef nonnull align 8 dereferenceable(8) %tf, ptr noundef nonnull align 8 dereferenceable(8) %ff) #0 comdat {
entry:
  %tf.addr = alloca ptr, align 8
  %ff.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.std::integral_constant", align 1
  store ptr %tf, ptr %tf.addr, align 8, !tbaa !225
  store ptr %ff, ptr %ff.addr, align 8, !tbaa !225
  %0 = load ptr, ptr %tf.addr, align 8, !tbaa !225
  %1 = load ptr, ptr %ff.addr, align 8, !tbaa !225
  %call = call noundef ptr @_ZN3xtl3mpl9static_ifIZN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEE3endILS9_1EEENSt11conditionalIXeqT_L_ZNSH_13static_layoutEEEPdNS2_9xiteratorINS2_8xstepperISG_EEPNS2_13sequence_viewISC_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_ZNSI_ILS9_1EEEST_vEUlSU_E0_EEDcSt17integral_constantIbLb1EERKSU_RKT0_(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef nonnull align 8 dereferenceable(8) %1)
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZN3xtl3mpl9static_ifIZN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEE3endILS9_1EEENSt11conditionalIXeqT_L_ZNSH_13static_layoutEEEPdNS2_9xiteratorINS2_8xstepperISG_EEPNS2_13sequence_viewISC_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_ZNSI_ILS9_1EEEST_vEUlSU_E0_EEDcSt17integral_constantIbLb1EERKSU_RKT0_(ptr noundef nonnull align 8 dereferenceable(8) %tf, ptr noundef nonnull align 8 dereferenceable(8) %0) #0 comdat {
entry:
  %1 = alloca %"struct.std::integral_constant", align 1
  %tf.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.xtl::identity", align 1
  store ptr %tf, ptr %tf.addr, align 8, !tbaa !225
  store ptr %0, ptr %.addr, align 8, !tbaa !225
  %2 = load ptr, ptr %tf.addr, align 8, !tbaa !225
  %call = call noundef ptr @_ZZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE3endILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEvENKUlT_E_clIN3xtl8identityEEEDaSR_(ptr noundef nonnull align 8 dereferenceable(8) %2)
  ret ptr %call
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE3endILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEvENKUlT_E_clIN3xtl8identityEEEDaSR_(ptr noundef nonnull align 8 dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %self = alloca %"struct.xtl::identity", align 1
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !225
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = getelementptr inbounds nuw %class.anon.89, ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %0, align 8, !tbaa !276
  %call = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNK3xtl8identityclIRN2xt20xcontiguous_iterableINS2_5xviewIRNS2_16xarray_containerINS2_7uvectorIdSaIdEEELNS2_11layout_typeE1ENS2_7svectorImLm4ESaImELb1EEENS2_22xtensor_expression_tagEEEJiEEEEEEEOT_SK_(ptr noundef nonnull align 1 dereferenceable(1) %self, ptr noundef nonnull align 1 dereferenceable(1) %1)
  %call2 = call noundef nonnull align 8 dereferenceable(65) ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %call)
  %call3 = call noundef ptr @_ZN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE11storage_endISA_EENSt9enable_ifIXaasr18has_data_interfaceIT_EE5valueL_ZNSC_15is_strided_viewEEEPdE4typeEv(ptr noundef nonnull align 8 dereferenceable(65) %call2)
  ret ptr %call3
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE11storage_endISA_EENSt9enable_ifIXaasr18has_data_interfaceIT_EE5valueL_ZNSC_15is_strided_viewEEEPdE4typeEv(ptr noundef nonnull align 8 dereferenceable(65) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !387
  %this1 = load ptr, ptr %this.addr, align 8
  %m_e = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %m_e, align 8, !tbaa !393
  %call = call noundef nonnull align 8 dereferenceable(24) ptr @_ZN2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEE7storageEv(ptr noundef nonnull align 1 dereferenceable(1) %0) #6
  %call2 = call noundef ptr @_ZN2xt7uvectorIdSaIdEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %call) #6
  %call3 = call noundef i64 @_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE11data_offsetISA_EENSt9enable_ifIXaasr18has_data_interfaceIT_EE5valueL_ZNSC_15is_strided_viewEEEmE4typeEv(ptr noundef nonnull align 8 dereferenceable(65) %this1) #6
  %add.ptr = getelementptr inbounds nuw double, ptr %call2, i64 %call3
  %call4 = call noundef i64 @_ZNK2xt17xconst_accessibleINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE4sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %add.ptr5 = getelementptr inbounds nuw double, ptr %add.ptr, i64 %call4
  ret ptr %add.ptr5
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNK2xt17xconst_accessibleINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE4sizeEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !442
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 8 dereferenceable(65) ptr @_ZNK2xt17xconst_accessibleINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  %call2 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE5shapeEv(ptr noundef nonnull align 8 dereferenceable(65) %call) #6
  %call3 = call noundef i64 @_ZN2xt12compute_sizeINS_13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EEEEEmRKT_(ptr noundef nonnull align 8 dereferenceable(8) %call2) #6
  ret i64 %call3
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZN2xt12compute_sizeINS_13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EEEEEmRKT_(ptr noundef nonnull align 8 dereferenceable(8) %shape) #1 comdat personality ptr @__gxx_personality_v0 {
entry:
  %shape.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.std::integral_constant.91", align 1
  %ref.tmp = alloca %"struct.xtl::is_signed.92", align 1
  store ptr %shape, ptr %shape.addr, align 8, !tbaa !427
  %0 = load ptr, ptr %shape.addr, align 8, !tbaa !427
  call void @llvm.lifetime.start.p0(i64 1, ptr %ref.tmp) #6
  %call = invoke noundef i64 @_ZN2xt6detail17compute_size_implINS_13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EEEEEmRKT_St17integral_constantIbLb0EE(ptr noundef nonnull align 8 dereferenceable(8) %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  call void @llvm.lifetime.end.p0(i64 1, ptr %ref.tmp) #6
  ret i64 %call

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  call void @__clang_call_terminate(ptr %2) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(65) ptr @_ZNK2xt17xconst_accessibleINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE12derived_castEv(ptr noundef nonnull align 1 dereferenceable(1) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !442
  %this1 = load ptr, ptr %this.addr, align 8
  ret ptr %this1
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEE5shapeEv(ptr noundef nonnull align 8 dereferenceable(65) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !387
  %this1 = load ptr, ptr %this.addr, align 8
  %m_shape = getelementptr inbounds nuw %"class.xt::xview", ptr %this1, i32 0, i32 4
  ret ptr %m_shape
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef i64 @_ZN2xt6detail17compute_size_implINS_13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EEEEEmRKT_St17integral_constantIbLb0EE(ptr noundef nonnull align 8 dereferenceable(8) %shape) #8 comdat {
entry:
  %0 = alloca %"struct.std::integral_constant.91", align 1
  %shape.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.std::multiplies", align 1
  store ptr %shape, ptr %shape.addr, align 8, !tbaa !427
  %1 = load ptr, ptr %shape.addr, align 8, !tbaa !427
  %call = call noundef ptr @_ZNK2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EE6cbeginEv(ptr noundef nonnull align 8 dereferenceable(8) %1)
  %2 = load ptr, ptr %shape.addr, align 8, !tbaa !427
  %call1 = call noundef ptr @_ZNK2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EE4cendEv(ptr noundef nonnull align 8 dereferenceable(8) %2)
  %call2 = call noundef i64 @_ZSt10accumulateIPKmmSt10multipliesImEET0_T_S5_S4_T1_(ptr noundef %call, ptr noundef %call1, i64 noundef 1)
  ret i64 %call2
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef i64 @_ZSt10accumulateIPKmmSt10multipliesImEET0_T_S5_S4_T1_(ptr noundef %__first, ptr noundef %__last, i64 noundef %__init) #8 comdat {
entry:
  %__binary_op = alloca %"struct.std::multiplies", align 1
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__init.addr = alloca i64, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !68
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !68
  store i64 %__init, ptr %__init.addr, align 8, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !68
  %cmp = icmp ne ptr %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %call = call noundef i64 @_ZNKSt10multipliesImEclERKmS2_(ptr noundef nonnull align 1 dereferenceable(1) %__binary_op, ptr noundef nonnull align 8 dereferenceable(8) %__init.addr, ptr noundef nonnull align 8 dereferenceable(8) %2)
  store i64 %call, ptr %__init.addr, align 8, !tbaa !54
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load ptr, ptr %__first.addr, align 8, !tbaa !68
  %incdec.ptr = getelementptr inbounds nuw i64, ptr %3, i32 1
  store ptr %incdec.ptr, ptr %__first.addr, align 8, !tbaa !68
  br label %for.cond, !llvm.loop !444

for.end:                                          ; preds = %for.cond
  %4 = load i64, ptr %__init.addr, align 8, !tbaa !54
  ret i64 %4
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNK2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EE6cbeginEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !427
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef ptr @_ZNK2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EE5beginEv(ptr noundef nonnull align 8 dereferenceable(8) %this1)
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNK2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EE4cendEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !427
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef ptr @_ZNK2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EE3endEv(ptr noundef nonnull align 8 dereferenceable(8) %this1)
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZNKSt10multipliesImEclERKmS2_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef nonnull align 8 dereferenceable(8) %__x, ptr noundef nonnull align 8 dereferenceable(8) %__y) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__x.addr = alloca ptr, align 8
  %__y.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !445
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !68
  store ptr %__y, ptr %__y.addr, align 8, !tbaa !68
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__x.addr, align 8, !tbaa !68
  %1 = load i64, ptr %0, align 8, !tbaa !54
  %2 = load ptr, ptr %__y.addr, align 8, !tbaa !68
  %3 = load i64, ptr %2, align 8, !tbaa !54
  %mul = mul i64 %1, %3
  ret i64 %mul
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNK2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EE5beginEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !427
  %this1 = load ptr, ptr %this.addr, align 8
  %m_sequence = getelementptr inbounds nuw %"class.xt::sequence_view", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %m_sequence, align 8, !tbaa !447
  %call = call noundef ptr @_ZNK2xt7svectorImLm4ESaImELb1EE5beginEv(ptr noundef nonnull align 8 dereferenceable(64) %0)
  %add.ptr = getelementptr inbounds i64, ptr %call, i64 1
  ret ptr %add.ptr
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNK2xt7svectorImLm4ESaImELb1EE5beginEv(ptr noundef nonnull align 8 dereferenceable(64) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  %this1 = load ptr, ptr %this.addr, align 8
  %m_begin = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %m_begin, align 8, !tbaa !345
  ret ptr %0
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZNK2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EE3endEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !427
  %this1 = load ptr, ptr %this.addr, align 8
  %m_sequence = getelementptr inbounds nuw %"class.xt::sequence_view", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %m_sequence, align 8, !tbaa !447
  %call = call noundef ptr @_ZNK2xt7svectorImLm4ESaImELb1EE3endEv(ptr noundef nonnull align 8 dereferenceable(64) %0)
  ret ptr %call
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNK2xt7svectorImLm4ESaImELb1EE3endEv(ptr noundef nonnull align 8 dereferenceable(64) %this) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !339
  %this1 = load ptr, ptr %this.addr, align 8
  %m_end = getelementptr inbounds nuw %"class.xt::svector", ptr %this1, i32 0, i32 2
  %0 = load ptr, ptr %m_end, align 8, !tbaa !349
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt20back_insert_iteratorISt6vectorIdSaIdEEEC2ERS2_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(24) %__x) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__x.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !431
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !201
  %this1 = load ptr, ptr %this.addr, align 8
  %container = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__x.addr, align 8, !tbaa !201
  store ptr %0, ptr %container, align 8, !tbaa !434
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12__shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEELN9__gnu_cxx12_Lock_policyE2EED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !419
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_refcount = getelementptr inbounds nuw %"class.std::__shared_ptr.68", ptr %this1, i32 0, i32 1
  call void @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev(ptr noundef nonnull align 8 dereferenceable(8) %_M_refcount) #6
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN2xt7uvectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #1 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !331
  %this1 = load ptr, ptr %this.addr, align 8
  %p_begin = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 1
  %0 = load ptr, ptr %p_begin, align 8, !tbaa !333
  %call = call noundef i64 @_ZNK2xt7uvectorIdSaIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  invoke void @_ZN2xt6detail23safe_destroy_deallocateISaIdEEEvRT_NSt16allocator_traitsIS3_E7pointerENS6_9size_typeE(ptr noundef nonnull align 1 dereferenceable(1) %this1, ptr noundef %0, i64 noundef %call)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %p_begin2 = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 1
  store ptr null, ptr %p_begin2, align 8, !tbaa !333
  %p_end = getelementptr inbounds nuw %"class.xt::uvector", ptr %this1, i32 0, i32 2
  store ptr null, ptr %p_end, align 8, !tbaa !336
  call void @_ZNSt15__new_allocatorIdED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this1) #6
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  call void @__clang_call_terminate(ptr %2) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !284
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !263
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 2
  %1 = load ptr, ptr %_M_end_of_storage, align 8, !tbaa !292
  %_M_impl3 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start4 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl3, i32 0, i32 0
  %2 = load ptr, ptr %_M_start4, align 8, !tbaa !263
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %0, i64 noundef %sub.ptr.div)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  call void @_ZNSt15__new_allocatorIiED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %_M_impl5) #6
  ret void

terminate.lpad:                                   ; preds = %entry
  %3 = landingpad { ptr, i32 }
          catch ptr null
  %4 = extractvalue { ptr, i32 } %3, 0
  call void @__clang_call_terminate(ptr %4) #25
  unreachable
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIiED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !293
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt8_DestroyIPN6openmc13InterpolationES1_EvT_S3_RSaIT0_E(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 1 dereferenceable(1) %0) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !225
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !225
  store ptr %0, ptr %.addr, align 8, !tbaa !299
  %1 = load ptr, ptr %__first.addr, align 8, !tbaa !225
  %2 = load ptr, ptr %__last.addr, align 8, !tbaa !225
  call void @_ZSt8_DestroyIPN6openmc13InterpolationEEvT_S3_(ptr noundef %1, ptr noundef %2)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !295
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !282
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 2
  %1 = load ptr, ptr %_M_end_of_storage, align 8, !tbaa !303
  %_M_impl3 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_start4 = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl3, i32 0, i32 0
  %2 = load ptr, ptr %_M_start4, align 8, !tbaa !282
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  invoke void @_ZNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE13_M_deallocateEPS1_m(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %0, i64 noundef %sub.ptr.div)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  call void @_ZNSt15__new_allocatorIN6openmc13InterpolationEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %_M_impl5) #6
  ret void

terminate.lpad:                                   ; preds = %entry
  %3 = landingpad { ptr, i32 }
          catch ptr null
  %4 = extractvalue { ptr, i32 } %3, 0
  call void @__clang_call_terminate(ptr %4) #25
  unreachable
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt8_DestroyIPN6openmc13InterpolationEEvT_S3_(ptr noundef %__first, ptr noundef %__last) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !225
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !225
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !225
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !225
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN6openmc13InterpolationEEEvT_S5_(ptr noundef %0, ptr noundef %1)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN6openmc13InterpolationEEEvT_S5_(ptr noundef %0, ptr noundef %1) #2 comdat align 2 {
entry:
  %.addr = alloca ptr, align 8
  %.addr1 = alloca ptr, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !225
  store ptr %1, ptr %.addr1, align 8, !tbaa !225
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIN6openmc13InterpolationEED2Ev(ptr noundef nonnull align 1 dereferenceable(1) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !304
  %this1 = load ptr, ptr %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNKSt6vectorIdSaIdEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !201
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.44", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !203
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw double, ptr %0, i64 %1
  ret ptr %add.ptr
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef i64 @_ZN6openmc17lower_bound_indexIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEdEENSt15iterator_traitsIT_E15difference_typeESA_SA_RKT0_(ptr %first.coerce, ptr %last.coerce, ptr noundef nonnull align 8 dereferenceable(8) %value) #0 comdat {
entry:
  %retval = alloca i64, align 8
  %first = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %last = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %value.addr = alloca ptr, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %first, i32 0, i32 0
  store ptr %first.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %last, i32 0, i32 0
  store ptr %last.coerce, ptr %coerce.dive1, align 8
  store ptr %value, ptr %value.addr, align 8, !tbaa !219
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %first) #6
  %0 = load double, ptr %call, align 8, !tbaa !16
  %1 = load ptr, ptr %value.addr, align 8, !tbaa !219
  %2 = load double, ptr %1, align 8, !tbaa !16
  %cmp = fcmp oeq double %0, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i64 0, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %first, i64 8, i1 false), !tbaa.struct !235
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp2, ptr align 8 %last, i64 8, i1 false), !tbaa.struct !235
  %3 = load ptr, ptr %value.addr, align 8, !tbaa !219
  %coerce.dive3 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp, i32 0, i32 0
  %4 = load ptr, ptr %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp2, i32 0, i32 0
  %5 = load ptr, ptr %coerce.dive4, align 8
  %call5 = call ptr @_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEdET_S8_S8_RKT0_(ptr %4, ptr %5, ptr noundef nonnull align 8 dereferenceable(8) %3)
  %coerce.dive6 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %ref.tmp, i32 0, i32 0
  store ptr %call5, ptr %coerce.dive6, align 8
  %call7 = call noundef i64 @_ZN9__gnu_cxxmiIPKdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp, ptr noundef nonnull align 8 dereferenceable(8) %first) #6
  %sub = sub nsw i64 %call7, 1
  store i64 %sub, ptr %retval, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i64, ptr %retval, align 8
  ret i64 %6
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EEixEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !282
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i32, ptr %0, i64 %1
  ret ptr %add.ptr
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZNKSt6vectorIiSaIiEEixEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !263
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i32, ptr %0, i64 %1
  ret ptr %add.ptr
}

; Function Attrs: nounwind
declare double @log(double noundef) #5

; Function Attrs: nounwind
declare double @exp(double noundef) #5

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZN9__gnu_cxxmiIPKdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(ptr noundef nonnull align 8 dereferenceable(8) %__lhs, ptr noundef nonnull align 8 dereferenceable(8) %__rhs) #1 comdat {
entry:
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !236
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !236
  %0 = load ptr, ptr %__lhs.addr, align 8, !tbaa !236
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  %1 = load ptr, ptr %call, align 8, !tbaa !219
  %2 = load ptr, ptr %__rhs.addr, align 8, !tbaa !236
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %2) #6
  %3 = load ptr, ptr %call1, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr ptr @_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEdET_S8_S8_RKT0_(ptr %__first.coerce, ptr %__last.coerce, ptr noundef nonnull align 8 dereferenceable(8) %__val) #8 comdat {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__first = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__val.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp3 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %undef.agg.tmp = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %__first, i32 0, i32 0
  store ptr %__first.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %__last, i32 0, i32 0
  store ptr %__last.coerce, ptr %coerce.dive1, align 8
  store ptr %__val, ptr %__val.addr, align 8, !tbaa !219
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %__first, i64 8, i1 false), !tbaa.struct !235
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp2, ptr align 8 %__last, i64 8, i1 false), !tbaa.struct !235
  %0 = load ptr, ptr %__val.addr, align 8, !tbaa !219
  call void @_ZN9__gnu_cxx5__ops15__iter_less_valEv()
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive4, align 8
  %coerce.dive5 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp2, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive5, align 8
  %call = call ptr @_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEdNS0_5__ops14_Iter_less_valEET_SA_SA_RKT0_T1_(ptr %1, ptr %2, ptr noundef nonnull align 8 dereferenceable(8) %0)
  %coerce.dive6 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %retval, i32 0, i32 0
  store ptr %call, ptr %coerce.dive6, align 8
  %coerce.dive7 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %retval, i32 0, i32 0
  %3 = load ptr, ptr %coerce.dive7, align 8
  ret ptr %3
}

; Function Attrs: mustprogress uwtable
define linkonce_odr ptr @_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEdNS0_5__ops14_Iter_less_valEET_SA_SA_RKT0_T1_(ptr %__first.coerce, ptr %__last.coerce, ptr noundef nonnull align 8 dereferenceable(8) %__val) #0 comdat {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__first = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %__val.addr = alloca ptr, align 8
  %__len = alloca i64, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__half = alloca i64, align 8
  %__middle = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %__first, i32 0, i32 0
  store ptr %__first.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %__last, i32 0, i32 0
  store ptr %__last.coerce, ptr %coerce.dive1, align 8
  store ptr %__val, ptr %__val.addr, align 8, !tbaa !219
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %__first, i64 8, i1 false), !tbaa.struct !235
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp2, ptr align 8 %__last, i64 8, i1 false), !tbaa.struct !235
  %coerce.dive3 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp2, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive4, align 8
  %call = call noundef i64 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_(ptr %0, ptr %1)
  store i64 %call, ptr %__len, align 8, !tbaa !54
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i64, ptr %__len, align 8, !tbaa !54
  %cmp = icmp sgt i64 %2, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %__half) #6
  %3 = load i64, ptr %__len, align 8, !tbaa !54
  %shr = ashr i64 %3, 1
  store i64 %shr, ptr %__half, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__middle) #6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__middle, ptr align 8 %__first, i64 8, i1 false), !tbaa.struct !235
  %4 = load i64, ptr %__half, align 8, !tbaa !54
  call void @_ZSt7advanceIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEElEvRT_T0_(ptr noundef nonnull align 8 dereferenceable(8) %__middle, i64 noundef %4)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp5, ptr align 8 %__middle, i64 8, i1 false), !tbaa.struct !235
  %5 = load ptr, ptr %__val.addr, align 8, !tbaa !219
  %coerce.dive6 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp5, i32 0, i32 0
  %6 = load ptr, ptr %coerce.dive6, align 8
  %call7 = call noundef zeroext i1 @_ZNK9__gnu_cxx5__ops14_Iter_less_valclINS_17__normal_iteratorIPKdSt6vectorIdSaIdEEEES4_EEbT_RT0_(ptr noundef nonnull align 1 dereferenceable(1) %__comp, ptr %6, ptr noundef nonnull align 8 dereferenceable(8) %5)
  br i1 %call7, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__first, ptr align 8 %__middle, i64 8, i1 false), !tbaa.struct !235
  %call8 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %__first) #6
  %7 = load i64, ptr %__len, align 8, !tbaa !54
  %8 = load i64, ptr %__half, align 8, !tbaa !54
  %sub = sub nsw i64 %7, %8
  %sub9 = sub nsw i64 %sub, 1
  store i64 %sub9, ptr %__len, align 8, !tbaa !54
  br label %if.end

if.else:                                          ; preds = %while.body
  %9 = load i64, ptr %__half, align 8, !tbaa !54
  store i64 %9, ptr %__len, align 8, !tbaa !54
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %__middle) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__half) #6
  br label %while.cond, !llvm.loop !448

while.end:                                        ; preds = %while.cond
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %retval, ptr align 8 %__first, i64 8, i1 false), !tbaa.struct !235
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  %coerce.dive10 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %retval, i32 0, i32 0
  %10 = load ptr, ptr %coerce.dive10, align 8
  ret ptr %10
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_less_valEv() #1 comdat {
entry:
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef i64 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_(ptr %__first.coerce, ptr %__last.coerce) #8 comdat {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp3 = alloca %"struct.std::random_access_iterator_tag", align 1
  %undef.agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %__first, i32 0, i32 0
  store ptr %__first.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %__last, i32 0, i32 0
  store ptr %__last.coerce, ptr %coerce.dive1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %__first, i64 8, i1 false), !tbaa.struct !235
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp2, ptr align 8 %__last, i64 8, i1 false), !tbaa.struct !235
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_(ptr noundef nonnull align 8 dereferenceable(8) %__first)
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive4, align 8
  %coerce.dive5 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %agg.tmp2, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive5, align 8
  %call = call noundef i64 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag(ptr %0, ptr %1)
  ret i64 %call
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt7advanceIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEElEvRT_T0_(ptr noundef nonnull align 8 dereferenceable(8) %__i, i64 noundef %__n) #8 comdat {
entry:
  %__i.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__d = alloca i64, align 8
  %agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  %undef.agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store ptr %__i, ptr %__i.addr, align 8, !tbaa !236
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__d) #6
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  store i64 %0, ptr %__d, align 8, !tbaa !54
  %1 = load ptr, ptr %__i.addr, align 8, !tbaa !236
  %2 = load i64, ptr %__d, align 8, !tbaa !54
  %3 = load ptr, ptr %__i.addr, align 8, !tbaa !236
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_(ptr noundef nonnull align 8 dereferenceable(8) %3)
  call void @_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEElEvRT_T0_St26random_access_iterator_tag(ptr noundef nonnull align 8 dereferenceable(8) %1, i64 noundef %2)
  call void @llvm.lifetime.end.p0(i64 8, ptr %__d) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZNK9__gnu_cxx5__ops14_Iter_less_valclINS_17__normal_iteratorIPKdSt6vectorIdSaIdEEEES4_EEbT_RT0_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr %__it.coerce, ptr noundef nonnull align 8 dereferenceable(8) %__val) #2 comdat align 2 {
entry:
  %__it = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca ptr, align 8
  %__val.addr = alloca ptr, align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %__it, i32 0, i32 0
  store ptr %__it.coerce, ptr %coerce.dive, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !449
  store ptr %__val, ptr %__val.addr, align 8, !tbaa !219
  %this1 = load ptr, ptr %this.addr, align 8
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %__it) #6
  %0 = load double, ptr %call, align 8, !tbaa !16
  %1 = load ptr, ptr %__val.addr, align 8, !tbaa !219
  %2 = load double, ptr %1, align 8, !tbaa !16
  %cmp = fcmp olt double %0, %2
  ret i1 %cmp
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !236
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_current, align 8, !tbaa !238
  %incdec.ptr = getelementptr inbounds nuw double, ptr %0, i32 1
  store ptr %incdec.ptr, ptr %_M_current, align 8, !tbaa !238
  ret ptr %this1
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag(ptr %__first.coerce, ptr %__last.coerce) #1 comdat {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %0 = alloca %"struct.std::random_access_iterator_tag", align 1
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %__first, i32 0, i32 0
  store ptr %__first.coerce, ptr %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %__last, i32 0, i32 0
  store ptr %__last.coerce, ptr %coerce.dive1, align 8
  %call = call noundef i64 @_ZN9__gnu_cxxmiIPKdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(ptr noundef nonnull align 8 dereferenceable(8) %__last, ptr noundef nonnull align 8 dereferenceable(8) %__first) #6
  ret i64 %call
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_(ptr noundef nonnull align 8 dereferenceable(8) %0) #1 comdat {
entry:
  %.addr = alloca ptr, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !236
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEElEvRT_T0_St26random_access_iterator_tag(ptr noundef nonnull align 8 dereferenceable(8) %__i, i64 noundef %__n) #1 comdat {
entry:
  %0 = alloca %"struct.std::random_access_iterator_tag", align 1
  %__i.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__i, ptr %__i.addr, align 8, !tbaa !236
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %2 = call i1 @llvm.is.constant.i64(i64 %1)
  br i1 %2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %3 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp eq i64 %3, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %4 = load ptr, ptr %__i.addr, align 8, !tbaa !236
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %4) #6
  br label %if.end7

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %6 = call i1 @llvm.is.constant.i64(i64 %5)
  br i1 %6, label %land.lhs.true1, label %if.else5

land.lhs.true1:                                   ; preds = %if.else
  %7 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp2 = icmp eq i64 %7, -1
  br i1 %cmp2, label %if.then3, label %if.else5

if.then3:                                         ; preds = %land.lhs.true1
  %8 = load ptr, ptr %__i.addr, align 8, !tbaa !236
  %call4 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmmEv(ptr noundef nonnull align 8 dereferenceable(8) %8) #6
  br label %if.end

if.else5:                                         ; preds = %land.lhs.true1, %if.else
  %9 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %10 = load ptr, ptr %__i.addr, align 8, !tbaa !236
  %call6 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEpLEl(ptr noundef nonnull align 8 dereferenceable(8) %10, i64 noundef %9) #6
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: convergent nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.is.constant.i64(i64) #21

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEpLEl(ptr noundef nonnull align 8 dereferenceable(8) %this, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !236
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %_M_current, align 8, !tbaa !238
  %add.ptr = getelementptr inbounds double, ptr %1, i64 %0
  store ptr %add.ptr, ptr %_M_current, align 8, !tbaa !238
  ret ptr %this1
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc10DataBuffer3addIiEEvRKSt6vectorIT_SaIS3_EE(ptr noundef nonnull align 8 dereferenceable(28) %this, ptr noundef nonnull align 8 dereferenceable(24) %value) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !22
  store ptr %value, ptr %value.addr, align 8, !tbaa !260
  %this1 = load ptr, ptr %this.addr, align 8
  %mode_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 3
  %0 = load i32, ptr %mode_, align 8, !tbaa !240
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %data_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %data_, align 8, !tbaa !243
  %offset_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 2
  %2 = load i64, ptr %offset_, align 8, !tbaa !244
  %add.ptr = getelementptr inbounds nuw i8, ptr %1, i64 %2
  %3 = load ptr, ptr %value.addr, align 8, !tbaa !260
  %call = call noundef ptr @_ZNKSt6vectorIiSaIiEE4dataEv(ptr noundef nonnull align 8 dereferenceable(24) %3) #6
  %4 = load ptr, ptr %value.addr, align 8, !tbaa !260
  %call2 = call noundef i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %4) #6
  %mul = mul i64 4, %call2
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %add.ptr, ptr align 4 %call, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load ptr, ptr %value.addr, align 8, !tbaa !260
  %call3 = call noundef i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %5) #6
  %mul4 = mul i64 4, %call3
  %offset_5 = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 2
  %6 = load i64, ptr %offset_5, align 8, !tbaa !244
  %add = add i64 %6, %mul4
  store i64 %add, ptr %offset_5, align 8, !tbaa !244
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.94", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEC2ERKS4_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_start) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.94", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNKSt6vectorIN6openmc13InterpolationESaIS1_EE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.94", align 8
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !50
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base.39", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<openmc::Interpolation, std::allocator<openmc::Interpolation>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEC2ERKS4_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %_M_finish) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.94", ptr %retval, i32 0, i32 0
  %0 = load ptr, ptr %coerce.dive, align 8
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZN9__gnu_cxxneIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(ptr noundef nonnull align 8 dereferenceable(8) %__lhs, ptr noundef nonnull align 8 dereferenceable(8) %__rhs) #1 comdat {
entry:
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !451
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !451
  %0 = load ptr, ptr %__lhs.addr, align 8, !tbaa !451
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  %1 = load ptr, ptr %call, align 8, !tbaa !225
  %2 = load ptr, ptr %__rhs.addr, align 8, !tbaa !451
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %2) #6
  %3 = load ptr, ptr %call1, align 8, !tbaa !225
  %cmp = icmp ne ptr %1, %3
  ret i1 %cmp
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !451
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.94", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_current, align 8, !tbaa !453
  ret ptr %0
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE9push_backEOi(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 4 dereferenceable(4) %__x) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__x.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !245
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__x.addr, align 8, !tbaa !245
  %call = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNSt6vectorIiSaIiEE12emplace_backIJiEEERiDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef nonnull align 4 dereferenceable(4) %0)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZN9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEppEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !451
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.94", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_current, align 8, !tbaa !453
  %incdec.ptr = getelementptr inbounds nuw i32, ptr %0, i32 1
  store ptr %incdec.ptr, ptr %_M_current, align 8, !tbaa !453
  ret ptr %this1
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc10DataBuffer3addImEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %this, i64 noundef %value) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %value.addr = alloca i64, align 8
  %ptr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !22
  store i64 %value, ptr %value.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %mode_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 3
  %0 = load i32, ptr %mode_, align 8, !tbaa !240
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #6
  %data_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %data_, align 8, !tbaa !243
  %offset_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 2
  %2 = load i64, ptr %offset_, align 8, !tbaa !244
  %add.ptr = getelementptr inbounds nuw i8, ptr %1, i64 %2
  store ptr %add.ptr, ptr %ptr, align 8, !tbaa !68
  %3 = load i64, ptr %value.addr, align 8, !tbaa !54
  %4 = load ptr, ptr %ptr, align 8, !tbaa !68
  store i64 %3, ptr %4, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %offset_2 = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 2
  %5 = load i64, ptr %offset_2, align 8, !tbaa !244
  %add = add i64 %5, 8
  store i64 %add, ptr %offset_2, align 8, !tbaa !244
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNKSt6vectorIiSaIiEE4dataEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !263
  %call = call noundef ptr @_ZNKSt6vectorIiSaIiEE11_M_data_ptrIiEEPT_S4_(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEC2ERKS4_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(8) %__i) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__i.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !451
  store ptr %__i, ptr %__i.addr, align 8, !tbaa !317
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.94", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %__i.addr, align 8, !tbaa !317
  %1 = load ptr, ptr %0, align 8, !tbaa !225
  store ptr %1, ptr %_M_current, align 8, !tbaa !453
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !451
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.94", ptr %this1, i32 0, i32 0
  ret ptr %_M_current
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZNSt6vectorIiSaIiEE12emplace_backIJiEEERiDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 4 dereferenceable(4) %__args) #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.62", align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !245
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 1
  %0 = load ptr, ptr %_M_finish, align 8, !tbaa !262
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 2
  %1 = load ptr, ptr %_M_end_of_storage, align 8, !tbaa !292
  %cmp = icmp ne ptr %0, %1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %_M_impl3 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_impl4 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish5 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl4, i32 0, i32 1
  %2 = load ptr, ptr %_M_finish5, align 8, !tbaa !262
  %3 = load ptr, ptr %__args.addr, align 8, !tbaa !245
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl3, ptr noundef %2, ptr noundef nonnull align 4 dereferenceable(4) %3) #6
  %_M_impl6 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish7 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl6, i32 0, i32 1
  %4 = load ptr, ptr %_M_finish7, align 8, !tbaa !262
  %incdec.ptr = getelementptr inbounds nuw i32, ptr %4, i32 1
  store ptr %incdec.ptr, ptr %_M_finish7, align 8, !tbaa !262
  br label %if.end

if.else:                                          ; preds = %entry
  %call = call ptr @_ZNSt6vectorIiSaIiEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %agg.tmp, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  %5 = load ptr, ptr %__args.addr, align 8, !tbaa !245
  %coerce.dive8 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %agg.tmp, i32 0, i32 0
  %6 = load ptr, ptr %coerce.dive8, align 8
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr %6, ptr noundef nonnull align 4 dereferenceable(4) %5)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call9 = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNSt6vectorIiSaIiEE4backEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  ret ptr %call9
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %__a, ptr noundef %__p, ptr noundef nonnull align 4 dereferenceable(4) %__args) #2 comdat align 2 {
entry:
  %__a.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  store ptr %__a, ptr %__a.addr, align 8, !tbaa !288
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !245
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !245
  %0 = load ptr, ptr %__a.addr, align 8, !tbaa !288
  %1 = load ptr, ptr %__p.addr, align 8, !tbaa !245
  %2 = load ptr, ptr %__args.addr, align 8, !tbaa !245
  call void @_ZNSt15__new_allocatorIiE9constructIiJiEEEvPT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(4) %2) #6
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr %__position.coerce, ptr noundef nonnull align 4 dereferenceable(4) %__args) #0 comdat align 2 {
entry:
  %__position = alloca %"class.__gnu_cxx::__normal_iterator.62", align 8
  %this.addr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  %__len = alloca i64, align 8
  %__old_start = alloca ptr, align 8
  %__old_finish = alloca ptr, align 8
  %__elems_before = alloca i64, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator.62", align 8
  %__new_start = alloca ptr, align 8
  %__new_finish = alloca ptr, align 8
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %__position, i32 0, i32 0
  store ptr %__position.coerce, ptr %coerce.dive, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !245
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #6
  %call = call noundef i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef 1, ptr noundef @.str.15)
  store i64 %call, ptr %__len, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__old_start) #6
  %_M_impl = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl, i32 0, i32 0
  %0 = load ptr, ptr %_M_start, align 8, !tbaa !263
  store ptr %0, ptr %__old_start, align 8, !tbaa !245
  call void @llvm.lifetime.start.p0(i64 8, ptr %__old_finish) #6
  %_M_impl2 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl2, i32 0, i32 1
  %1 = load ptr, ptr %_M_finish, align 8, !tbaa !262
  store ptr %1, ptr %__old_finish, align 8, !tbaa !245
  call void @llvm.lifetime.start.p0(i64 8, ptr %__elems_before) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %call3 = call ptr @_ZNSt6vectorIiSaIiEE5beginEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %ref.tmp, i32 0, i32 0
  store ptr %call3, ptr %coerce.dive4, align 8
  %call5 = call noundef i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(ptr noundef nonnull align 8 dereferenceable(8) %__position, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  store i64 %call5, ptr %__elems_before, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__new_start) #6
  %2 = load i64, ptr %__len, align 8, !tbaa !54
  %call6 = call noundef ptr @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %2)
  store ptr %call6, ptr %__new_start, align 8, !tbaa !245
  call void @llvm.lifetime.start.p0(i64 8, ptr %__new_finish) #6
  %3 = load ptr, ptr %__new_start, align 8, !tbaa !245
  store ptr %3, ptr %__new_finish, align 8, !tbaa !245
  %_M_impl7 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %4 = load ptr, ptr %__new_start, align 8, !tbaa !245
  %5 = load i64, ptr %__elems_before, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i32, ptr %4, i64 %5
  %6 = load ptr, ptr %__args.addr, align 8, !tbaa !245
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %_M_impl7, ptr noundef %add.ptr, ptr noundef nonnull align 4 dereferenceable(4) %6) #6
  store ptr null, ptr %__new_finish, align 8, !tbaa !245
  %7 = load ptr, ptr %__old_start, align 8, !tbaa !245
  %call8 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %__position) #6
  %8 = load ptr, ptr %call8, align 8, !tbaa !245
  %9 = load ptr, ptr %__new_start, align 8, !tbaa !245
  %call9 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call10 = call noundef ptr @_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_(ptr noundef %7, ptr noundef %8, ptr noundef %9, ptr noundef nonnull align 1 dereferenceable(1) %call9) #6
  store ptr %call10, ptr %__new_finish, align 8, !tbaa !245
  %10 = load ptr, ptr %__new_finish, align 8, !tbaa !245
  %incdec.ptr = getelementptr inbounds nuw i32, ptr %10, i32 1
  store ptr %incdec.ptr, ptr %__new_finish, align 8, !tbaa !245
  %call11 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %__position) #6
  %11 = load ptr, ptr %call11, align 8, !tbaa !245
  %12 = load ptr, ptr %__old_finish, align 8, !tbaa !245
  %13 = load ptr, ptr %__new_finish, align 8, !tbaa !245
  %call12 = call noundef nonnull align 1 dereferenceable(1) ptr @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %call13 = call noundef ptr @_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_(ptr noundef %11, ptr noundef %12, ptr noundef %13, ptr noundef nonnull align 1 dereferenceable(1) %call12) #6
  store ptr %call13, ptr %__new_finish, align 8, !tbaa !245
  %14 = load ptr, ptr %__old_start, align 8, !tbaa !245
  %_M_impl14 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl14, i32 0, i32 2
  %15 = load ptr, ptr %_M_end_of_storage, align 8, !tbaa !292
  %16 = load ptr, ptr %__old_start, align 8, !tbaa !245
  %sub.ptr.lhs.cast = ptrtoint ptr %15 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %16 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(ptr noundef nonnull align 8 dereferenceable(24) %this1, ptr noundef %14, i64 noundef %sub.ptr.div)
  %17 = load ptr, ptr %__new_start, align 8, !tbaa !245
  %_M_impl15 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_start16 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl15, i32 0, i32 0
  store ptr %17, ptr %_M_start16, align 8, !tbaa !263
  %18 = load ptr, ptr %__new_finish, align 8, !tbaa !245
  %_M_impl17 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_finish18 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl17, i32 0, i32 1
  store ptr %18, ptr %_M_finish18, align 8, !tbaa !262
  %19 = load ptr, ptr %__new_start, align 8, !tbaa !245
  %20 = load i64, ptr %__len, align 8, !tbaa !54
  %add.ptr19 = getelementptr inbounds nuw i32, ptr %19, i64 %20
  %_M_impl20 = getelementptr inbounds nuw %"struct.std::_Vector_base", ptr %this1, i32 0, i32 0
  %_M_end_of_storage21 = getelementptr inbounds nuw %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %_M_impl20, i32 0, i32 2
  store ptr %add.ptr19, ptr %_M_end_of_storage21, align 8, !tbaa !292
  call void @llvm.lifetime.end.p0(i64 8, ptr %__new_finish) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__new_start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__elems_before) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__old_finish) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__old_start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZNSt6vectorIiSaIiEE4backEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator.62", align 8
  %ref.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator.62", align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !260
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp2) #6
  %call = call ptr @_ZNSt6vectorIiSaIiEE3endEv(ptr noundef nonnull align 8 dereferenceable(24) %this1) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %ref.tmp2, i32 0, i32 0
  store ptr %call, ptr %coerce.dive, align 8
  %call3 = call ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmiEl(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp2, i64 noundef 1) #6
  %coerce.dive4 = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %ref.tmp, i32 0, i32 0
  store ptr %call3, ptr %coerce.dive4, align 8
  %call5 = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  ret ptr %call5
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZNSt15__new_allocatorIiE9constructIiJiEEEvPT_DpOT0_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__p, ptr noundef nonnull align 4 dereferenceable(4) %__args) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__p.addr = alloca ptr, align 8
  %__args.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !293
  store ptr %__p, ptr %__p.addr, align 8, !tbaa !245
  store ptr %__args, ptr %__args.addr, align 8, !tbaa !245
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__p.addr, align 8, !tbaa !245
  %1 = load ptr, ptr %__args.addr, align 8, !tbaa !245
  %2 = load i32, ptr %1, align 4, !tbaa !44
  store i32 %2, ptr %0, align 4, !tbaa !44
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(ptr noundef nonnull align 8 dereferenceable(8) %__lhs, ptr noundef nonnull align 8 dereferenceable(8) %__rhs) #1 comdat {
entry:
  %__lhs.addr = alloca ptr, align 8
  %__rhs.addr = alloca ptr, align 8
  store ptr %__lhs, ptr %__lhs.addr, align 8, !tbaa !264
  store ptr %__rhs, ptr %__rhs.addr, align 8, !tbaa !264
  %0 = load ptr, ptr %__lhs.addr, align 8, !tbaa !264
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %0) #6
  %1 = load ptr, ptr %call, align 8, !tbaa !245
  %2 = load ptr, ptr %__rhs.addr, align 8, !tbaa !264
  %call1 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %2) #6
  %3 = load ptr, ptr %call1, align 8, !tbaa !245
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  ret i64 %sub.ptr.div
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr ptr @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmiEl(ptr noundef nonnull align 8 dereferenceable(8) %this, i64 noundef %__n) #2 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.62", align 8
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %ref.tmp = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !264
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %ref.tmp) #6
  %_M_current = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %_M_current, align 8, !tbaa !266
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %idx.neg = sub i64 0, %1
  %add.ptr = getelementptr inbounds i32, ptr %0, i64 %idx.neg
  store ptr %add.ptr, ptr %ref.tmp, align 8, !tbaa !245
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(8) %retval, ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ref.tmp) #6
  %coerce.dive = getelementptr inbounds nuw %"class.__gnu_cxx::__normal_iterator.62", ptr %retval, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nounwind uwtable
define void @_ZN6openmc15Tabulated1DFlatC2EPKh(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef %data) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %data.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !455
  store ptr %data, ptr %data.addr, align 8, !tbaa !62
  %this1 = load ptr, ptr %this.addr, align 8
  %data_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %data.addr, align 8, !tbaa !62
  store ptr %0, ptr %data_, align 8, !tbaa !457
  %data_2 = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %data_2, align 8, !tbaa !457
  %add.ptr = getelementptr inbounds i8, ptr %1, i64 4
  %2 = load i32, ptr %add.ptr, align 4, !tbaa !44
  %conv = sext i32 %2 to i64
  %n_regions_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 1
  store i64 %conv, ptr %n_regions_, align 8, !tbaa !459
  %data_3 = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 0
  %3 = load ptr, ptr %data_3, align 8, !tbaa !457
  %add.ptr4 = getelementptr inbounds i8, ptr %3, i64 4
  %add.ptr5 = getelementptr inbounds i8, ptr %add.ptr4, i64 4
  %n_regions_6 = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 1
  %4 = load i64, ptr %n_regions_6, align 8, !tbaa !459
  %mul = mul i64 8, %4
  %add.ptr7 = getelementptr inbounds nuw i8, ptr %add.ptr5, i64 %mul
  %5 = load i64, ptr %add.ptr7, align 8, !tbaa !54
  %n_pairs_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 2
  store i64 %5, ptr %n_pairs_, align 8, !tbaa !460
  ret void
}

; Function Attrs: mustprogress uwtable
define noundef double @_ZNK6openmc15Tabulated1DFlatclEd(ptr noundef nonnull align 8 dereferenceable(24) %this, double noundef %x) #0 align 2 {
entry:
  %retval = alloca double, align 8
  %this.addr = alloca ptr, align 8
  %x.addr = alloca double, align 8
  %nbt_ = alloca %"class.gsl::span.95", align 8
  %x_ = alloca %"class.gsl::span", align 8
  %y_ = alloca %"class.gsl::span", align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %interp = alloca i32, align 4
  %j = alloca i32, align 4
  %x0 = alloca double, align 8
  %x1 = alloca double, align 8
  %y0 = alloca double, align 8
  %y1 = alloca double, align 8
  %r = alloca double, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !455
  store double %x, ptr %x.addr, align 8, !tbaa !16
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %nbt_) #6
  %call = call { ptr, ptr } @_ZNK6openmc15Tabulated1DFlat3nbtEv(ptr noundef nonnull align 8 dereferenceable(24) %this1)
  %0 = getelementptr inbounds nuw { ptr, ptr }, ptr %nbt_, i32 0, i32 0
  %1 = extractvalue { ptr, ptr } %call, 0
  store ptr %1, ptr %0, align 8
  %2 = getelementptr inbounds nuw { ptr, ptr }, ptr %nbt_, i32 0, i32 1
  %3 = extractvalue { ptr, ptr } %call, 1
  store ptr %3, ptr %2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %x_) #6
  %call2 = call { ptr, ptr } @_ZNK6openmc15Tabulated1DFlat1xEv(ptr noundef nonnull align 8 dereferenceable(24) %this1)
  %4 = getelementptr inbounds nuw { ptr, ptr }, ptr %x_, i32 0, i32 0
  %5 = extractvalue { ptr, ptr } %call2, 0
  store ptr %5, ptr %4, align 8
  %6 = getelementptr inbounds nuw { ptr, ptr }, ptr %x_, i32 0, i32 1
  %7 = extractvalue { ptr, ptr } %call2, 1
  store ptr %7, ptr %6, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %y_) #6
  %call3 = call { ptr, ptr } @_ZNK6openmc15Tabulated1DFlat1yEv(ptr noundef nonnull align 8 dereferenceable(24) %this1)
  %8 = getelementptr inbounds nuw { ptr, ptr }, ptr %y_, i32 0, i32 0
  %9 = extractvalue { ptr, ptr } %call3, 0
  store ptr %9, ptr %8, align 8
  %10 = getelementptr inbounds nuw { ptr, ptr }, ptr %y_, i32 0, i32 1
  %11 = extractvalue { ptr, ptr } %call3, 1
  store ptr %11, ptr %10, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  %12 = load double, ptr %x.addr, align 8, !tbaa !16
  %call4 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK3gsl4spanIKdEixEm(ptr noundef nonnull align 8 dereferenceable(16) %x_, i64 noundef 0)
  %13 = load double, ptr %call4, align 8, !tbaa !16
  %cmp = fcmp olt double %12, %13
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call5 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK3gsl4spanIKdEixEm(ptr noundef nonnull align 8 dereferenceable(16) %y_, i64 noundef 0)
  %14 = load double, ptr %call5, align 8, !tbaa !16
  store double %14, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup81

if.else:                                          ; preds = %entry
  %15 = load double, ptr %x.addr, align 8, !tbaa !16
  %n_pairs_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 2
  %16 = load i64, ptr %n_pairs_, align 8, !tbaa !460
  %sub = sub i64 %16, 1
  %call6 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK3gsl4spanIKdEixEm(ptr noundef nonnull align 8 dereferenceable(16) %x_, i64 noundef %sub)
  %17 = load double, ptr %call6, align 8, !tbaa !16
  %cmp7 = fcmp ogt double %15, %17
  br i1 %cmp7, label %if.then8, label %if.else12

if.then8:                                         ; preds = %if.else
  %n_pairs_9 = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 2
  %18 = load i64, ptr %n_pairs_9, align 8, !tbaa !460
  %sub10 = sub i64 %18, 1
  %call11 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK3gsl4spanIKdEixEm(ptr noundef nonnull align 8 dereferenceable(16) %y_, i64 noundef %sub10)
  %19 = load double, ptr %call11, align 8, !tbaa !16
  store double %19, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup81

if.else12:                                        ; preds = %if.else
  %call13 = call noundef ptr @_ZNK3gsl4spanIKdE5beginEv(ptr noundef nonnull align 8 dereferenceable(16) %x_) #6
  %call14 = call noundef ptr @_ZNK3gsl4spanIKdE3endEv(ptr noundef nonnull align 8 dereferenceable(16) %x_) #6
  %call15 = call noundef i64 @_ZN6openmc17lower_bound_indexIPKddEENSt15iterator_traitsIT_E15difference_typeES4_S4_RKT0_(ptr noundef %call13, ptr noundef %call14, ptr noundef nonnull align 8 dereferenceable(8) %x.addr)
  %conv = trunc i64 %call15 to i32
  store i32 %conv, ptr %i, align 4, !tbaa !44
  br label %if.end

if.end:                                           ; preds = %if.else12
  br label %if.end16

if.end16:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %interp) #6
  %n_regions_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 1
  %20 = load i64, ptr %n_regions_, align 8, !tbaa !459
  %cmp17 = icmp eq i64 %20, 0
  br i1 %cmp17, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.end16
  store i32 2, ptr %interp, align 4, !tbaa !47
  br label %if.end31

if.else19:                                        ; preds = %if.end16
  %call20 = call noundef i32 @_ZNK6openmc15Tabulated1DFlat6interpEl(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef 0)
  store i32 %call20, ptr %interp, align 4, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #6
  store i32 0, ptr %j, align 4, !tbaa !44
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else19
  %21 = load i32, ptr %j, align 4, !tbaa !44
  %conv21 = sext i32 %21 to i64
  %n_regions_22 = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 1
  %22 = load i64, ptr %n_regions_22, align 8, !tbaa !459
  %cmp23 = icmp ult i64 %conv21, %22
  br i1 %cmp23, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup

for.body:                                         ; preds = %for.cond
  %23 = load i32, ptr %i, align 4, !tbaa !44
  %24 = load i32, ptr %j, align 4, !tbaa !44
  %conv24 = sext i32 %24 to i64
  %call25 = call noundef nonnull align 4 dereferenceable(4) ptr @_ZNK3gsl4spanIKiEixEm(ptr noundef nonnull align 8 dereferenceable(16) %nbt_, i64 noundef %conv24)
  %25 = load i32, ptr %call25, align 4, !tbaa !44
  %cmp26 = icmp slt i32 %23, %25
  br i1 %cmp26, label %if.then27, label %if.end30

if.then27:                                        ; preds = %for.body
  %26 = load i32, ptr %j, align 4, !tbaa !44
  %conv28 = sext i32 %26 to i64
  %call29 = call noundef i32 @_ZNK6openmc15Tabulated1DFlat6interpEl(ptr noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %conv28)
  store i32 %call29, ptr %interp, align 4, !tbaa !47
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end30:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end30
  %27 = load i32, ptr %j, align 4, !tbaa !44
  %inc = add nsw i32 %27, 1
  store i32 %inc, ptr %j, align 4, !tbaa !44
  br label %for.cond, !llvm.loop !461

cleanup:                                          ; preds = %if.then27, %for.cond.cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #6
  br label %for.end

for.end:                                          ; preds = %cleanup
  br label %if.end31

if.end31:                                         ; preds = %for.end, %if.then18
  %28 = load i32, ptr %interp, align 4, !tbaa !47
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.end36

if.then33:                                        ; preds = %if.end31
  %29 = load i32, ptr %i, align 4, !tbaa !44
  %conv34 = sext i32 %29 to i64
  %call35 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK3gsl4spanIKdEixEm(ptr noundef nonnull align 8 dereferenceable(16) %y_, i64 noundef %conv34)
  %30 = load double, ptr %call35, align 8, !tbaa !16
  store double %30, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80

if.end36:                                         ; preds = %if.end31
  call void @llvm.lifetime.start.p0(i64 8, ptr %x0) #6
  %31 = load i32, ptr %i, align 4, !tbaa !44
  %conv37 = sext i32 %31 to i64
  %call38 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK3gsl4spanIKdEixEm(ptr noundef nonnull align 8 dereferenceable(16) %x_, i64 noundef %conv37)
  %32 = load double, ptr %call38, align 8, !tbaa !16
  store double %32, ptr %x0, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 8, ptr %x1) #6
  %33 = load i32, ptr %i, align 4, !tbaa !44
  %add = add nsw i32 %33, 1
  %conv39 = sext i32 %add to i64
  %call40 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK3gsl4spanIKdEixEm(ptr noundef nonnull align 8 dereferenceable(16) %x_, i64 noundef %conv39)
  %34 = load double, ptr %call40, align 8, !tbaa !16
  store double %34, ptr %x1, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 8, ptr %y0) #6
  %35 = load i32, ptr %i, align 4, !tbaa !44
  %conv41 = sext i32 %35 to i64
  %call42 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK3gsl4spanIKdEixEm(ptr noundef nonnull align 8 dereferenceable(16) %y_, i64 noundef %conv41)
  %36 = load double, ptr %call42, align 8, !tbaa !16
  store double %36, ptr %y0, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 8, ptr %y1) #6
  %37 = load i32, ptr %i, align 4, !tbaa !44
  %add43 = add nsw i32 %37, 1
  %conv44 = sext i32 %add43 to i64
  %call45 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK3gsl4spanIKdEixEm(ptr noundef nonnull align 8 dereferenceable(16) %y_, i64 noundef %conv44)
  %38 = load double, ptr %call45, align 8, !tbaa !16
  store double %38, ptr %y1, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #6
  %39 = load i32, ptr %interp, align 4, !tbaa !47
  switch i32 %39, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb49
    i32 4, label %sw.bb56
    i32 5, label %sw.bb64
  ]

sw.bb:                                            ; preds = %if.end36
  %40 = load double, ptr %x.addr, align 8, !tbaa !16
  %41 = load double, ptr %x0, align 8, !tbaa !16
  %sub46 = fsub double %40, %41
  %42 = load double, ptr %x1, align 8, !tbaa !16
  %43 = load double, ptr %x0, align 8, !tbaa !16
  %sub47 = fsub double %42, %43
  %div = fdiv double %sub46, %sub47
  store double %div, ptr %r, align 8, !tbaa !16
  %44 = load double, ptr %y0, align 8, !tbaa !16
  %45 = load double, ptr %r, align 8, !tbaa !16
  %46 = load double, ptr %y1, align 8, !tbaa !16
  %47 = load double, ptr %y0, align 8, !tbaa !16
  %sub48 = fsub double %46, %47
  %48 = call double @llvm.fmuladd.f64(double %45, double %sub48, double %44)
  store double %48, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup75

sw.bb49:                                          ; preds = %if.end36
  %49 = load double, ptr %x.addr, align 8, !tbaa !16
  %50 = load double, ptr %x0, align 8, !tbaa !16
  %div50 = fdiv double %49, %50
  %call51 = call double @log(double noundef %div50) #6, !tbaa !44
  %51 = load double, ptr %x1, align 8, !tbaa !16
  %52 = load double, ptr %x0, align 8, !tbaa !16
  %div52 = fdiv double %51, %52
  %call53 = call double @log(double noundef %div52) #6, !tbaa !44
  %div54 = fdiv double %call51, %call53
  store double %div54, ptr %r, align 8, !tbaa !16
  %53 = load double, ptr %y0, align 8, !tbaa !16
  %54 = load double, ptr %r, align 8, !tbaa !16
  %55 = load double, ptr %y1, align 8, !tbaa !16
  %56 = load double, ptr %y0, align 8, !tbaa !16
  %sub55 = fsub double %55, %56
  %57 = call double @llvm.fmuladd.f64(double %54, double %sub55, double %53)
  store double %57, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup75

sw.bb56:                                          ; preds = %if.end36
  %58 = load double, ptr %x.addr, align 8, !tbaa !16
  %59 = load double, ptr %x0, align 8, !tbaa !16
  %sub57 = fsub double %58, %59
  %60 = load double, ptr %x1, align 8, !tbaa !16
  %61 = load double, ptr %x0, align 8, !tbaa !16
  %sub58 = fsub double %60, %61
  %div59 = fdiv double %sub57, %sub58
  store double %div59, ptr %r, align 8, !tbaa !16
  %62 = load double, ptr %y0, align 8, !tbaa !16
  %63 = load double, ptr %r, align 8, !tbaa !16
  %64 = load double, ptr %y1, align 8, !tbaa !16
  %65 = load double, ptr %y0, align 8, !tbaa !16
  %div60 = fdiv double %64, %65
  %call61 = call double @log(double noundef %div60) #6, !tbaa !44
  %mul = fmul double %63, %call61
  %call62 = call double @exp(double noundef %mul) #6, !tbaa !44
  %mul63 = fmul double %62, %call62
  store double %mul63, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup75

sw.bb64:                                          ; preds = %if.end36
  %66 = load double, ptr %x.addr, align 8, !tbaa !16
  %67 = load double, ptr %x0, align 8, !tbaa !16
  %div65 = fdiv double %66, %67
  %call66 = call double @log(double noundef %div65) #6, !tbaa !44
  %68 = load double, ptr %x1, align 8, !tbaa !16
  %69 = load double, ptr %x0, align 8, !tbaa !16
  %div67 = fdiv double %68, %69
  %call68 = call double @log(double noundef %div67) #6, !tbaa !44
  %div69 = fdiv double %call66, %call68
  store double %div69, ptr %r, align 8, !tbaa !16
  %70 = load double, ptr %y0, align 8, !tbaa !16
  %71 = load double, ptr %r, align 8, !tbaa !16
  %72 = load double, ptr %y1, align 8, !tbaa !16
  %73 = load double, ptr %y0, align 8, !tbaa !16
  %div70 = fdiv double %72, %73
  %call71 = call double @log(double noundef %div70) #6, !tbaa !44
  %mul72 = fmul double %71, %call71
  %call73 = call double @exp(double noundef %mul72) #6, !tbaa !44
  %mul74 = fmul double %70, %call73
  store double %mul74, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup75

sw.default:                                       ; preds = %if.end36
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  unreachable

cleanup75:                                        ; preds = %sw.bb64, %sw.bb56, %sw.bb49, %sw.bb
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %y1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %y0) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %x1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %x0) #6
  br label %cleanup80

cleanup80:                                        ; preds = %cleanup75, %if.then33
  call void @llvm.lifetime.end.p0(i64 4, ptr %interp) #6
  br label %cleanup81

cleanup81:                                        ; preds = %cleanup80, %if.then8, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %y_) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %x_) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %nbt_) #6
  %74 = load double, ptr %retval, align 8
  ret double %74
}

; Function Attrs: mustprogress uwtable
define { ptr, ptr } @_ZNK6openmc15Tabulated1DFlat3nbtEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #0 align 2 {
entry:
  %retval = alloca %"class.gsl::span.95", align 8
  %this.addr = alloca ptr, align 8
  %start = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !455
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #6
  %data_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %data_, align 8, !tbaa !457
  %add.ptr = getelementptr inbounds i8, ptr %0, i64 8
  store ptr %add.ptr, ptr %start, align 8, !tbaa !245
  %1 = load ptr, ptr %start, align 8, !tbaa !245
  %n_regions_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 1
  %2 = load i64, ptr %n_regions_, align 8, !tbaa !459
  call void @_ZN3gsl4spanIKiEC2EPS1_m(ptr noundef nonnull align 8 dereferenceable(16) %retval, ptr noundef %1, i64 noundef %2)
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #6
  %3 = load { ptr, ptr }, ptr %retval, align 8
  ret { ptr, ptr } %3
}

; Function Attrs: mustprogress uwtable
define { ptr, ptr } @_ZNK6openmc15Tabulated1DFlat1xEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #0 align 2 {
entry:
  %retval = alloca %"class.gsl::span", align 8
  %this.addr = alloca ptr, align 8
  %start = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !455
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #6
  %data_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %data_, align 8, !tbaa !457
  %add.ptr = getelementptr inbounds i8, ptr %0, i64 16
  %n_regions_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 1
  %1 = load i64, ptr %n_regions_, align 8, !tbaa !459
  %mul = mul i64 8, %1
  %add.ptr2 = getelementptr inbounds nuw i8, ptr %add.ptr, i64 %mul
  store ptr %add.ptr2, ptr %start, align 8, !tbaa !219
  %2 = load ptr, ptr %start, align 8, !tbaa !219
  %n_pairs_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 2
  %3 = load i64, ptr %n_pairs_, align 8, !tbaa !460
  call void @_ZN3gsl4spanIKdEC2EPS1_m(ptr noundef nonnull align 8 dereferenceable(16) %retval, ptr noundef %2, i64 noundef %3)
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #6
  %4 = load { ptr, ptr }, ptr %retval, align 8
  ret { ptr, ptr } %4
}

; Function Attrs: mustprogress uwtable
define { ptr, ptr } @_ZNK6openmc15Tabulated1DFlat1yEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #0 align 2 {
entry:
  %retval = alloca %"class.gsl::span", align 8
  %this.addr = alloca ptr, align 8
  %start = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !455
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #6
  %data_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %data_, align 8, !tbaa !457
  %add.ptr = getelementptr inbounds i8, ptr %0, i64 16
  %n_regions_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 1
  %1 = load i64, ptr %n_regions_, align 8, !tbaa !459
  %mul = mul i64 8, %1
  %add.ptr2 = getelementptr inbounds nuw i8, ptr %add.ptr, i64 %mul
  %n_pairs_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 2
  %2 = load i64, ptr %n_pairs_, align 8, !tbaa !460
  %mul3 = mul i64 8, %2
  %add.ptr4 = getelementptr inbounds nuw i8, ptr %add.ptr2, i64 %mul3
  store ptr %add.ptr4, ptr %start, align 8, !tbaa !219
  %3 = load ptr, ptr %start, align 8, !tbaa !219
  %n_pairs_5 = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 2
  %4 = load i64, ptr %n_pairs_5, align 8, !tbaa !460
  call void @_ZN3gsl4spanIKdEC2EPS1_m(ptr noundef nonnull align 8 dereferenceable(16) %retval, ptr noundef %3, i64 noundef %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #6
  %5 = load { ptr, ptr }, ptr %retval, align 8
  ret { ptr, ptr } %5
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNK3gsl4spanIKdEixEm(ptr noundef nonnull align 8 dereferenceable(16) %this, i64 noundef %pos) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %pos.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !251
  store i64 %pos, ptr %pos.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %first_ = getelementptr inbounds nuw %"class.gsl::span", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %first_, align 8, !tbaa !259
  %1 = load i64, ptr %pos.addr, align 8, !tbaa !54
  %arrayidx = getelementptr inbounds nuw double, ptr %0, i64 %1
  ret ptr %arrayidx
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef i64 @_ZN6openmc17lower_bound_indexIPKddEENSt15iterator_traitsIT_E15difference_typeES4_S4_RKT0_(ptr noundef %first, ptr noundef %last, ptr noundef nonnull align 8 dereferenceable(8) %value) #0 comdat {
entry:
  %retval = alloca i64, align 8
  %first.addr = alloca ptr, align 8
  %last.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  store ptr %first, ptr %first.addr, align 8, !tbaa !219
  store ptr %last, ptr %last.addr, align 8, !tbaa !219
  store ptr %value, ptr %value.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %first.addr, align 8, !tbaa !219
  %1 = load double, ptr %0, align 8, !tbaa !16
  %2 = load ptr, ptr %value.addr, align 8, !tbaa !219
  %3 = load double, ptr %2, align 8, !tbaa !16
  %cmp = fcmp oeq double %1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i64 0, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %first.addr, align 8, !tbaa !219
  %5 = load ptr, ptr %last.addr, align 8, !tbaa !219
  %6 = load ptr, ptr %value.addr, align 8, !tbaa !219
  %call = call noundef ptr @_ZSt11lower_boundIPKddET_S2_S2_RKT0_(ptr noundef %4, ptr noundef %5, ptr noundef nonnull align 8 dereferenceable(8) %6)
  %7 = load ptr, ptr %first.addr, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %call to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %7 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %sub = sub nsw i64 %sub.ptr.div, 1
  store i64 %sub, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load i64, ptr %retval, align 8
  ret i64 %8
}

; Function Attrs: mustprogress nounwind uwtable
define noundef i32 @_ZNK6openmc15Tabulated1DFlat6interpEl(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %i) #2 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %i.addr = alloca i64, align 8
  %start = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !455
  store i64 %i, ptr %i.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #6
  %data_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %data_, align 8, !tbaa !457
  %add.ptr = getelementptr inbounds i8, ptr %0, i64 8
  %n_regions_ = getelementptr inbounds nuw %"class.openmc::Tabulated1DFlat", ptr %this1, i32 0, i32 1
  %1 = load i64, ptr %n_regions_, align 8, !tbaa !459
  %mul = mul i64 4, %1
  %add.ptr2 = getelementptr inbounds nuw i8, ptr %add.ptr, i64 %mul
  store ptr %add.ptr2, ptr %start, align 8, !tbaa !245
  %2 = load ptr, ptr %start, align 8, !tbaa !245
  %3 = load i64, ptr %i.addr, align 8, !tbaa !54
  %arrayidx = getelementptr inbounds i32, ptr %2, i64 %3
  %4 = load i32, ptr %arrayidx, align 4, !tbaa !44
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #6
  ret i32 %4
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 4 dereferenceable(4) ptr @_ZNK3gsl4spanIKiEixEm(ptr noundef nonnull align 8 dereferenceable(16) %this, i64 noundef %pos) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %pos.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !462
  store i64 %pos, ptr %pos.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %first_ = getelementptr inbounds nuw %"class.gsl::span.95", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %first_, align 8, !tbaa !464
  %1 = load i64, ptr %pos.addr, align 8, !tbaa !54
  %arrayidx = getelementptr inbounds nuw i32, ptr %0, i64 %1
  ret ptr %arrayidx
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt11lower_boundIPKddET_S2_S2_RKT0_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__val) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__val.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %undef.agg.tmp = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  store ptr %__val, ptr %__val.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %2 = load ptr, ptr %__val.addr, align 8, !tbaa !219
  call void @_ZN9__gnu_cxx5__ops15__iter_less_valEv()
  %call = call noundef ptr @_ZSt13__lower_boundIPKddN9__gnu_cxx5__ops14_Iter_less_valEET_S5_S5_RKT0_T1_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2)
  ret ptr %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr noundef ptr @_ZSt13__lower_boundIPKddN9__gnu_cxx5__ops14_Iter_less_valEET_S5_S5_RKT0_T1_(ptr noundef %__first, ptr noundef %__last, ptr noundef nonnull align 8 dereferenceable(8) %__val) #0 comdat {
entry:
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %__val.addr = alloca ptr, align 8
  %__len = alloca i64, align 8
  %__half = alloca i64, align 8
  %__middle = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  store ptr %__val, ptr %__val.addr, align 8, !tbaa !219
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #6
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %call = call noundef i64 @_ZSt8distanceIPKdENSt15iterator_traitsIT_E15difference_typeES3_S3_(ptr noundef %0, ptr noundef %1)
  store i64 %call, ptr %__len, align 8, !tbaa !54
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i64, ptr %__len, align 8, !tbaa !54
  %cmp = icmp sgt i64 %2, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %__half) #6
  %3 = load i64, ptr %__len, align 8, !tbaa !54
  %shr = ashr i64 %3, 1
  store i64 %shr, ptr %__half, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__middle) #6
  %4 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  store ptr %4, ptr %__middle, align 8, !tbaa !219
  %5 = load i64, ptr %__half, align 8, !tbaa !54
  call void @_ZSt7advanceIPKdlEvRT_T0_(ptr noundef nonnull align 8 dereferenceable(8) %__middle, i64 noundef %5)
  %6 = load ptr, ptr %__middle, align 8, !tbaa !219
  %7 = load ptr, ptr %__val.addr, align 8, !tbaa !219
  %call1 = call noundef zeroext i1 @_ZNK9__gnu_cxx5__ops14_Iter_less_valclIPKdS3_EEbT_RT0_(ptr noundef nonnull align 1 dereferenceable(1) %__comp, ptr noundef %6, ptr noundef nonnull align 8 dereferenceable(8) %7)
  br i1 %call1, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %8 = load ptr, ptr %__middle, align 8, !tbaa !219
  store ptr %8, ptr %__first.addr, align 8, !tbaa !219
  %9 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %incdec.ptr = getelementptr inbounds nuw double, ptr %9, i32 1
  store ptr %incdec.ptr, ptr %__first.addr, align 8, !tbaa !219
  %10 = load i64, ptr %__len, align 8, !tbaa !54
  %11 = load i64, ptr %__half, align 8, !tbaa !54
  %sub = sub nsw i64 %10, %11
  %sub2 = sub nsw i64 %sub, 1
  store i64 %sub2, ptr %__len, align 8, !tbaa !54
  br label %if.end

if.else:                                          ; preds = %while.body
  %12 = load i64, ptr %__half, align 8, !tbaa !54
  store i64 %12, ptr %__len, align 8, !tbaa !54
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %__middle) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %__half) #6
  br label %while.cond, !llvm.loop !466

while.end:                                        ; preds = %while.cond
  %13 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #6
  ret ptr %13
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr noundef i64 @_ZSt8distanceIPKdENSt15iterator_traitsIT_E15difference_typeES3_S3_(ptr noundef %__first, ptr noundef %__last) #8 comdat {
entry:
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  %agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  %undef.agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  call void @_ZSt19__iterator_categoryIPKdENSt15iterator_traitsIT_E17iterator_categoryERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %__first.addr)
  %call = call noundef i64 @_ZSt10__distanceIPKdENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(ptr noundef %0, ptr noundef %1)
  ret i64 %call
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZSt7advanceIPKdlEvRT_T0_(ptr noundef nonnull align 8 dereferenceable(8) %__i, i64 noundef %__n) #8 comdat {
entry:
  %__i.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  %__d = alloca i64, align 8
  %agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  %undef.agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store ptr %__i, ptr %__i.addr, align 8, !tbaa !222
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %__d) #6
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  store i64 %0, ptr %__d, align 8, !tbaa !54
  %1 = load ptr, ptr %__i.addr, align 8, !tbaa !222
  %2 = load i64, ptr %__d, align 8, !tbaa !54
  %3 = load ptr, ptr %__i.addr, align 8, !tbaa !222
  call void @_ZSt19__iterator_categoryIPKdENSt15iterator_traitsIT_E17iterator_categoryERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %3)
  call void @_ZSt9__advanceIPKdlEvRT_T0_St26random_access_iterator_tag(ptr noundef nonnull align 8 dereferenceable(8) %1, i64 noundef %2)
  call void @llvm.lifetime.end.p0(i64 8, ptr %__d) #6
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef zeroext i1 @_ZNK9__gnu_cxx5__ops14_Iter_less_valclIPKdS3_EEbT_RT0_(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__it, ptr noundef nonnull align 8 dereferenceable(8) %__val) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__it.addr = alloca ptr, align 8
  %__val.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !449
  store ptr %__it, ptr %__it.addr, align 8, !tbaa !219
  store ptr %__val, ptr %__val.addr, align 8, !tbaa !219
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %__it.addr, align 8, !tbaa !219
  %1 = load double, ptr %0, align 8, !tbaa !16
  %2 = load ptr, ptr %__val.addr, align 8, !tbaa !219
  %3 = load double, ptr %2, align 8, !tbaa !16
  %cmp = fcmp olt double %1, %3
  ret i1 %cmp
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr noundef i64 @_ZSt10__distanceIPKdENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(ptr noundef %__first, ptr noundef %__last) #1 comdat {
entry:
  %0 = alloca %"struct.std::random_access_iterator_tag", align 1
  %__first.addr = alloca ptr, align 8
  %__last.addr = alloca ptr, align 8
  store ptr %__first, ptr %__first.addr, align 8, !tbaa !219
  store ptr %__last, ptr %__last.addr, align 8, !tbaa !219
  %1 = load ptr, ptr %__last.addr, align 8, !tbaa !219
  %2 = load ptr, ptr %__first.addr, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIPKdENSt15iterator_traitsIT_E17iterator_categoryERKS3_(ptr noundef nonnull align 8 dereferenceable(8) %0) #1 comdat {
entry:
  %.addr = alloca ptr, align 8
  store ptr %0, ptr %.addr, align 8, !tbaa !222
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZSt9__advanceIPKdlEvRT_T0_St26random_access_iterator_tag(ptr noundef nonnull align 8 dereferenceable(8) %__i, i64 noundef %__n) #1 comdat {
entry:
  %0 = alloca %"struct.std::random_access_iterator_tag", align 1
  %__i.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__i, ptr %__i.addr, align 8, !tbaa !222
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %2 = call i1 @llvm.is.constant.i64(i64 %1)
  br i1 %2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %3 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp = icmp eq i64 %3, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %4 = load ptr, ptr %__i.addr, align 8, !tbaa !222
  %5 = load ptr, ptr %4, align 8, !tbaa !219
  %incdec.ptr = getelementptr inbounds nuw double, ptr %5, i32 1
  store ptr %incdec.ptr, ptr %4, align 8, !tbaa !219
  br label %if.end6

if.else:                                          ; preds = %land.lhs.true, %entry
  %6 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %7 = call i1 @llvm.is.constant.i64(i64 %6)
  br i1 %7, label %land.lhs.true1, label %if.else5

land.lhs.true1:                                   ; preds = %if.else
  %8 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %cmp2 = icmp eq i64 %8, -1
  br i1 %cmp2, label %if.then3, label %if.else5

if.then3:                                         ; preds = %land.lhs.true1
  %9 = load ptr, ptr %__i.addr, align 8, !tbaa !222
  %10 = load ptr, ptr %9, align 8, !tbaa !219
  %incdec.ptr4 = getelementptr inbounds double, ptr %10, i32 -1
  store ptr %incdec.ptr4, ptr %9, align 8, !tbaa !219
  br label %if.end

if.else5:                                         ; preds = %land.lhs.true1, %if.else
  %11 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %12 = load ptr, ptr %__i.addr, align 8, !tbaa !222
  %13 = load ptr, ptr %12, align 8, !tbaa !219
  %add.ptr = getelementptr inbounds double, ptr %13, i64 %11
  store ptr %add.ptr, ptr %12, align 8, !tbaa !219
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then3
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr void @_ZN3gsl4spanIKiEC2EPS1_m(ptr noundef nonnull align 8 dereferenceable(16) %this, ptr noundef %data_in, i64 noundef %size_in) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %data_in.addr = alloca ptr, align 8
  %size_in.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !462
  store ptr %data_in, ptr %data_in.addr, align 8, !tbaa !245
  store i64 %size_in, ptr %size_in.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr %data_in.addr, align 8, !tbaa !245
  %first_ = getelementptr inbounds nuw %"class.gsl::span.95", ptr %this1, i32 0, i32 0
  store ptr %0, ptr %first_, align 8, !tbaa !464
  %1 = load ptr, ptr %data_in.addr, align 8, !tbaa !245
  %2 = load i64, ptr %size_in.addr, align 8, !tbaa !54
  %add.ptr = getelementptr inbounds nuw i32, ptr %1, i64 %2
  %last_ = getelementptr inbounds nuw %"class.gsl::span.95", ptr %this1, i32 0, i32 1
  store ptr %add.ptr, ptr %last_, align 8, !tbaa !467
  ret void
}

; Function Attrs: mustprogress uwtable
define void @_ZN6openmc17CoherentElasticXSC2El(ptr noundef nonnull align 8 dereferenceable(56) %this, i64 noundef %dset) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %dset.addr = alloca i64, align 8
  %arr = alloca %"class.xt::xarray_container", align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  %E = alloca %"class.xt::xview", align 8
  %ref.tmp = alloca i32, align 4
  %s = alloca %"class.xt::xview", align 8
  %ref.tmp6 = alloca i32, align 4
  %agg.tmp = alloca %"class.std::back_insert_iterator", align 8
  %coerce = alloca %"class.std::back_insert_iterator", align 8
  %agg.tmp20 = alloca %"class.std::back_insert_iterator", align 8
  %coerce28 = alloca %"class.std::back_insert_iterator", align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !52
  store i64 %dset, ptr %dset.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN6openmc10Function1DC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr getelementptr inbounds inrange(-16, 32) ({ [6 x ptr] }, ptr @_ZTVN6openmc17CoherentElasticXSE, i32 0, i32 0, i32 2), ptr %this1, align 8, !tbaa !20
  %bragg_edges_ = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 1
  call void @_ZNSt6vectorIdSaIdEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %bragg_edges_) #6
  %factors_ = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 2
  call void @_ZNSt6vectorIdSaIdEEC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %factors_) #6
  call void @llvm.lifetime.start.p0(i64 240, ptr %arr) #6
  invoke void @_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEC2Ev(ptr noundef nonnull align 8 dereferenceable(240) %arr)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %0 = load i64, ptr %dset.addr, align 8, !tbaa !54
  invoke void @_ZN6openmc12read_datasetIdEEvlRN2xt16xarray_containerINS1_7uvectorIT_SaIS4_EEELNS1_11layout_typeE1ENS1_7svectorINS6_9size_typeELm4ESaINSt6vectorIS4_S5_E9size_typeEELb1EEENS1_22xtensor_expression_tagEEEb(i64 noundef %0, ptr noundef nonnull align 8 dereferenceable(240) %arr, i1 noundef zeroext false)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  call void @llvm.lifetime.start.p0(i64 72, ptr %E) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ref.tmp) #6
  store i32 0, ptr %ref.tmp, align 4, !tbaa !44
  invoke void @_ZN2xt4viewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEDaOT_DpOT0_(ptr dead_on_unwind writable sret(%"class.xt::xview") align 8 %E, ptr noundef nonnull align 8 dereferenceable(240) %arr, ptr noundef nonnull align 4 dereferenceable(4) %ref.tmp)
          to label %invoke.cont5 unwind label %lpad4

invoke.cont5:                                     ; preds = %invoke.cont3
  call void @llvm.lifetime.end.p0(i64 4, ptr %ref.tmp) #6
  call void @llvm.lifetime.start.p0(i64 72, ptr %s) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ref.tmp6) #6
  store i32 1, ptr %ref.tmp6, align 4, !tbaa !44
  invoke void @_ZN2xt4viewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEDaOT_DpOT0_(ptr dead_on_unwind writable sret(%"class.xt::xview") align 8 %s, ptr noundef nonnull align 8 dereferenceable(240) %arr, ptr noundef nonnull align 4 dereferenceable(4) %ref.tmp6)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %invoke.cont5
  call void @llvm.lifetime.end.p0(i64 4, ptr %ref.tmp6) #6
  %call = call noundef ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE5beginILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEv(ptr noundef nonnull align 1 dereferenceable(1) %E) #6
  %call9 = call noundef ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE3endILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEv(ptr noundef nonnull align 1 dereferenceable(1) %E) #6
  %bragg_edges_10 = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 1
  %call13 = invoke ptr @_ZSt13back_inserterISt6vectorIdSaIdEEESt20back_insert_iteratorIT_ERS4_(ptr noundef nonnull align 8 dereferenceable(24) %bragg_edges_10)
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %invoke.cont8
  %coerce.dive = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp, i32 0, i32 0
  store ptr %call13, ptr %coerce.dive, align 8
  %coerce.dive14 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp, i32 0, i32 0
  %1 = load ptr, ptr %coerce.dive14, align 8
  %call16 = invoke ptr @_ZSt4copyIPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET0_T_S7_S6_(ptr noundef %call, ptr noundef %call9, ptr %1)
          to label %invoke.cont15 unwind label %lpad11

invoke.cont15:                                    ; preds = %invoke.cont12
  %coerce.dive17 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %coerce, i32 0, i32 0
  store ptr %call16, ptr %coerce.dive17, align 8
  %call18 = call noundef ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE5beginILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEv(ptr noundef nonnull align 1 dereferenceable(1) %s) #6
  %call19 = call noundef ptr @_ZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE3endILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEv(ptr noundef nonnull align 1 dereferenceable(1) %s) #6
  %factors_21 = getelementptr inbounds nuw %"class.openmc::CoherentElasticXS", ptr %this1, i32 0, i32 2
  %call23 = invoke ptr @_ZSt13back_inserterISt6vectorIdSaIdEEESt20back_insert_iteratorIT_ERS4_(ptr noundef nonnull align 8 dereferenceable(24) %factors_21)
          to label %invoke.cont22 unwind label %lpad11

invoke.cont22:                                    ; preds = %invoke.cont15
  %coerce.dive24 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp20, i32 0, i32 0
  store ptr %call23, ptr %coerce.dive24, align 8
  %coerce.dive25 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %agg.tmp20, i32 0, i32 0
  %2 = load ptr, ptr %coerce.dive25, align 8
  %call27 = invoke ptr @_ZSt4copyIPdSt20back_insert_iteratorISt6vectorIdSaIdEEEET0_T_S7_S6_(ptr noundef %call18, ptr noundef %call19, ptr %2)
          to label %invoke.cont26 unwind label %lpad11

invoke.cont26:                                    ; preds = %invoke.cont22
  %coerce.dive29 = getelementptr inbounds nuw %"class.std::back_insert_iterator", ptr %coerce28, i32 0, i32 0
  store ptr %call27, ptr %coerce.dive29, align 8
  call void @_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(65) %s) #6
  call void @llvm.lifetime.end.p0(i64 72, ptr %s) #6
  call void @_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(65) %E) #6
  call void @llvm.lifetime.end.p0(i64 72, ptr %E) #6
  call void @_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEED2Ev(ptr noundef nonnull align 8 dereferenceable(240) %arr) #6
  call void @llvm.lifetime.end.p0(i64 240, ptr %arr) #6
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  store ptr %4, ptr %exn.slot, align 8
  %5 = extractvalue { ptr, i32 } %3, 1
  store i32 %5, ptr %ehselector.slot, align 4
  br label %ehcleanup33

lpad2:                                            ; preds = %invoke.cont
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  store ptr %7, ptr %exn.slot, align 8
  %8 = extractvalue { ptr, i32 } %6, 1
  store i32 %8, ptr %ehselector.slot, align 4
  br label %ehcleanup32

lpad4:                                            ; preds = %invoke.cont3
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  store ptr %10, ptr %exn.slot, align 8
  %11 = extractvalue { ptr, i32 } %9, 1
  store i32 %11, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %ref.tmp) #6
  br label %ehcleanup31

lpad7:                                            ; preds = %invoke.cont5
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  store ptr %13, ptr %exn.slot, align 8
  %14 = extractvalue { ptr, i32 } %12, 1
  store i32 %14, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %ref.tmp6) #6
  br label %ehcleanup

lpad11:                                           ; preds = %invoke.cont22, %invoke.cont15, %invoke.cont12, %invoke.cont8
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  store ptr %16, ptr %exn.slot, align 8
  %17 = extractvalue { ptr, i32 } %15, 1
  store i32 %17, ptr %ehselector.slot, align 4
  call void @_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(65) %s) #6
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad11, %lpad7
  call void @llvm.lifetime.end.p0(i64 72, ptr %s) #6
  call void @_ZN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(65) %E) #6
  br label %ehcleanup31

ehcleanup31:                                      ; preds = %ehcleanup, %lpad4
  call void @llvm.lifetime.end.p0(i64 72, ptr %E) #6
  br label %ehcleanup32

ehcleanup32:                                      ; preds = %ehcleanup31, %lpad2
  call void @_ZN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEED2Ev(ptr noundef nonnull align 8 dereferenceable(240) %arr) #6
  br label %ehcleanup33

ehcleanup33:                                      ; preds = %ehcleanup32, %lpad
  call void @llvm.lifetime.end.p0(i64 240, ptr %arr) #6
  call void @_ZNSt6vectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %factors_) #6
  call void @_ZNSt6vectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %bragg_edges_) #6
  call void @_ZN6openmc10Function1DD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup33
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val37 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val37
}

; Function Attrs: mustprogress uwtable
define noundef double @_ZNK6openmc21CoherentElasticXSFlatclEd(ptr noundef nonnull align 8 dereferenceable(8) %this, double noundef %E) #0 align 2 {
entry:
  %retval = alloca double, align 8
  %this.addr = alloca ptr, align 8
  %E.addr = alloca double, align 8
  %bragg_edges = alloca %"class.gsl::span", align 8
  %factors = alloca %"class.gsl::span", align 8
  %cleanup.dest.slot = alloca i32, align 4
  %i_grid = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !468
  store double %E, ptr %E.addr, align 8, !tbaa !16
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %bragg_edges) #6
  %call = call { ptr, ptr } @_ZNK6openmc21CoherentElasticXSFlat11bragg_edgesEv(ptr noundef nonnull align 8 dereferenceable(8) %this1)
  %0 = getelementptr inbounds nuw { ptr, ptr }, ptr %bragg_edges, i32 0, i32 0
  %1 = extractvalue { ptr, ptr } %call, 0
  store ptr %1, ptr %0, align 8
  %2 = getelementptr inbounds nuw { ptr, ptr }, ptr %bragg_edges, i32 0, i32 1
  %3 = extractvalue { ptr, ptr } %call, 1
  store ptr %3, ptr %2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %factors) #6
  %call2 = call { ptr, ptr } @_ZNK6openmc21CoherentElasticXSFlat7factorsEv(ptr noundef nonnull align 8 dereferenceable(8) %this1)
  %4 = getelementptr inbounds nuw { ptr, ptr }, ptr %factors, i32 0, i32 0
  %5 = extractvalue { ptr, ptr } %call2, 0
  store ptr %5, ptr %4, align 8
  %6 = getelementptr inbounds nuw { ptr, ptr }, ptr %factors, i32 0, i32 1
  %7 = extractvalue { ptr, ptr } %call2, 1
  store ptr %7, ptr %6, align 8
  %8 = load double, ptr %E.addr, align 8, !tbaa !16
  %call3 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK3gsl4spanIKdEixEm(ptr noundef nonnull align 8 dereferenceable(16) %bragg_edges, i64 noundef 0)
  %9 = load double, ptr %call3, align 8, !tbaa !16
  %cmp = fcmp olt double %8, %9
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store double 0.000000e+00, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.else:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %i_grid) #6
  %call4 = call noundef ptr @_ZNK3gsl4spanIKdE5beginEv(ptr noundef nonnull align 8 dereferenceable(16) %bragg_edges) #6
  %call5 = call noundef ptr @_ZNK3gsl4spanIKdE3endEv(ptr noundef nonnull align 8 dereferenceable(16) %bragg_edges) #6
  %call6 = call noundef i64 @_ZN6openmc17lower_bound_indexIPKddEENSt15iterator_traitsIT_E15difference_typeES4_S4_RKT0_(ptr noundef %call4, ptr noundef %call5, ptr noundef nonnull align 8 dereferenceable(8) %E.addr)
  store i64 %call6, ptr %i_grid, align 8, !tbaa !54
  %10 = load i64, ptr %i_grid, align 8, !tbaa !54
  %call7 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK3gsl4spanIKdEixEm(ptr noundef nonnull align 8 dereferenceable(16) %factors, i64 noundef %10)
  %11 = load double, ptr %call7, align 8, !tbaa !16
  %12 = load double, ptr %E.addr, align 8, !tbaa !16
  %div = fdiv double %11, %12
  store double %div, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %i_grid) #6
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 16, ptr %factors) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %bragg_edges) #6
  %13 = load double, ptr %retval, align 8
  ret double %13
}

; Function Attrs: mustprogress uwtable
define { ptr, ptr } @_ZNK6openmc21CoherentElasticXSFlat11bragg_edgesEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #0 align 2 {
entry:
  %retval = alloca %"class.gsl::span", align 8
  %this.addr = alloca ptr, align 8
  %n = alloca i64, align 8
  %start = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !468
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #6
  %data_ = getelementptr inbounds nuw %"class.openmc::CoherentElasticXSFlat", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %data_, align 8, !tbaa !470
  %add.ptr = getelementptr inbounds i8, ptr %0, i64 4
  %1 = load i32, ptr %add.ptr, align 4, !tbaa !44
  %conv = sext i32 %1 to i64
  store i64 %conv, ptr %n, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #6
  %data_2 = getelementptr inbounds nuw %"class.openmc::CoherentElasticXSFlat", ptr %this1, i32 0, i32 0
  %2 = load ptr, ptr %data_2, align 8, !tbaa !470
  %add.ptr3 = getelementptr inbounds i8, ptr %2, i64 8
  store ptr %add.ptr3, ptr %start, align 8, !tbaa !219
  %3 = load ptr, ptr %start, align 8, !tbaa !219
  %4 = load i64, ptr %n, align 8, !tbaa !54
  call void @_ZN3gsl4spanIKdEC2EPS1_m(ptr noundef nonnull align 8 dereferenceable(16) %retval, ptr noundef %3, i64 noundef %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #6
  %5 = load { ptr, ptr }, ptr %retval, align 8
  ret { ptr, ptr } %5
}

; Function Attrs: mustprogress uwtable
define { ptr, ptr } @_ZNK6openmc21CoherentElasticXSFlat7factorsEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #0 align 2 {
entry:
  %retval = alloca %"class.gsl::span", align 8
  %this.addr = alloca ptr, align 8
  %n = alloca i64, align 8
  %start = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !468
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #6
  %data_ = getelementptr inbounds nuw %"class.openmc::CoherentElasticXSFlat", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %data_, align 8, !tbaa !470
  %add.ptr = getelementptr inbounds i8, ptr %0, i64 4
  %1 = load i32, ptr %add.ptr, align 4, !tbaa !44
  %conv = sext i32 %1 to i64
  store i64 %conv, ptr %n, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #6
  %data_2 = getelementptr inbounds nuw %"class.openmc::CoherentElasticXSFlat", ptr %this1, i32 0, i32 0
  %2 = load ptr, ptr %data_2, align 8, !tbaa !470
  %add.ptr3 = getelementptr inbounds i8, ptr %2, i64 8
  %3 = load i64, ptr %n, align 8, !tbaa !54
  %mul = mul i64 8, %3
  %add.ptr4 = getelementptr inbounds nuw i8, ptr %add.ptr3, i64 %mul
  store ptr %add.ptr4, ptr %start, align 8, !tbaa !219
  %4 = load ptr, ptr %start, align 8, !tbaa !219
  %5 = load i64, ptr %n, align 8, !tbaa !54
  call void @_ZN3gsl4spanIKdEC2EPS1_m(ptr noundef nonnull align 8 dereferenceable(16) %retval, ptr noundef %4, i64 noundef %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #6
  %6 = load { ptr, ptr }, ptr %retval, align 8
  ret { ptr, ptr } %6
}

; Function Attrs: mustprogress uwtable
define void @_ZN6openmc19IncoherentElasticXSC2El(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %dset) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %this.addr = alloca ptr, align 8
  %dset.addr = alloca i64, align 8
  %tmp = alloca %"struct.std::array.96", align 8
  %exn.slot = alloca ptr, align 8
  %ehselector.slot = alloca i32, align 4
  store ptr %this, ptr %this.addr, align 8, !tbaa !55
  store i64 %dset, ptr %dset.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  call void @_ZN6openmc10Function1DC2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  store ptr getelementptr inbounds inrange(-16, 32) ({ [6 x ptr] }, ptr @_ZTVN6openmc19IncoherentElasticXSE, i32 0, i32 0, i32 2), ptr %this1, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 16, ptr %tmp) #6
  %0 = load i64, ptr %dset.addr, align 8, !tbaa !54
  invoke void @_ZN6openmc12read_datasetIdLm2EEEvlPKcRSt5arrayIT_XT0_EEb(i64 noundef %0, ptr noundef null, ptr noundef nonnull align 8 dereferenceable(16) %tmp, i1 noundef zeroext false)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt5arrayIdLm2EEixEm(ptr noundef nonnull align 8 dereferenceable(16) %tmp, i64 noundef 0) #6
  %1 = load double, ptr %call, align 8, !tbaa !16
  %bound_xs_ = getelementptr inbounds nuw %"class.openmc::IncoherentElasticXS", ptr %this1, i32 0, i32 1
  store double %1, ptr %bound_xs_, align 8, !tbaa !59
  %call2 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt5arrayIdLm2EEixEm(ptr noundef nonnull align 8 dereferenceable(16) %tmp, i64 noundef 1) #6
  %2 = load double, ptr %call2, align 8, !tbaa !16
  %debye_waller_ = getelementptr inbounds nuw %"class.openmc::IncoherentElasticXS", ptr %this1, i32 0, i32 2
  store double %2, ptr %debye_waller_, align 8, !tbaa !57
  call void @llvm.lifetime.end.p0(i64 16, ptr %tmp) #6
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  store ptr %4, ptr %exn.slot, align 8
  %5 = extractvalue { ptr, i32 } %3, 1
  store i32 %5, ptr %ehselector.slot, align 4
  call void @llvm.lifetime.end.p0(i64 16, ptr %tmp) #6
  call void @_ZN6openmc10Function1DD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this1) #6
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load ptr, ptr %exn.slot, align 8
  %sel = load i32, ptr %ehselector.slot, align 4
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn, 0
  %lpad.val3 = insertvalue { ptr, i32 } %lpad.val, i32 %sel, 1
  resume { ptr, i32 } %lpad.val3
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr void @_ZN6openmc12read_datasetIdLm2EEEvlPKcRSt5arrayIT_XT0_EEb(i64 noundef %dset, ptr noundef %name, ptr noundef nonnull align 8 dereferenceable(16) %buffer, i1 noundef zeroext %indep) #8 comdat {
entry:
  %dset.addr = alloca i64, align 8
  %name.addr = alloca ptr, align 8
  %buffer.addr = alloca ptr, align 8
  %indep.addr = alloca i8, align 1
  store i64 %dset, ptr %dset.addr, align 8, !tbaa !54
  store ptr %name, ptr %name.addr, align 8, !tbaa !62
  store ptr %buffer, ptr %buffer.addr, align 8, !tbaa !472
  %storedv = zext i1 %indep to i8
  store i8 %storedv, ptr %indep.addr, align 1, !tbaa !87
  %0 = load i64, ptr %dset.addr, align 8, !tbaa !54
  %1 = load ptr, ptr %name.addr, align 8, !tbaa !62
  %2 = load i64, ptr @_ZN6openmc9H5TypeMapIdE7type_idE, align 8, !tbaa !54
  %3 = load i8, ptr %indep.addr, align 1, !tbaa !87, !range !89, !noundef !90
  %loadedv = trunc i8 %3 to i1
  %4 = load ptr, ptr %buffer.addr, align 8, !tbaa !472
  %call = call noundef ptr @_ZNSt5arrayIdLm2EE4dataEv(ptr noundef nonnull align 8 dereferenceable(16) %4) #27
  call void @_ZN6openmc21read_dataset_lowlevelElPKcllbPv(i64 noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef 0, i1 noundef zeroext %loadedv, ptr noundef %call)
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt5arrayIdLm2EEixEm(ptr noundef nonnull align 8 dereferenceable(16) %this, i64 noundef %__n) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !472
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_elems = getelementptr inbounds nuw %"struct.std::array.96", ptr %this1, i32 0, i32 0
  %0 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt14__array_traitsIdLm2EE6_S_refERA2_Kdm(ptr noundef nonnull align 8 dereferenceable(16) %_M_elems, i64 noundef %0) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind willreturn memory(none) uwtable
define linkonce_odr noundef ptr @_ZNSt5arrayIdLm2EE4dataEv(ptr noundef nonnull align 8 dereferenceable(16) %this) #22 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !472
  %this1 = load ptr, ptr %this.addr, align 8
  %_M_elems = getelementptr inbounds nuw %"struct.std::array.96", ptr %this1, i32 0, i32 0
  %call = call noundef ptr @_ZNSt14__array_traitsIdLm2EE6_S_ptrERA2_Kd(ptr noundef nonnull align 8 dereferenceable(16) %_M_elems) #6
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef ptr @_ZNSt14__array_traitsIdLm2EE6_S_ptrERA2_Kd(ptr noundef nonnull align 8 dereferenceable(16) %__t) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !219
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !219
  %arraydecay = getelementptr inbounds [2 x double], ptr %0, i64 0, i64 0
  ret ptr %arraydecay
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt14__array_traitsIdLm2EE6_S_refERA2_Kdm(ptr noundef nonnull align 8 dereferenceable(16) %__t, i64 noundef %__n) #2 comdat align 2 {
entry:
  %__t.addr = alloca ptr, align 8
  %__n.addr = alloca i64, align 8
  store ptr %__t, ptr %__t.addr, align 8, !tbaa !219
  store i64 %__n, ptr %__n.addr, align 8, !tbaa !54
  %0 = load ptr, ptr %__t.addr, align 8, !tbaa !219
  %1 = load i64, ptr %__n.addr, align 8, !tbaa !54
  %arrayidx = getelementptr inbounds nuw [2 x double], ptr %0, i64 0, i64 %1
  ret ptr %arrayidx
}

declare void @_ZN6openmc10DataBuffer5alignEi(ptr noundef nonnull align 8 dereferenceable(28), i32 noundef) #4

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr void @_ZN6openmc10DataBuffer3addIdEENSt9enable_ifIXsr3std9is_scalarINSt5decayIT_E4typeEEE5valueEvE4typeES4_(ptr noundef nonnull align 8 dereferenceable(28) %this, double noundef %value) #1 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %value.addr = alloca double, align 8
  %ptr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !22
  store double %value, ptr %value.addr, align 8, !tbaa !16
  %this1 = load ptr, ptr %this.addr, align 8
  %mode_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 3
  %0 = load i32, ptr %mode_, align 8, !tbaa !240
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #6
  %data_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 0
  %1 = load ptr, ptr %data_, align 8, !tbaa !243
  %offset_ = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 2
  %2 = load i64, ptr %offset_, align 8, !tbaa !244
  %add.ptr = getelementptr inbounds nuw i8, ptr %1, i64 %2
  store ptr %add.ptr, ptr %ptr, align 8, !tbaa !219
  %3 = load double, ptr %value.addr, align 8, !tbaa !16
  %4 = load ptr, ptr %ptr, align 8, !tbaa !219
  store double %3, ptr %4, align 8, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %offset_2 = getelementptr inbounds nuw %"class.openmc::DataBuffer", ptr %this1, i32 0, i32 2
  %5 = load i64, ptr %offset_2, align 8, !tbaa !244
  %add = add i64 %5, 8
  store i64 %add, ptr %offset_2, align 8, !tbaa !244
  ret void
}

; Function Attrs: mustprogress uwtable
define noundef double @_ZNK6openmc23IncoherentElasticXSFlatclEd(ptr noundef nonnull align 8 dereferenceable(8) %this, double noundef %E) #0 align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %E.addr = alloca double, align 8
  %W = alloca double, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !474
  store double %E, ptr %E.addr, align 8, !tbaa !16
  %this1 = load ptr, ptr %this.addr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %W) #6
  %call = call noundef double @_ZNK6openmc23IncoherentElasticXSFlat12debye_wallerEv(ptr noundef nonnull align 8 dereferenceable(8) %this1)
  store double %call, ptr %W, align 8, !tbaa !16
  %call2 = call noundef double @_ZNK6openmc23IncoherentElasticXSFlat8bound_xsEv(ptr noundef nonnull align 8 dereferenceable(8) %this1)
  %div = fdiv double %call2, 2.000000e+00
  %0 = load double, ptr %E.addr, align 8, !tbaa !16
  %mul = fmul double -4.000000e+00, %0
  %1 = load double, ptr %W, align 8, !tbaa !16
  %mul3 = fmul double %mul, %1
  %call4 = call double @exp(double noundef %mul3) #6, !tbaa !44
  %sub = fsub double 1.000000e+00, %call4
  %2 = load double, ptr %E.addr, align 8, !tbaa !16
  %mul5 = fmul double 2.000000e+00, %2
  %3 = load double, ptr %W, align 8, !tbaa !16
  %mul6 = fmul double %mul5, %3
  %div7 = fdiv double %sub, %mul6
  %mul8 = fmul double %div, %div7
  call void @llvm.lifetime.end.p0(i64 8, ptr %W) #6
  ret double %mul8
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef double @_ZNK6openmc23IncoherentElasticXSFlat12debye_wallerEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !474
  %this1 = load ptr, ptr %this.addr, align 8
  %data_ = getelementptr inbounds nuw %"class.openmc::IncoherentElasticXSFlat", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %data_, align 8, !tbaa !476
  %add.ptr = getelementptr inbounds i8, ptr %0, i64 16
  %1 = load double, ptr %add.ptr, align 8, !tbaa !16
  ret double %1
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr noundef double @_ZNK6openmc23IncoherentElasticXSFlat8bound_xsEv(ptr noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8, !tbaa !474
  %this1 = load ptr, ptr %this.addr, align 8
  %data_ = getelementptr inbounds nuw %"class.openmc::IncoherentElasticXSFlat", ptr %this1, i32 0, i32 0
  %0 = load ptr, ptr %data_, align 8, !tbaa !476
  %add.ptr = getelementptr inbounds i8, ptr %0, i64 8
  %1 = load double, ptr %add.ptr, align 8, !tbaa !16
  ret double %1
}

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_endf.cpp() #3 section ".text.startup" {
entry:
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { inlinehint mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind }
attributes #7 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #8 = { inlinehint mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { noinline noreturn nounwind uwtable "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { alwaysinline mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #15 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #16 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #17 = { cold noreturn nounwind memory(inaccessiblemem: write) }
attributes #18 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #19 = { alwaysinline mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { mustprogress noinline nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { convergent nocallback nofree nosync nounwind willreturn memory(none) }
attributes #22 = { mustprogress nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { builtin nounwind }
attributes #24 = { noreturn }
attributes #25 = { noreturn nounwind }
attributes #26 = { builtin allocsize(0) }
attributes #27 = { nounwind willreturn memory(none) }

!omp_offload.info = !{!0, !1, !2, !3, !4, !5}
!llvm.module.flags = !{!6, !7, !8, !9}
!llvm.ident = !{!10}

!0 = !{i32 1, !"dagmc", i32 0, i32 0}
!1 = !{i32 1, !"_ZN6openmcL12DEPLETION_RXE", i32 0, i32 5}
!2 = !{i32 1, !"max_lost_particles", i32 0, i32 2}
!3 = !{i32 1, !"run_CE", i32 0, i32 1}
!4 = !{i32 1, !"gen_per_batch", i32 0, i32 3}
!5 = !{i32 1, !"n_particles", i32 0, i32 4}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 7, !"openmp", i32 51}
!8 = !{i32 8, !"PIC Level", i32 2}
!9 = !{i32 7, !"uwtable", i32 2}
!10 = !{!"clang version 21.0.0git (https://github.com/llvm/llvm-project.git da17ced11b1cf44b433cb2b850978df4b6bff279)"}
!11 = !{!12, !12, i64 0}
!12 = !{!"p1 _ZTSN6openmc10PolynomialE", !13, i64 0}
!13 = !{!"any pointer", !14, i64 0}
!14 = !{!"omnipotent char", !15, i64 0}
!15 = !{!"Simple C++ TBAA"}
!16 = !{!17, !17, i64 0}
!17 = !{!"double", !14, i64 0}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.mustprogress"}
!20 = !{!21, !21, i64 0}
!21 = !{!"vtable pointer", !15, i64 0}
!22 = !{!23, !23, i64 0}
!23 = !{!"p1 _ZTSN6openmc10DataBufferE", !13, i64 0}
!24 = !{!25, !25, i64 0}
!25 = !{!"p1 _ZTSN6openmc11Tabulated1DE", !13, i64 0}
!26 = !{!27, !29, i64 64}
!27 = !{!"_ZTSN6openmc11Tabulated1DE", !28, i64 0, !29, i64 8, !30, i64 16, !35, i64 40, !29, i64 64, !39, i64 72, !39, i64 96}
!28 = !{!"_ZTSN6openmc10Function1DE"}
!29 = !{!"long", !14, i64 0}
!30 = !{!"_ZTSSt6vectorIiSaIiEE", !31, i64 0}
!31 = !{!"_ZTSSt12_Vector_baseIiSaIiEE", !32, i64 0}
!32 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !33, i64 0}
!33 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !34, i64 0, !34, i64 8, !34, i64 16}
!34 = !{!"p1 int", !13, i64 0}
!35 = !{!"_ZTSSt6vectorIN6openmc13InterpolationESaIS1_EE", !36, i64 0}
!36 = !{!"_ZTSSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE", !37, i64 0}
!37 = !{!"_ZTSNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE12_Vector_implE", !38, i64 0}
!38 = !{!"_ZTSNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE17_Vector_impl_dataE", !13, i64 0, !13, i64 8, !13, i64 16}
!39 = !{!"_ZTSSt6vectorIdSaIdEE", !40, i64 0}
!40 = !{!"_ZTSSt12_Vector_baseIdSaIdEE", !41, i64 0}
!41 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE12_Vector_implE", !42, i64 0}
!42 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !43, i64 0, !43, i64 8, !43, i64 16}
!43 = !{!"p1 double", !13, i64 0}
!44 = !{!45, !45, i64 0}
!45 = !{!"int", !14, i64 0}
!46 = !{!27, !29, i64 8}
!47 = !{!48, !48, i64 0}
!48 = !{!"_ZTSN6openmc13InterpolationE", !14, i64 0}
!49 = distinct !{!49, !19}
!50 = !{!51, !51, i64 0}
!51 = !{!"p1 _ZTSSt6vectorIN6openmc13InterpolationESaIS1_EE", !13, i64 0}
!52 = !{!53, !53, i64 0}
!53 = !{!"p1 _ZTSN6openmc17CoherentElasticXSE", !13, i64 0}
!54 = !{!29, !29, i64 0}
!55 = !{!56, !56, i64 0}
!56 = !{!"p1 _ZTSN6openmc19IncoherentElasticXSE", !13, i64 0}
!57 = !{!58, !17, i64 16}
!58 = !{!"_ZTSN6openmc19IncoherentElasticXSE", !28, i64 0, !17, i64 8, !17, i64 16}
!59 = !{!58, !17, i64 8}
!60 = !{!61, !61, i64 0}
!61 = !{!"p1 _ZTSN6openmc10Function1DE", !13, i64 0}
!62 = !{!63, !63, i64 0}
!63 = !{!"p1 omnipotent char", !13, i64 0}
!64 = !{!65, !65, i64 0}
!65 = !{!"p1 _ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !13, i64 0}
!66 = !{!67, !67, i64 0}
!67 = !{!"p1 _ZTSSt10unique_ptrIN6openmc10Function1DESt14default_deleteIS1_EE", !13, i64 0}
!68 = !{!69, !69, i64 0}
!69 = !{!"p1 long", !13, i64 0}
!70 = !{!71, !71, i64 0}
!71 = !{!"p1 _ZTSSt10unique_ptrIN6openmc11Tabulated1DESt14default_deleteIS1_EE", !13, i64 0}
!72 = !{!73, !73, i64 0}
!73 = !{!"p2 _ZTSN6openmc11Tabulated1DE", !74, i64 0}
!74 = !{!"any p2 pointer", !13, i64 0}
!75 = !{!76, !76, i64 0}
!76 = !{!"p1 _ZTSSt10unique_ptrIN6openmc10PolynomialESt14default_deleteIS1_EE", !13, i64 0}
!77 = !{!78, !78, i64 0}
!78 = !{!"p2 _ZTSN6openmc10PolynomialE", !74, i64 0}
!79 = !{!80, !80, i64 0}
!80 = !{!"p1 _ZTSSt10unique_ptrIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE", !13, i64 0}
!81 = !{!82, !82, i64 0}
!82 = !{!"p2 _ZTSN6openmc17CoherentElasticXSE", !74, i64 0}
!83 = !{!84, !84, i64 0}
!84 = !{!"p1 _ZTSSt10unique_ptrIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE", !13, i64 0}
!85 = !{!86, !86, i64 0}
!86 = !{!"p2 _ZTSN6openmc19IncoherentElasticXSE", !74, i64 0}
!87 = !{!88, !88, i64 0}
!88 = !{!"bool", !14, i64 0}
!89 = !{i8 0, i8 2}
!90 = !{}
!91 = !{!92, !92, i64 0}
!92 = !{!"p2 _ZTSN6openmc10Function1DE", !74, i64 0}
!93 = !{!94, !94, i64 0}
!94 = !{!"p1 _ZTSSaIcE", !13, i64 0}
!95 = !{!96, !96, i64 0}
!96 = !{!"p1 _ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !13, i64 0}
!97 = !{!98, !63, i64 0}
!98 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !63, i64 0}
!99 = !{!14, !14, i64 0}
!100 = !{!101, !101, i64 0}
!101 = !{!"p1 _ZTSSt15__new_allocatorIcE", !13, i64 0}
!102 = !{!103, !29, i64 8}
!103 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !98, i64 0, !29, i64 8, !14, i64 16}
!104 = !{!103, !63, i64 0}
!105 = !{!106, !65, i64 0}
!106 = !{!"_ZTSZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagE6_Guard", !65, i64 0}
!107 = !{!108, !108, i64 0}
!108 = !{!"p1 _ZTSZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagE6_Guard", !13, i64 0}
!109 = !{!110, !110, i64 0}
!110 = !{!"p2 omnipotent char", !74, i64 0}
!111 = !{!112, !112, i64 0}
!112 = !{!"p1 _ZTSSt15__uniq_ptr_dataIN6openmc10Function1DESt14default_deleteIS1_ELb1ELb1EE", !13, i64 0}
!113 = !{!114, !114, i64 0}
!114 = !{!"p1 _ZTSSt15__uniq_ptr_implIN6openmc10Function1DESt14default_deleteIS1_EE", !13, i64 0}
!115 = !{!116, !116, i64 0}
!116 = !{!"p1 _ZTSSt5tupleIJPN6openmc10Function1DESt14default_deleteIS1_EEE", !13, i64 0}
!117 = !{!118, !118, i64 0}
!118 = !{!"p1 _ZTSSt11_Tuple_implILm0EJPN6openmc10Function1DESt14default_deleteIS1_EEE", !13, i64 0}
!119 = !{!120, !120, i64 0}
!120 = !{!"p1 _ZTSSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10Function1DEEEE", !13, i64 0}
!121 = !{!122, !122, i64 0}
!122 = !{!"p1 _ZTSSt10_Head_baseILm0EPN6openmc10Function1DELb0EE", !13, i64 0}
!123 = !{!124, !61, i64 0}
!124 = !{!"_ZTSSt10_Head_baseILm0EPN6openmc10Function1DELb0EE", !61, i64 0}
!125 = !{!126, !126, i64 0}
!126 = !{!"p1 _ZTSSt10_Head_baseILm1ESt14default_deleteIN6openmc10Function1DEELb1EE", !13, i64 0}
!127 = !{!128, !128, i64 0}
!128 = !{!"p1 _ZTSSt15__uniq_ptr_dataIN6openmc11Tabulated1DESt14default_deleteIS1_ELb1ELb1EE", !13, i64 0}
!129 = !{!130, !130, i64 0}
!130 = !{!"p1 _ZTSSt15__uniq_ptr_implIN6openmc11Tabulated1DESt14default_deleteIS1_EE", !13, i64 0}
!131 = !{!132, !132, i64 0}
!132 = !{!"p1 _ZTSSt5tupleIJPN6openmc11Tabulated1DESt14default_deleteIS1_EEE", !13, i64 0}
!133 = !{!134, !134, i64 0}
!134 = !{!"p1 _ZTSSt11_Tuple_implILm0EJPN6openmc11Tabulated1DESt14default_deleteIS1_EEE", !13, i64 0}
!135 = !{!136, !136, i64 0}
!136 = !{!"p1 _ZTSSt11_Tuple_implILm1EJSt14default_deleteIN6openmc11Tabulated1DEEEE", !13, i64 0}
!137 = !{!138, !138, i64 0}
!138 = !{!"p1 _ZTSSt10_Head_baseILm0EPN6openmc11Tabulated1DELb0EE", !13, i64 0}
!139 = !{!140, !25, i64 0}
!140 = !{!"_ZTSSt10_Head_baseILm0EPN6openmc11Tabulated1DELb0EE", !25, i64 0}
!141 = !{!142, !142, i64 0}
!142 = !{!"p1 _ZTSSt10_Head_baseILm1ESt14default_deleteIN6openmc11Tabulated1DEELb1EE", !13, i64 0}
!143 = !{!144, !144, i64 0}
!144 = !{!"p1 _ZTSSt14default_deleteIN6openmc10Function1DEE", !13, i64 0}
!145 = !{!146, !146, i64 0}
!146 = !{!"p1 _ZTSSt14default_deleteIN6openmc11Tabulated1DEE", !13, i64 0}
!147 = !{!148, !148, i64 0}
!148 = !{!"p1 _ZTSSt15__uniq_ptr_dataIN6openmc10PolynomialESt14default_deleteIS1_ELb1ELb1EE", !13, i64 0}
!149 = !{!150, !150, i64 0}
!150 = !{!"p1 _ZTSSt15__uniq_ptr_implIN6openmc10PolynomialESt14default_deleteIS1_EE", !13, i64 0}
!151 = !{!152, !152, i64 0}
!152 = !{!"p1 _ZTSSt5tupleIJPN6openmc10PolynomialESt14default_deleteIS1_EEE", !13, i64 0}
!153 = !{!154, !154, i64 0}
!154 = !{!"p1 _ZTSSt11_Tuple_implILm0EJPN6openmc10PolynomialESt14default_deleteIS1_EEE", !13, i64 0}
!155 = !{!156, !156, i64 0}
!156 = !{!"p1 _ZTSSt11_Tuple_implILm1EJSt14default_deleteIN6openmc10PolynomialEEEE", !13, i64 0}
!157 = !{!158, !158, i64 0}
!158 = !{!"p1 _ZTSSt10_Head_baseILm0EPN6openmc10PolynomialELb0EE", !13, i64 0}
!159 = !{!160, !12, i64 0}
!160 = !{!"_ZTSSt10_Head_baseILm0EPN6openmc10PolynomialELb0EE", !12, i64 0}
!161 = !{!162, !162, i64 0}
!162 = !{!"p1 _ZTSSt10_Head_baseILm1ESt14default_deleteIN6openmc10PolynomialEELb1EE", !13, i64 0}
!163 = !{!164, !164, i64 0}
!164 = !{!"p1 _ZTSSt14default_deleteIN6openmc10PolynomialEE", !13, i64 0}
!165 = !{!166, !166, i64 0}
!166 = !{!"p1 _ZTSSt15__uniq_ptr_dataIN6openmc17CoherentElasticXSESt14default_deleteIS1_ELb1ELb1EE", !13, i64 0}
!167 = !{!168, !168, i64 0}
!168 = !{!"p1 _ZTSSt15__uniq_ptr_implIN6openmc17CoherentElasticXSESt14default_deleteIS1_EE", !13, i64 0}
!169 = !{!170, !170, i64 0}
!170 = !{!"p1 _ZTSSt5tupleIJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEE", !13, i64 0}
!171 = !{!172, !172, i64 0}
!172 = !{!"p1 _ZTSSt11_Tuple_implILm0EJPN6openmc17CoherentElasticXSESt14default_deleteIS1_EEE", !13, i64 0}
!173 = !{!174, !174, i64 0}
!174 = !{!"p1 _ZTSSt11_Tuple_implILm1EJSt14default_deleteIN6openmc17CoherentElasticXSEEEE", !13, i64 0}
!175 = !{!176, !176, i64 0}
!176 = !{!"p1 _ZTSSt10_Head_baseILm0EPN6openmc17CoherentElasticXSELb0EE", !13, i64 0}
!177 = !{!178, !53, i64 0}
!178 = !{!"_ZTSSt10_Head_baseILm0EPN6openmc17CoherentElasticXSELb0EE", !53, i64 0}
!179 = !{!180, !180, i64 0}
!180 = !{!"p1 _ZTSSt10_Head_baseILm1ESt14default_deleteIN6openmc17CoherentElasticXSEELb1EE", !13, i64 0}
!181 = !{!182, !182, i64 0}
!182 = !{!"p1 _ZTSSt14default_deleteIN6openmc17CoherentElasticXSEE", !13, i64 0}
!183 = !{!184, !184, i64 0}
!184 = !{!"p1 _ZTSSt15__uniq_ptr_dataIN6openmc19IncoherentElasticXSESt14default_deleteIS1_ELb1ELb1EE", !13, i64 0}
!185 = !{!186, !186, i64 0}
!186 = !{!"p1 _ZTSSt15__uniq_ptr_implIN6openmc19IncoherentElasticXSESt14default_deleteIS1_EE", !13, i64 0}
!187 = !{!188, !188, i64 0}
!188 = !{!"p1 _ZTSSt5tupleIJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEE", !13, i64 0}
!189 = !{!190, !190, i64 0}
!190 = !{!"p1 _ZTSSt11_Tuple_implILm0EJPN6openmc19IncoherentElasticXSESt14default_deleteIS1_EEE", !13, i64 0}
!191 = !{!192, !192, i64 0}
!192 = !{!"p1 _ZTSSt11_Tuple_implILm1EJSt14default_deleteIN6openmc19IncoherentElasticXSEEEE", !13, i64 0}
!193 = !{!194, !194, i64 0}
!194 = !{!"p1 _ZTSSt10_Head_baseILm0EPN6openmc19IncoherentElasticXSELb0EE", !13, i64 0}
!195 = !{!196, !56, i64 0}
!196 = !{!"_ZTSSt10_Head_baseILm0EPN6openmc19IncoherentElasticXSELb0EE", !56, i64 0}
!197 = !{!198, !198, i64 0}
!198 = !{!"p1 _ZTSSt10_Head_baseILm1ESt14default_deleteIN6openmc19IncoherentElasticXSEELb1EE", !13, i64 0}
!199 = !{!200, !200, i64 0}
!200 = !{!"p1 _ZTSSt14default_deleteIN6openmc19IncoherentElasticXSEE", !13, i64 0}
!201 = !{!202, !202, i64 0}
!202 = !{!"p1 _ZTSSt6vectorIdSaIdEE", !13, i64 0}
!203 = !{!42, !43, i64 0}
!204 = !{!42, !43, i64 8}
!205 = !{!206, !206, i64 0}
!206 = !{!"p1 _ZTSSt12_Vector_baseIdSaIdEE", !13, i64 0}
!207 = !{!208, !208, i64 0}
!208 = !{!"p1 _ZTSNSt12_Vector_baseIdSaIdEE12_Vector_implE", !13, i64 0}
!209 = !{!210, !210, i64 0}
!210 = !{!"p1 _ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !13, i64 0}
!211 = !{!42, !43, i64 16}
!212 = !{!213, !213, i64 0}
!213 = !{!"p1 _ZTSSt15__new_allocatorIdE", !13, i64 0}
!214 = !{!215, !215, i64 0}
!215 = !{!"p1 _ZTSSt6vectorImSaImEE", !13, i64 0}
!216 = !{!217, !69, i64 0}
!217 = !{!"_ZTSNSt12_Vector_baseImSaImEE17_Vector_impl_dataE", !69, i64 0, !69, i64 8, !69, i64 16}
!218 = !{!217, !69, i64 8}
!219 = !{!43, !43, i64 0}
!220 = !{!221, !221, i64 0}
!221 = !{!"p1 _ZTSSaIdE", !13, i64 0}
!222 = !{!223, !223, i64 0}
!223 = !{!"p2 double", !74, i64 0}
!224 = distinct !{!224, !19}
!225 = !{!13, !13, i64 0}
!226 = !{!227, !227, i64 0}
!227 = !{!"p1 _ZTSSaImE", !13, i64 0}
!228 = !{!229, !229, i64 0}
!229 = !{!"p1 _ZTSSt12_Vector_baseImSaImEE", !13, i64 0}
!230 = !{!217, !69, i64 16}
!231 = !{!232, !232, i64 0}
!232 = !{!"p1 _ZTSSt15__new_allocatorImE", !13, i64 0}
!233 = !{!234, !234, i64 0}
!234 = !{!"p1 _ZTSSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEE", !13, i64 0}
!235 = !{i64 0, i64 8, !219}
!236 = !{!237, !237, i64 0}
!237 = !{!"p1 _ZTSN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEE", !13, i64 0}
!238 = !{!239, !43, i64 0}
!239 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEE", !43, i64 0}
!240 = !{!241, !242, i64 24}
!241 = !{!"_ZTSN6openmc10DataBufferE", !63, i64 0, !29, i64 8, !29, i64 16, !242, i64 24}
!242 = !{!"_ZTSN6openmc10DataBuffer4ModeE", !14, i64 0}
!243 = !{!241, !63, i64 0}
!244 = !{!241, !29, i64 16}
!245 = !{!34, !34, i64 0}
!246 = !{!247, !247, i64 0}
!247 = !{!"p1 _ZTSN6openmc14PolynomialFlatE", !13, i64 0}
!248 = distinct !{!248, !19}
!249 = !{!250, !63, i64 0}
!250 = !{!"_ZTSN6openmc14PolynomialFlatE", !63, i64 0}
!251 = !{!252, !252, i64 0}
!252 = !{!"p1 _ZTSN3gsl4spanIKdEE", !13, i64 0}
!253 = !{!254, !254, i64 0}
!254 = !{!"p1 _ZTSSt16reverse_iteratorIPKdE", !13, i64 0}
!255 = !{!256, !43, i64 0}
!256 = !{!"_ZTSSt16reverse_iteratorIPKdE", !43, i64 0}
!257 = !{!258, !43, i64 8}
!258 = !{!"_ZTSN3gsl4spanIKdEE", !43, i64 0, !43, i64 8}
!259 = !{!258, !43, i64 0}
!260 = !{!261, !261, i64 0}
!261 = !{!"p1 _ZTSSt6vectorIiSaIiEE", !13, i64 0}
!262 = !{!33, !34, i64 8}
!263 = !{!33, !34, i64 0}
!264 = !{!265, !265, i64 0}
!265 = !{!"p1 _ZTSN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEE", !13, i64 0}
!266 = !{!267, !34, i64 0}
!267 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEE", !34, i64 0}
!268 = !{!269, !269, i64 0}
!269 = !{!"p1 _ZTSN2xt16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEE", !13, i64 0}
!270 = !{!271, !271, i64 0}
!271 = !{!"p1 _ZTSN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEE", !13, i64 0}
!272 = !{!273, !271, i64 0}
!273 = !{!"_ZTSZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE5beginILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_", !271, i64 0}
!274 = !{!275, !271, i64 0}
!275 = !{!"_ZTSZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE5beginILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E0_", !271, i64 0}
!276 = !{!277, !271, i64 0}
!277 = !{!"_ZTSZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE3endILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E_", !271, i64 0}
!278 = !{!279, !271, i64 0}
!279 = !{!"_ZTSZN2xt20xcontiguous_iterableINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEE3endILS6_1EEENSt11conditionalIXeqT_L_ZNSE_13static_layoutEEEPdNS_9xiteratorINS_8xstepperISD_EEPNS_13sequence_viewIS9_Ll1ELln1EEEXT_EEEE4typeEvEUlT_E0_", !271, i64 0}
!280 = !{!281, !281, i64 0}
!281 = !{!"p1 _ZTSN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEE", !13, i64 0}
!282 = !{!38, !13, i64 0}
!283 = !{!38, !13, i64 8}
!284 = !{!285, !285, i64 0}
!285 = !{!"p1 _ZTSSt12_Vector_baseIiSaIiEE", !13, i64 0}
!286 = !{!287, !287, i64 0}
!287 = !{!"p1 _ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !13, i64 0}
!288 = !{!289, !289, i64 0}
!289 = !{!"p1 _ZTSSaIiE", !13, i64 0}
!290 = !{!291, !291, i64 0}
!291 = !{!"p1 _ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !13, i64 0}
!292 = !{!33, !34, i64 16}
!293 = !{!294, !294, i64 0}
!294 = !{!"p1 _ZTSSt15__new_allocatorIiE", !13, i64 0}
!295 = !{!296, !296, i64 0}
!296 = !{!"p1 _ZTSSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE", !13, i64 0}
!297 = !{!298, !298, i64 0}
!298 = !{!"p1 _ZTSNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE12_Vector_implE", !13, i64 0}
!299 = !{!300, !300, i64 0}
!300 = !{!"p1 _ZTSSaIN6openmc13InterpolationEE", !13, i64 0}
!301 = !{!302, !302, i64 0}
!302 = !{!"p1 _ZTSNSt12_Vector_baseIN6openmc13InterpolationESaIS1_EE17_Vector_impl_dataE", !13, i64 0}
!303 = !{!38, !13, i64 16}
!304 = !{!305, !305, i64 0}
!305 = !{!"p1 _ZTSSt15__new_allocatorIN6openmc13InterpolationEE", !13, i64 0}
!306 = !{!307, !307, i64 0}
!307 = !{!"p1 _ZTSN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEE", !13, i64 0}
!308 = !{!309, !69, i64 0}
!309 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPmSt6vectorImSaImEEEE", !69, i64 0}
!310 = !{!311, !311, i64 0}
!311 = !{!"p2 long", !74, i64 0}
!312 = !{!313, !313, i64 0}
!313 = !{!"p2 int", !74, i64 0}
!314 = distinct !{!314, !19}
!315 = !{!316, !316, i64 0}
!316 = !{!"p1 _ZTSN9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEE", !13, i64 0}
!317 = !{!74, !74, i64 0}
!318 = !{!319, !13, i64 0}
!319 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEE", !13, i64 0}
!320 = !{!321, !321, i64 0}
!321 = !{!"p1 _ZTSN2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEE", !13, i64 0}
!322 = !{!323, !328, i64 192}
!323 = !{!"_ZTSN2xt18xstrided_containerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEE", !324, i64 0, !326, i64 64, !326, i64 128, !328, i64 192}
!324 = !{!"_ZTSN2xt7svectorImLm4ESaImELb1EEE", !325, i64 0, !69, i64 8, !69, i64 16, !69, i64 24, !14, i64 32}
!325 = !{!"_ZTSSaImE"}
!326 = !{!"_ZTSN2xt7svectorIlLm4ESaIlELb1EEE", !327, i64 0, !69, i64 8, !69, i64 16, !69, i64 24, !14, i64 32}
!327 = !{!"_ZTSSaIlE"}
!328 = !{!"_ZTSN2xt11layout_typeE", !14, i64 0}
!329 = !{!330, !330, i64 0}
!330 = !{!"p1 _ZTSN2xt19xcontainer_semanticINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEE", !13, i64 0}
!331 = !{!332, !332, i64 0}
!332 = !{!"p1 _ZTSN2xt7uvectorIdSaIdEEE", !13, i64 0}
!333 = !{!334, !43, i64 8}
!334 = !{!"_ZTSN2xt7uvectorIdSaIdEEE", !335, i64 0, !43, i64 8, !43, i64 16}
!335 = !{!"_ZTSSaIdE"}
!336 = !{!334, !43, i64 16}
!337 = !{!338, !338, i64 0}
!338 = !{!"p1 _ZTSN2xt20xsharable_expressionINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEE", !13, i64 0}
!339 = !{!340, !340, i64 0}
!340 = !{!"p1 _ZTSN2xt7svectorImLm4ESaImELb1EEE", !13, i64 0}
!341 = !{!342, !342, i64 0}
!342 = !{!"p1 _ZTSN2xt7svectorIlLm4ESaIlELb1EEE", !13, i64 0}
!343 = !{!344, !344, i64 0}
!344 = !{!"p1 _ZTSN2xt10xcontainerINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEE", !13, i64 0}
!345 = !{!324, !69, i64 8}
!346 = !{!324, !69, i64 24}
!347 = !{!326, !69, i64 8}
!348 = !{!326, !69, i64 24}
!349 = !{!324, !69, i64 16}
!350 = !{!351, !351, i64 0}
!351 = !{!"p1 _ZTSSaIlE", !13, i64 0}
!352 = !{!326, !69, i64 16}
!353 = !{!354, !354, i64 0}
!354 = !{!"p1 _ZTSSt15__new_allocatorIlE", !13, i64 0}
!355 = distinct !{!355, !19}
!356 = distinct !{!356, !19}
!357 = !{!358, !358, i64 0}
!358 = !{!"p1 _ZTSN2xt14xsemantic_baseINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEE", !13, i64 0}
!359 = !{!360, !360, i64 0}
!360 = !{!"p1 _ZTSSt10shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEE", !13, i64 0}
!361 = !{!362, !362, i64 0}
!362 = !{!"std::nullptr_t", !14, i64 0}
!363 = !{!364, !364, i64 0}
!364 = !{!"p1 _ZTSSt12__shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEELN9__gnu_cxx12_Lock_policyE2EE", !13, i64 0}
!365 = !{!366, !269, i64 0}
!366 = !{!"_ZTSSt12__shared_ptrIN2xt16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEELN9__gnu_cxx12_Lock_policyE2EE", !269, i64 0, !367, i64 8}
!367 = !{!"_ZTSSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE", !368, i64 0}
!368 = !{!"p1 _ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE", !13, i64 0}
!369 = !{!370, !370, i64 0}
!370 = !{!"p1 _ZTSSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE", !13, i64 0}
!371 = !{!367, !368, i64 0}
!372 = !{!368, !368, i64 0}
!373 = !{!374, !374, i64 0}
!374 = !{!"long long", !14, i64 0}
!375 = !{!376, !376, i64 0}
!376 = !{!"p1 long long", !13, i64 0}
!377 = !{!378, !45, i64 8}
!378 = !{!"_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE", !45, i64 8, !45, i64 12}
!379 = !{!378, !45, i64 12}
!380 = !{!328, !328, i64 0}
!381 = !{i64 0, i64 8, !68}
!382 = !{!383, !383, i64 0}
!383 = !{!"p1 _ZTSN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEE", !13, i64 0}
!384 = !{!385, !69, i64 0}
!385 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEE", !69, i64 0}
!386 = distinct !{!386, !19}
!387 = !{!388, !388, i64 0}
!388 = !{!"p1 _ZTSN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEE", !13, i64 0}
!389 = !{!390, !390, i64 0}
!390 = !{!"p1 _ZTSN2xt6detail27slice_implementation_getterIiEE", !13, i64 0}
!391 = !{!392, !392, i64 0}
!392 = !{!"p1 _ZTSN2xt17xconst_accessibleINS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEEE", !13, i64 0}
!393 = !{!394, !269, i64 16}
!394 = !{!"_ZTSN2xt5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEE", !395, i64 0, !269, i64 16, !400, i64 24, !403, i64 32, !404, i64 40, !404, i64 48, !29, i64 56, !88, i64 64}
!395 = !{!"_ZTSN2xt14xview_semanticINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEE", !396, i64 0}
!396 = !{!"_ZTSN2xt14xsemantic_baseINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEE", !397, i64 0}
!397 = !{!"_ZTSN2xt20xsharable_expressionINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEE", !398, i64 0}
!398 = !{!"_ZTSSt10shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEEE", !399, i64 0}
!399 = !{!"_ZTSSt12__shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEELN9__gnu_cxx12_Lock_policyE2EE", !388, i64 0, !367, i64 8}
!400 = !{!"_ZTSSt5tupleIJiEE", !401, i64 0}
!401 = !{!"_ZTSSt11_Tuple_implILm0EJiEE", !402, i64 0}
!402 = !{!"_ZTSSt10_Head_baseILm0EiLb0EE", !45, i64 0}
!403 = !{!"_ZTSN2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EEE", !340, i64 0}
!404 = !{!"_ZTSN2xt13sequence_viewINS_7svectorIlLm4ESaIlELb1EEELl1ELln1EEE", !342, i64 0}
!405 = !{!394, !29, i64 56}
!406 = !{!394, !88, i64 64}
!407 = !{!408, !408, i64 0}
!408 = !{!"p1 _ZTSN2xt14xview_semanticINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEE", !13, i64 0}
!409 = !{!410, !410, i64 0}
!410 = !{!"p1 _ZTSSt5tupleIJiEE", !13, i64 0}
!411 = !{!412, !412, i64 0}
!412 = !{!"p1 _ZTSN2xt13sequence_viewINS_7svectorIlLm4ESaIlELb1EEELl1ELln1EEE", !13, i64 0}
!413 = distinct !{!413, !19}
!414 = distinct !{!414, !19}
!415 = !{!416, !416, i64 0}
!416 = !{!"p1 _ZTSN2xt14xsemantic_baseINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEE", !13, i64 0}
!417 = !{!418, !418, i64 0}
!418 = !{!"p1 _ZTSSt10shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEEE", !13, i64 0}
!419 = !{!420, !420, i64 0}
!420 = !{!"p1 _ZTSSt12__shared_ptrIN2xt5xviewIRNS0_16xarray_containerINS0_7uvectorIdSaIdEEELNS0_11layout_typeE1ENS0_7svectorImLm4ESaImELb1EEENS0_22xtensor_expression_tagEEEJiEEELN9__gnu_cxx12_Lock_policyE2EE", !13, i64 0}
!421 = !{!399, !388, i64 0}
!422 = !{!423, !423, i64 0}
!423 = !{!"p1 _ZTSSt11_Tuple_implILm0EJiEE", !13, i64 0}
!424 = !{!425, !425, i64 0}
!425 = !{!"p1 _ZTSSt10_Head_baseILm0EiLb0EE", !13, i64 0}
!426 = !{!402, !45, i64 0}
!427 = !{!428, !428, i64 0}
!428 = !{!"p1 _ZTSN2xt13sequence_viewINS_7svectorImLm4ESaImELb1EEELl1ELln1EEE", !13, i64 0}
!429 = !{!430, !430, i64 0}
!430 = !{!"p1 _ZTSSt5arrayIlLm1EE", !13, i64 0}
!431 = !{!432, !432, i64 0}
!432 = !{!"p1 _ZTSSt20back_insert_iteratorISt6vectorIdSaIdEEE", !13, i64 0}
!433 = distinct !{!433, !19}
!434 = !{!435, !202, i64 0}
!435 = !{!"_ZTSSt20back_insert_iteratorISt6vectorIdSaIdEEE", !202, i64 0}
!436 = !{!437, !437, i64 0}
!437 = !{!"p1 _ZTSN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEE", !13, i64 0}
!438 = !{!439, !43, i64 0}
!439 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEE", !43, i64 0}
!440 = !{!441, !441, i64 0}
!441 = !{!"p1 _ZTSN3xtl8identityE", !13, i64 0}
!442 = !{!443, !443, i64 0}
!443 = !{!"p1 _ZTSN2xt17xconst_accessibleINS_5xviewIRNS_16xarray_containerINS_7uvectorIdSaIdEEELNS_11layout_typeE1ENS_7svectorImLm4ESaImELb1EEENS_22xtensor_expression_tagEEEJiEEEEE", !13, i64 0}
!444 = distinct !{!444, !19}
!445 = !{!446, !446, i64 0}
!446 = !{!"p1 _ZTSSt10multipliesImE", !13, i64 0}
!447 = !{!403, !340, i64 0}
!448 = distinct !{!448, !19}
!449 = !{!450, !450, i64 0}
!450 = !{!"p1 _ZTSN9__gnu_cxx5__ops14_Iter_less_valE", !13, i64 0}
!451 = !{!452, !452, i64 0}
!452 = !{!"p1 _ZTSN9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEE", !13, i64 0}
!453 = !{!454, !13, i64 0}
!454 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPKN6openmc13InterpolationESt6vectorIS2_SaIS2_EEEE", !13, i64 0}
!455 = !{!456, !456, i64 0}
!456 = !{!"p1 _ZTSN6openmc15Tabulated1DFlatE", !13, i64 0}
!457 = !{!458, !63, i64 0}
!458 = !{!"_ZTSN6openmc15Tabulated1DFlatE", !63, i64 0, !29, i64 8, !29, i64 16}
!459 = !{!458, !29, i64 8}
!460 = !{!458, !29, i64 16}
!461 = distinct !{!461, !19}
!462 = !{!463, !463, i64 0}
!463 = !{!"p1 _ZTSN3gsl4spanIKiEE", !13, i64 0}
!464 = !{!465, !34, i64 0}
!465 = !{!"_ZTSN3gsl4spanIKiEE", !34, i64 0, !34, i64 8}
!466 = distinct !{!466, !19}
!467 = !{!465, !34, i64 8}
!468 = !{!469, !469, i64 0}
!469 = !{!"p1 _ZTSN6openmc21CoherentElasticXSFlatE", !13, i64 0}
!470 = !{!471, !63, i64 0}
!471 = !{!"_ZTSN6openmc21CoherentElasticXSFlatE", !63, i64 0}
!472 = !{!473, !473, i64 0}
!473 = !{!"p1 _ZTSSt5arrayIdLm2EE", !13, i64 0}
!474 = !{!475, !475, i64 0}
!475 = !{!"p1 _ZTSN6openmc23IncoherentElasticXSFlatE", !13, i64 0}
!476 = !{!477, !63, i64 0}
!477 = !{!"_ZTSN6openmc23IncoherentElasticXSFlatE", !63, i64 0}
